{
  "swagger": "2.0",
  "info": {
    "title": "Topohub",
    "version": "v0.21.0"
  },
  "tags": [
    {
      "name": "Nodes"
    },
    {
      "name": "DeploymentApp"
    },
    {
      "name": "InternalResource"
    },
    {
      "name": "CustomResources"
    },
    {
      "name": "Pods"
    },
    {
      "name": "Events"
    },
    {
      "name": "Workspaces"
    },
    {
      "name": "ConfigMaps"
    },
    {
      "name": "Secrets"
    },
    {
      "name": "CloudShell"
    },
    {
      "name": "RuleEndpoints"
    },
    {
      "name": "Rules"
    },
    {
      "name": "NodeGroups"
    },
    {
      "name": "Services"
    },
    {
      "name": "Addon"
    },
    {
      "name": "Metrics"
    },
    {
      "name": "Setting"
    },
    {
      "name": "EdgeUnits"
    },
    {
      "name": "Devices"
    },
    {
      "name": "DeviceModels"
    },
    {
      "name": "Image"
    },
    {
      "name": "EdgeApp"
    },
    {
      "name": "BatchNodes"
    },
    {
      "name": "SingleJoinConfigs"
    },
    {
      "name": "NodeUpgradeJobs"
    },
    {
      "name": "ImagePrePullJobs"
    },
    {
      "name": "EdgeApp"
    },
    {
      "name": "EdgeAppWithWorkspace"
    },
    {
      "name": "NodeGroups"
    },
    {
      "name": "NodeGroupsWithWorkspace"
    },
    {
      "name": "ImagePrePullJobs"
    },
    {
      "name": "ImagePrePullJobsWithWorkspace"
    },
    {
      "name": "NodeUpgradeJobs"
    },
    {
      "name": "NodeUpgradeJobsWithWorkspace"
    },
    {
      "name": "Images"
    },
    {
      "name": "ImagesWithWorkspace"
    },
    {
      "name": "EdgeUnits"
    },
    {
      "name": "EdgeUnitsWithWorkspace"
    },
    {
      "name": "DeviceModels"
    },
    {
      "name": "DeviceModelsWithWorkspace"
    },
    {
      "name": "Devices"
    },
    {
      "name": "DevicesWithWorkspace"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/core.kant.io/v1alpha1/cloudshells": {
      "post": {
        "summary": "CreateCloudShell create a cloudshell in golobal cluster.",
        "operationId": "CloudShell_CreateCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateCloudShellRequest"
            }
          }
        ],
        "tags": [
          "CloudShell"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/cloudshells/{name}": {
      "get": {
        "summary": "GetCloudShell get a cloudshell in golobal cluster.",
        "operationId": "CloudShell_GetCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name specified the cloudshell name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CloudShell"
        ]
      },
      "delete": {
        "summary": "DeleteCloudShell delete a cloudshell in golobal cluster.",
        "operationId": "CloudShell_DeleteCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name specified the cloudshell name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "type specified the cloudshell command type (exec, logs, bash).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLOUD_SHELL_TYPE_UNSPECIFIED",
              "bash",
              "exec",
              "logs",
              "upload",
              "download"
            ],
            "default": "CLOUD_SHELL_TYPE_UNSPECIFIED"
          },
          {
            "name": "cluster",
            "description": "cluster specified the cluster name for cloudshell.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CloudShell"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/gvr": {
      "get": {
        "summary": "GetGVR get gvr information under a specific cluster",
        "operationId": "CustomResources_GetGVR",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetGVRResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified customResourceDefinition belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the CustomResourceDefinition.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CustomResources"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/{resource}/json": {
      "post": {
        "summary": "CreateCustomResourceByJSON creates custom resource by JSON under the namespaces of a specific cluster",
        "operationId": "CustomResources_CreateCustomResourceByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomResourcesCreateCustomResourceByJSONBody"
            }
          }
        ],
        "tags": [
          "CustomResources"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/{resource}/{name}/json": {
      "get": {
        "summary": "GetCustomResourceByJSON gets custom resource by JSON under the namespaces of a specific cluster",
        "operationId": "CustomResources_GetCustomResourceByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCustomResourceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CustomResources"
        ]
      },
      "put": {
        "summary": "UpdataCustomResourceByJSON updates custom resource by JSON under the namespaces of a specific cluster",
        "operationId": "CustomResources_UpdateCustomResourceByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomResourcesUpdateCustomResourceByJSONBody"
            }
          }
        ],
        "tags": [
          "CustomResources"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/helmrepos": {
      "get": {
        "summary": "ListHelmRepos list repo in cluster.",
        "operationId": "Addon_ListHelmRepos",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReposResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "labels",
            "description": "Labels are key/value pairs that are attached to objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "annotations",
            "description": "Annotations to attach arbitrary metadata to objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the repository list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the repository list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "builtIn",
            "description": "builtin indicates whether to display the repos required to install the cluster.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/configmaps": {
      "get": {
        "summary": "ListClusterConfigMaps lists all configmaps in the specified cluster,\nregardless of namespace.",
        "operationId": "ConfigMaps_ListClusterConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterConfigMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigMaps"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/nodegroups": {
      "delete": {
        "summary": "Batch delete nodegroups",
        "operationId": "NodeGroups_BatchDeleteNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeGroupsBatchDeleteNodeGroupsBody"
            }
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/ruleendpoints": {
      "get": {
        "operationId": "RuleEndpoints_ListAllMsgRuleEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuleEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "RuleEndpoints"
        ]
      },
      "delete": {
        "operationId": "RuleEndpoints_BatchDeleteMsgRuleEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleEndpointsBatchDeleteMsgRuleEndpointsBody"
            }
          }
        ],
        "tags": [
          "RuleEndpoints"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/rules": {
      "get": {
        "operationId": "Rules_ListAllMsgRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "delete": {
        "operationId": "Rules_BatchDeleteMsgRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RulesBatchDeleteMsgRulesBody"
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/secrets": {
      "get": {
        "summary": "ListClusterSecrets lists a secret in a specific cluster",
        "operationId": "Secrets_ListClusterSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "The name use to search specific secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is used to filter secrets by type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of secrets, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Secrets"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/workloads": {
      "get": {
        "summary": "ListClusterWorkloads lists one cluster all namespace's deployments",
        "operationId": "DeploymentApp_ListClusterWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiappsv1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of Workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/configmaps": {
      "get": {
        "summary": "ListConfigMaps lists configmaps in the specified cluster and namespace.",
        "operationId": "ConfigMaps_ListConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListConfigMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigMaps"
        ]
      },
      "post": {
        "summary": "CreateConfigMap creates a configMap under the namespaces of a specific\ncluster",
        "operationId": "ConfigMaps_CreateConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateConfigMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in yaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigMapsCreateConfigMapBody"
            }
          }
        ],
        "tags": [
          "ConfigMaps"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/configmaps/{name}": {
      "get": {
        "summary": "GetConfigMap gets a configMap under the namespaces of a specific cluster",
        "operationId": "ConfigMaps_GetConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/kpandaioapicorev1alpha1ConfigMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigMaps"
        ]
      },
      "delete": {
        "summary": "DeleteConfigMap deletes a configMap under the namespaces of a specific\ncluster",
        "operationId": "ConfigMaps_DeleteConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the metadata.name of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigMaps"
        ]
      },
      "put": {
        "summary": "UpdateConfigMap updates a configMap under the namespaces of a specific\ncluster",
        "operationId": "ConfigMaps_UpdateConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateConfigMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigMapsUpdateConfigMapBody"
            }
          }
        ],
        "tags": [
          "ConfigMaps"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployment/{name}": {
      "get": {
        "summary": "GetDeployment gets workload under the namespaces of a specific\ncluster",
        "operationId": "DeploymentApp_GetDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicorev1alpha1Deployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v1 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments": {
      "post": {
        "summary": "CreateDeployment creates workload under the namespaces of a\nspecific cluster",
        "operationId": "DeploymentApp_CreateDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentAppCreateDeploymentBody"
            }
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}": {
      "delete": {
        "summary": "DeleteDeployment deletes a deployment under the namespaces of a specific\ncluster",
        "operationId": "DeploymentApp_DeleteDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      },
      "put": {
        "summary": "UpdateDeployment updates workload under the namespaces of a\nspecific cluster",
        "operationId": "DeploymentApp_UpdateDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentAppUpdateDeploymentBody"
            }
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:pause": {
      "post": {
        "summary": "PauseDeployment pauses a deployment under the namespaces of a specific\ncluster",
        "operationId": "DeploymentApp_PauseDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PauseDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:restart": {
      "post": {
        "summary": "RestartDeployment restarts a deployment under the namespaces of a specific\ncluster",
        "operationId": "DeploymentApp_RestartDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RestartDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:resume": {
      "post": {
        "summary": "ResumeDeployment resumes a deployment under the namespaces of a specific\ncluster",
        "operationId": "DeploymentApp_ResumeDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ResumeDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:rollback": {
      "post": {
        "summary": "RollbackDeployment rollbacks a deployment under the namespaces of a\nspecific cluster",
        "operationId": "DeploymentApp_RollbackDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RollbackDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentAppRollbackDeploymentBody"
            }
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:start": {
      "post": {
        "summary": "StartDeployment starts a deployment under the namespace of a specific cluster",
        "operationId": "DeploymentApp_StartDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StartDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:stop": {
      "post": {
        "summary": "StopDeployment starts a deployment under the namespace of a specific cluster",
        "operationId": "DeploymentApp_StopDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StopDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/events": {
      "get": {
        "summary": "ListEvents lists events under the namespaces of a specific cluster",
        "operationId": "Events_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind represents what type of event is needed.\n\n - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Deployment: ListEvents by deployment.\n - StatefulSet: ListEvents by statefulSet.\n - DaemonSet: ListEvents by daemonSet.\n - Pod: ListEvents by pod.\n - Service: ListEvents by service.\n - Ingress: ListEvents by ingress.\n - Job: ListEvents by job.\n - CronJob: ListEvents by cronJob.\n - HorizontalPodAutoscaler: ListEvents by HorizontalPodAutoscaler.\n - ReplicaSet: ListEvents by replicaset.\n - CronHPA: ListEvents by CronHPA.\n - PersistentVolumeClaim: ListEvents by PersistentVolumeClaim.\n - GroupVersionResource: ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,\nyou must specify the value of group version resource.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet",
              "Pod",
              "Service",
              "Ingress",
              "Job",
              "CronJob",
              "HorizontalPodAutoscaler",
              "ReplicaSet",
              "CronHPA",
              "PersistentVolumeClaim",
              "GroupVersionResource"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is DEPLOYMENT,\nthis presents the name of deployments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for event name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the event list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "type",
            "description": "Type is used for query, showing events of specified type.\nUse example: type=WARNING&type=NORMAL.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "Normal",
                "Warning"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "group",
            "description": "resource group,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "description": "resource version,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "resource name,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Events"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods": {
      "get": {
        "summary": "ListPods will list all pod by given cluster and namespace",
        "operationId": "Pods_ListPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "kind",
            "description": "The kind of pod.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - Service: Service to expose an application running on a set of Pods.\n - Job: Job is used to express a one-time task.\n - CronJob: CronJob runs repeatedly according to its time schedule.\n - ReplicaSet: ReplicaSet is the workload API object used to manage pods\n - NetworkPolicy: NetworkPolicy uses podSelector to select pods.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet",
              "Service",
              "Job",
              "CronJob",
              "ReplicaSet",
              "NetworkPolicy"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "Name of kind.\nIf the kind is Deployment,\nthis presents the name of the deployment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for pod name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for filter.\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PHASE_UNSPECIFIED",
              "Unknown",
              "Pending",
              "Running",
              "Succeeded",
              "Failed"
            ],
            "default": "PHASE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status is filter with pod status ,the status is composite state",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FILTER_POD_STATUS_UNSPECIFIED",
              "FILTER_POD_STATUS_RUNNING",
              "FILTER_POD_STATUS_ERROR",
              "FILTER_POD_STATUS_COMPLETED",
              "FILTER_POD_STATUS_WAITING"
            ],
            "default": "FILTER_POD_STATUS_UNSPECIFIED"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "podIp",
            "description": "pod_ip is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pods"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods/{name}": {
      "get": {
        "summary": "GetPods will get a pod under the namespaces of a specific cluster by pods",
        "operationId": "Pods_GetPod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pod"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Pod name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pods"
        ]
      },
      "delete": {
        "summary": "DeletePod deletes a pod under the namespaces of a specific cluster",
        "operationId": "Pods_DeletePod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Pod name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pods"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/replicasets": {
      "get": {
        "summary": "ListReplicaSets lists replicasets in specified namespace of a cluster",
        "operationId": "DeploymentApp_ListReplicaSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListReplicaSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of replicaset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the replicaset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind stands for what type of replicasets are needed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is Deployment,\nthis presents the name of deployments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for replicaset name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is size of every page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/ruleendpoints": {
      "get": {
        "operationId": "RuleEndpoints_ListMsgRuleEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuleEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "RuleEndpoints"
        ]
      },
      "post": {
        "operationId": "RuleEndpoints_CreateMsgRuleEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RuleEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the ruleEndpoint belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleEndpointsCreateMsgRuleEndpointsBody"
            }
          }
        ],
        "tags": [
          "RuleEndpoints"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/ruleendpoints/{name}": {
      "delete": {
        "operationId": "RuleEndpoints_DeleteMsgRuleEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the ruleEndpoint belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the ruleEndpoint belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of ruleEndpoint",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuleEndpoints"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/rules": {
      "get": {
        "operationId": "Rules_ListMsgRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "post": {
        "operationId": "Rules_CreateMsgRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Rule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Rule belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RulesCreateMsgRulesBody"
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/rules/{name}": {
      "get": {
        "operationId": "Rules_GetMsgRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Rule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Rule belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Rule belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Rule",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "delete": {
        "operationId": "Rules_DeleteMsgRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Rule belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Rule belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Rule",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/secrets": {
      "get": {
        "summary": "ListSecrets lists a secret under the namespaces of a specific cluster",
        "operationId": "Secrets_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "The name use to search specific secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is used to filter secrets by type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of secrets, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Secrets"
        ]
      },
      "post": {
        "summary": "CreateSecret creates a secret under the namespaces of a specific cluster",
        "operationId": "Secrets_CreateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in yaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretsCreateSecretBody"
            }
          }
        ],
        "tags": [
          "Secrets"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/secrets/{name}": {
      "get": {
        "summary": "GetClusterSecret gets a secret under the namespaces of a specific cluster",
        "operationId": "Secrets_GetSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/kpandaioapicorev1alpha1Secret"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Secrets"
        ]
      },
      "delete": {
        "summary": "DeleteSecret deletes a secret under the namespaces of a specific cluster",
        "operationId": "Secrets_DeleteSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Secrets"
        ]
      },
      "put": {
        "summary": "UpdateSecret updates secret under the namespaces of a specific cluster",
        "operationId": "Secrets_UpdateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretsUpdateSecretBody"
            }
          }
        ],
        "tags": [
          "Secrets"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services": {
      "get": {
        "summary": "ListServices lists services in the specified cluster and namespace",
        "operationId": "Services_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The kind of service.\nIf the kind is Deployment,\nthis presents the name of the deployment.\n\n - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "Name of kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for service name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the service list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the service list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "type",
            "description": "Type is a array used for frontend filter.\nUse examples: type=CLUSTER_IP&type=NODE_PORT.\n\n - SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ClusterIP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NodePort: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LoadBalancer: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - ExternalName: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SERVICE_TYPE_UNSPECIFIED",
                "ClusterIP",
                "NodePort",
                "LoadBalancer",
                "ExternalName"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ports",
            "description": "Ports is used to filter by port.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "post": {
        "summary": "CreateService creates a service to the system by given service data",
        "operationId": "Services_CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in\nyaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicesCreateServiceBody"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services/{name}": {
      "get": {
        "summary": "GetService gets a service from the system by given service name",
        "operationId": "Services_GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "delete": {
        "summary": "DeleteService deletes a service from the system by given service name",
        "operationId": "Services_DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced service.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "put": {
        "summary": "UpdateService updates a service from the system by given service name",
        "operationId": "Services_UpdateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicesUpdateServiceBody"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "patch": {
        "summary": "PatchService patches a service from the system by given service name",
        "operationId": "Services_PatchService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicesPatchServiceBody"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services/{name}/json": {
      "get": {
        "summary": "GetServiceJSON gets a service json from the system by given service name",
        "operationId": "Services_GetServiceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetServiceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/workloads": {
      "get": {
        "summary": "ListWorkloads lists deployment under the namespaces of a specific\ncluster",
        "operationId": "DeploymentApp_ListWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiappsv1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/workloads/{name}": {
      "get": {
        "summary": "GetWorkload gets a deployment under the namespaces of a specific cluster",
        "operationId": "DeploymentApp_GetWorkload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiappsv1alpha1Deployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentApp"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/{kind}/json": {
      "post": {
        "summary": "CreateWorkloadByJSON creates workload by JSON under the namespaces of a\nspecific cluster",
        "operationId": "InternalResource_CreateWorkloadByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "WorkloadKind the workload of kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "deployments",
              "statefulsets",
              "daemonsets",
              "jobs",
              "cronjobs",
              "pods",
              "replicasets",
              "secrets",
              "configmaps"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalResourceCreateWorkloadByJSONBody"
            }
          }
        ],
        "tags": [
          "InternalResource"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/{kind}/{name}/json": {
      "get": {
        "summary": "GetWorkloadJSON gets workload by JSON under the namespaces of a specific\ncluster",
        "operationId": "InternalResource_GetWorkloadJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "WorkloadKind the workload of kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "deployments",
              "statefulsets",
              "daemonsets",
              "jobs",
              "cronjobs",
              "pods",
              "replicasets",
              "secrets",
              "configmaps"
            ]
          },
          {
            "name": "name",
            "description": "Name represents the name of Workload",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v1 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "InternalResource"
        ]
      },
      "put": {
        "summary": "UpdateWorkloadByJSON updates workload by JSON under the namespaces of a\nspecific cluster",
        "operationId": "InternalResource_UpdateWorkloadByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "WorkloadKind the workload of kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "deployments",
              "statefulsets",
              "daemonsets",
              "jobs",
              "cronjobs",
              "pods",
              "replicasets",
              "secrets",
              "configmaps"
            ]
          },
          {
            "name": "name",
            "description": "Name represents the name of Workload",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalResourceUpdateWorkloadByJSONBody"
            }
          }
        ],
        "tags": [
          "InternalResource"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodegroupnodes": {
      "get": {
        "summary": "FilterNodesByNodeGroup filter nodes by nodegroup",
        "operationId": "NodeGroups_FilterNodesByNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phase",
            "description": "Phase represents the current phase of node.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NODE_PHASE_UNSPECIFIED",
                "Ready",
                "Not_Ready",
                "Unknown"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nodeIp",
            "description": "nodeIp represents node's ip address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is to filter nodes by node name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "description": "Role is used for filter by node role.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NODE_ROLE_UNSPECIFIED",
              "CONTROL_PLANE",
              "WORKER"
            ],
            "default": "NODE_ROLE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "nodeGroupName",
            "description": "name represents the name of the NodeGroup.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodegroups": {
      "get": {
        "summary": "ListNodeGroups lists nodegroups from the system",
        "operationId": "NodeGroups_ListNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      },
      "post": {
        "summary": "CreateNodeGroup creates a nodegroup by given nodegroup data",
        "operationId": "NodeGroups_CreateNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeGroupsCreateNodeGroupBody"
            }
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodegroups/{name}": {
      "get": {
        "summary": "GetNodeGroup gets a nodegroup by given nodegroup name",
        "operationId": "NodeGroups_GetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the NodeGroup belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of NodeGroup",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      },
      "delete": {
        "summary": "DeleteNodeGroup deletes a nodegroup by given nodegroup name",
        "operationId": "NodeGroups_DeleteNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the NodeGroup belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of NodeGroup",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      },
      "put": {
        "summary": "UpdateNodeGroup updates a nodegroup by given nodegroup name",
        "operationId": "NodeGroups_UpdateNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of the NodeGroup.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeGroupsUpdateNodeGroupBody"
            }
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodes": {
      "get": {
        "summary": "ListNode returns all edge nodes in the cluster.",
        "operationId": "Nodes_ListNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phase",
            "description": "Phase represents the current phase of node.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NODE_PHASE_UNSPECIFIED",
                "Ready",
                "Not_Ready",
                "Unknown"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nodeIp",
            "description": "nodeIp represents node's ip address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is to filter nodes by node name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "description": "Role is used for filter by node role.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NODE_ROLE_UNSPECIFIED",
              "CONTROL_PLANE",
              "WORKER"
            ],
            "default": "NODE_ROLE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodes/first-controlplane/address": {
      "get": {
        "summary": "GetFirstControlPlaneNodeIP returns a IP address of the first got control-plane node",
        "operationId": "Nodes_GetFirstControlPlaneNodeIP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetFirstControlPlaneNodeIPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodes/{name}": {
      "get": {
        "summary": "GetNode returns a edge node.",
        "operationId": "Nodes_GetNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "showPods",
            "description": "ShowPods is to control whether returned data contains\nnode.status.PodAllocated. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Nodes"
        ]
      },
      "delete": {
        "summary": "DeleteNode delete a edge node.",
        "operationId": "Nodes_DeleteNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nodes"
        ]
      },
      "put": {
        "summary": "updateNode update a edge node.",
        "operationId": "Nodes_UpdateNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodesUpdateNodeBody"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodes/{name}/cordon": {
      "patch": {
        "summary": "CordonNode cordon a edge node.",
        "operationId": "Nodes_CordonNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodes/{name}/json": {
      "get": {
        "summary": "GetNodeJSON gets a node's json from the system by given node name",
        "operationId": "Nodes_GetNodeJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNodeJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the node name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/nodes/{name}/uncordon": {
      "patch": {
        "summary": "UnCordonNode uncordon a edge node.",
        "operationId": "Nodes_UnCordonNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/publicmetricrange": {
      "post": {
        "summary": "Query public metrics of a resource",
        "operationId": "Metrics_QueryPublicRangeUsages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1MetricRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Name of the cluster where the workload is located",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetricsQueryPublicRangeUsagesBody"
            }
          }
        ],
        "tags": [
          "Metrics"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/services": {
      "get": {
        "summary": "ListClusterServices lists all services in the specified cluster, regardless\nof namespace",
        "operationId": "Services_ListClusterServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the service list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the service list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is a array used for frontend filter.\nUse examples: type=CLUSTER_IP&type=NODE_PORT\n\n - SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ClusterIP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NodePort: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LoadBalancer: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - ExternalName: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SERVICE_TYPE_UNSPECIFIED",
                "ClusterIP",
                "NodePort",
                "LoadBalancer",
                "ExternalName"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ports",
            "description": "Ports is used to filter by port.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/clusters/{cluster}/settings/gpu": {
      "get": {
        "operationId": "Setting_ListGPUSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGPUSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "availableEnable",
            "description": "if available_enable is true will return available gpu number\nif available_enable is false AvailableResource return nil",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Setting"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/workspaces": {
      "get": {
        "summary": "Returns workspaces that visible for the current user",
        "operationId": "Workspaces_ListVisibleWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspaces"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/workspaces/clusters": {
      "get": {
        "summary": "Returns cluster names that visible for the current user",
        "operationId": "Workspaces_ListVisitorClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkspacesClusterListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspaces"
        ]
      }
    },
    "/apis/core.kant.io/v1alpha1/workspaces/clusters/{cluster}/namespaces": {
      "get": {
        "summary": "Returns cluster namespaces that visible for the current user",
        "operationId": "Workspaces_ListVisitorNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkspacesNamespaceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster path variable of cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspaces"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/devicemodels": {
      "get": {
        "summary": "ListClusterDevice lists devicemodel of cluster scope",
        "operationId": "DeviceModels_ListClusterDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListDeviceModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "delete": {
        "summary": "Batch delete devicemodels",
        "operationId": "DeviceModels_BatchDeleteDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceModelsBatchDeleteDeviceModelsBody"
            }
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/devices": {
      "get": {
        "summary": "ListClusterDevice lists device of cluster scope",
        "operationId": "Devices_ListClusterDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "delete": {
        "summary": "Batch delete devices",
        "operationId": "Devices_BatchDeleteDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesBatchDeleteDevicesBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devicemodels": {
      "get": {
        "summary": "ListDevice lists devicemodel of namespaced scope from the system",
        "operationId": "DeviceModels_ListDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListDeviceModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "post": {
        "summary": "CreateDevice creates a devicemodel of namespaced scope to the system by given device data",
        "operationId": "DeviceModels_CreateDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceModelsCreateDeviceModelBody"
            }
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "summary": "GetDevice gets a devicemodel of namespaced scope from the system",
        "operationId": "DeviceModels_GetDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of DeviceModel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "delete": {
        "summary": "DeleteDevice deletes a devicemodel of namespaced scope from the system by given devicemodel name",
        "operationId": "DeviceModels_DeleteDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of DeviceModel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "put": {
        "summary": "UpdateDevice updates a devicemodel of namespaced scope from the system by given device name",
        "operationId": "DeviceModels_UpdateDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of DeviceModel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceModelsUpdateDeviceModelBody"
            }
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devices": {
      "get": {
        "summary": "ListDevice lists device of namespaced scope from the system",
        "operationId": "Devices_ListDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "description": "modelname is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "post": {
        "summary": "CreateDevice creates a device of namespaced scope to the system by given device data",
        "operationId": "Devices_CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesCreateDeviceBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devices/{name}": {
      "get": {
        "summary": "GetDevice gets a device of namespaced scope from the system",
        "operationId": "Devices_GetDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "delete": {
        "summary": "DeleteDevice deletes a device of namespaced scope from the system by given device name",
        "operationId": "Devices_DeleteDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "put": {
        "summary": "UpdateDevice updates a device of namespaced scope from the system by given device name",
        "operationId": "Devices_UpdateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesUpdateDeviceBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "patch": {
        "summary": "Patch device",
        "operationId": "Devices_PatchDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesPatchDevicesBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devices/{name}/bind-node": {
      "patch": {
        "summary": "BindNode bind device to node",
        "operationId": "Devices_BindNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesBindNodeBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/edgeunit-resource-policies": {
      "get": {
        "operationId": "EdgeUnits_ListEdgeUnitResourcePolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ResourcePolicyListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/edgeunits": {
      "get": {
        "operationId": "EdgeUnits_ListEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnitListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "search condition for list",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      },
      "post": {
        "operationId": "EdgeUnits_CreateEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnitCreateRequest"
            }
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/edgeunits/{name}": {
      "get": {
        "operationId": "EdgeUnits_GetEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      },
      "delete": {
        "operationId": "EdgeUnits_DeleteEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      },
      "put": {
        "operationId": "EdgeUnits_UpdateEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeUnitsUpdateEdgeUnitBody"
            }
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/edgeunits/{name}/addons": {
      "get": {
        "operationId": "EdgeUnits_GetAddons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAddonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/edgeunits/{name}/cloudcorehostips": {
      "get": {
        "operationId": "EdgeUnits_ListCloudCoreHostIPs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CloudCoreHostIPsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/edgeunits/{name}/components-repository": {
      "get": {
        "operationId": "EdgeUnits_GetComponentsRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnitComponentsRepositoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/registries": {
      "get": {
        "summary": "ListRegistries returns a list of registries",
        "operationId": "Image_ListRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global",
            "description": "Global is to list all global registries.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/registries/kangaroo": {
      "get": {
        "summary": "DetectKangaroo returns whether the kangaroo is installed.",
        "operationId": "Image_DetectKangaroo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DetectKangarooResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/registries/{registry}/projects": {
      "get": {
        "summary": "ListProjects returns a list of projects of specified registry",
        "operationId": "Image_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "Public is distinguish public projects and private projects.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by project name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/registries/{registry}/repositories": {
      "get": {
        "summary": "ListRepositories returns a list of image names of specified project",
        "operationId": "Image_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request, \"/\" is a possible value.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showArtifacts",
            "description": "ShowArtifacts is to list artifacts of per image, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/core.kant.io/v1beta1/registries/{registry}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts returns a list of tags of specified image",
        "operationId": "Image_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "Repository is image name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyTagName",
            "description": "FuzzyTagName is used to fuzzy search by tag name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/edgeappoverridefeatures": {
      "get": {
        "summary": "GetEdgeAppOverrideFeatures gets the override features of a edgeapplication under a specific cluster",
        "operationId": "EdgeApp_GetEdgeAppOverrideFeatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetEdgeAppOverrideFeaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/edgeapplications": {
      "get": {
        "summary": "ListClusterEdgeApplications lists all edgeapplications under the namespaces of a specific cluster",
        "operationId": "EdgeApp_ListClusterEdgeApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEdgeApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications": {
      "get": {
        "summary": "ListEdgeApplications lists all edgeapplications under the namespaces of a specific cluster",
        "operationId": "EdgeApp_ListEdgeApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEdgeApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "post": {
        "summary": "CreateEdgeApplication creates a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_CreateEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAppCreateEdgeApplicationBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}": {
      "get": {
        "summary": "GetEdgeApplication gets a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_GetEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "delete": {
        "summary": "DeleteEdgeApplication deletes a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_DeleteEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "put": {
        "summary": "UpdateEdgeApplication updates a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_UpdateEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAppUpdateEdgeApplicationBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/targetnodegroups": {
      "get": {
        "summary": "ListTargetNodeGroups lists all target node groups of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_ListTargetNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListTargetNodeGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzyName is used for fuzzy query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "post": {
        "summary": "DeployTargetNodeGroup deploys a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_DeployTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DeployTargetNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAppDeployTargetNodeGroupBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/targetnodegroups/{targetnodegroup}": {
      "get": {
        "summary": "GetTargetNodeGroup gets a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_GetTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetTargetNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "delete": {
        "summary": "DeleteTargetNodeGroup deletes a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_DeleteTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "put": {
        "summary": "UpdateTargetNodeGroups updates target node groups of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_UpdateTargetNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateTargetNodeGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAppUpdateTargetNodeGroupsBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/unassociatednodegroups": {
      "get": {
        "summary": "ListEdgeAppUnassociatedNodeGroups lists all unassociated node groups of a edgeapplication under the namespaces of\na specific cluster",
        "operationId": "EdgeApp_ListEdgeAppUnassociatedNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzyName is used for fuzzy query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/verify": {
      "post": {
        "summary": "GetEdgeAppCheckResult verifies a edgeapplication container's image & env & command & args & resource under the\nnamespaces of a specific cluster",
        "operationId": "EdgeApp_GetEdgeAppCheckResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetEdgeAppCheckResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAppGetEdgeAppCheckResultBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/verifyimage": {
      "post": {
        "summary": "verifyEdgeApplicationImage verifies a edgeapplication image under the namespaces of a specific cluster",
        "operationId": "EdgeApp_VerifyEdgeApplicationImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyEdgeApplicationImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAppVerifyEdgeApplicationImageBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/batch-nodes": {
      "get": {
        "summary": "List batch nodes.",
        "operationId": "BatchNodes_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBatchNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of BatchNode.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nodeNamePrefix",
            "description": "NodeNamePrefix represents the prefix of the node name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page represents the page number.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize represents the page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      },
      "post": {
        "summary": "Create a batch node.",
        "operationId": "BatchNodes_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchNodesCreateBody"
            }
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/batch-nodes/{name}": {
      "get": {
        "summary": "Get a batch node by name.",
        "operationId": "BatchNodes_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of BatchNode.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      },
      "delete": {
        "summary": "Delete a batch node.",
        "operationId": "BatchNodes_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of BatchNode.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      },
      "put": {
        "summary": "Update a batch node.",
        "operationId": "BatchNodes_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of BatchNode.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchNodesUpdateBody"
            }
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/batch-nodes/{name}/cert": {
      "get": {
        "summary": "Download the cert of a batch node.",
        "operationId": "BatchNodes_DownloadCert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of BatchNode.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/batch-nodes/{name}/join-help": {
      "get": {
        "summary": "Join Help",
        "operationId": "BatchNodes_JoinHelp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1JoinHelpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of BatchNode.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BatchNodes"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/imageprepulljobs": {
      "get": {
        "summary": "Page the collection of ImagePrePullJob with condition",
        "operationId": "ImagePrePullJobs_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ImagePrePullJobListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "Search is list fuzzy search criteria",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      },
      "delete": {
        "operationId": "ImagePrePullJobs_BatchDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "For edgeunit resources, choose one of two with cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImagePrePullJobsBatchDeleteBody"
            }
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      },
      "post": {
        "summary": "Create a new ImagePrePullJob",
        "operationId": "ImagePrePullJobs_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ImagePrePullJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1ImagePrePullJobsCreateBody"
            }
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/imageprepulljobs/{name}": {
      "get": {
        "summary": "Get a ImagePrePullJob with edgeunit and name",
        "operationId": "ImagePrePullJobs_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ImagePrePullJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is ImagePrePullJob name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      },
      "delete": {
        "summary": "Delete a ImagePrePullJob with edgeunit and name",
        "operationId": "ImagePrePullJobs_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is ImagePrePullJob name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/join-config": {
      "get": {
        "summary": "List SingleJoinConfigs.",
        "operationId": "SingleJoinConfigs_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/joinconfigListSingleJoinConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of SingleJoinConfig.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page represents the page number.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize represents the page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SingleJoinConfigs"
        ]
      },
      "post": {
        "summary": "Create SingleJoinConfigs.",
        "operationId": "SingleJoinConfigs_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/joinconfigSingleJoinConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1SingleJoinConfigsCreateBody"
            }
          }
        ],
        "tags": [
          "SingleJoinConfigs"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/join-config/{name}": {
      "get": {
        "summary": "Get SingleJoinConfigs by name.",
        "operationId": "SingleJoinConfigs_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/joinconfigSingleJoinConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of SingleJoinConfig.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SingleJoinConfigs"
        ]
      },
      "delete": {
        "summary": "Delete SingleJoinConfigs.",
        "operationId": "SingleJoinConfigs_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of SingleJoinConfig.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SingleJoinConfigs"
        ]
      },
      "put": {
        "summary": "Update SingleJoinConfigs.",
        "operationId": "SingleJoinConfigs_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/joinconfigSingleJoinConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of SingleJoinConfig.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1SingleJoinConfigsUpdateBody"
            }
          }
        ],
        "tags": [
          "SingleJoinConfigs"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/join-config/{name}/guid": {
      "get": {
        "summary": "Join Help",
        "operationId": "SingleJoinConfigs_JoinHelp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/joinconfigSingleJoinHelpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit represents the name of the edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of SingleJoinConfig.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SingleJoinConfigs"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/nodeupgradejobs": {
      "get": {
        "summary": "Page the collection of NodeUpgradeJob with condition",
        "operationId": "NodeUpgradeJobs_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeUpgradeJobListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "Search is list fuzzy search criteria",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      },
      "post": {
        "summary": "Create a new NodeUpgradeJob",
        "operationId": "NodeUpgradeJobs_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeUpgradeJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeUpgradeJobsCreateBody"
            }
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      }
    },
    "/apis/batch.kant.io/v1alpha1/edgeunits/{edgeunit}/nodeupgradejobs/{name}": {
      "get": {
        "summary": "Get a NodeUpgradeJob with edgeunit and name",
        "operationId": "NodeUpgradeJobs_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeUpgradeJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is NodeUpgradeJob name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      },
      "delete": {
        "summary": "Delete a NodeUpgradeJob with edgeunit and name",
        "operationId": "NodeUpgradeJobs_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "edgeunit",
            "description": "Edgeunit is name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is NodeUpgradeJob name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/edgeappoverridefeatures": {
      "get": {
        "summary": "GetEdgeAppOverrideFeatures gets the override features of a edgeapplication under a specific cluster",
        "operationId": "EdgeApp_GetEdgeAppOverrideFeatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappGetEdgeAppOverrideFeaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/edgeapplications": {
      "get": {
        "summary": "ListClusterEdgeApplications lists all edgeapplications under the namespaces of a specific cluster",
        "operationId": "EdgeApp_ListClusterEdgeApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListEdgeApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/nodegroups": {
      "delete": {
        "summary": "Batch delete nodegroups",
        "operationId": "NodeGroups_BatchDeleteNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroupsBatchDeleteNodeGroupsBody"
            }
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications": {
      "get": {
        "summary": "ListEdgeApplications lists all edgeapplications under the namespaces of a specific cluster",
        "operationId": "EdgeApp_ListEdgeApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListEdgeApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "post": {
        "summary": "CreateEdgeApplication creates a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_CreateEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappEdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppCreateEdgeApplicationBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}": {
      "get": {
        "summary": "GetEdgeApplication gets a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_GetEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappEdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "delete": {
        "summary": "DeleteEdgeApplication deletes a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_DeleteEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "put": {
        "summary": "UpdateEdgeApplication updates a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_UpdateEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappEdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppUpdateEdgeApplicationBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/targetnodegroups": {
      "get": {
        "summary": "ListTargetNodeGroups lists all target node groups of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_ListTargetNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListTargetNodeGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzyName is used for fuzzy query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "post": {
        "summary": "DeployTargetNodeGroup deploys a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_DeployTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappDeployTargetNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppDeployTargetNodeGroupBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/targetnodegroups/{targetnodegroup}": {
      "get": {
        "summary": "GetTargetNodeGroup gets a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_GetTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappGetTargetNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "delete": {
        "summary": "DeleteTargetNodeGroup deletes a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_DeleteTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      },
      "put": {
        "summary": "UpdateTargetNodeGroups updates target node groups of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeApp_UpdateTargetNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappUpdateTargetNodeGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppUpdateTargetNodeGroupsBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/unassociatednodegroups": {
      "get": {
        "summary": "ListEdgeAppUnassociatedNodeGroups lists all unassociated node groups of a edgeapplication under the namespaces of\na specific cluster",
        "operationId": "EdgeApp_ListEdgeAppUnassociatedNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzyName is used for fuzzy query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/verify": {
      "post": {
        "summary": "GetEdgeAppCheckResult verifies a edgeapplication container's image & env & command & args & resource under the\nnamespaces of a specific cluster",
        "operationId": "EdgeApp_GetEdgeAppCheckResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappGetEdgeAppCheckResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppGetEdgeAppCheckResultBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/verifyimage": {
      "post": {
        "summary": "verifyEdgeApplicationImage verifies a edgeapplication image under the namespaces of a specific cluster",
        "operationId": "EdgeApp_VerifyEdgeApplicationImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappVerifyEdgeApplicationImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppVerifyEdgeApplicationImageBody"
            }
          }
        ],
        "tags": [
          "EdgeApp"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/nodegroupnodes": {
      "get": {
        "summary": "FilterNodesByNodeGroup filter nodes by nodegroup",
        "operationId": "NodeGroups_FilterNodesByNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phase",
            "description": "Phase represents the current phase of node.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NODE_PHASE_UNSPECIFIED",
                "Ready",
                "Not_Ready",
                "Unknown"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nodeIp",
            "description": "nodeIp represents node's ip address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is to filter nodes by node name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "description": "Role is used for filter by node role.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NODE_ROLE_UNSPECIFIED",
              "CONTROL_PLANE",
              "WORKER"
            ],
            "default": "NODE_ROLE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "nodeGroupName",
            "description": "name represents the name of the NodeGroup.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/nodegroups": {
      "get": {
        "summary": "ListNodeGroups lists nodegroups from the system",
        "operationId": "NodeGroups_ListNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      },
      "post": {
        "summary": "CreateNodeGroup creates a nodegroup by given nodegroup data",
        "operationId": "NodeGroups_CreateNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappNodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroupsCreateNodeGroupBody"
            }
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/clusters/{cluster}/nodegroups/{name}": {
      "get": {
        "summary": "GetNodeGroup gets a nodegroup by given nodegroup name",
        "operationId": "NodeGroups_GetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappNodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      },
      "delete": {
        "summary": "DeleteNodeGroup deletes a nodegroup by given nodegroup name",
        "operationId": "NodeGroups_DeleteNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      },
      "put": {
        "summary": "UpdateNodeGroup updates a nodegroup by given nodegroup name",
        "operationId": "NodeGroups_UpdateNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappNodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of NodeGroup.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroupsUpdateNodeGroupBody"
            }
          }
        ],
        "tags": [
          "NodeGroups"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/edgeappoverridefeatures": {
      "get": {
        "summary": "GetEdgeAppOverrideFeatures gets the override features of a edgeapplication under a specific cluster",
        "operationId": "EdgeAppWithWorkspace_GetEdgeAppOverrideFeatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappGetEdgeAppOverrideFeaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/edgeapplications": {
      "get": {
        "summary": "ListClusterEdgeApplications lists all edgeapplications under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_ListClusterEdgeApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListEdgeApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/nodegroups": {
      "delete": {
        "summary": "Batch delete nodegroups",
        "operationId": "NodeGroupsWithWorkspace_BatchDeleteNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroupsWithWorkspaceBatchDeleteNodeGroupsBody"
            }
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications": {
      "get": {
        "summary": "ListEdgeApplications lists all edgeapplications under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_ListEdgeApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListEdgeApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      },
      "post": {
        "summary": "CreateEdgeApplication creates a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_CreateEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappEdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppWithWorkspaceCreateEdgeApplicationBody"
            }
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}": {
      "get": {
        "summary": "GetEdgeApplication gets a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_GetEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappEdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      },
      "delete": {
        "summary": "DeleteEdgeApplication deletes a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_DeleteEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      },
      "put": {
        "summary": "UpdateEdgeApplication updates a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_UpdateEdgeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappEdgeApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppWithWorkspaceUpdateEdgeApplicationBody"
            }
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/targetnodegroups": {
      "get": {
        "summary": "ListTargetNodeGroups lists all target node groups of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_ListTargetNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListTargetNodeGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzyName is used for fuzzy query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      },
      "post": {
        "summary": "DeployTargetNodeGroup deploys a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_DeployTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappDeployTargetNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppWithWorkspaceDeployTargetNodeGroupBody"
            }
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/targetnodegroups/{targetnodegroup}": {
      "get": {
        "summary": "GetTargetNodeGroup gets a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_GetTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappGetTargetNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      },
      "delete": {
        "summary": "DeleteTargetNodeGroup deletes a target node group of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_DeleteTargetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      },
      "put": {
        "summary": "UpdateTargetNodeGroups updates target node groups of a edgeapplication under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_UpdateTargetNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappUpdateTargetNodeGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetnodegroup",
            "description": "TargetNodeGroupName represents the name of TargetNodeGroupInstance.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppWithWorkspaceUpdateTargetNodeGroupsBody"
            }
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/unassociatednodegroups": {
      "get": {
        "summary": "ListEdgeAppUnassociatedNodeGroups lists all unassociated node groups of a edgeapplication under the namespaces of\na specific cluster",
        "operationId": "EdgeAppWithWorkspace_ListEdgeAppUnassociatedNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the EdgeApplications belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzyName is used for fuzzy query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/verify": {
      "post": {
        "summary": "GetEdgeAppCheckResult verifies a edgeapplication container's image & env & command & args & resource under the\nnamespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_GetEdgeAppCheckResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappGetEdgeAppCheckResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppWithWorkspaceGetEdgeAppCheckResultBody"
            }
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/edgeapplications/{name}/verifyimage": {
      "post": {
        "summary": "verifyEdgeApplicationImage verifies a edgeapplication image under the namespaces of a specific cluster",
        "operationId": "EdgeAppWithWorkspace_VerifyEdgeApplicationImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappVerifyEdgeApplicationImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the TargetNodeGroupInstance belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of edgeapplications.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1EdgeAppWithWorkspaceVerifyEdgeApplicationImageBody"
            }
          }
        ],
        "tags": [
          "EdgeAppWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nodegroupnodes": {
      "get": {
        "summary": "FilterNodesByNodeGroup filter nodes by nodegroup",
        "operationId": "NodeGroupsWithWorkspace_FilterNodesByNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phase",
            "description": "Phase represents the current phase of node.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NODE_PHASE_UNSPECIFIED",
                "Ready",
                "Not_Ready",
                "Unknown"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nodeIp",
            "description": "nodeIp represents node's ip address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is to filter nodes by node name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "description": "Role is used for filter by node role.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NODE_ROLE_UNSPECIFIED",
              "CONTROL_PLANE",
              "WORKER"
            ],
            "default": "NODE_ROLE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "nodeGroupName",
            "description": "name represents the name of the NodeGroup.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nodegroups": {
      "get": {
        "summary": "ListNodeGroups lists nodegroups from the system",
        "operationId": "NodeGroupsWithWorkspace_ListNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappListNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      },
      "post": {
        "summary": "CreateNodeGroup creates a nodegroup by given nodegroup data",
        "operationId": "NodeGroupsWithWorkspace_CreateNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappNodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroupsWithWorkspaceCreateNodeGroupBody"
            }
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nodegroups/{name}": {
      "get": {
        "summary": "GetNodeGroup gets a nodegroup by given nodegroup name",
        "operationId": "NodeGroupsWithWorkspace_GetNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappNodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "DeleteNodeGroup deletes a nodegroup by given nodegroup name",
        "operationId": "NodeGroupsWithWorkspace_DeleteNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      },
      "put": {
        "summary": "UpdateNodeGroup updates a nodegroup by given nodegroup name",
        "operationId": "NodeGroupsWithWorkspace_UpdateNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeappNodeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of NodeGroup.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeGroupsWithWorkspaceUpdateNodeGroupBody"
            }
          }
        ],
        "tags": [
          "NodeGroupsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/clusters/{cluster}/imageprepulljobs": {
      "get": {
        "summary": "Page the collection of ImagePrePullJob with condition",
        "operationId": "ImagePrePullJobs_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskImagePrePullJobListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "Search is list fuzzy search criteria.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      },
      "delete": {
        "summary": "BatchDelete delete multiple ImagePrePullJob",
        "operationId": "ImagePrePullJobs_BatchDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2ImagePrePullJobsBatchDeleteBody"
            }
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      },
      "post": {
        "summary": "Create a new ImagePrePullJob",
        "operationId": "ImagePrePullJobs_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskImagePrePullJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2ImagePrePullJobsCreateBody"
            }
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/clusters/{cluster}/imageprepulljobs/{name}": {
      "get": {
        "summary": "Get a ImagePrePullJob with edgeunit and name",
        "operationId": "ImagePrePullJobs_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskImagePrePullJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      },
      "delete": {
        "summary": "Delete a ImagePrePullJob with edgeunit and name",
        "operationId": "ImagePrePullJobs_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagePrePullJobs"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/clusters/{cluster}/nodeupgradejobs": {
      "get": {
        "summary": "Page the collection of NodeUpgradeJob with condition",
        "operationId": "NodeUpgradeJobs_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskNodeUpgradeJobListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "Search is list fuzzy search criteria.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      },
      "delete": {
        "summary": "BatchDelete delete multiple NodeUpgradeJob",
        "operationId": "NodeUpgradeJobs_BatchDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2NodeUpgradeJobsBatchDeleteBody"
            }
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      },
      "post": {
        "summary": "Create a new NodeUpgradeJob",
        "operationId": "NodeUpgradeJobs_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskNodeUpgradeJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2NodeUpgradeJobsCreateBody"
            }
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/clusters/{cluster}/nodeupgradejobs/{name}": {
      "get": {
        "summary": "Get a NodeUpgradeJob with edgeunit and name",
        "operationId": "NodeUpgradeJobs_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskNodeUpgradeJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      },
      "delete": {
        "summary": "Delete a NodeUpgradeJob with edgeunit and name",
        "operationId": "NodeUpgradeJobs_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NodeUpgradeJobs"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/imageprepulljobs": {
      "get": {
        "summary": "Page the collection of ImagePrePullJob with condition",
        "operationId": "ImagePrePullJobsWithWorkspace_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskImagePrePullJobListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "Search is list fuzzy search criteria.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImagePrePullJobsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "BatchDelete delete multiple ImagePrePullJob",
        "operationId": "ImagePrePullJobsWithWorkspace_BatchDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2ImagePrePullJobsWithWorkspaceBatchDeleteBody"
            }
          }
        ],
        "tags": [
          "ImagePrePullJobsWithWorkspace"
        ]
      },
      "post": {
        "summary": "Create a new ImagePrePullJob",
        "operationId": "ImagePrePullJobsWithWorkspace_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskImagePrePullJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2ImagePrePullJobsWithWorkspaceCreateBody"
            }
          }
        ],
        "tags": [
          "ImagePrePullJobsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/imageprepulljobs/{name}": {
      "get": {
        "summary": "Get a ImagePrePullJob with edgeunit and name",
        "operationId": "ImagePrePullJobsWithWorkspace_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskImagePrePullJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImagePrePullJobsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "Delete a ImagePrePullJob with edgeunit and name",
        "operationId": "ImagePrePullJobsWithWorkspace_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImagePrePullJobsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/nodeupgradejobs": {
      "get": {
        "summary": "Page the collection of NodeUpgradeJob with condition",
        "operationId": "NodeUpgradeJobsWithWorkspace_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskNodeUpgradeJobListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Worksapce ID path variable.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "Search is list fuzzy search criteria.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NodeUpgradeJobsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "BatchDelete delete multiple NodeUpgradeJob",
        "operationId": "NodeUpgradeJobsWithWorkspace_BatchDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2NodeUpgradeJobsWithWorkspaceBatchDeleteBody"
            }
          }
        ],
        "tags": [
          "NodeUpgradeJobsWithWorkspace"
        ]
      },
      "post": {
        "summary": "Create a new NodeUpgradeJob",
        "operationId": "NodeUpgradeJobsWithWorkspace_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskNodeUpgradeJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha2NodeUpgradeJobsWithWorkspaceCreateBody"
            }
          }
        ],
        "tags": [
          "NodeUpgradeJobsWithWorkspace"
        ]
      }
    },
    "/apis/v2/batch.kant.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/nodeupgradejobs/{name}": {
      "get": {
        "summary": "Get a NodeUpgradeJob with edgeunit and name",
        "operationId": "NodeUpgradeJobsWithWorkspace_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodetaskNodeUpgradeJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeUpgradeJobsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "Delete a NodeUpgradeJob with edgeunit and name",
        "operationId": "NodeUpgradeJobsWithWorkspace_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeUpgradeJobsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/registries": {
      "get": {
        "summary": "ListRegistries returns a list of registries",
        "operationId": "Images_ListRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global",
            "description": "Global is to list all global registries.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/registries/kangaroo": {
      "get": {
        "summary": "DetectKangaroo returns whether the kangaroo is installed.",
        "operationId": "Images_DetectKangaroo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DetectKangarooResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/registries/{registry}/projects": {
      "get": {
        "summary": "ListProjects returns a list of projects of specified registry",
        "operationId": "Images_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "Public is distinguish public projects and private projects.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by project name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/registries/{registry}/repositories": {
      "get": {
        "summary": "ListRepositories returns a list of image names of specified project",
        "operationId": "Images_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request, \"/\" is a possible value.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showArtifacts",
            "description": "ShowArtifacts is to list artifacts of per image, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/registries/{registry}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts returns a list of tags of specified image",
        "operationId": "Images_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "Repository is image name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyTagName",
            "description": "FuzzyTagName is used to fuzzy search by tag name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/workspaces/{workspaceId}/registries": {
      "get": {
        "summary": "ListRegistries returns a list of registries",
        "operationId": "ImagesWithWorkspace_ListRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global",
            "description": "Global is to list all global registries.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImagesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/workspaces/{workspaceId}/registries/kangaroo": {
      "get": {
        "summary": "DetectKangaroo returns whether the kangaroo is installed.",
        "operationId": "ImagesWithWorkspace_DetectKangaroo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DetectKangarooResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ImagesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects": {
      "get": {
        "summary": "ListProjects returns a list of projects of specified registry",
        "operationId": "ImagesWithWorkspace_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "Public is distinguish public projects and private projects.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by project name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImagesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/repositories": {
      "get": {
        "summary": "ListRepositories returns a list of image names of specified project",
        "operationId": "ImagesWithWorkspace_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request, \"/\" is a possible value.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showArtifacts",
            "description": "ShowArtifacts is to list artifacts of per image, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ImagesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts returns a list of tags of specified image",
        "operationId": "ImagesWithWorkspace_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "Repository is image name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyTagName",
            "description": "FuzzyTagName is used to fuzzy search by tag name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImagesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/devicemodels": {
      "get": {
        "summary": "ListClusterDevice lists devicemodel of cluster scope",
        "operationId": "DeviceModels_ListClusterDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/devices": {
      "get": {
        "summary": "ListClusterDevice lists device of cluster scope",
        "operationId": "Devices_ListClusterDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "delete": {
        "summary": "Batch delete devices",
        "operationId": "Devices_BatchDeleteDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesBatchDeleteDevicesBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devicemodels": {
      "get": {
        "summary": "ListDevice lists devicemodel of namespaced scope from the system",
        "operationId": "DeviceModels_ListDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "post": {
        "summary": "CreateDevice creates a devicemodel of namespaced scope to the system by given device data",
        "operationId": "DeviceModels_CreateDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModelsCreateDeviceModelBody"
            }
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "summary": "GetDevice gets a devicemodel of namespaced scope from the system",
        "operationId": "DeviceModels_GetDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "delete": {
        "summary": "DeleteDevice deletes a devicemodel of namespaced scope from the system by given devicemodel name",
        "operationId": "DeviceModels_DeleteDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      },
      "put": {
        "summary": "UpdateDevice updates a devicemodel of namespaced scope from the system by given device name",
        "operationId": "DeviceModels_UpdateDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of DeviceModel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModelsUpdateDeviceModelBody"
            }
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devices": {
      "get": {
        "summary": "ListDevice lists device of namespaced scope from the system",
        "operationId": "Devices_ListDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "description": "modelname is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "post": {
        "summary": "CreateDevice creates a device of namespaced scope to the system by given device data",
        "operationId": "Devices_CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesCreateDeviceBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devices/{name}": {
      "get": {
        "summary": "GetDevice gets a device of namespaced scope from the system",
        "operationId": "Devices_GetDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "delete": {
        "summary": "DeleteDevice deletes a device of namespaced scope from the system by given device name",
        "operationId": "Devices_DeleteDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "put": {
        "summary": "UpdateDevice updates a device of namespaced scope from the system by given device name",
        "operationId": "Devices_UpdateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesUpdateDeviceBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      },
      "patch": {
        "summary": "Patch device",
        "operationId": "Devices_PatchDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesPatchDevicesBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/clusters/{cluster}/namespaces/{namespace}/devices/{name}/bind-node": {
      "patch": {
        "summary": "BindNode bind device to node",
        "operationId": "Devices_BindNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesBindNodeBody"
            }
          }
        ],
        "tags": [
          "Devices"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/edgeunit-resource-policies": {
      "get": {
        "operationId": "EdgeUnits_ListEdgeUnitResourcePolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitResourcePolicyListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/edgeunits": {
      "get": {
        "operationId": "EdgeUnits_ListEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnitListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "search condition for list",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      },
      "post": {
        "operationId": "EdgeUnits_CreateEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnitSaveRequest"
            }
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/edgeunits/{name}": {
      "get": {
        "operationId": "EdgeUnits_GetEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      },
      "delete": {
        "operationId": "EdgeUnits_DeleteEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      },
      "put": {
        "operationId": "EdgeUnits_UpdateEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the name of EdgeUnit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnitsUpdateEdgeUnitBody"
            }
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/edgeunits/{name}/addons": {
      "get": {
        "operationId": "EdgeUnits_GetAddons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitGetAddonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/edgeunits/{name}/cloudcorehostips": {
      "get": {
        "operationId": "EdgeUnits_ListCloudCoreHostIPs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitCloudCoreHostIPsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/edgeunits/{name}/components-repository": {
      "get": {
        "operationId": "EdgeUnits_GetComponentsRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnitComponentsRepositoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EdgeUnits"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId_1}/clusters/{cluster}/namespaces/devicemodels": {
      "delete": {
        "summary": "Batch delete devicemodels",
        "operationId": "DeviceModelsWithWorkspace_BatchDeleteDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId_1",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModelsWithWorkspaceBatchDeleteDeviceModelsBody"
            }
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/devicemodels": {
      "get": {
        "summary": "ListClusterDevice lists devicemodel of cluster scope",
        "operationId": "DeviceModelsWithWorkspace_ListClusterDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "Batch delete devicemodels",
        "operationId": "DeviceModels_BatchDeleteDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModelsBatchDeleteDeviceModelsBody"
            }
          }
        ],
        "tags": [
          "DeviceModels"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/devices": {
      "get": {
        "summary": "ListClusterDevice lists device of cluster scope",
        "operationId": "DevicesWithWorkspace_ListClusterDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      },
      "delete": {
        "summary": "Batch delete devices",
        "operationId": "DevicesWithWorkspace_BatchDeleteDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "For cluster resources, choose one of two with edgeunit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesWithWorkspaceBatchDeleteDevicesBody"
            }
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/devicemodels": {
      "get": {
        "summary": "ListDevice lists devicemodel of namespaced scope from the system",
        "operationId": "DeviceModelsWithWorkspace_ListDeviceModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      },
      "post": {
        "summary": "CreateDevice creates a devicemodel of namespaced scope to the system by given device data",
        "operationId": "DeviceModelsWithWorkspace_CreateDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModelsWithWorkspaceCreateDeviceModelBody"
            }
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "summary": "GetDevice gets a devicemodel of namespaced scope from the system",
        "operationId": "DeviceModelsWithWorkspace_GetDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      },
      "delete": {
        "summary": "DeleteDevice deletes a devicemodel of namespaced scope from the system by given devicemodel name",
        "operationId": "DeviceModelsWithWorkspace_DeleteDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      },
      "put": {
        "summary": "UpdateDevice updates a devicemodel of namespaced scope from the system by given device name",
        "operationId": "DeviceModelsWithWorkspace_UpdateDeviceModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the DeviceModel belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of DeviceModel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeviceModelsWithWorkspaceUpdateDeviceModelBody"
            }
          }
        ],
        "tags": [
          "DeviceModelsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/devices": {
      "get": {
        "summary": "ListDevice lists device of namespaced scope from the system",
        "operationId": "DevicesWithWorkspace_ListDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceListDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "description": "modelname is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      },
      "post": {
        "summary": "CreateDevice creates a device of namespaced scope to the system by given device data",
        "operationId": "DevicesWithWorkspace_CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesWithWorkspaceCreateDeviceBody"
            }
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/devices/{name}": {
      "get": {
        "summary": "GetDevice gets a device of namespaced scope from the system",
        "operationId": "DevicesWithWorkspace_GetDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      },
      "delete": {
        "summary": "DeleteDevice deletes a device of namespaced scope from the system by given device name",
        "operationId": "DevicesWithWorkspace_DeleteDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceId is the id of workspace.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the namespace of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      },
      "put": {
        "summary": "UpdateDevice updates a device of namespaced scope from the system by given device name",
        "operationId": "DevicesWithWorkspace_UpdateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deviceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesWithWorkspaceUpdateDeviceBody"
            }
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      },
      "patch": {
        "summary": "Patch device",
        "operationId": "DevicesWithWorkspace_PatchDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesWithWorkspacePatchDevicesBody"
            }
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/devices/{name}/bind-node": {
      "patch": {
        "summary": "BindNode bind device to node",
        "operationId": "DevicesWithWorkspace_BindNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Device belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of Device.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DevicesWithWorkspaceBindNodeBody"
            }
          }
        ],
        "tags": [
          "DevicesWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/edgeunits": {
      "get": {
        "operationId": "EdgeUnitsWithWorkspace_ListEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnitListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "represents the page number. If the value is -1, returns all",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "represents the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "search condition for list",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      },
      "post": {
        "operationId": "EdgeUnitsWithWorkspace_CreateEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnitsWithWorkspaceCreateEdgeUnitBody"
            }
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/edgeunits/{name}": {
      "get": {
        "operationId": "EdgeUnitsWithWorkspace_GetEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      },
      "delete": {
        "operationId": "EdgeUnitsWithWorkspace_DeleteEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      },
      "put": {
        "operationId": "EdgeUnitsWithWorkspace_UpdateEdgeUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnit"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is the name of EdgeUnit.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1EdgeUnitsWithWorkspaceUpdateEdgeUnitBody"
            }
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/edgeunits/{name}/addons": {
      "get": {
        "operationId": "EdgeUnitsWithWorkspace_GetAddons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitGetAddonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/edgeunits/{name}/cloudcorehostips": {
      "get": {
        "operationId": "EdgeUnitsWithWorkspace_ListCloudCoreHostIPs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitCloudCoreHostIPsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      }
    },
    "/apis/v2/core.kant.io/v1beta1/workspaces/{workspaceId}/edgeunits/{name}/components-repository": {
      "get": {
        "operationId": "EdgeUnitsWithWorkspace_GetComponentsRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeunitEdgeUnitComponentsRepositoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "workspaceId ID of workspace",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name of edgeunit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EdgeUnitsWithWorkspace"
        ]
      }
    }
  },
  "definitions": {
    "ConfigMapsCreateConfigMapBody": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/kantioapicorev1alpha1ConfigMap",
          "title": "The data is the Secret YAML details"
        }
      },
      "description": "Create Secret in the cluster."
    },
    "ConfigMapsUpdateConfigMapBody": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/kantioapicorev1alpha1ConfigMap",
          "title": "data The data field is the ConfigMap YAML details"
        }
      }
    },
    "CustomResourcesCreateCustomResourceByJSONBody": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateCustomResourceRequest represents create request to create one\nCustomResource of namespaced scope"
    },
    "CustomResourcesUpdateCustomResourceByJSONBody": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateCustomResourceRequest represents update request to update one\nCustomResource of namespaced scope"
    },
    "DeploymentAppCreateDeploymentBody": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apicorev1alpha1Deployment",
          "title": "deployment detail info"
        }
      }
    },
    "DeploymentAppRollbackDeploymentBody": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      },
      "title": "RollbackDeploymentRequest the request of Rollback Deployment"
    },
    "DeploymentAppUpdateDeploymentBody": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apicorev1alpha1Deployment",
          "title": "deployment detail info"
        }
      }
    },
    "InternalResourceCreateWorkloadByJSONBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data The data field is the Workload YAML details"
        }
      },
      "title": "CreateWorkloadByJSONRequest the request of create workload by JSON request"
    },
    "InternalResourceUpdateWorkloadByJSONBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data The data field is the Workload YAML details"
        }
      },
      "title": "UpdateWorkloadByJSONRequest request of update workload by JSON request"
    },
    "MetricsQueryPublicRangeUsagesBody": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Name of the namespace where the workload is located"
        },
        "param": {
          "$ref": "#/definitions/v1alpha1BatchQueryRangeRequestParam",
          "title": "The parameters of query request"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NodeGroupsBatchDeleteNodeGroupsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataSpec"
          }
        },
        "edgeunit": {
          "type": "string",
          "description": "For edgeunit resources, choose one of two with cluster."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "NodeGroupsCreateNodeGroupBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "NodeGroupMetadata represents the metadata of the NodeGroup."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        }
      },
      "title": "CreateNodeGroupRequest represents create request to create one"
    },
    "NodeGroupsUpdateNodeGroupBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "NodeGroupMetadata represents the metadata of the NodeGroup."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        }
      },
      "title": "UpdateNodeGroupRequest represents update request to update one"
    },
    "NodesUpdateNodeBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the node YAML details."
        }
      },
      "description": "UpdateNodeRequest requests to update a node."
    },
    "PodStatusOwnedBy": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PodStatusOwnedByKind",
          "description": "The kind of pod."
        },
        "name": {
          "type": "string",
          "title": "Name is the related workload name"
        }
      },
      "title": "OwnedBy states which workload the pod belongs to"
    },
    "PodStatusOwnedByKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "DEPLOYMENT",
        "STATEFULSET",
        "DAEMONSET",
        "REPLICASET",
        "JOB",
        "CRONJOB"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": "- KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - DEPLOYMENT: A Deployment provides declarative updates for Pods and ReplicaSets.\n - STATEFULSET: StatefulSet is the workload API object used to manage stateful\napplications.\n - DAEMONSET: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - REPLICASET: A pod's owner replicaSet\n - JOB: A pod's owner job\n - CRONJOB: A pod's owner cronjob",
      "title": "Kind includes deployment, statefulset, daemonset"
    },
    "RepoSpecSecretReference": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "namespace is the namespace for the resource being referenced."
        },
        "name": {
          "type": "string",
          "description": "name is the name of resource being referenced."
        }
      }
    },
    "RuleEndpointsBatchDeleteMsgRuleEndpointsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataSpec"
          }
        },
        "edgeunit": {
          "type": "string",
          "description": "For edgeunit resources, choose one of two with cluster."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "RuleEndpointsCreateMsgRuleEndpointsBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "RuleEndpointMetadata represents the metadata of the RuleEndpoint."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1RuleEndpointSpec",
          "description": "RuleEndpointSpec represents the spec of the RuleEndpoint."
        }
      },
      "title": "CreateRuleEndpointRequest represents create request to create one"
    },
    "RulesBatchDeleteMsgRulesBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataSpec"
          }
        },
        "edgeunit": {
          "type": "string",
          "description": "For edgeunit resources, choose one of two with cluster."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "RulesCreateMsgRulesBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "RuleMetadata represents the metadata of the Rule."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1RuleSpec",
          "description": "RuleSpec represents the spec of the Rule."
        }
      },
      "title": "CreateRuleRequest represents create request to create one"
    },
    "SecretsCreateSecretBody": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/kantioapicorev1alpha1Secret",
          "title": "The data is the Secret YAML details"
        }
      },
      "description": "Create Secret in the cluster."
    },
    "SecretsUpdateSecretBody": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/kantioapicorev1alpha1Secret",
          "title": "The data field is the Secret YAML details"
        }
      },
      "description": "Update Secret in the cluster."
    },
    "ServicesCreateServiceBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "Data is the Service YAML details"
        }
      },
      "description": "Create Service in the cluster."
    },
    "ServicesPatchServiceBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The json data of patch."
        }
      }
    },
    "ServicesUpdateServiceBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "Data is the Service YAML details"
        }
      },
      "description": "Update the Service information."
    },
    "apiappsv1alpha1Deployment": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Metadata is that all persisted resources must have, which includes all objects\nusers must create."
        },
        "spec": {
          "$ref": "#/definitions/apiappsv1alpha1DeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/apiappsv1alpha1DeploymentStatus",
          "title": "Most recently observed status of the Deployment.\n+optional"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      },
      "description": "Deployment provides declarative updates for Pods and ReplicaSets."
    },
    "apiappsv1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodTemplateSpec",
          "title": "Template describes the data a pod should have when created from a template"
        },
        "strategy": {
          "$ref": "#/definitions/typesUpdateStrategy",
          "description": "Strategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the deployment is paused."
        }
      },
      "description": "DeploymentSpec specifies the state of a Deployment."
    },
    "apiappsv1alpha1DeploymentStatus": {
      "type": "object",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of ready pods targeted by this deployment.\n+optional"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional"
        },
        "state": {
          "$ref": "#/definitions/typesWorkloadState",
          "title": "state describes the state of deployments"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of deployments."
        }
      },
      "description": "DeploymentStatus holds information about the observed status of a deployment."
    },
    "apiappsv1alpha1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiappsv1alpha1Deployment"
          },
          "title": "Data represents the kpanda's workload types of inclusion"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "description": "Response message for the `ListDeployments` method."
    },
    "apicommonv1alpha1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      }
    },
    "apicommonv1alpha1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/apicommonv1alpha1Time",
          "title": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/apicommonv1alpha1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      }
    },
    "apicommonv1alpha1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/apicommonv1alpha1Timestamp",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/apicommonv1alpha1Timestamp",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicommonv1alpha1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "title": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicommonv1alpha1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      }
    },
    "apicommonv1alpha1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      }
    },
    "apicommonv1alpha1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      }
    },
    "apicommonv1alpha1Timestamp": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apicorev1alpha1Deployment": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "The kind of resourcce\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "The api version of deployment\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/apicorev1alpha1DeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/apicorev1alpha1DeploymentStatus",
          "title": "Most recently observed status of the Deployment.\n+optional"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      }
    },
    "apicorev1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/corev1alpha1LabelSelector",
          "description": "Label selector for pods. Existing ReplicaSets whose pods are\nselected by this will be the ones affected by this deployment.\nIt must match the pod template's labels."
        },
        "template": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodTemplateSpec",
          "description": "Template describes the pods that will be created."
        },
        "strategy": {
          "$ref": "#/definitions/v1alpha1DeploymentStrategy",
          "title": "The deployment strategy to use to replace existing pods with new ones.\n+optional\n+patchStrategy=retainKeys"
        },
        "minReadySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum number of seconds for which a newly created pod should be ready\nwithout any of its container crashing, for it to be considered available.\nDefaults to 0 (pod will be considered available as soon as it is ready)\n+optional"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "title": "The number of old ReplicaSets to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 10.\n+optional"
        },
        "paused": {
          "type": "boolean",
          "title": "Indicates that the deployment is paused.\n+optional"
        },
        "progressDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in seconds for a deployment to make progress before it\nis considered to be failed. The deployment controller will continue to\nprocess failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status. Note that progress will\nnot be estimated during the time a deployment is paused. Defaults to 600s."
        }
      }
    },
    "apicorev1alpha1DeploymentStatus": {
      "type": "object",
      "properties": {
        "observedGeneration": {
          "type": "string",
          "format": "int64"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional"
        },
        "updatedReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.\n+optional"
        },
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n+optional"
        },
        "unavailableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of unavailable pods targeted by this deployment. This is the total number of\npods that are still required for the deployment to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created.\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DeploymentCondition"
          },
          "title": "Represents the latest available observations of a deployment's current state.\n+patchMergeKey=type\n+patchStrategy=merge"
        },
        "collisionCount": {
          "type": "integer",
          "format": "int32",
          "title": "Count of hash collisions for the Deployment. The Deployment controller uses this\nfield as a collision avoidance mechanism when it needs to create the name for the\nnewest ReplicaSet.\n+optional"
        },
        "state": {
          "$ref": "#/definitions/typesWorkloadState",
          "title": "state describes the state of deployments"
        }
      }
    },
    "apicorev1alpha1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      }
    },
    "apicorev1alpha1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/apicorev1alpha1Time",
          "title": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/apicorev1alpha1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      }
    },
    "apicorev1alpha1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/apicorev1alpha1Timestamp",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/apicorev1alpha1Timestamp",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicorev1alpha1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "title": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicorev1alpha1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      }
    },
    "apicorev1alpha1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      }
    },
    "apicorev1alpha1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      }
    },
    "apicorev1alpha1Timestamp": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apicorev1alpha1WorkloadKind": {
      "type": "string",
      "enum": [
        "deployments",
        "statefulsets",
        "daemonsets",
        "jobs",
        "cronjobs",
        "pods",
        "replicasets",
        "secrets",
        "configmaps"
      ],
      "default": "deployments",
      "description": "- deployments: A Deployment provides declarative updates for Pods and ReplicaSets.\n - statefulsets: StatefulSet is the workload API object used to manage stateful\napplications.\n - daemonsets: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - jobs: Jobs based on a common template. You can use this approach to process\nbatches of work in parallel.\n - cronjobs: CronJob object is like one line of a crontab (cron table) file. It runs a\njob periodically on a given schedule, written in Cron format.",
      "title": "workloadKind represents the kpanda's workload types of inclusion"
    },
    "apitypesLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the\nmatchLabels map is equivalent to an element of matchExpressions, whose key\nfield is \"key\", the operator is \"In\", and the values array contains only\n\"value\". The requirements are ANDed. +optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apitypesLabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements\nare ANDed. +optional"
        }
      },
      "description": "A label selector is a label query over a set of resources. The result of\nmatchLabels and matchExpressions are ANDed. An empty label selector matches\nall objects. A null label selector matches no objects."
    },
    "apitypesLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. This array is replaced during\na strategic merge patch. +optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and\nan operator that relates the key and values."
    },
    "apitypesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apitypesOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request."
        },
        "workspaceAlias": {
          "type": "string",
          "description": "The name of the workspace which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent workspaces. This field is not set anywhere right now and\napiserver is going to ignore it if set in create or update request."
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "apitypesOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent."
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\n+optional"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "apitypesPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "apitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "state",
        "workspace",
        "cluster",
        "namespace",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp."
    },
    "apitypesSortDir": {
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "default": "desc",
      "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order."
    },
    "commonv1alpha1Pagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "commonv1alpha1SortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "state",
        "workspace",
        "cluster",
        "namespace",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp."
    },
    "commonv1alpha1SortDir": {
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "default": "desc",
      "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order."
    },
    "corev1alpha1LabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corev1alpha1LabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      }
    },
    "corev1alpha1LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      }
    },
    "corev1alpha1NodePhase": {
      "type": "string",
      "enum": [
        "NODE_PHASE_UNSPECIFIED",
        "Ready",
        "Not_Ready",
        "Unknown"
      ],
      "default": "NODE_PHASE_UNSPECIFIED",
      "description": "Phase includes Ready, NotReady, and Unknown.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "kantioapicorev1alpha1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/kantioapicorev1alpha1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other\npod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodAntiAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some\nother pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "kantioapicorev1alpha1Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Added capabilities\n+optional"
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Removed capabilities\n+optional"
        }
      },
      "description": "Adds and removes POSIX capabilities from running containers."
    },
    "kantioapicorev1alpha1ConfigMap": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the configuration data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nValues with non-UTF-8 byte sequences must use the BinaryData field.\nThe keys stored in Data must not overlap with the keys in\nthe BinaryData field, this is enforced during validation process.\n+optional"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "BinaryData contains the binary data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range.\nThe keys stored in BinaryData must not overlap with the ones in\nthe Data field, this is enforced during validation process.\nUsing this field will require 1.10+ apiserver and\nkubelet.\n+optional"
        }
      },
      "description": "ConfigMap holds configuration data for pods to consume."
    },
    "kantioapicorev1alpha1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap must be defined\n+optional"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\n\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "kantioapicorev1alpha1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "title": "Selects a key from a ConfigMap.\n+structType=atomic"
    },
    "kantioapicorev1alpha1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "kantioapicorev1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
        },
        "image": {
          "type": "string",
          "title": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ContainerPort"
          },
          "title": "List of ports to expose from the container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1EnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1EnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/kantioapicorev1alpha1ResourceRequirements",
          "title": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1VolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1VolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/kantioapicorev1alpha1Probe",
          "title": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/kantioapicorev1alpha1Probe",
          "title": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/kantioapicorev1alpha1Probe",
          "title": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/kantioapicorev1alpha1Lifecycle",
          "title": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/kantioapicorev1alpha1SecurityContext",
          "title": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "A single application container that you want to run within a pod."
    },
    "kantioapicorev1alpha1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..'\npath. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n+optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
    },
    "kantioapicorev1alpha1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "kantioapicorev1alpha1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "kantioapicorev1alpha1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1ConfigMapEnvSource",
          "title": "The ConfigMap to select from\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1SecretEnvSource",
          "title": "The Secret to select from\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "kantioapicorev1alpha1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "type": "string",
          "title": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional"
        },
        "valueFrom": {
          "$ref": "#/definitions/kantioapicorev1alpha1EnvVarSource",
          "title": "Source for the environment variable's value. Cannot be used if value is not empty.\n+optional"
        }
      },
      "description": "EnvVar represents an environment variable present in a Container."
    },
    "kantioapicorev1alpha1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,\n`metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,\nstatus.podIPs. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and\nrequests.ephemeral-storage) are currently supported. +optional"
        },
        "configMapKeyRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar."
    },
    "kantioapicorev1alpha1EphemeralContainer": {
      "type": "object",
      "properties": {
        "ephemeralContainerCommon": {
          "$ref": "#/definitions/v1alpha1EphemeralContainerCommon",
          "description": "Ephemeral containers have all of the fields of Container, plus additional fields\nspecific to ephemeral containers. Fields in common with Container are in the\nfollowing inlined struct so than an EphemeralContainer may easily be converted\nto a Container."
        },
        "targetContainerName": {
          "type": "string",
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined.\n+optional"
        }
      },
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing\nPod. Ephemeral containers may not be removed or restarted.\n\nThis is a beta feature available on clusters that haven't disabled the EphemeralContainers feature gate."
    },
    "kantioapicorev1alpha1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional"
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "kantioapicorev1alpha1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HTTPHeader"
          },
          "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "kantioapicorev1alpha1HostAlias": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP address of the host file entry."
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames for the above IP address."
        }
      },
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file."
    },
    "kantioapicorev1alpha1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional"
        }
      },
      "description": "Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "kantioapicorev1alpha1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "Maps a string key to a path within a volume."
    },
    "kantioapicorev1alpha1Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/v1alpha1LifecycleHandler",
          "title": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/v1alpha1LifecycleHandler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle\nevents. For the PostStart and PreStop lifecycle handlers, management of the container blocks\nuntil the action is complete, unless the container process fails, in which case the handler is aborted."
    },
    "kantioapicorev1alpha1LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
        }
      }
    },
    "kantioapicorev1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/kantioapicorev1alpha1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "kantioapicorev1alpha1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1NodeSelectorTerm"
          },
          "description": "Required. A list of node selector terms. The terms are ORed."
        }
      },
      "title": "A node selector represents the union of the results of one or more label queries\nover a set of nodes; that is, it represents the OR of the selectors represented\nby the node selector terms.\n+structType=atomic"
    },
    "kantioapicorev1alpha1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
    },
    "kantioapicorev1alpha1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "kantioapicorev1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "NodeName represents the name of the Node."
        },
        "readyStatus": {
          "type": "string",
          "description": "readyStatus represents the status of the Node."
        },
        "selectionStatus": {
          "type": "string",
          "description": "SelectionStatus contains status of the selection result for this node."
        },
        "selectionStatusReason": {
          "type": "string",
          "description": "SelectionStatusReason contains human-readable reason for this SelectionStatus."
        }
      },
      "description": "NodeStatuses represents the status of the Node."
    },
    "kantioapicorev1alpha1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
    },
    "kantioapicorev1alpha1PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/corev1alpha1LabelSelector",
          "title": "A label query over volumes to consider for binding.\n+optional"
        },
        "resources": {
          "$ref": "#/definitions/kantioapicorev1alpha1ResourceRequirements",
          "title": "Resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n+optional"
        },
        "volumeName": {
          "type": "string",
          "title": "VolumeName is the binding reference to the PersistentVolume backing this claim.\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional"
        },
        "volumeMode": {
          "type": "string",
          "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
        },
        "dataSource": {
          "$ref": "#/definitions/kantioapicorev1alpha1TypedLocalObjectReference",
          "title": "This field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nIf the AnyVolumeDataSource feature gate is enabled, this field will always have\nthe same contents as the DataSourceRef field.\n+optional"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/kantioapicorev1alpha1TypedLocalObjectReference",
          "title": "Specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any local object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the DataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, both fields (DataSource and DataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nThere are two important differences between DataSource and DataSourceRef:\n* While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n(Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n+optional"
        }
      },
      "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
    },
    "kantioapicorev1alpha1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "kantioapicorev1alpha1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "kantioapicorev1alpha1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/corev1alpha1LabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"\n+optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/corev1alpha1LabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.\nThis field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.\n+optional"
        }
      }
    },
    "kantioapicorev1alpha1PodAntiAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1PodAffinityTerm"
          },
          "title": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
    },
    "kantioapicorev1alpha1PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional"
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodDNSConfigOption"
          },
          "title": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional"
        }
      },
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
    },
    "kantioapicorev1alpha1PodReadinessGate": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string",
          "description": "ConditionType refers to a condition in the pod's condition list with matching type."
        }
      },
      "title": "PodReadinessGate contains the reference to a pod condition"
    },
    "kantioapicorev1alpha1PodSecurityContext": {
      "type": "object",
      "properties": {
        "seLinuxOptions": {
          "$ref": "#/definitions/kantioapicorev1alpha1SELinuxOptions",
          "title": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/kantioapicorev1alpha1WindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID.  If unspecified, no groups will be added to\nany container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroup": {
          "type": "string",
          "format": "int64",
          "description": "1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.\n+optional",
          "title": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:"
        },
        "sysctls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Sysctl"
          },
          "title": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroupChangePolicy": {
          "type": "string",
          "title": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/kantioapicorev1alpha1SeccompProfile",
          "title": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
    },
    "kantioapicorev1alpha1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1Volume"
          },
          "title": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\n+optional\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys"
        },
        "initContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1Container"
          },
          "title": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1Container"
          },
          "title": "List of containers belonging to the pod.\nContainers cannot currently be added or removed.\nThere must be at least one container in a Pod.\nCannot be updated.\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1EphemeralContainer"
          },
          "title": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.\nThis field is beta-level and available on clusters that haven't disabled the EphemeralContainers feature gate.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "restartPolicy": {
          "type": "string",
          "title": "Restart policy for all containers within the pod.\nOne of Always, OnFailure, Never.\nDefault to Always.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.\n+optional"
        },
        "activeDeadlineSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer.\n+optional"
        },
        "dnsPolicy": {
          "type": "string",
          "title": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.\n+optional"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional\n+mapType=atomic"
        },
        "serviceAccountName": {
          "type": "string",
          "title": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional"
        },
        "serviceAccount": {
          "type": "string",
          "title": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead.\n+k8s:conversion-gen=false\n+optional"
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "title": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n+optional"
        },
        "nodeName": {
          "type": "string",
          "title": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements.\n+optional"
        },
        "hostNetwork": {
          "type": "boolean",
          "title": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostPID": {
          "type": "boolean",
          "title": "Use the host's pid namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostIPC": {
          "type": "boolean",
          "title": "Use the host's ipc namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "shareProcessNamespace": {
          "type": "boolean",
          "title": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodSecurityContext",
          "title": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\n+optional"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1LocalObjectReference"
          },
          "title": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the\nimages used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for\nthem to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info:\nhttps://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod +optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "hostname": {
          "type": "string",
          "title": "Specifies the hostname of the Pod\nIf not specified, the pod's hostname will be set to a system-defined value.\n+optional"
        },
        "subdomain": {
          "type": "string",
          "title": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster\ndomain>\". If not specified, the pod will not have a domainname at all. +optional"
        },
        "affinity": {
          "$ref": "#/definitions/kantioapicorev1alpha1Affinity",
          "title": "If specified, the pod's scheduling constraints\n+optional"
        },
        "schedulerName": {
          "type": "string",
          "title": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.\n+optional"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1Toleration"
          },
          "title": "If specified, the pod's tolerations.\n+optional"
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1HostAlias"
          },
          "title": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.\n+optional\n+patchMergeKey=ip\n+patchStrategy=merge"
        },
        "priorityClassName": {
          "type": "string",
          "title": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\n+optional"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\n+optional"
        },
        "dnsConfig": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodDNSConfig",
          "title": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.\n+optional"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1PodReadinessGate"
          },
          "title": "If specified, all readiness gates will be evaluated for pod readiness.\nA pod is ready when all its containers are ready AND\nall conditions specified in the readiness gates have status equal to \"True\"\nMore info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates\n+optional"
        },
        "runtimeClassName": {
          "type": "string",
          "title": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class\nThis is a beta feature as of Kubernetes v1.14.\n+optional"
        },
        "enableServiceLinks": {
          "type": "boolean",
          "title": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.\n+optional"
        },
        "preemptionPolicy": {
          "type": "string",
          "title": "PreemptionPolicy is the Policy for preempting pods with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset.\nThis field is beta-level, gated by the NonPreemptingPriority feature-gate.\n+optional"
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.\nThis field will be autopopulated at admission time by the RuntimeClass admission controller. If\nthe RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.\nThe RuntimeClass admission controller will reject Pod create requests which have the overhead already\nset. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value\ndefined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md\nThis field is beta-level as of Kubernetes v1.18, and is only honored by servers that enable the PodOverhead\nfeature. +optional"
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1TopologySpreadConstraint"
          },
          "title": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.\n+optional\n+patchMergeKey=topologyKey\n+patchStrategy=merge\n+listType=map\n+listMapKey=topologyKey\n+listMapKey=whenUnsatisfiable"
        },
        "setHostnameAsFQDN": {
          "type": "boolean",
          "title": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).\nIn Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of\nstruct utsname). In Windows containers, this means setting the registry value of hostname for the registry key\nHKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN. If a pod does not have FQDN,\nthis has no effect. Default to false. +optional"
        },
        "os": {
          "$ref": "#/definitions/v1alpha1PodOS",
          "description": "Specifies the OS of the containers in the pod.\nSome pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset:\n-securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset:\n- spec.hostPID\n- spec.hostIPC\n- spec.securityContext.seLinuxOptions\n- spec.securityContext.seccompProfile\n- spec.securityContext.fsGroup\n- spec.securityContext.fsGroupChangePolicy\n- spec.securityContext.sysctls\n- spec.shareProcessNamespace\n- spec.securityContext.runAsUser\n- spec.securityContext.runAsGroup\n- spec.securityContext.supplementalGroups\n- spec.containers[*].securityContext.seLinuxOptions\n- spec.containers[*].securityContext.seccompProfile\n- spec.containers[*].securityContext.capabilities\n- spec.containers[*].securityContext.readOnlyRootFilesystem\n- spec.containers[*].securityContext.privileged\n- spec.containers[*].securityContext.allowPrivilegeEscalation\n- spec.containers[*].securityContext.procMount\n- spec.containers[*].securityContext.runAsUser\n- spec.containers[*].securityContext.runAsGroup\n+optional\nThis is an alpha field and requires the IdentifyPodOS feature"
        }
      }
    },
    "kantioapicorev1alpha1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodSpec",
          "title": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      }
    },
    "kantioapicorev1alpha1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
        },
        "preference": {
          "$ref": "#/definitions/kantioapicorev1alpha1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
    },
    "kantioapicorev1alpha1Probe": {
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n+optional"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/kantioapicorev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/kantioapicorev1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/kantioapicorev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        },
        "grpc": {
          "$ref": "#/definitions/v1alpha1GRPCAction",
          "title": "GRPC specifies an action involving a GRPC port.\nThis is an alpha field and requires enabling GRPCContainerProbe feature gate.\n+featureGate=GRPCContainerProbe\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic."
    },
    "kantioapicorev1alpha1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes, optional for env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        },
        "divisor": {
          "type": "string",
          "title": "Specifies the output format of the exposed resources, defaults to \"1\"\n+optional"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
    },
    "kantioapicorev1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "kantioapicorev1alpha1SELinuxOptions": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User is a SELinux user label that applies to the container.\n+optional"
        },
        "role": {
          "type": "string",
          "title": "Role is a SELinux role label that applies to the container.\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Type is a SELinux type label that applies to the container.\n+optional"
        },
        "level": {
          "type": "string",
          "title": "Level is SELinux level label that applies to the container.\n+optional"
        }
      },
      "title": "SELinuxOptions are the labels to be applied to the container"
    },
    "kantioapicorev1alpha1SeccompProfile": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Localhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.\n+unionDiscriminator",
          "title": "type indicates which kind of seccomp profile will be applied.\nValid options are:"
        },
        "localhostProfile": {
          "type": "string",
          "title": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\".\n+optional"
        }
      },
      "title": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.\n+union"
    },
    "kantioapicorev1alpha1Secret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the Secret cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "Data contains the secret data. Each key must consist of alphanumeric\ncharacters, '-', '_' or '.'. The serialized form of the secret data is a\nbase64 encoded string, representing the arbitrary (possibly non-string)\ndata value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n+optional"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only input field for convenience.\nAll keys and values are merged into the data field on write, overwriting any existing values.\nThe stringData field is never output when reading from the API.\n+k8s:conversion-gen=false\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Used to facilitate programmatic handling of secret data.\nMore info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types\n+optional"
        }
      },
      "description": "Secret holds secret data of a certain type. The total bytes of the values in\nthe Data field must be less than MaxSecretSize bytes."
    },
    "kantioapicorev1alpha1SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Secret to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret must be defined\n+optional"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\n\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "kantioapicorev1alpha1SecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the secret in the pod's namespace to select from."
        },
        "key": {
          "type": "string",
          "description": "The key of the secret to select from.  Must be a valid secret key."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "kantioapicorev1alpha1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kantioapicorev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      }
    },
    "kantioapicorev1alpha1SecurityContext": {
      "type": "object",
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/kantioapicorev1alpha1Capabilities",
          "title": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "privileged": {
          "type": "boolean",
          "title": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/kantioapicorev1alpha1SELinuxOptions",
          "title": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/kantioapicorev1alpha1WindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "title": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "title": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "procMount": {
          "type": "string",
          "title": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/kantioapicorev1alpha1SeccompProfile",
          "title": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence."
    },
    "kantioapicorev1alpha1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "title": "TCPSocketAction describes an action based on opening a socket"
    },
    "kantioapicorev1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.\n+optional"
        },
        "operator": {
          "type": "string",
          "title": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.\n+optional"
        },
        "value": {
          "type": "string",
          "title": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.\n+optional"
        },
        "effect": {
          "type": "string",
          "title": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n+optional"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.\n+optional"
        }
      },
      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
    },
    "kantioapicorev1alpha1TopologySpreadConstraint": {
      "type": "object",
      "properties": {
        "maxSkew": {
          "type": "integer",
          "format": "int32",
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 1/1/0:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|   P   |   P   |       |\n+-------+-------+-------+\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1;\nscheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
        },
        "topologyKey": {
          "type": "string",
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nIt's a required field."
        },
        "whenUnsatisfiable": {
          "type": "string",
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n| P P P |   P   |   P   |\n+-------+-------+-------+\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
        },
        "labelSelector": {
          "$ref": "#/definitions/corev1alpha1LabelSelector",
          "title": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.\n+optional"
        }
      },
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
    },
    "kantioapicorev1alpha1TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of resource being referenced"
        }
      },
      "title": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n+structType=atomic"
    },
    "kantioapicorev1alpha1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Volume's name.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "hostPath": {
          "$ref": "#/definitions/kantioapicorev1alpha1HostPathVolumeSource",
          "title": "HostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write.\n+optional"
        },
        "emptyDir": {
          "$ref": "#/definitions/kantioapicorev1alpha1EmptyDirVolumeSource",
          "title": "EmptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/v1alpha1GCEPersistentDiskVolumeSource",
          "title": "GCEPersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/v1alpha1AWSElasticBlockStoreVolumeSource",
          "title": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        },
        "gitRepo": {
          "$ref": "#/definitions/v1alpha1GitRepoVolumeSource",
          "title": "GitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.\n+optional"
        },
        "secret": {
          "$ref": "#/definitions/kantioapicorev1alpha1SecretVolumeSource",
          "title": "Secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "nfs": {
          "$ref": "#/definitions/v1alpha1NFSVolumeSource",
          "title": "NFS represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        },
        "iscsi": {
          "$ref": "#/definitions/v1alpha1ISCSIVolumeSource",
          "title": "ISCSI represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md\n+optional"
        },
        "glusterfs": {
          "$ref": "#/definitions/v1alpha1GlusterfsVolumeSource",
          "title": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md\n+optional"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/kantioapicorev1alpha1PersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional"
        },
        "rbd": {
          "$ref": "#/definitions/v1alpha1RBDVolumeSource",
          "title": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md\n+optional"
        },
        "flexVolume": {
          "$ref": "#/definitions/v1alpha1FlexVolumeSource",
          "title": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional"
        },
        "cinder": {
          "$ref": "#/definitions/v1alpha1CinderVolumeSource",
          "title": "Cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "cephfs": {
          "$ref": "#/definitions/v1alpha1CephFSVolumeSource",
          "title": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional"
        },
        "flocker": {
          "$ref": "#/definitions/v1alpha1FlockerVolumeSource",
          "title": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control\nservice being running +optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/kantioapicorev1alpha1DownwardAPIVolumeSource",
          "title": "DownwardAPI represents downward API about the pod that should populate this volume\n+optional"
        },
        "fc": {
          "$ref": "#/definitions/v1alpha1FCVolumeSource",
          "title": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional"
        },
        "azureFile": {
          "$ref": "#/definitions/v1alpha1AzureFileVolumeSource",
          "title": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/kantioapicorev1alpha1ConfigMapVolumeSource",
          "title": "ConfigMap represents a configMap that should populate this volume\n+optional"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/v1alpha1VsphereVirtualDiskVolumeSource",
          "title": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional"
        },
        "quobyte": {
          "$ref": "#/definitions/v1alpha1QuobyteVolumeSource",
          "title": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional"
        },
        "azureDisk": {
          "$ref": "#/definitions/v1alpha1AzureDiskVolumeSource",
          "title": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/v1alpha1PhotonPersistentDiskVolumeSource",
          "title": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "projected": {
          "$ref": "#/definitions/v1alpha1ProjectedVolumeSource",
          "title": "Items for all in one resources secrets, configmaps, and downward API"
        },
        "portworxVolume": {
          "$ref": "#/definitions/v1alpha1PortworxVolumeSource",
          "title": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional"
        },
        "scaleIO": {
          "$ref": "#/definitions/v1alpha1ScaleIOVolumeSource",
          "title": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "storageos": {
          "$ref": "#/definitions/v1alpha1StorageOSVolumeSource",
          "title": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "csi": {
          "$ref": "#/definitions/v1alpha1CSIVolumeSource",
          "title": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers\n(Beta feature). +optional"
        },
        "ephemeral": {
          "$ref": "#/definitions/v1alpha1EphemeralVolumeSource",
          "description": "Ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.\n\n+optional"
        }
      }
    },
    "kantioapicorev1alpha1VolumeDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name must match the name of a persistentVolumeClaim in the pod"
        },
        "devicePath": {
          "type": "string",
          "description": "devicePath is the path inside of the container that the device will be mapped to."
        }
      },
      "description": "volumeDevice describes a mapping of a raw block device within a container."
    },
    "kantioapicorev1alpha1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's\nenvironment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount describes a mounting of a Volume within a container."
    },
    "kantioapicorev1alpha1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/kantioapicorev1alpha1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred\nnode(s)"
    },
    "kantioapicorev1alpha1WindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpecName": {
          "type": "string",
          "title": "GMSACredentialSpecName is the name of the GMSA credential spec to use.\n+optional"
        },
        "gmsaCredentialSpec": {
          "type": "string",
          "title": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.\n+optional"
        },
        "runAsUserName": {
          "type": "string",
          "title": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "hostProcess": {
          "type": "boolean",
          "title": "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true.\n+optional"
        }
      },
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
    },
    "kpandaioapicorev1alpha1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the\nsame node, zone, etc. as some other pod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod\nin the same node, zone, etc. as some other pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "kpandaioapicorev1alpha1ConfigMap": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the configuration data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nValues with non-UTF-8 byte sequences must use the BinaryData field.\nThe keys stored in Data must not overlap with the keys in\nthe BinaryData field, this is enforced during validation process.\n+optional"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "BinaryData contains the binary data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range.\nThe keys stored in BinaryData must not overlap with the ones in\nthe Data field, this is enforced during validation process.\nUsing this field will require 1.10+ apiserver and\nkubelet.\n+optional"
        }
      },
      "description": "ConfigMap holds configuration data for pods to consume."
    },
    "kpandaioapicorev1alpha1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "kpandaioapicorev1alpha1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "description": "ConfigMapKeySelector selects a key from a ConfigMap."
    },
    "kpandaioapicorev1alpha1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "kpandaioapicorev1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Container."
        },
        "image": {
          "type": "string",
          "description": "The used image of Container."
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The container command."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workingDir": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Ports"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1EnvFromSource"
          },
          "title": "EnvFromSource represents the source of a set of ConfigMaps"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1EnvVar"
          },
          "description": "EnvVar represents an environment variable present in a Container."
        },
        "resources": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ResourceRequirements",
          "description": "Source represents a source for the value of an EnvVar."
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1VolumeMount"
          },
          "description": "VolumeMount describes a mounting of a Volume within a container.\n\nrepeated VolumeDevice volumeDevices = 11;"
        },
        "livenessProbe": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1Probe",
          "description": "Liveness probe is aimed to help in situarions where fluentd\nsilently hangs for no apparent reasons until manual restart.\nThe idea of this probe is that if fluentd is not queueing or\nflushing chunks for 5 minutes, something is not right. If\nyou want to change the fluentd configuration, reducing amount of\nlogs fluentd collects, consider changing the threshold or turning\nliveness probe off completely."
        },
        "readinessProbe": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1Probe",
          "description": "Readiness updates the cached pod status with the given readiness, and\ntriggers a status update."
        },
        "startupProbe": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1Probe",
          "description": "Startup updates the cached container status with the given startup, and\ntriggers a status update."
        },
        "lifecycle": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1Lifecycle",
          "description": "The life cycle of a Container.\n\nstring terminationMessagePath = 16;\n  string terminationMessagePolicy = 17;"
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Pull image policy."
        },
        "securityContext": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1SecurityContext",
          "description": "SecurityContext holds security attributes.\n\nbool stdin = 29;\n  bool stdinOnce = 30;\n  bool tty = 31;"
        }
      }
    },
    "kpandaioapicorev1alpha1ContainerState": {
      "type": "object",
      "properties": {
        "waiting": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerStateWaiting",
          "description": "ContainerStateWaiting is a waiting state of a container."
        },
        "running": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerStateRunning",
          "description": "ContainerStateRunning indicates a currently running container."
        },
        "terminated": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerStateTerminated",
          "description": "ContainerStateTerminated indicates a container that ran and completed\n(\"stopped\" in other contexts, although a created container is technically\nalso \"stopped\")."
        }
      }
    },
    "kpandaioapicorev1alpha1ContainerStateRunning": {
      "type": "object",
      "properties": {
        "startedAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "ContainerStateRunning indicates a currently running container."
    },
    "kpandaioapicorev1alpha1ContainerStateTerminated": {
      "type": "object",
      "properties": {
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "Container exit code."
        },
        "signal": {
          "type": "integer",
          "format": "int32",
          "description": "Signal defines a signal that can trigger eviction of pods on a node."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "The container terminated information."
        },
        "startedAt": {
          "type": "string",
          "format": "int64",
          "description": "The container created time."
        },
        "finishedAt": {
          "type": "string",
          "format": "int64",
          "description": "The container terminated time."
        }
      },
      "description": "ContainerStateExited indicates a container that ran\nand completed (\"stopped\" in other contexts, although a created container is\ntechnically also \"stopped\")."
    },
    "kpandaioapicorev1alpha1ContainerStateWaiting": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "(brief) reason the container is not yet running.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "Message regarding why the container is not yet running.\n+optional"
        }
      },
      "description": "ContainerStateWaiting represents 'Waiting' container state."
    },
    "kpandaioapicorev1alpha1ContainerStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name.\nCannot be updated."
        },
        "state": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerState",
          "title": "Details about the container's current condition.\n+optional"
        },
        "ready": {
          "type": "boolean",
          "description": "Specifies whether the container has passed its readiness probe."
        },
        "restartCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the container has been restarted, currently based on\nthe number of dead containers that have not yet been removed.\nNote that this is calculated from dead containers. But those containers are\nsubject to garbage collection. This value will get capped at 5 by GC."
        },
        "image": {
          "type": "string",
          "title": "The image the container is running.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "started": {
          "type": "boolean",
          "title": "Specifies whether the container has passed its startup probe.\nInitialized as false, becomes true after startupProbe is considered\nsuccessful. Resets to false when the container is restarted, or if kubelet\nloses state temporarily. Is always true when no startupProbe is defined.\n+optional"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ContainerStatusPhase",
          "description": "Phase represents the phase to search."
        }
      },
      "description": "ContainerStatus represents the container status."
    },
    "kpandaioapicorev1alpha1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must\nnot be absolute or contain the '..' path. Must be utf-8 encoded. The first\nitem of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and\nnamespace are supported. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently\nsupported. +optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal\nvalue between 0000 and 0777 or a decimal value between 0 and 511. YAML\naccepts both octal and decimal values, JSON requires decimal values for\nmode bits. If not specified, the volume defaultMode will be used. This\nmight be in conflict with other options that affect the file mode, like\nfsGroup, and the result can be other mode bits set. +optional"
        }
      },
      "description": "DownwardAPIVolumeFile represents information to create the file containing\nthe pod field."
    },
    "kpandaioapicorev1alpha1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "DefaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "kpandaioapicorev1alpha1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value\nbetween the SizeLimit specified here and the sum of memory limits of all\ncontainers in a pod. The default is nil which means that the limit is\nundefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "kpandaioapicorev1alpha1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ConfigMapEnvSource",
          "title": "The ConfigMap to select from.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1SecretEnvSource",
          "title": "The Secret to select from.\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "kpandaioapicorev1alpha1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of EnvVar."
        },
        "value": {
          "type": "string",
          "description": "The value of EnvVar."
        },
        "valueFrom": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1EnvVarSource",
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key\nexists in multiple sources, the value associated with the last source will\ntake precedence. Values defined by an Env with a duplicate key will take\nprecedence. Cannot be updated.\","
        }
      },
      "description": "Environment variable information."
    },
    "kpandaioapicorev1alpha1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace,\n`metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName,\nspec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,\nrequests.memory and requests.ephemeral-storage) are currently supported.\n+optional"
        },
        "ConfigMapKeyRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar.\nOnly one of its fields may be set."
    },
    "kpandaioapicorev1alpha1EphemeralContainer": {
      "type": "object",
      "properties": {
        "ephemeralContainerCommon": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1Container",
          "description": "Ephemeral containers have all of the fields of Container, plus additional fields\nspecific to ephemeral containers. Fields in common with Container are in the\nfollowing inlined struct so than an EphemeralContainer may easily be converted\nto a Container."
        },
        "targetContainerName": {
          "type": "string",
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined."
        }
      },
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation."
    },
    "kpandaioapicorev1alpha1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "kpandaioapicorev1alpha1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "string",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "kpandaioapicorev1alpha1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path."
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\n+optional"
        }
      },
      "description": "HostPathVolumeSource Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "kpandaioapicorev1alpha1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on this file, should be a value between 0\nand 0777. If not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "KeyToPath maps a string key to a path within a volume."
    },
    "kpandaioapicorev1alpha1Lifecycle": {
      "type": "object",
      "properties": {
        "PostStart": {
          "$ref": "#/definitions/v1alpha1Handler",
          "title": "PostStart is called immediately after a container is created. If the\nhandler fails, the container is terminated and restarted according to its\nrestart policy. Other management of the container blocks until the hook\ncompletes. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/v1alpha1Handler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown\nbegins before the PreStop hook is executed. Regardless of the outcome of\nthe handler, the container will eventually terminate within the Pod's\ntermination grace period (unless delayed by finalizers). Other management\nof the container blocks until the hook completes or until the termination\ngrace period is reached. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in\nresponse to container lifecycle events. For the PostStart and PreStop\nlifecycle handlers, management of the container blocks until the action is\ncomplete, unless the container process fails, in which case the handler is\naborted."
    },
    "kpandaioapicorev1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions;\nthe node(s) with the highest sum are the most preferred. +optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules.\n\nIf the affinity requirements specified by this field are not met at\n scheduling time, the pod will not be scheduled onto the node.\n If the affinity requirements specified by this field cease to be met\n at some point during pod execution (e.g. due to an update), the system\n will try to eventually evict the pod from its node.\n +optional\n RequiredDuringSchedulingRequiredDuringExecution *NodeSelector\n `json:\"requiredDuringSchedulingRequiredDuringExecution,omitempty\"`"
    },
    "kpandaioapicorev1alpha1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1NodeSelectorTerm"
          }
        }
      },
      "title": "A node selector represents the union of the results of one or more label\nqueries over a set of nodes; that is, it represents the OR of the selectors\nrepresented by the node selector terms. +structType=atomic"
    },
    "kpandaioapicorev1alpha1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. If the operator is Gt or Lt,\nthe values array must have a single element, which will be interpreted as\nan integer. This array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an\noperator that relates the key and values."
    },
    "kpandaioapicorev1alpha1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "kpandaioapicorev1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1NodeStatusStatus",
          "description": "Status represents the current information/status of node."
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeAddress"
          },
          "description": "IP Address reachable to the node."
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeStatusRole"
          },
          "description": "The roles of current node."
        },
        "cpuCapacity": {
          "type": "string",
          "format": "int64",
          "description": "CpuCapacity is the total cpu of the node. Unit: m."
        },
        "cpuAllocated": {
          "type": "number",
          "format": "double",
          "description": "CpuAllocated is the total pod cpu request on the node. Unit: %."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "CpuUsage is the cpu usage on the node. Unit: %."
        },
        "memoryCapacity": {
          "type": "string",
          "format": "int64",
          "description": "MemoryCapacity is the total memory of the node. Unit: byte."
        },
        "memoryAllocated": {
          "type": "number",
          "format": "double",
          "description": "MemoryAllocated is the total pod memory request on the node. Unit: %."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "MemoryUsage is the memory usage on the node. Unit: %."
        },
        "systemInfo": {
          "$ref": "#/definitions/v1alpha1NodeSystemInfo",
          "description": "Set of ids/uuids to uniquely identify the node."
        },
        "allowedPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "AllowedPodNumber is the max pod number allowed on the node."
        },
        "podAllocated": {
          "type": "integer",
          "format": "int32",
          "description": "PodAllocated is the pod number already allocated on the node."
        },
        "readyPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "ReadyPodNumber is the ready pod number on the node."
        },
        "storageCapacity": {
          "type": "string",
          "format": "int64",
          "description": "StorageCapacity is the total storage of the node. Unit: byte."
        },
        "storageAllocated": {
          "type": "string",
          "format": "int64",
          "description": "StorageAllocated is the total pod storage request on the node. Unit: byte."
        },
        "storageUsage": {
          "type": "number",
          "format": "double",
          "description": "StorageUsage is the usage of storage space on the node. Unit: %."
        },
        "storageDriver": {
          "type": "string",
          "description": "StorageDriver is the docker storage driver (e.g. overlay2)."
        },
        "gpuTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_total is gpu total number."
        },
        "gpuAllocated": {
          "type": "string",
          "format": "int64",
          "description": "gpu_allocated is gpu allocated number."
        },
        "gpuMemoryTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_memory_total is all gpu memory number with node. Unit: byte."
        },
        "gpuMemoryAllocated": {
          "type": "string",
          "format": "int64",
          "title": "gpu_memory_allocated is allocated gpu memory number with node. Unit: byte"
        },
        "gpuCoreUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_core_usage is the usage rate of gpu"
        },
        "gpuMemoryUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_memory_usage is the usage rate of gpu video memory"
        }
      },
      "description": "NodeStatus is information about the current status of a node."
    },
    "kpandaioapicorev1alpha1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to\n\"v1\". +optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "description": "ObjectFieldSelector selects an APIVersioned field of an object."
    },
    "kpandaioapicorev1alpha1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as\nthe pod using this volume. More info:\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same\nnamespace. This volume finds the bound PV and mounts that volume for the pod.\nA PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "kpandaioapicorev1alpha1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding\npodAffinityTerm; the node(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "kpandaioapicorev1alpha1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/apitypesLabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies\nto. The term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's\nnamespace\" +optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity)\nwith the pods matching the labelSelector in the specified namespaces, where\nco-located is defined as running on a node whose value of the label with\nkey topologyKey matches that of any node on which any of the selected pods\nis running. Empty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/apitypesLabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's\nnamespace\". An empty selector ({}) matches all namespaces. This field is\nbeta-level and is only honored when PodAffinityNamespaceSelector feature is\nenabled. +optional"
        }
      },
      "title": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
    },
    "kpandaioapicorev1alpha1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1Volume"
          }
        },
        "initContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1Container"
          },
          "title": "init containers"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1Container"
          },
          "description": "Containers name."
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1EphemeralContainer"
          },
          "description": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource."
        },
        "restartPolicy": {
          "type": "string"
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node.\nIf it is non-empty, the scheduler simply schedules this pod onto that node,\nassuming that it fits resource requirements."
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "affinity": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1Affinity",
          "title": "bool hostPID = 15;\nbool hostIPC = 16;\nbool shareProcessNamespace = 17;\nPodSecurityContext SecurityContext = 18;\nrepeated LocalObjectReference imagePullSecrets = 19;\nstring hostname = 20;\nstring subdomain = 21;"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1Toleration"
          },
          "title": "string schedulerName = 23;"
        }
      },
      "description": "PodSpec describes the attributes that a pod is created with."
    },
    "kpandaioapicorev1alpha1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodSpec",
          "description": "Spec describes the attributes that a pod is created with."
        }
      },
      "description": "template is the object that describes the pod that will be created if\ninsufficient replicas are detected. Each pod stamped out by the StatefulSet\nwill fulfill this Template, but have a unique identity from the rest\nof the StatefulSet."
    },
    "kpandaioapicorev1alpha1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the\nrange 1-100."
        },
        "preference": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects\n(i.e. is also a no-op)."
    },
    "kpandaioapicorev1alpha1Probe": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after\nhaving succeeded. Defaults to 3. Minimum value is 1. +optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful\nafter having failed. Defaults to 1. Must be 1 for liveness and startup.\nMinimum value is 1. +optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes\nare initiated. More info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon\nprobe failure. The grace period is the duration in seconds after the\nprocesses running in the pod are sent a termination signal and the time\nwhen the processes are forcibly halted with a kill signal. Set this value\nlonger than the expected cleanup time for your process. If this value is\nnil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop\nimmediately via the kill signal (no opportunity to shut down). This is a\nbeta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1HTTPGetAction",
          "title": "handler\nHTTPGet specifies the http request to perform.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
    },
    "kpandaioapicorev1alpha1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes,\nfor env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their\noutput format"
    },
    "kpandaioapicorev1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value. More\ninfo:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "kpandaioapicorev1alpha1Secret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the Secret cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the secret data. Each key must consist of alphanumeric\ncharacters, '-', '_' or '.'. The serialized form of the secret data is a\nbase64 encoded string, representing the arbitrary (possibly non-string)\ndata value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n+optional"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only input field for convenience.\nAll keys and values are merged into the data field on write, overwriting any existing values.\nThe stringData field is never output when reading from the API.\n+k8s:conversion-gen=false\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Used to facilitate programmatic handling of secret data.\n+optional"
        }
      }
    },
    "kpandaioapicorev1alpha1SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of SecretEnvSource."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "kpandaioapicorev1alpha1SecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Secret."
        },
        "key": {
          "type": "string",
          "description": "Required. The secret key to be applied to a pod."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "SecretKeySelector selects a key of a Secret."
    },
    "kpandaioapicorev1alpha1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
    },
    "kpandaioapicorev1alpha1SecurityContext": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "title": "Capabilities capabilities = 1;"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "description": "int64 runAsGroup = 6;\n bool runAsNonRoot = 7;\n bool readOnlyRootFilesystem = 8;\n bool allowPrivilegeEscalation = 9;\n string procMount = 10;\n SeccompProfile seccompProfile = 11;",
          "title": "SELinuxOptions seLinuxOptions = 3;\nWindowsSecurityContextOptions WindowsOptions = 4;"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "kpandaioapicorev1alpha1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "description": "TCPSocketAction describes an action based on opening a socket."
    },
    "kpandaioapicorev1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values."
        },
        "value": {
          "type": "string",
          "description": "An array of string values."
        },
        "effect": {
          "type": "string",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "int64",
          "description": "TolerationSeconds represents the period of time the toleration (which must\n be of effect NoExecute, otherwise this field is ignored) tolerates the\n taint. By default, it is not set, which means tolerate the taint forever\n (do not evict). Zero and negative values will be treated as 0 (evict\n immediately) by the system."
        }
      },
      "description": "Taint tolerations to static pods,\nso they are not evicted when there are node problems."
    },
    "kpandaioapicorev1alpha1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hostPath": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1HostPathVolumeSource",
          "description": "HostPathVolumeSource represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux\nrelabeling."
        },
        "emptyDir": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1EmptyDirVolumeSource",
          "description": "EmptyDirVolumeSource represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux\nrelabeling."
        },
        "secret": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1SecretVolumeSource",
          "description": "SecretVolumeSource adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names. Secret\nvolumes support ownership management and SELinux relabeling."
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace"
        },
        "downwardAPI": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1DownwardAPIVolumeSource",
          "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
        },
        "configMap": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ConfigMapVolumeSource",
          "description": "ConfigMapVolumeSource adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling.\n\nGCEPersistentDiskVolumeSource gcePersistentDisk = 4;\n  AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 5;\n  GitRepoVolumeSource gitRepo = 6;\n  NFSVolumeSource nfs = 8;\n  ISCSIVolumeSource iscsi = 9;\n  GlusterfsVolumeSource glusterfs = 10;\n  RBDVolumeSource rbd = 12;\n  FlexVolumeSource flexVolume = 13;\n  CinderVolumeSource cinder = 14;\n  CephFSVolumeSource cephfs = 15;\n  FlockerVolumeSource flocker = 16;\n  FCVolumeSource fc = 18;\n  AzureFileVolumeSource azureFile = 19;\n  VsphereVirtualDiskVolumeSource vsphereVolume = 21;\n  QuobyteVolumeSource quobyte = 22;\n  AzureDiskVolumeSource azureDisk = 23;\n  ProjectedVolumeSource projected = 24;\n  PortworxVolumeSource portworxVolume = 25;\n  ScaleIOVolumeSource scaleIO = 26;\n  StorageOSVolumeSource storageos = 27;\n  CSIVolumeSource csi = 28;\n  EphemeralVolumeSource ephemeral = 29;"
        }
      },
      "description": "Volume represents a named volume in a pod that may be accessed by any\ncontainer in the pod."
    },
    "kpandaioapicorev1alpha1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Full path to the mount volume path."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be\nmounted. Behaves similarly to SubPath but environment variable references\n$(VAR_NAME) are expanded using the container's environment. Defaults to \"\"\n(volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount for this container."
    },
    "kpandaioapicorev1alpha1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added\nper-node to find the most preferred node(s)"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "typesCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string",
          "title": "Last time the condition transitioned from one status to another.\n+optional"
        },
        "lastUpdateTime": {
          "type": "string",
          "title": "Last time we got an update on a given condition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "type": {
          "type": "string",
          "description": "Type of condition."
        }
      },
      "description": "Condition describes the state of a referent at a certain point."
    },
    "typesConditionStatus": {
      "type": "string",
      "enum": [
        "CONDITION_STATUS_UNSPECIFIED",
        "True",
        "False",
        "Unknown"
      ],
      "default": "CONDITION_STATUS_UNSPECIFIED",
      "description": "These are valid condition statuses.\n\n - CONDITION_STATUS_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - True: True means a resource is in the condition.\n - False: False means a resource is not in the condition.\n - Unknown: Unknown means kubernetes can't decide if a resource is in the condition or\nnot."
    },
    "typesRollingUpdate": {
      "type": "object",
      "properties": {
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods that can be scheduled above the desired number\nof pods. Value can be an absolute number (ex: 5) or a percentage of desired\npods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number\nis calculated from percentage by rounding up. Defaults to 25%. Example:\nwhen this is set to 30%, the new ReplicaSet can be scaled up immediately\nwhen the rolling update starts, such that the total number of old and new\npods do not exceed 130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods\nrunning at any time during the update is at most 130% of desired pods.\n+optional"
        },
        "maxUnavailable": {
          "type": "string",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods\n(ex: 10%). Absolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to\n70% of desired pods immediately when the rolling update starts. Once new\npods are ready, old ReplicaSet can be scaled down further, followed by\nscaling up the new ReplicaSet, ensuring that the total number of pods\navailable at all times during the update is at least 70% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "typesUpdateStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/typesRollingUpdate",
          "title": "RollingUpdate is used to communicate parameters when Type is\nRollingUpdateType. +optional"
        },
        "type": {
          "type": "string",
          "title": "Type indicates the type of the UpdateStrategy.\n+optional"
        }
      },
      "description": "UpdateStrategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
    },
    "typesWorkloadState": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATE_UNSPECIFIED",
        "Running",
        "Deleting",
        "Not_Ready",
        "Stopped",
        "Waiting"
      ],
      "default": "WORKLOAD_STATE_UNSPECIFIED",
      "description": "- WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
      "title": "WorkloadState describes the state of\nworkload(deployments/daemonsets/statefulsets)"
    },
    "v1alpha1AWSElasticBlockStoreVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "title": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\".\nIf omitted, the default is \"false\".\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        }
      }
    },
    "v1alpha1AvailableResource": {
      "type": "object",
      "properties": {
        "available": {
          "type": "string",
          "format": "int64",
          "title": "if error_message is not null, available is -1"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1alpha1AzureDiskVolumeSource": {
      "type": "object",
      "properties": {
        "diskName": {
          "type": "string",
          "title": "The Name of the data disk in the blob storage"
        },
        "diskURI": {
          "type": "string",
          "title": "The URI the data disk in the blob storage"
        },
        "cachingMode": {
          "type": "string",
          "title": "Host Caching mode: None, Read Only, Read Write.\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account\nManaged: azure managed data disk (only in managed availability set). defaults to shared"
        }
      },
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
    },
    "v1alpha1AzureFileVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "the name of secret that contains Azure Storage Account Name and Key"
        },
        "shareName": {
          "type": "string",
          "title": "Share Name"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
    },
    "v1alpha1BatchQueryRangeRequestParam": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64",
          "title": "Time of start of query"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "title": "Time of end of query"
        },
        "step": {
          "type": "number",
          "format": "double",
          "title": "Interval of query"
        }
      },
      "title": "The parameters of batch queryRangeRequest"
    },
    "v1alpha1BatchQueryRangeResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1PrometheusQueryRangeResult",
          "title": "The dat of prometheus query range result"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1requestStatus",
          "title": "The request status"
        },
        "errorMessage": {
          "type": "string",
          "title": "The error message returned"
        }
      },
      "title": "The result of batch query range"
    },
    "v1alpha1BatchResourceResponse": {
      "type": "object",
      "properties": {
        "successNum": {
          "type": "integer",
          "format": "int32",
          "description": "SuccessNum represents success record."
        },
        "failNum": {
          "type": "integer",
          "format": "int32",
          "description": "FailNum represents fail record."
        },
        "taskResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1TaskResultSpec"
          },
          "title": "TaskResultSpec represents the task result data"
        }
      }
    },
    "v1alpha1CSIVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string",
          "description": "Driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Specifies a read-only configuration for the volume.\nDefaults to false (read/write).\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.\n+optional"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "VolumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.\n+optional"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "NodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.\n+optional"
        }
      },
      "title": "Represents a source location of a volume to mount, managed by an external CSI driver"
    },
    "v1alpha1CephFSVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        },
        "path": {
          "type": "string",
          "title": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional"
        },
        "user": {
          "type": "string",
          "title": "Optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "secretFile": {
          "type": "string",
          "title": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        }
      },
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod\nCephfs volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1CinderVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "volume id used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "Optional: points to a secret object containing parameters used to connect\nto OpenStack.\n+optional"
        }
      },
      "description": "Represents a cinder volume resource in Openstack.\nA Cinder volume must exist before mounting to a container.\nThe volume must also be in the same region as the kubelet.\nCinder volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1CloudShell": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1CloudShellSpec",
          "description": "CloudShellSpec defines the desired state of CloudShell."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1CloudShellStatus",
          "description": "CloudShellStatus defines the observed state of CloudShell."
        }
      },
      "description": "CloudShell is the Schema for the cloudshells API."
    },
    "v1alpha1CloudShellSpec": {
      "type": "object",
      "properties": {
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalSecretReference",
          "title": "SecretRef represents the secret contains mandatory credentials to access the target cluster.\nThe secret should hold credentials as follows:\n- secret.data.token\n- secret.data.caBundle\nThe field is alpha phase, please open the featuregate AllowSecretStoreKubeconfig to use it.\n+optional"
        },
        "once": {
          "type": "boolean",
          "title": "accept only one client and exit on disconnection"
        },
        "commandAction": {
          "type": "string",
          "description": "command action specified a initialized command to cloudshell server."
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "description": "ttl specified a period time that the cloudshell server pod is\nstop. if not to set, default 500s."
        },
        "cleanup": {
          "type": "boolean",
          "description": "cleanup specified whether to delete cloudshell resources when\ncorresponding job status is completed."
        }
      },
      "description": "CloudShellSpec defines the desired state of CloudShell."
    },
    "v1alpha1CloudShellStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "type": "string",
          "description": "phase specified status of cloudshell server."
        },
        "accessUrl": {
          "type": "string",
          "description": "access url is be set to expose cloudshell server."
        }
      },
      "title": "CloudShellStatus defines the observed state of CloudShell.enum"
    },
    "v1alpha1CloudShellType": {
      "type": "string",
      "enum": [
        "CLOUD_SHELL_TYPE_UNSPECIFIED",
        "bash",
        "exec",
        "logs",
        "upload",
        "download"
      ],
      "default": "CLOUD_SHELL_TYPE_UNSPECIFIED",
      "description": "CloudShellType defines the cloudshell command type (exec, logs, bash)."
    },
    "v1alpha1ClusterInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "edgeUnitInstalled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1ConfigMapProjection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode."
    },
    "v1alpha1ContainerPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        },
        "hostIP": {
          "type": "string",
          "title": "What host IP to bind the external port to.\n+optional"
        }
      },
      "description": "ContainerPort represents a network port in a single container."
    },
    "v1alpha1ContainerStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Waiting",
        "Running",
        "Terminated"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": "Phase represents the phase of the container.\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Waiting: Waiting is a waiting state of a pod.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Terminated: Terminated indicates a pod that ran and completed\n(\"stopped\" in other contexts, although a created container is technically\nalso \"stopped\")."
    },
    "v1alpha1CreateCloudShellRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1CloudShellType",
          "description": "type specified the cloudshell command type (exec, logs, bash)."
        },
        "cluster": {
          "type": "string",
          "description": "cluster specified the cluster name for cloudshell."
        },
        "namespace": {
          "type": "string",
          "description": "namespace defines the namespace of the specified pod."
        },
        "podName": {
          "type": "string",
          "description": "pod_name defines the name of the specified pod."
        },
        "filePath": {
          "type": "string",
          "description": "file_path defines the file path."
        },
        "container": {
          "type": "string",
          "description": "container defines which container or init container to create cloud shell."
        },
        "logCount": {
          "type": "integer",
          "format": "int32",
          "description": "log_count defines the count of display logs."
        },
        "data": {
          "$ref": "#/definitions/v1alpha1CloudShell",
          "description": "cloud_shell defines the data of cloud shell."
        }
      },
      "title": "CreateIngressResponse the response of create cluster ingresses"
    },
    "v1alpha1CreateConfigMapResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ConfigMap YAML details"
        }
      }
    },
    "v1alpha1CreateCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateCustomResourceResponse represents response of creating one\nCustomResource of namespaced scope"
    },
    "v1alpha1CreateSecretResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the Secret YAML details"
        }
      },
      "description": "It returns the created Secret data information."
    },
    "v1alpha1CreateServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "Data is the Service YAML details"
        }
      },
      "description": "It returns the created Service data information."
    },
    "v1alpha1DataSpec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha1DeploymentCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of deployment condition."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastUpdateTime": {
          "type": "string",
          "description": "The last time this condition was updated."
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition."
        }
      }
    },
    "v1alpha1DeploymentStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.\n+optional"
        },
        "rollingUpdate": {
          "$ref": "#/definitions/v1alpha1RollingUpdateDeployment",
          "title": "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be.\n+optional"
        }
      },
      "description": "DeploymentStrategy describes how to replace existing pods with new ones."
    },
    "v1alpha1DownwardAPIProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of DownwardAPIVolume file\n+optional"
        }
      },
      "description": "Represents downward API info for projecting into a projected volume.\nNote that this is identical to a downwardAPI volume source without the default\nmode."
    },
    "v1alpha1EphemeralContainerCommon": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ephemeral container specified as a DNS_LABEL.\nThis name must be unique among all containers, init containers and ephemeral containers."
        },
        "image": {
          "type": "string",
          "title": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ContainerPort"
          },
          "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements",
          "title": "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources\nalready allocated to the pod.\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/v1alpha1Lifecycle",
          "title": "Lifecycle is not allowed for ephemeral containers.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/v1alpha1SecurityContext",
          "title": "Optional: SecurityContext defines the security options the ephemeral container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "EphemeralContainerCommon is a copy of all fields in Container to be inlined in\nEphemeralContainer. This separate type allows easy conversion from EphemeralContainer\nto Container and allows separate documentation for the fields of EphemeralContainer.\nWhen a new field is added to Container it must be added here as well."
    },
    "v1alpha1EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimTemplate",
          "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil."
        }
      },
      "description": "Represents an ephemeral volume that is handled by a normal storage driver."
    },
    "v1alpha1Event": {
      "type": "object",
      "properties": {
        "involvedObject": {
          "$ref": "#/definitions/v1alpha1ObjectReference",
          "description": "The object that this event is about."
        },
        "reason": {
          "type": "string",
          "description": "reason is why the action was taken. It is human-readable.\nThis field cannot be empty for new Events and it can have at most 128\ncharacters."
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation."
        },
        "source": {
          "$ref": "#/definitions/v1alpha1EventSource",
          "description": "The component reporting this event. Should be a short machine\nunderstandable string."
        },
        "lastTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the most recent occurrence of this event was recorded."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1EventType",
          "description": "Type of this event (Normal, Warning), new types could be added in the\nfuture."
        },
        "firstTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Event is a report of an event somewhere in the cluster.  Events\nhave a limited retention time and triggers and messages may evolve\nwith time.  Event consumers should not rely on the timing of an event\nwith a given Reason reflecting a consistent underlying trigger, or the\ncontinued existence of events with that Reason.  Events should be\ntreated as informative, best-effort, supplemental data."
    },
    "v1alpha1EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "title": "Component from which the event is generated.\n+optional"
        },
        "host": {
          "type": "string",
          "title": "Node name on which the event is generated.\n+optional"
        }
      },
      "description": "EventSource contains information for an event."
    },
    "v1alpha1EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "Normal",
        "Warning"
      ],
      "default": "EVENT_TYPE_UNSPECIFIED",
      "description": "Type of event (Normal, Warning), new types could be added in the\nfuture.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type."
    },
    "v1alpha1FCVolumeSource": {
      "type": "object",
      "properties": {
        "targetWWNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional: FC target worldwide names (WWNs)\n+optional"
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: FC target lun number\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "wwids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional"
        }
      },
      "description": "Represents a Fibre Channel volume.\nFibre Channel volumes can only be mounted as read/write once.\nFibre Channel volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1FilterPodStatus": {
      "type": "string",
      "enum": [
        "FILTER_POD_STATUS_UNSPECIFIED",
        "FILTER_POD_STATUS_RUNNING",
        "FILTER_POD_STATUS_ERROR",
        "FILTER_POD_STATUS_COMPLETED",
        "FILTER_POD_STATUS_WAITING"
      ],
      "default": "FILTER_POD_STATUS_UNSPECIFIED"
    },
    "v1alpha1FlexVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string",
          "description": "Driver is the name of the driver to use for this volume."
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "Optional: SecretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional: Extra command options if any.\n+optional"
        }
      },
      "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
    },
    "v1alpha1FlockerVolumeSource": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string",
          "title": "Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated\n+optional"
        },
        "datasetUUID": {
          "type": "string",
          "title": "UUID of the dataset. This is unique identifier of a Flocker dataset\n+optional"
        }
      },
      "description": "Represents a Flocker volume mounted by the Flocker agent.\nOne and only one of datasetName and datasetUUID should be set.\nFlocker volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1GCEPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "pdName": {
          "type": "string",
          "title": "Unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "title": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        }
      }
    },
    "v1alpha1GPUResourceSetting": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "gpu workload type resources key"
        },
        "alias": {
          "type": "string",
          "title": "gpu workload type resources alias"
        },
        "isAllocatable": {
          "type": "boolean",
          "title": "Resource quota can be allocated"
        },
        "description": {
          "type": "string",
          "title": "gpu workload type resources description"
        },
        "aliasZh": {
          "type": "string",
          "title": "gpu workload type resources zh alias"
        },
        "range": {
          "$ref": "#/definitions/v1alpha1ResourceRange",
          "title": "gpu resource range"
        },
        "available": {
          "$ref": "#/definitions/v1alpha1AvailableResource",
          "title": "available gpu resource number\nif we don't need it\nwill return nil"
        }
      }
    },
    "v1alpha1GPUSetting": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type is gpu card type"
        },
        "alias": {
          "type": "string",
          "title": "alias is gpu card alias"
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1GPUResourceSetting"
          },
          "title": "gpu card resource setting"
        },
        "resourceTemplate": {
          "$ref": "#/definitions/v1alpha1GPUResourceSetting",
          "title": "when is_dynamic is true, user setting resource template"
        },
        "isDynamic": {
          "type": "boolean",
          "title": "is_dynamic is check gpu resource whether dynamic, eg: nvidia.com/mig-1c.10gb"
        }
      }
    },
    "v1alpha1GRPCAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535."
        },
        "service": {
          "type": "string",
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.\n+optional\n+default=\"\""
        }
      }
    },
    "v1alpha1GetCustomResourceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the CustomResource YAML details"
        }
      },
      "title": "GetCustomResourceJSONResponse represents response of get one\nCustomResource'json of namespaced scope"
    },
    "v1alpha1GetFirstControlPlaneNodeIPResponse": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetGVRResponse": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "description": "Group represents the API group name this GVR belongs to."
        },
        "version": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Version represents the API version this GVR belongs to."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name this GVR belongs to."
        }
      }
    },
    "v1alpha1GetNodeJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the node YAML details."
        }
      },
      "description": "GetNodeJSONResponse returns a node's json."
    },
    "v1alpha1GetServiceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the Service YAML details."
        }
      },
      "description": "It returns Service data information in json format."
    },
    "v1alpha1GitRepoVolumeSource": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "title": "Repository URL"
        },
        "revision": {
          "type": "string",
          "title": "Commit hash for the specified revision.\n+optional"
        },
        "directory": {
          "type": "string",
          "title": "Target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional"
        }
      }
    },
    "v1alpha1GlusterfsVolumeSource": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "string",
          "title": "EndpointsName is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        },
        "path": {
          "type": "string",
          "title": "Path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n+optional"
        }
      },
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod.\nGlusterfs volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The header field name"
        },
        "value": {
          "type": "string",
          "title": "The header field value"
        }
      },
      "title": "HTTPHeader describes a custom header to be used in HTTP probes"
    },
    "v1alpha1Handler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "TCPSocket": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      }
    },
    "v1alpha1HelmRepo": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1RepoSpec",
          "description": "RepoSpec describes how the repository execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RepoStatus",
          "description": "RepoStatus contains the repository status."
        }
      }
    },
    "v1alpha1ISCSIVolumeSource": {
      "type": "object",
      "properties": {
        "targetPortal": {
          "type": "string",
          "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
        },
        "iqn": {
          "type": "string",
          "description": "Target iSCSI Qualified Name."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "iSCSI Target Lun number."
        },
        "iscsiInterface": {
          "type": "string",
          "title": "iSCSI Interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional"
        },
        "chapAuthDiscovery": {
          "type": "boolean",
          "title": "whether support iSCSI Discovery CHAP authentication\n+optional"
        },
        "chapAuthSession": {
          "type": "boolean",
          "title": "whether support iSCSI Session CHAP authentication\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "CHAP Secret for iSCSI target and initiator authentication\n+optional"
        },
        "initiatorName": {
          "type": "string",
          "title": "Custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection.\n+optional"
        }
      }
    },
    "v1alpha1LifecycleHandler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/v1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/v1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/v1alpha1TCPSocketAction",
          "title": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.\n+optional"
        }
      },
      "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle\nhook. One and only one of the fields, except TCPSocket must be specified."
    },
    "v1alpha1ListClusterConfigMapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1ConfigMap"
          },
          "title": "The data is the ConfigMap YAML details"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "the list of Cluster ConfigMaps."
    },
    "v1alpha1ListClusterSecretsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1Secret"
          },
          "description": "Secret name."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Cluster Secrets information."
    },
    "v1alpha1ListClusterServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Service"
          },
          "description": "Items is the list of services."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "description": "List of cluster services."
    },
    "v1alpha1ListConfigMapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1ConfigMap"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListEventsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet",
        "Pod",
        "Service",
        "Ingress",
        "Job",
        "CronJob",
        "HorizontalPodAutoscaler",
        "ReplicaSet",
        "CronHPA",
        "PersistentVolumeClaim",
        "GroupVersionResource"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Deployment: ListEvents by deployment.\n - StatefulSet: ListEvents by statefulSet.\n - DaemonSet: ListEvents by daemonSet.\n - Pod: ListEvents by pod.\n - Service: ListEvents by service.\n - Ingress: ListEvents by ingress.\n - Job: ListEvents by job.\n - CronJob: ListEvents by cronJob.\n - HorizontalPodAutoscaler: ListEvents by HorizontalPodAutoscaler.\n - ReplicaSet: ListEvents by replicaset.\n - CronHPA: ListEvents by CronHPA.\n - PersistentVolumeClaim: ListEvents by PersistentVolumeClaim.\n - GroupVersionResource: ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,\nyou must specify the value of group version resource."
    },
    "v1alpha1ListEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Event"
          },
          "title": "Data response of the workload's event"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListEventsByWorkloadNameResponse the response of listEvents by workload name"
    },
    "v1alpha1ListFilterNodesByNodeGroupRequestNodePhase": {
      "type": "string",
      "enum": [
        "NODE_PHASE_UNSPECIFIED",
        "Ready",
        "Not_Ready",
        "Unknown"
      ],
      "default": "NODE_PHASE_UNSPECIFIED",
      "description": "Phase includes Ready, NotReady, and Unknown.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown."
    },
    "v1alpha1ListFilterNodesByNodeGroupRequestRole": {
      "type": "string",
      "enum": [
        "NODE_ROLE_UNSPECIFIED",
        "CONTROL_PLANE",
        "WORKER"
      ],
      "default": "NODE_ROLE_UNSPECIFIED",
      "description": "Role includes control-plane and worker.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload."
    },
    "v1alpha1ListGPUSettingResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1GPUSetting"
          },
          "description": "The plugins in the specific cluster."
        }
      }
    },
    "v1alpha1ListHelmReposResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HelmRepo"
          },
          "description": "HelmRepo A list of repo sets."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListNodeGroupResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeGroup"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListNodesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Node"
          },
          "description": "Node name."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Nodes information."
    },
    "v1alpha1ListPodsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet",
        "Service",
        "Job",
        "CronJob",
        "ReplicaSet",
        "NetworkPolicy"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - Service: Service to expose an application running on a set of Pods.\n - Job: Job is used to express a one-time task.\n - CronJob: CronJob runs repeatedly according to its time schedule.\n - ReplicaSet: ReplicaSet is the workload API object used to manage pods\n - NetworkPolicy: NetworkPolicy uses podSelector to select pods."
    },
    "v1alpha1ListPodsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Pod"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of pod information."
    },
    "v1alpha1ListReplicaSetsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment"
      ],
      "default": "KIND_UNSPECIFIED"
    },
    "v1alpha1ListReplicaSetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ReplicaSet"
          },
          "description": "data replicaSet ensures that a specified number of pod replicas are running\nat any given time."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListReplicaSetsByDeploymentResponse the response of list replicaSets by\ndeployment name"
    },
    "v1alpha1ListRuleEndpointResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RuleEndpoint"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListRuleResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Rule"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListSecretsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1Secret"
          },
          "description": "Secret name."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Secrets data details."
    },
    "v1alpha1ListServicesRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod."
    },
    "v1alpha1ListServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Service"
          },
          "description": "The data field is the service YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "The Service list for the given namespace and name if it exists in the\ncluster."
    },
    "v1alpha1ListWorkspacesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WorkspaceInfo"
          }
        }
      }
    },
    "v1alpha1LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "title": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PortStatus"
          },
          "title": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it"
        }
      }
    },
    "v1alpha1LoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LoadBalancerIngress"
          },
          "description": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points."
        }
      },
      "description": "LoadBalancerStatus represents the status of a load-balancer."
    },
    "v1alpha1LocalSecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        }
      },
      "description": "LocalSecretReference is a reference to a secret within the enclosing\nnamespace."
    },
    "v1alpha1MetricRangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryRangeResult"
          },
          "title": "The metric range data"
        }
      },
      "title": "MetricRangeResponse represents the response of metric range"
    },
    "v1alpha1NFSVolumeSource": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "path": {
          "type": "string",
          "title": "Path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force\nthe NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        }
      },
      "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1Node": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeSpec",
          "description": "NodeSpec defines the behavior of a node."
        },
        "status": {
          "$ref": "#/definitions/corev1alpha1NodeStatus",
          "description": "Most recently observed status of the node.\nPopulated by the system."
        }
      }
    },
    "v1alpha1NodeAddress": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type is a array used for frontend filter."
        },
        "address": {
          "type": "string",
          "description": "IP Address reachable to the node."
        }
      },
      "description": "NodeAddress contains information for the instance's address.\nThe node addresses returned here will be set on the node's status.addresses\nfield."
    },
    "v1alpha1NodeCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of node condition. The built-in set of conditions are: Ready,\nMemoryPressure, DiskPressure, PIDPressure,\nNetworkUnavailable, and SchedulingDisabled."
        },
        "status": {
          "$ref": "#/definitions/typesConditionStatus",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        }
      },
      "description": "NodeCondition contains condition information for a node."
    },
    "v1alpha1NodeGroup": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "NodeGroupMetadata represents the metadata of the NodeGroup."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1NodeGroupStatus",
          "description": "NodeGroupStatus represents the status of the NodeGroup."
        }
      },
      "description": "NodeGroup represents the NodeGroup CR."
    },
    "v1alpha1NodeGroupSpec": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "NodeGroupSpec represents the spec of the NodeGroup."
    },
    "v1alpha1NodeGroupStatus": {
      "type": "object",
      "properties": {
        "nodeStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeStatus"
          }
        }
      },
      "description": "NodeGroupStatus represents the status of the NodeGroup."
    },
    "v1alpha1NodeSpec": {
      "type": "object",
      "properties": {
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod IP range assigned to the node."
        },
        "unschedulable": {
          "type": "boolean",
          "description": "Unschedulable controls node schedulability of new pods. By default, node is\nschedulable."
        },
        "taints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Taint"
          },
          "description": "If specified, the node's taints."
        }
      }
    },
    "v1alpha1NodeStatusRole": {
      "type": "string",
      "enum": [
        "NODE_ROLE_UNSPECIFIED",
        "CONTROL_PLANE",
        "WORKER"
      ],
      "default": "NODE_ROLE_UNSPECIFIED",
      "description": "Role includes control-plane and worker.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload."
    },
    "v1alpha1NodeStatusStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/corev1alpha1NodePhase"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeCondition"
          },
          "description": "NodeCondition contains condition information for a node."
        }
      },
      "description": "Status is the current observed node condition."
    },
    "v1alpha1NodeSystemInfo": {
      "type": "object",
      "properties": {
        "kernelVersion": {
          "type": "string",
          "description": "Kernel Version reported by the node from 'uname -r'\n(e.g. 3.16.0-0.bpo.4-amd64)."
        },
        "osImage": {
          "type": "string",
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7\n(wheezy))."
        },
        "containerRuntimeVersion": {
          "type": "string",
          "description": "ContainerRuntime Version reported by the node through runtime remote API\n(e.g. docker://1.5.0)."
        },
        "kubeletVersion": {
          "type": "string",
          "description": "Kubelet Version reported by the node."
        },
        "kubeProxyVersion": {
          "type": "string",
          "description": "KubeProxy Version reported by the node."
        },
        "operatingSystem": {
          "type": "string",
          "description": "The Operating System reported by the node."
        },
        "architecture": {
          "type": "string",
          "description": "The Architecture reported by the node."
        }
      }
    },
    "v1alpha1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        }
      },
      "description": "ObjectReference contains enough information to let you inspect or modify the\nreferred object."
    },
    "v1alpha1PatchServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the service YAML details."
        }
      }
    },
    "v1alpha1PauseDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apiappsv1alpha1Deployment",
          "description": "The new state of the deployment after pausing."
        }
      },
      "description": "Response message for the `PauseDeploymentRequest` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1PersistentVolumeClaimTemplate": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.\n\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimSpec",
          "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
        }
      },
      "description": "PersistentVolumeClaimTemplate is used to produce\nPersistentVolumeClaim objects as part of an EphemeralVolumeSource."
    },
    "v1alpha1PhotonPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "pdID": {
          "type": "string",
          "title": "ID that identifies Photon Controller persistent disk"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      },
      "description": "Represents a Photon Controller persistent disk resource."
    },
    "v1alpha1Pod": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodSpec",
          "description": "Spec describes the attributes that a pod is created with."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PodStatus",
          "description": "Status represents the current information/status of node."
        }
      }
    },
    "v1alpha1PodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required."
        },
        "value": {
          "type": "string",
          "title": "+optional"
        }
      },
      "description": "PodDNSConfigOption defines DNS resolver options of a pod."
    },
    "v1alpha1PodIp": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        }
      },
      "description": "IP: An IP address allocated to the pod. Routable at least within\n       the cluster.",
      "title": "PodIP represents the IP address of a pod.\nIP address information. Each entry includes:"
    },
    "v1alpha1PodOS": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the operating system. The currently supported values are linux and windows.\nAdditional value may be defined in future and can be one of:\nhttps://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration\nClients should expect to handle additional values and treat unrecognized values in this field as os: null"
        }
      },
      "description": "PodOS defines the OS parameters of a pod."
    },
    "v1alpha1PodStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1PodStatusPhase",
          "description": "Phase represents the phase to search."
        },
        "hostIP": {
          "type": "string",
          "title": "repeated types.Condition conditions = 2;\nstring message = 3;\nstring reason = 4;\nstring nominatedNodeName = 5;"
        },
        "podIP": {
          "type": "string",
          "description": "IP: An IP address allocated to the pod. Routable at least within\n         the cluster.",
          "title": "PodIP represents the IP address of a pod.\nIP address information. Each entry includes:"
        },
        "podIPs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodIp"
          },
          "title": "PodIPs is same as PodIP"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "description": "Required. Start time of the operation."
        },
        "cpuRequest": {
          "type": "string",
          "format": "int64",
          "description": "Pod cpu request."
        },
        "cpuLimit": {
          "type": "string",
          "format": "int64",
          "description": "Pod cpu limit."
        },
        "memoryRequest": {
          "type": "string",
          "format": "int64",
          "description": "Pod memory request."
        },
        "memoryLimit": {
          "type": "string",
          "format": "int64",
          "description": "Pod memory limit."
        },
        "cpuUsageRate": {
          "type": "number",
          "format": "double",
          "description": "cpuUsage_rate  is the actual total pod cpu usage. Unit: m."
        },
        "memoryUsageRate": {
          "type": "number",
          "format": "double",
          "description": "memoryUsage_rate the total pod memory usage. Unit: byte."
        },
        "restartCount": {
          "type": "integer",
          "format": "int32",
          "description": "restart_count the total pod restart count."
        },
        "ownedBy": {
          "$ref": "#/definitions/PodStatusOwnedBy"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesCondition"
          },
          "title": "Current service state of pod.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
        },
        "containerTotalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Container_total_count represents pod's container total count."
        },
        "containerReadyCount": {
          "type": "integer",
          "format": "int32",
          "description": "Container_ready_count represents pod's container ready count."
        },
        "initContainerStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerStatus"
          },
          "title": "The list has one entry per init container in the manifest. The most recent successful\ninit container will have ready = true, the most recently started container will have\nstartTime set.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
        },
        "containerStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerStatus"
          },
          "title": "The list has one entry per container in the manifest.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status\n+optional"
        },
        "ephemeralContainerStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/kpandaioapicorev1alpha1ContainerStatus"
          },
          "title": "Status for any ephemeral containers that have run in this pod.\n+optional"
        },
        "podStatus": {
          "type": "string",
          "description": "pod_status refer to `kubectl get po` result."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "cpu_usage  is the actual total pod cpu usage. Unit: m."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "memory_usage the total pod memory usage. Unit: byte."
        },
        "podFilterStatus": {
          "$ref": "#/definitions/v1alpha1FilterPodStatus"
        }
      },
      "description": "PodStatus constructs an declarative configuration of the Pod type for use\nwith apply."
    },
    "v1alpha1PodStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Unknown",
        "Pending",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": " - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system)."
    },
    "v1alpha1PortStatus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Port is the port number of the service port of which status is recorded here"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
        },
        "error": {
          "type": "string",
          "description": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n  - built-in error values shall be specified in this file and those shall use\n    CamelCase names\n  - cloud provider specific error values must have names that comply with the\n    format foo.example.com/CamelCase."
        }
      },
      "title": "PortStatus represents the error condition of a service port"
    },
    "v1alpha1Ports": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "ContainerPort connects to a certain container port in a pod."
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        }
      },
      "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
    },
    "v1alpha1PortworxVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "VolumeID uniquely identifies a Portworx volume"
        },
        "fsType": {
          "type": "string",
          "description": "FSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "description": "PortworxVolumeSource represents a Portworx volume resource."
    },
    "v1alpha1ProjectedVolumeSource": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VolumeProjection"
          },
          "title": "list of volume projections\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "Represents a projected volume source"
    },
    "v1alpha1PrometheusQueryRangeResult": {
      "type": "object",
      "properties": {
        "matrix": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "the matrix of sample stream"
        }
      },
      "title": "The result of prometheus query range"
    },
    "v1alpha1QuobyteVolumeSource": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "title": "Registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
        },
        "volume": {
          "type": "string",
          "description": "Volume is a string that references an already created Quobyte volume by name."
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional"
        },
        "user": {
          "type": "string",
          "title": "User to map volume access to\nDefaults to serivceaccount user\n+optional"
        },
        "group": {
          "type": "string",
          "title": "Group to map volume access to\nDefault is no group\n+optional"
        },
        "tenant": {
          "type": "string",
          "title": "Tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin\n+optional"
        }
      },
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod.\nQuobyte volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1RBDVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "image": {
          "type": "string",
          "title": "The rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "pool": {
          "type": "string",
          "title": "The rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "user": {
          "type": "string",
          "title": "The rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "keyring": {
          "type": "string",
          "title": "Keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "SecretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        }
      }
    },
    "v1alpha1ReplicaSet": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Metadata is that all persisted resources must have, which includes all objects\nusers must create."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ReplicaSetSpec",
          "description": "ReplicaSetSpec is the specification of a ReplicaSet."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReplicaSetStatus",
          "description": "ReplicaSetStatus represents the current status of a ReplicaSet."
        }
      },
      "description": "ReplicaSet ensures that a specified number of pod replicas are running at any given time."
    },
    "v1alpha1ReplicaSetCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of replica set condition."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "title": "The last time the condition transitioned from one status to another.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        }
      },
      "title": "kubernetes.io/change-cause\ndeployment.kubernetes.io/revision"
    },
    "v1alpha1ReplicaSetSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the replicas of the deployment."
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "description": "Represents the version of the deployment."
        },
        "selector": {
          "$ref": "#/definitions/apitypesLabelSelector",
          "description": "Selector a label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects."
        },
        "template": {
          "$ref": "#/definitions/kpandaioapicorev1alpha1PodTemplateSpec",
          "title": "Template an object that describes the pod that will be created.\nThe ReplicaSet will create exactly one copy of this pod on every node\nthat matches the template's node selector (or on every node if no node\nselector is specified).\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
        }
      },
      "description": "ReplicaSetSpec is the specification of a ReplicaSet."
    },
    "v1alpha1ReplicaSetStatus": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Replicas is the most recently oberved number of replicas.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
        },
        "fullyLabeledReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "The number of pods that have labels matching the labels of the pod template of the replicaset.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "readyReplicas is the number of pods targeted by this ReplicaSet with a Ready Condition.\n+optional"
        },
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "The number of available replicas (ready for at least minReadySeconds) for this replica set.\n+optional"
        },
        "observedGeneration": {
          "type": "string",
          "format": "int64",
          "title": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ReplicaSetCondition"
          },
          "title": "Represents the latest available observations of a replica set's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge"
        }
      },
      "description": "ReplicaSetStatus represents the current status of a ReplicaSet."
    },
    "v1alpha1RepoPhase": {
      "type": "string",
      "enum": [
        "REPOSITORY_PHASE_UNSPECIFIED",
        "UNKNOWN",
        "ACTIVE"
      ],
      "default": "REPOSITORY_PHASE_UNSPECIFIED",
      "description": " - REPOSITORY_PHASE_UNSPECIFIED: The repository state is unspecified.\n - UNKNOWN: The repository state is unknown.\n - ACTIVE: The repository is active."
    },
    "v1alpha1RepoSpec": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL A http URL of the repo to connect to"
        },
        "clientSecret": {
          "$ref": "#/definitions/RepoSpecSecretReference",
          "description": "client_secret a reference to a secret object."
        },
        "insecureSkipTLSVerify": {
          "type": "boolean",
          "description": "InsecureSkipTLSVerify will use insecure HTTPS to download the helmrepo's index."
        }
      }
    },
    "v1alpha1RepoStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1RepoPhase",
          "description": "phase represents the status of the repository."
        },
        "indexConfigMapName": {
          "type": "string",
          "title": "index_config_map_name is the configmap with the store index in it"
        },
        "indexConfigMapNamespace": {
          "type": "string",
          "title": "index_config_map_namespace is the configmap with the store index in it"
        },
        "downloadTime": {
          "type": "string",
          "format": "int64",
          "title": "download_time the time when the index was last downloaded"
        },
        "url": {
          "type": "string",
          "title": "The url used for the last successful index"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of helmrepo."
        }
      }
    },
    "v1alpha1ResourceList": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu is the total pod cpu resource. Unit: m."
        },
        "memory": {
          "type": "string",
          "description": "Memory is the total memory resource. Unit: byte."
        },
        "storage": {
          "type": "string",
          "description": "Storage is the total storage resource. Unit: byte."
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resources contains all resources include cpu, memory, storage."
        }
      },
      "description": "ResourceList returns a string representation of a resource list in a human\nreadable format."
    },
    "v1alpha1ResourceRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "title": "resource min value"
        },
        "minDesc": {
          "type": "string",
          "title": "min resource description"
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "title": "resource max value"
        },
        "maxDesc": {
          "type": "string",
          "title": "max resource description"
        }
      }
    },
    "v1alpha1RestartDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apiappsv1alpha1Deployment",
          "description": "The new state of the deployment after restarting."
        }
      },
      "description": "Response message for the `RestartDeploymentResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1ResumeDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apiappsv1alpha1Deployment",
          "description": "The new state of the deployment after resuming."
        }
      },
      "description": "Response message for the `ResumeDeploymentResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RollbackDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apiappsv1alpha1Deployment",
          "description": "The new state of the deployment after restarting."
        }
      },
      "description": "Response message for the `RestartDeploymentResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RollingUpdateDeployment": {
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "type": "string",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.\n+optional"
        },
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "v1alpha1Rule": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "RuleMetadata represents the metadata of the Rule."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1RuleSpec",
          "description": "RuleSpec represents the spec of the Rule."
        }
      }
    },
    "v1alpha1RuleEndpoint": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "RuleEndpointMetadata represents the metadata of the RuleEndpoint."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1RuleEndpointSpec",
          "description": "RuleEndpointSpec represents the spec of the RuleEndpoint."
        }
      }
    },
    "v1alpha1RuleEndpointSpec": {
      "type": "object",
      "properties": {
        "ruleEndpointType": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "RuleEndpointSpec represents the spec of the RuleEndpoint."
    },
    "v1alpha1RuleSpec": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "sourceResource": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "target": {
          "type": "string"
        },
        "targetResource": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "RuleSpec represents the spec of the Rule."
    },
    "v1alpha1SampleStream": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The labels of match"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1samplePair"
          },
          "title": "The time stamp"
        }
      },
      "title": "The time stamp stream"
    },
    "v1alpha1ScaleIOVolumeSource": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "The host address of the ScaleIO API Gateway."
        },
        "system": {
          "type": "string",
          "description": "The name of the storage system as configured in ScaleIO."
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "description": "SecretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
        },
        "sslEnabled": {
          "type": "boolean",
          "title": "Flag to enable/disable SSL communication with Gateway, default false\n+optional"
        },
        "protectionDomain": {
          "type": "string",
          "title": "The name of the ScaleIO Protection Domain for the configured storage.\n+optional"
        },
        "storagePool": {
          "type": "string",
          "title": "The ScaleIO Storage Pool associated with the protection domain.\n+optional"
        },
        "storageMode": {
          "type": "string",
          "title": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional"
        },
        "volumeName": {
          "type": "string",
          "description": "The name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "title": "ScaleIOVolumeSource represents a persistent ScaleIO volume"
    },
    "v1alpha1SecretProjection": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode."
    },
    "v1alpha1Service": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ServiceSpec",
          "description": "It describes the attributes that a user creates on a service."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ServiceStatus"
        }
      }
    },
    "v1alpha1ServiceAccountTokenProjection": {
      "type": "object",
      "properties": {
        "audience": {
          "type": "string",
          "title": "Audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional"
        },
        "expirationSeconds": {
          "type": "string",
          "format": "int64",
          "title": "ExpirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional"
        },
        "path": {
          "type": "string",
          "description": "Path is the path relative to the mount point of the file to project the\ntoken into."
        }
      },
      "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise)."
    },
    "v1alpha1ServicePort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this port within the service. This must be a DNS_LABEL."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol is IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\"."
        },
        "appProtocol": {
          "type": "string",
          "description": "AppProtocol is the application protocol for this port."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port will be exposed by this service."
        },
        "targetPort": {
          "type": "string",
          "description": "TargetPort is the number or name of the port to access on the pods targeted\nby the service."
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "description": "NodePort is the port on each node on which this service is exposed when\ntype is NodePort or LoadBalancer."
        }
      }
    },
    "v1alpha1ServiceSpec": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ServicePort"
          },
          "description": "Ports is the list of ports that are exposed by this service."
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Selector is to route service traffic to pods with label keys and values\nmatching this selector."
        },
        "clusterIP": {
          "type": "string",
          "description": "ClusterIP is the IP address of the service and is usually assigned\nrandomly."
        },
        "clusterIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.\nThis field came out since kubernetes version 1.20.\nTODO: Make it compatible\nMore info:\nhttps://v1-20.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/\nhttps://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ServiceType",
          "title": "ServiceType string describes ingress methods for a service"
        },
        "externalIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExternalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service."
        },
        "sessionAffinity": {
          "type": "string",
          "description": "SessionAffinity supports \"ClientIP\" and \"None\". Used to maintain session\naffinity."
        },
        "loadBalancerIP": {
          "type": "string",
          "description": "LoadBalancerIP only applies to Service Type: LoadBalancer."
        },
        "IPFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice, and is gated by the \"IPv6DualStack\" feature gate.\nThis field has changed from ipFamily (string) to ipFamilies (array) since\nkubernetes version 1.20.\nTODO: Make it compatible\nMore info:\nhttps://v1-20.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/\nhttps://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/"
        }
      },
      "description": "ServiceSpec describes the attributes that a user creates on a service."
    },
    "v1alpha1ServiceStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/v1alpha1LoadBalancerStatus",
          "description": "LoadBalancer contains the current status of the load-balancer,\nif one is present."
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesCondition"
          },
          "title": "Current service state"
        }
      },
      "description": "ServiceStatus represents the current status of a service."
    },
    "v1alpha1ServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_UNSPECIFIED",
        "ClusterIP",
        "NodePort",
        "LoadBalancer",
        "ExternalName"
      ],
      "default": "SERVICE_TYPE_UNSPECIFIED",
      "description": "- SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ClusterIP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NodePort: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LoadBalancer: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - ExternalName: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
      "title": "ServiceType string describes ingress methods for a service"
    },
    "v1alpha1StartDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apiappsv1alpha1Deployment",
          "description": "The new state of the deployment after starting."
        }
      },
      "description": "StartDeploymentResponse returns the deployment after being started."
    },
    "v1alpha1StopDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apiappsv1alpha1Deployment",
          "description": "The new state of the deployment after stopping."
        }
      },
      "description": "StopDeploymentResponse returns the deployment after being stopped."
    },
    "v1alpha1StorageOSVolumeSource": {
      "type": "object",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
        },
        "volumeNamespace": {
          "type": "string",
          "title": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1LocalObjectReference",
          "title": "SecretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.\n+optional"
        }
      },
      "description": "Represents a StorageOS persistent volume resource."
    },
    "v1alpha1Sysctl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of a property to set"
        },
        "value": {
          "type": "string",
          "title": "Value of a property to set"
        }
      },
      "title": "Sysctl defines a kernel parameter to be set"
    },
    "v1alpha1Taint": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The taint key to be applied to a node."
        },
        "value": {
          "type": "string",
          "description": "The taint value corresponding to the taint key."
        },
        "effect": {
          "$ref": "#/definitions/v1alpha1TaintEffect",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        }
      }
    },
    "v1alpha1TaintEffect": {
      "type": "string",
      "enum": [
        "TAINT_EFFECT_UNSPECIFIED",
        "NoSchedule",
        "PreferNoSchedule",
        "NoExecute"
      ],
      "default": "TAINT_EFFECT_UNSPECIFIED",
      "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute.\n\n - TAINT_EFFECT_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NoSchedule: NoSchedule tries to avoid scheduling pods to nodes where they can't\ntolerate taints.\n - PreferNoSchedule: This is not mandatory tries to avoid scheduling pods to nodes.\n - NoExecute: NoExecute is not assign pod  to or evicted pod from the node."
    },
    "v1alpha1TaskResultSpec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "errmsg": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1UpdateConfigMapResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ConfigMap YAML details"
        }
      }
    },
    "v1alpha1UpdateCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateCustomResourceResponse represents response of updating one\nCustomResource of namespaced scope"
    },
    "v1alpha1UpdateNodeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "description": "UpdateNodeResponse return's a node's json."
    },
    "v1alpha1UpdateSecretResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the Secret YAML details"
        }
      },
      "description": "It returns updated secret information."
    },
    "v1alpha1UpdateServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "Data is the Service YAML details"
        }
      },
      "description": "It returns the Updated Service data information."
    },
    "v1alpha1VolumeProjection": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/v1alpha1SecretProjection",
          "title": "information about the secret data to project\n+optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v1alpha1DownwardAPIProjection",
          "title": "information about the downwardAPI data to project\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/v1alpha1ConfigMapProjection",
          "title": "information about the configMap data to project\n+optional"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/v1alpha1ServiceAccountTokenProjection",
          "title": "information about the serviceAccountToken data to project\n+optional"
        }
      },
      "title": "Projection that may be projected along with other supported volume types"
    },
    "v1alpha1VsphereVirtualDiskVolumeSource": {
      "type": "object",
      "properties": {
        "volumePath": {
          "type": "string",
          "title": "Path that identifies vSphere volume vmdk"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "storagePolicyName": {
          "type": "string",
          "title": "Storage Policy Based Management (SPBM) profile name.\n+optional"
        },
        "storagePolicyID": {
          "type": "string",
          "title": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional"
        }
      },
      "description": "Represents a vSphere volume resource."
    },
    "v1alpha1Workload": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/apicorev1alpha1Deployment"
        }
      }
    },
    "v1alpha1WorkloadJSON": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data The data field is the Workload YAML details"
        }
      },
      "title": "WorkloadJSON messages of workload YAML details"
    },
    "v1alpha1WorkspaceInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "v1alpha1WorkspacesClusterListResponse": {
      "type": "object",
      "properties": {
        "clusterInfos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ClusterInfo"
          },
          "title": "clusterInfos is slice of the cluster"
        }
      }
    },
    "v1alpha1WorkspacesNamespaceListResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "clusters is slice of the namespace name"
        }
      }
    },
    "v1alpha1requestStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "SUCCESS",
        "FAIL"
      ],
      "default": "STATUS_UNSPECIFIED",
      "title": "The request of status"
    },
    "v1alpha1samplePair": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of the query"
        },
        "value": {
          "type": "string",
          "title": "Value of the query"
        }
      },
      "title": "The sample pair"
    },
    "DeviceModelsBatchDeleteDeviceModelsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataSpec"
          }
        },
        "edgeunit": {
          "type": "string",
          "description": "For edgeunit resources, choose one of two with cluster."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "DeviceModelsCreateDeviceModelBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta",
          "description": "Metadata represents the metadata of the DeviceModel."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1DeviceModelSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "CreateDeviceModelRequest represents create request to create one\nDevice of namespaced scope"
    },
    "DeviceModelsUpdateDeviceModelBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta",
          "description": "Metadata represents the metadata of the DeviceModel."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1DeviceModelSpec",
          "description": "Specification of the DeviceModel."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "UpdateDeviceModelRequest represents update request to update one\nDevice of namespaced scope"
    },
    "DevicesBatchDeleteDevicesBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataSpec"
          }
        },
        "edgeunit": {
          "type": "string",
          "description": "For edgeunit resources, choose one of two with cluster."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "DevicesBindNodeBody": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "nodeName represents which node will be bound by the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "DevicesCreateDeviceBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta",
          "description": "Metadata represents the metadata of the device."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1DeviceSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "CreateDeviceRequest represents create request to create one\nDevice of namespaced scope"
    },
    "DevicesPatchDevicesBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Item"
          }
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DevicesUpdateDeviceBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta",
          "description": "Metadata represents the metadata of the device."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1DeviceSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "UpdateDeviceRequest represents update request to update one\nDevice of namespaced scope"
    },
    "EdgeUnitsUpdateEdgeUnitBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1beta1EdgeUnitSpec"
        }
      }
    },
    "commonv1alpha1Timestamp": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1Artifact": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "description": "Digest is artifact digest."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Tag"
          },
          "description": "Tags is a list of tags."
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "description": "Size of artifact. Unit: byte. 1024 GenericBinary."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "First push time."
        }
      },
      "title": "Artifact is the concept of harbor artifact"
    },
    "v1alpha1DetectKangarooResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "The kangaroo_enable indicates whether the kangaroo is installed"
        }
      }
    },
    "v1alpha1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      }
    },
    "v1alpha1ListArtifactsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Items is a list of tag names."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListArtifactsResponse returns a list of tags of specified image"
    },
    "v1alpha1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items is a list of project names."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListProjectsResponse returns a list of projects of a registry"
    },
    "v1alpha1ListRegistriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListRegistriesResponse returns a list of registries"
    },
    "v1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Repository"
          },
          "description": "Items is a list of repositories."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListRepositoriesResponse returns a list of projects of a registry"
    },
    "v1alpha1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/v1alpha1Time",
          "title": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/v1alpha1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      }
    },
    "v1alpha1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/commonv1alpha1Timestamp",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/commonv1alpha1Timestamp",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "title": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      }
    },
    "v1alpha1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      }
    },
    "v1alpha1Registry": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Alias is an alias for the registry, showed in list."
        },
        "host": {
          "type": "string",
          "description": "Host is registry host."
        },
        "name": {
          "type": "string",
          "description": "Name is registry name, use to query project lists."
        }
      },
      "title": "Registry contains necessary info"
    },
    "v1alpha1Repository": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of repository."
        },
        "artifacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Artifacts of repository."
        }
      },
      "title": "Repository concept from Harbor"
    },
    "v1alpha1Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "Tag push time."
        }
      },
      "description": "Tag of an image."
    },
    "v1alpha1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      }
    },
    "v1beta1AccessMode": {
      "type": "string",
      "enum": [
        "ReadOnly",
        "ReadWrite"
      ],
      "default": "ReadOnly"
    },
    "v1beta1AddonInfo": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "v1beta1CloudCoreHostIPsListResponse": {
      "type": "object",
      "properties": {
        "hostIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1CustomizeRepository": {
      "type": "object",
      "properties": {
        "helmRepo": {
          "type": "string",
          "description": "HelmRepo sets helm repository name, default value is addon."
        },
        "registry": {
          "type": "string",
          "description": "Registry sets image registry."
        },
        "username": {
          "type": "string",
          "title": "Set repository username if custom image is private.\n+optional"
        },
        "password": {
          "type": "string",
          "title": "Set repository password if custom image is private.\n+optional"
        },
        "kubeedgeImageRepository": {
          "type": "string",
          "title": "KubeEdgeImageRepository sets the image repository of KubeEdge, default value is docker.m.daocloud.io/kubeedge.\n+optional"
        },
        "kantImageRepository": {
          "type": "string",
          "title": "KantImageRepository sets the image repository of Kant, default value is release.daocloud.io/kant.\nDeprecated: will be clean up after v0.20\n+optional"
        }
      },
      "description": "CustomizeRepository defines customize repositories of helm and image."
    },
    "v1beta1Device": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta",
          "description": "Metadata represents the metadata of the device."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1DeviceSpec",
          "description": "Specification of the device."
        },
        "status": {
          "$ref": "#/definitions/v1beta1DeviceStatus",
          "description": "Status of the device."
        }
      },
      "description": "Device is the description of a device instance."
    },
    "v1beta1DeviceModel": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta",
          "description": "Metadata represents the metadata of the device model."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1DeviceModelSpec",
          "description": "Specification of a device model."
        }
      },
      "description": "DeviceModel specifies the information of a device model."
    },
    "v1beta1DeviceModelRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the referent"
        }
      },
      "title": "DeviceModelRef is reference to the device model used as a template to create the device instance"
    },
    "v1beta1DeviceModelSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1ModelProperty"
          },
          "description": "The properties of device model."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol name used by the device of this device model."
        }
      },
      "description": "DeviceModelSpec is the specification of a device model."
    },
    "v1beta1DeviceProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this property."
        },
        "desired": {
          "$ref": "#/definitions/v1beta1TwinProperty",
          "description": "The desired value of this property."
        },
        "visitors": {
          "type": "string",
          "description": "The visitor config of this property."
        },
        "reportCycle": {
          "type": "integer",
          "format": "int32",
          "description": "The report cycle of this property."
        },
        "collectCycle": {
          "type": "integer",
          "format": "int32",
          "description": "The collect cycle of this property."
        },
        "reportToCloud": {
          "type": "boolean",
          "description": "The report to cloud of this property."
        }
      },
      "description": "DeviceProperty is the property of a device."
    },
    "v1beta1DeviceSpec": {
      "type": "object",
      "properties": {
        "deviceModelRef": {
          "$ref": "#/definitions/v1beta1DeviceModelRef",
          "description": "The device model which the device references."
        },
        "protocol": {
          "type": "string",
          "description": "The specific config of the protocol to access to the device."
        },
        "protocolName": {
          "type": "string",
          "description": "ProtocolName represents the protocol name of the device."
        },
        "nodeName": {
          "type": "string",
          "title": "The node which to schedule this device onto"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1DeviceProperty"
          },
          "description": "The properties provided by this device."
        }
      },
      "description": "DeviceSpec is the specification of the device."
    },
    "v1beta1DeviceStatus": {
      "type": "object",
      "properties": {
        "twins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Twin"
          },
          "description": "the device twins of the device."
        },
        "state": {
          "type": "string",
          "description": "the state of the device like Online or Offline."
        },
        "lastOnlineTime": {
          "type": "string",
          "description": "the last time the device was online."
        },
        "ReportToCloud": {
          "type": "boolean",
          "title": "whether be reported to the cloud"
        },
        "ReportCycle": {
          "type": "string",
          "format": "int64",
          "description": "Define how frequent mapper will report the device status."
        }
      },
      "description": "DeviceStatus is the status of the device."
    },
    "v1beta1EdgeConditionsStatus": {
      "type": "string",
      "enum": [
        "True",
        "False",
        "Unknown"
      ],
      "default": "True"
    },
    "v1beta1EdgeUnit": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1beta1EdgeUnitSpec"
        },
        "status": {
          "$ref": "#/definitions/v1beta1EdgeUnitStatus",
          "title": "+optional"
        }
      }
    },
    "v1beta1EdgeUnitCloudCoreProtocol": {
      "type": "object",
      "properties": {
        "cloudcoreHost": {
          "type": "string",
          "title": "Sets node ip or domain of cloudcore"
        },
        "protocolTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1EdgeUnitProtocolType"
          },
          "title": "Set cloudcore protocol type, one of websocket, quic"
        },
        "websocketPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloudcore websocket server port"
        },
        "quicPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloudcore quic server port"
        },
        "httpServerPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloudcore http server port"
        },
        "cloudStreamPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloud stream port"
        },
        "tunnelPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets edge node tunnel port"
        }
      },
      "title": "Defines access mode of the edgecore to the cloudcore"
    },
    "v1beta1EdgeUnitComponentsRepositoryResponse": {
      "type": "object",
      "properties": {
        "kubeedge": {
          "type": "string"
        },
        "kant": {
          "type": "string",
          "title": "Deprecated: will be clean up after v0.20"
        }
      }
    },
    "v1beta1EdgeUnitCondition": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1beta1EdgeConditionsStatus",
          "title": "Status of the condition, one of True, False, Unknown"
        },
        "lastHeartbeatTime": {
          "type": "string",
          "format": "int64",
          "title": "Last unix timestamp we got an update on a given condition\n+optional"
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "title": "Last unix timestamp the condition transit from one status to another\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "Reason for the condition's last transition\n+optional"
        },
        "message": {
          "type": "string",
          "title": "Human readable message indicating details about last transition\n+optional"
        }
      },
      "title": "Contains condition information"
    },
    "v1beta1EdgeUnitCreateRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1beta1EdgeUnitSpec"
        }
      }
    },
    "v1beta1EdgeUnitListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1EdgeUnit"
          },
          "title": "Collection of EdgeUnit"
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "description": "returned contains current page, size, and total."
        }
      }
    },
    "v1beta1EdgeUnitManageType": {
      "type": "string",
      "enum": [
        "internal",
        "external"
      ],
      "default": "internal"
    },
    "v1beta1EdgeUnitPhase": {
      "type": "string",
      "enum": [
        "Pending",
        "Running",
        "Failed",
        "Terminated"
      ],
      "default": "Pending"
    },
    "v1beta1EdgeUnitProtocolType": {
      "type": "string",
      "enum": [
        "websocket",
        "quic"
      ],
      "default": "websocket"
    },
    "v1beta1EdgeUnitSpec": {
      "type": "object",
      "properties": {
        "clusterRef": {
          "type": "string",
          "description": "Referenced cluster name."
        },
        "kubeedgeVersion": {
          "type": "string",
          "description": "kubeedgeVersion the version of KubeEdge."
        },
        "customizeRepository": {
          "$ref": "#/definitions/v1beta1CustomizeRepository",
          "title": "CustomizeRepository sets the customize helm repository and image repository.\n+optional"
        },
        "description": {
          "type": "string",
          "title": "Set description of EdgeUnit.\n+optional"
        },
        "cloudCoreProtocol": {
          "$ref": "#/definitions/v1beta1EdgeUnitCloudCoreProtocol",
          "description": "Sets access mode of the edgecore to the cloudcore."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Sets the replicas number of CloudCore."
        },
        "manageType": {
          "$ref": "#/definitions/v1beta1EdgeUnitManageType",
          "description": "Sets edgeunit manage type."
        },
        "kubeedgeMqttEnable": {
          "type": "boolean",
          "title": "Defines whether the default mqtt broker is installed on the edge node.\n+optional"
        },
        "deleteNamespace": {
          "type": "boolean",
          "title": "Defines whether the namespace is deleted when components are uninstalled.\n+optional"
        },
        "resourcePolicyRef": {
          "$ref": "#/definitions/v1beta1ResourcePolicyRef",
          "title": "ResourcePolicyRef defines the resource policy for the edge-unit.\n+optional"
        }
      },
      "title": "Defines the desired state of EdgeUnit"
    },
    "v1beta1EdgeUnitStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1beta1EdgeUnitPhase",
          "title": "The recently observed lifecycle phase of the EdgeUnit,\none of Running, Failed, Pending, Terminated"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1EdgeUnitCondition"
          },
          "title": "Conditions is an array of current observed EdgeUnit conditions"
        },
        "totalNodes": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of nodes in cluster"
        },
        "availableNodes": {
          "type": "integer",
          "format": "int32",
          "title": "Available number of nodes in cluster"
        },
        "totalDeployments": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of deployments in cluster"
        },
        "availableDeployments": {
          "type": "integer",
          "format": "int32",
          "title": "Available number of deployments in cluster"
        },
        "totalPods": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of pods in cluster"
        },
        "availablePods": {
          "type": "integer",
          "format": "int32",
          "title": "Available number of pods in cluster"
        },
        "addons": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1beta1AddonInfo"
          },
          "title": "Addons the status information of edgeunit addons"
        }
      }
    },
    "v1beta1GetAddonsResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1beta1AddonInfo"
          }
        }
      }
    },
    "v1beta1Item": {
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/v1beta1Operation"
        },
        "path": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1beta1ListDeviceModelResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1DeviceModel"
          },
          "title": "Data represents the response of DeviceModel"
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListDeviceResponse represents list all deviceModels"
    },
    "v1beta1ListDeviceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Device"
          },
          "title": "Data represents the response of device"
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListDeviceResponse represents list all devices"
    },
    "v1beta1ModelProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this property."
        },
        "description": {
          "type": "string",
          "description": "The description of this property."
        },
        "type": {
          "$ref": "#/definitions/v1beta1ModelPropertyType",
          "description": "The specific type of this property."
        },
        "accessMode": {
          "$ref": "#/definitions/v1beta1AccessMode",
          "description": "The access mode of this property,ReadWrite or ReadOnly."
        },
        "minimum": {
          "type": "string",
          "description": "The minimum value of this property."
        },
        "maximum": {
          "type": "string",
          "description": "The maximum value of this property."
        },
        "unit": {
          "type": "string",
          "description": "The unit of this property."
        }
      },
      "description": "ModelProperty describes an individual device property / attribute like temperature / humidity etc."
    },
    "v1beta1ModelPropertyType": {
      "type": "string",
      "enum": [
        "INT",
        "FLOAT",
        "DOUBLE",
        "STRING",
        "BOOLEAN",
        "BYTES",
        "STREAM"
      ],
      "default": "INT"
    },
    "v1beta1Operation": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "add",
        "remove",
        "replace"
      ],
      "default": "OPERATOR_UNSPECIFIED"
    },
    "v1beta1ResourcePolicyItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name mappers to the name of EdgeUnitResourcePolicy"
        },
        "version": {
          "type": "string",
          "title": "Version mappers to the crd version of EdgeUnitResourcePolicy"
        },
        "descZH": {
          "type": "string",
          "title": "DescZH describes the Chinese description"
        },
        "descEN": {
          "type": "string",
          "title": "DescEN describes the English description"
        }
      }
    },
    "v1beta1ResourcePolicyListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1ResourcePolicyItem"
          }
        }
      }
    },
    "v1beta1ResourcePolicyRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name mappers to the name of EdgeUnitResourcePolicy"
        },
        "version": {
          "type": "string",
          "title": "Version mappers to the crd version of EdgeUnitResourcePolicy"
        }
      }
    },
    "v1beta1Twin": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string",
          "description": "the name of the property."
        },
        "observedDesired": {
          "$ref": "#/definitions/v1beta1TwinProperty",
          "description": "the observedDesired value of the property configured by device manager."
        },
        "reported": {
          "$ref": "#/definitions/v1beta1TwinProperty",
          "description": "the reported value of the property from the real device."
        }
      },
      "description": "Twin is the digital model of a device. It contains a series of properties."
    },
    "v1beta1TwinProperty": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "the value of the property."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the metadata to describe this property."
        }
      },
      "description": "TwinProperty is the specification of the property."
    },
    "EdgeAppCreateEdgeApplicationBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "description": "metadata is the standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1EdgeApplicationSpec",
          "description": "spec is the specification of the desired behavior of the EdgeApplication."
        }
      }
    },
    "EdgeAppDeployTargetNodeGroupBody": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/v1alpha1NodeGroupConfiguration",
          "description": "NodeGroupInstance represents the name of TargetNodeGroupInstance."
        }
      }
    },
    "EdgeAppGetEdgeAppCheckResultBody": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1OverriderType"
        },
        "images": {
          "$ref": "#/definitions/apibatchv1alpha1ContainerImage"
        },
        "envs": {
          "$ref": "#/definitions/v1alpha1ContainerEnv"
        },
        "commands": {
          "$ref": "#/definitions/v1alpha1ContainerCommand"
        },
        "args": {
          "$ref": "#/definitions/v1alpha1ContainerArgs"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1ContainerResource"
        },
        "commandArgs": {
          "$ref": "#/definitions/v1alpha1ContainerCommandArgs"
        }
      }
    },
    "EdgeAppUpdateEdgeApplicationBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "description": "metadata is the standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1EdgeApplicationSpec",
          "description": "spec is the specification of the desired behavior of the EdgeApplication."
        }
      }
    },
    "EdgeAppUpdateTargetNodeGroupsBody": {
      "type": "object",
      "properties": {
        "overriderConfiguration": {
          "$ref": "#/definitions/v1alpha1OverriderConfiguration",
          "description": "OverriderConfiguration is the specification of the desired behavior of the TargetNodeGroupInstance."
        }
      }
    },
    "EdgeAppVerifyEdgeApplicationImageBody": {
      "type": "object",
      "properties": {
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImageConfiguration"
          },
          "description": "ImageConfiguration represents the image configuration of EdgeApplication."
        }
      }
    },
    "ImagePrePullJobsBatchDeleteBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "For cluster resources, choose one of two with edgeunit."
        },
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataSpec"
          }
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "apiHttpBody": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The HTTP request/response body as raw binary."
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs."
        }
      },
      "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest)\n        returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody)\n        returns (google.protobuf.Empty);\n\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged."
    },
    "apibatchv1alpha1ContainerImage": {
      "type": "object",
      "properties": {
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImageConfiguration"
          }
        }
      }
    },
    "apicommonv1alpha1LabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicommonv1alpha1LabelSelectorRequirement"
          },
          "title": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      },
      "title": "LabelSelector is a label query over a set of resources"
    },
    "apicommonv1alpha1LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key is the label key that the selector applies to."
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1LabelSelectorOperator",
          "description": "Operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      },
      "description": "LabelSelectorRequirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
    },
    "apicorev1alpha1LabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicorev1alpha1LabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      }
    },
    "apicorev1alpha1LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      }
    },
    "batchv1alpha1Condition": {
      "type": "string",
      "enum": [
        "Unknown",
        "Processing",
        "Available"
      ],
      "default": "Unknown"
    },
    "joinconfigCgroupDriverType": {
      "type": "string",
      "enum": [
        "cgroupfs",
        "systemd"
      ],
      "default": "cgroupfs"
    },
    "joinconfigHubProtocolType": {
      "type": "string",
      "enum": [
        "websocket",
        "quic"
      ],
      "default": "websocket"
    },
    "joinconfigListSingleJoinConfigResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/joinconfigSingleJoinConfig"
          },
          "description": "SingleJoinConfig represents the list of SingleJoinConfig."
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "SingleJoinConfig information List"
    },
    "joinconfigSingleJoinConfig": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "SingleJoinConfigMetadata represents the metadata of the SingleJoinConfig."
        },
        "spec": {
          "$ref": "#/definitions/joinconfigSingleJoinConfigSpec",
          "description": "SingleJoinConfigSpec represents the spec of the SingleJoinConfig."
        }
      },
      "description": "SingleJoinConfig represents the SingleJoinConfig."
    },
    "joinconfigSingleJoinConfigSpec": {
      "type": "object",
      "properties": {
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "nodeLabels represents the labels of the node."
        },
        "desc": {
          "type": "string",
          "description": "description represents the description of the SingleJoinConfig."
        },
        "imageRepository": {
          "type": "string",
          "description": "edgeRepo represents the image repo of the edge."
        },
        "cgroupDriver": {
          "$ref": "#/definitions/joinconfigCgroupDriverType",
          "description": "cgroupDriver represents the driver type of the edgeNode."
        },
        "remoteRuntimeEndpoint": {
          "type": "string",
          "description": "socketAddress represents the socket address of the CRI."
        },
        "hubProtocol": {
          "$ref": "#/definitions/joinconfigHubProtocolType",
          "description": "hubProtocol represents the transport protocol type edgehub."
        },
        "cloudCoreHostIP": {
          "type": "string",
          "title": "CloudCoreHostIP is the host ip of cloudCore"
        }
      },
      "description": "SingleJoinConfigSpec represents the spec of the SingleJoinConfig."
    },
    "joinconfigSingleJoinHelpResponse": {
      "type": "object",
      "properties": {
        "online": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "online represents the online command of the SingleJoinConfig."
        },
        "offline": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "offline represents the offline command of the SingleJoinConfig."
        }
      },
      "title": "JoinHelpResponse represents join help response"
    },
    "v1alpha1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/v1alpha1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/v1alpha1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other\npod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/v1alpha1PodAntiAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some\nother pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "v1alpha1BatchNode": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "apiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "BatchNodeMetadata represents the metadata of the BatchNode."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1BatchNodeSpec",
          "description": "BatchNodeSpec represents the spec of the BatchNode."
        }
      },
      "description": "BatchNode represents the BatchNode."
    },
    "v1alpha1BatchNodeDriverType": {
      "type": "string",
      "enum": [
        "cgroupfs",
        "systemd"
      ],
      "default": "cgroupfs"
    },
    "v1alpha1BatchNodeSpec": {
      "type": "object",
      "properties": {
        "nodeNamePrefix": {
          "type": "string",
          "description": "nodeNamePrefix represents the prefix of the node name."
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "nodeLabels represents the labels of the node."
        },
        "desc": {
          "type": "string",
          "description": "description represents the description of the BatchNode."
        },
        "edgeRepo": {
          "type": "string",
          "description": "edgeRepo represents the image repo of the edge."
        },
        "driverType": {
          "$ref": "#/definitions/v1alpha1BatchNodeDriverType",
          "description": "driverType represents the driver type of the edgeNode."
        },
        "socketAddress": {
          "type": "string",
          "description": "socketAddress represents the socket address of the CRI."
        },
        "transportProtocol": {
          "$ref": "#/definitions/v1alpha1BatchNodeTransportProtocolType",
          "description": "TransportProtocolType represents the transport protocol type edgehub."
        },
        "cloudCoreHostIP": {
          "type": "string",
          "title": "CloudCoreHostIP is the host ip of cloudCore"
        }
      },
      "description": "BatchNodeSpec represents the spec of the BatchNode."
    },
    "v1alpha1BatchNodeTransportProtocolType": {
      "type": "string",
      "enum": [
        "websocket",
        "quic"
      ],
      "default": "websocket"
    },
    "v1alpha1BatchNodesCreateBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "BatchNodeMetadata represents the metadata of the BatchNode."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1BatchNodeSpec",
          "description": "BatchNodeSpec represents the spec of the BatchNode."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "CreateBatchNodeRequest represents create request to create one"
    },
    "v1alpha1BatchNodesUpdateBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "BatchNodeMetadata represents the metadata of the BatchNode."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1BatchNodeSpec",
          "description": "BatchNodeSpec represents the spec of the BatchNode."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "UpdateBatchNodeRequest represents update request to update one"
    },
    "v1alpha1Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Added capabilities\n+optional"
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Removed capabilities\n+optional"
        }
      },
      "description": "Adds and removes POSIX capabilities from running containers."
    },
    "v1alpha1CheckItem": {
      "type": "string",
      "enum": [
        "cpu",
        "mem",
        "disk"
      ],
      "default": "cpu"
    },
    "v1alpha1Command": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title represents the title of the command."
        },
        "command": {
          "type": "string",
          "description": "Command represents the command of the BatchNode."
        }
      },
      "description": "Command represents the command of the BatchNode."
    },
    "v1alpha1CommandArgsOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1Operator"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap must be defined\n+optional"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\n\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "v1alpha1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "title": "Selects a key from a ConfigMap.\n+structType=atomic"
    },
    "v1alpha1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
        },
        "image": {
          "type": "string",
          "title": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ContainerPort"
          },
          "title": "List of ports to expose from the container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements",
          "title": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "title": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "title": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "title": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/v1alpha1Lifecycle",
          "title": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/v1alpha1SecurityContext",
          "title": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "A single application container that you want to run within a pod."
    },
    "v1alpha1ContainerArgs": {
      "type": "object",
      "properties": {
        "argsConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        }
      }
    },
    "v1alpha1ContainerCommand": {
      "type": "object",
      "properties": {
        "commandConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        }
      }
    },
    "v1alpha1ContainerCommandArgs": {
      "type": "object",
      "properties": {
        "commandConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        },
        "argsConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        }
      }
    },
    "v1alpha1ContainerEnv": {
      "type": "object",
      "properties": {
        "envConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvOverrider"
          }
        }
      }
    },
    "v1alpha1ContainerResource": {
      "type": "object",
      "properties": {
        "resourceConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ResourcesOverrider"
          }
        }
      }
    },
    "v1alpha1DeployTargetNodeGroupResponse": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/v1alpha1NodeGroupConfiguration",
          "description": "NodeGroupInstance represents the name of TargetNodeGroupInstance."
        }
      }
    },
    "v1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/apicorev1alpha1LabelSelector",
          "description": "Label selector for pods. Existing ReplicaSets whose pods are\nselected by this will be the ones affected by this deployment.\nIt must match the pod template's labels."
        },
        "template": {
          "$ref": "#/definitions/v1alpha1PodTemplateSpec",
          "description": "Template describes the pods that will be created."
        },
        "strategy": {
          "$ref": "#/definitions/v1alpha1DeploymentStrategy",
          "title": "The deployment strategy to use to replace existing pods with new ones.\n+optional\n+patchStrategy=retainKeys"
        },
        "minReadySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum number of seconds for which a newly created pod should be ready\nwithout any of its container crashing, for it to be considered available.\nDefaults to 0 (pod will be considered available as soon as it is ready)\n+optional"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "title": "The number of old ReplicaSets to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 10.\n+optional"
        },
        "paused": {
          "type": "boolean",
          "title": "Indicates that the deployment is paused.\n+optional"
        },
        "progressDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in seconds for a deployment to make progress before it\nis considered to be failed. The deployment controller will continue to\nprocess failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status. Note that progress will\nnot be estimated during the time a deployment is paused. Defaults to 600s."
        }
      }
    },
    "v1alpha1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..'\npath. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/v1alpha1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n+optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
    },
    "v1alpha1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1EdgeApplication": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "The kind of resourcce\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "apiVersion defines the versioned schema of this representation of an object.\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "title": "metadata is the standard object's metadata.\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1EdgeApplicationSpec",
          "title": "spec is the specification of the desired behavior of the EdgeApplication.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1EdgeApplicationStatus",
          "title": "status is the most recently observed status of the EdgeApplication.\n+optional"
        }
      }
    },
    "v1alpha1EdgeApplicationSpec": {
      "type": "object",
      "properties": {
        "workloadScope": {
          "$ref": "#/definitions/v1alpha1EdgeApplicationWorkloadScope",
          "title": "workloadScope is an optional field, used to specify the scope of the resource being referenced\n+optional"
        },
        "workloadTemplate": {
          "$ref": "#/definitions/v1alpha1EdgeApplicationWorkloadTemplate",
          "title": "workloadTemplate is an optional field, used to specify the template of the resource being referenced\n+optional"
        }
      }
    },
    "v1alpha1EdgeApplicationStatus": {
      "type": "object",
      "properties": {
        "workloadStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WorkloadStatus"
          },
          "title": "workloadStatus is an optional field, used to indicate the status of the resource being referenced\n+optional"
        }
      }
    },
    "v1alpha1EdgeApplicationWorkloadScope": {
      "type": "object",
      "properties": {
        "targetNodeGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1TargetNodeGroup"
          },
          "title": "targetNodeGroups is an optional field, used to specify the node groups of the resource being referenced"
        }
      }
    },
    "v1alpha1EdgeApplicationWorkloadTemplate": {
      "type": "object",
      "properties": {
        "manifests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Manifest"
          },
          "title": "manifests is an optional field, used to specify the manifests of the resource being referenced"
        }
      }
    },
    "v1alpha1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/v1alpha1ConfigMapEnvSource",
          "title": "The ConfigMap to select from\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1SecretEnvSource",
          "title": "The Secret to select from\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "v1alpha1EnvOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1Operator"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvVar"
          }
        }
      }
    },
    "v1alpha1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "type": "string",
          "title": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional"
        },
        "valueFrom": {
          "$ref": "#/definitions/v1alpha1EnvVarSource",
          "title": "Source for the environment variable's value. Cannot be used if value is not empty.\n+optional"
        }
      },
      "description": "EnvVar represents an environment variable present in a Container."
    },
    "v1alpha1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/v1alpha1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,\n`metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,\nstatus.podIPs. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and\nrequests.ephemeral-storage) are currently supported. +optional"
        },
        "configMapKeyRef": {
          "$ref": "#/definitions/v1alpha1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/v1alpha1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar."
    },
    "v1alpha1EphemeralContainer": {
      "type": "object",
      "properties": {
        "ephemeralContainerCommon": {
          "$ref": "#/definitions/v1alpha1EphemeralContainerCommon",
          "description": "Ephemeral containers have all of the fields of Container, plus additional fields\nspecific to ephemeral containers. Fields in common with Container are in the\nfollowing inlined struct so than an EphemeralContainer may easily be converted\nto a Container."
        },
        "targetContainerName": {
          "type": "string",
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined.\n+optional"
        }
      },
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing\nPod. Ephemeral containers may not be removed or restarted.\n\nThis is a beta feature available on clusters that haven't disabled the EphemeralContainers feature gate."
    },
    "v1alpha1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional"
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "v1alpha1GetEdgeAppCheckResultResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetEdgeAppOverrideFeaturesResponse": {
      "type": "object",
      "properties": {
        "replicasEnable": {
          "type": "boolean"
        },
        "imagesEnable": {
          "type": "boolean"
        },
        "envsEnable": {
          "type": "boolean"
        },
        "commandArgsEnable": {
          "type": "boolean"
        },
        "resourcesEnable": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1GetTargetNodeGroupResponse": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/v1alpha1NodeGroupConfiguration",
          "description": "overrider is the specification of the desired behavior of the TargetNodeGroupInstance."
        }
      }
    },
    "v1alpha1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HTTPHeader"
          },
          "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "v1alpha1HostAlias": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP address of the host file entry."
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames for the above IP address."
        }
      },
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file."
    },
    "v1alpha1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional"
        }
      },
      "description": "Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1Identifier": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "group is the group of the resource being referenced\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "kind is kind of the resource being referenced\n+optional"
        },
        "name": {
          "type": "string",
          "title": "name is the name of resource being referenced\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "namespace is the namespace of the resource being referenced\n+optional"
        },
        "ordinal": {
          "type": "integer",
          "format": "int32",
          "title": "ordinal is an optional field, used to differentiate resources of the same kind within a manifest\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "resource is the resource type of the resource being referenced\n+optional"
        },
        "version": {
          "type": "string",
          "title": "version is the version of the resource being referenced\n+optional"
        }
      }
    },
    "v1alpha1ImageComponent": {
      "type": "string",
      "enum": [
        "COMPONENT_UNSPECIFIED",
        "Registry",
        "Repository",
        "Tag"
      ],
      "default": "COMPONENT_UNSPECIFIED"
    },
    "v1alpha1ImageConfiguration": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/v1alpha1ImageComponent",
          "title": "component is the component of the image being referenced\n+optional"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1Operator",
          "title": "operator is the operator of the image being referenced\n+optional"
        },
        "containerIndex": {
          "type": "integer",
          "format": "int32",
          "title": "predicate is the predicate of the image being referenced\n+optional"
        },
        "value": {
          "type": "string",
          "title": "value is the value of the image being referenced"
        }
      }
    },
    "v1alpha1ImageOverrider": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/v1alpha1ImageComponent",
          "title": "component is the component of the image being referenced\n+optional"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1Operator",
          "title": "operator is the operator of the image being referenced\n+optional"
        },
        "predicate": {
          "$ref": "#/definitions/v1alpha1Predicate",
          "title": "predicate is the predicate of the image being referenced\n+optional"
        },
        "value": {
          "type": "string",
          "title": "value is the value of the image being referenced"
        }
      }
    },
    "v1alpha1ImagePrePullJob": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "Metadata is standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ImagePrePullJobSpec",
          "description": "Spec represents the specification of the desired behavior of ImagePrePullJob."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ImagePrePullJobStatus",
          "description": "Status represents the status of ImagePrePullJob."
        }
      },
      "description": "ImagePrePullJob is used to prepull images on edge node."
    },
    "v1alpha1ImagePrePullJobListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImagePrePullJob"
          },
          "title": "Items is collection of ImagePrePullJob"
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "description": "returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ImagePrePullJobNodeImageState": {
      "type": "string",
      "enum": [
        "imagestate_successful",
        "imagestate_failed"
      ],
      "default": "imagestate_successful"
    },
    "v1alpha1ImagePrePullJobNodeImageStatus": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Image is the name of the image."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1ImagePrePullJobNodeImageState",
          "description": "State represents for the state phase of this image pull on the edge node\nThere are two possible state values: successful, failed."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents the fail reason if image pull failed.\n+optional"
        }
      },
      "description": "ImagePrePullJobNodeImageStatus stores the prepull status for each image."
    },
    "v1alpha1ImagePrePullJobNodeTaskStatus": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "NodeName is the name of edge node."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1NodeState",
          "description": "State represents for the upgrade state phase of the edge node."
        },
        "event": {
          "type": "string",
          "description": "Event represents for the event."
        },
        "action": {
          "$ref": "#/definitions/v1alpha1TaskAction",
          "description": "Action represents for the action."
        },
        "reason": {
          "type": "string",
          "description": "Reason represents for the reason."
        },
        "time": {
          "type": "string",
          "format": "int64",
          "description": "Time represents for the running unix timestamp, unit: second."
        },
        "imageStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImagePrePullJobNodeImageStatus"
          },
          "description": "ImageStatus represents the prepull status for each image."
        }
      }
    },
    "v1alpha1ImagePrePullJobSpec": {
      "type": "object",
      "properties": {
        "imagePrePullTemplate": {
          "$ref": "#/definitions/v1alpha1ImagePrePullTemplate",
          "title": "ImagePrepullTemplate represents original templates of imagePrePull"
        }
      },
      "description": "ImagePrePullSpec represents the specification of the desired behavior of ImagePrePullJob."
    },
    "v1alpha1ImagePrePullJobStatus": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/v1alpha1TaskState",
          "description": "State represents for the state phase of the ImagePrePullJob."
        },
        "event": {
          "type": "string",
          "description": "Event represents for the event of the ImagePrePullJob."
        },
        "action": {
          "$ref": "#/definitions/v1alpha1TaskAction",
          "description": "Action represents for the action of the ImagePrePullJob."
        },
        "reason": {
          "type": "string",
          "description": "Reason represents for the reason of the ImagePrePullJob."
        },
        "time": {
          "type": "string",
          "format": "int64",
          "description": "Time represents for the running unix timestamp of the ImagePrePullJob, unit: second."
        },
        "status": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImagePrePullJobNodeTaskStatus"
          },
          "description": "Status contains upgrade Status for each edge node."
        }
      },
      "description": "ImagePrePullJobStatus stores the status of ImagePrePullJob.\nContains images prepull status on multiple edge nodes."
    },
    "v1alpha1ImagePrePullJobsCreateBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ImagePrePullJobSpec"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "Worksapce ID path variable"
        }
      }
    },
    "v1alpha1ImagePrePullTemplate": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Images is the image list to be prepull"
        },
        "nodeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NodeNames is a request to select some specific nodes. If it is non-empty,\nthe upgrade job simply select these edge nodes to do upgrade operation.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "labelSelector": {
          "$ref": "#/definitions/apicommonv1alpha1LabelSelector",
          "title": "LabelSelector is a filter to select member clusters by labels.\nIt must match a node's labels for the NodeUpgradeJob to be operated on that node.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "checkItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CheckItem"
          },
          "title": "CheckItems specifies the items need to be checked before the task is executed.\nThe default CheckItems value is disk.\n+optional"
        },
        "failureTolerate": {
          "type": "string",
          "title": "FailureTolerate specifies the task tolerance failure ratio.\nThe default FailureTolerate value is 0.1.\n+optional"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Concurrency specifies the maximum number of edge nodes that can pull images at the same time.\nThe default Concurrency value is 1.\n+optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "TimeoutSeconds limits the duration of the node prepull image job. Default to 300.\n+optional"
        },
        "imageSecret": {
          "type": "string",
          "title": "ImageSecret specifies the secret for image pull if private registry used.\nUse {namespace}/{secretName} in format.\n+optional"
        },
        "retryTimes": {
          "type": "integer",
          "format": "int32",
          "title": "RetryTimes specifies the retry times if image pull failed on each edgenode.\nDefault to 0.\n+optional"
        }
      },
      "title": "ImagePrePullTemplate represents original templates of imagePrePull"
    },
    "v1alpha1JoinHelpResponse": {
      "type": "object",
      "properties": {
        "online": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Command"
          },
          "description": "online represents the online command of the BatchNode."
        },
        "offline": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Command"
          },
          "description": "offline represents the offline command of the BatchNode."
        },
        "helpCommand": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Command"
          },
          "description": "helpCommand represents the help command of the BatchNode."
        }
      },
      "title": "JoinHelpResponse represents join help response"
    },
    "v1alpha1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "Maps a string key to a path within a volume."
    },
    "v1alpha1LabelSelectorOperator": {
      "type": "string",
      "enum": [
        "In",
        "NotIn",
        "Exists",
        "DoesNotExist"
      ],
      "default": "In",
      "description": "A label selector operator is the set of operators that can be used in a selector requirement."
    },
    "v1alpha1Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/v1alpha1LifecycleHandler",
          "title": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/v1alpha1LifecycleHandler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle\nevents. For the PostStart and PreStop lifecycle handlers, management of the container blocks\nuntil the action is complete, unless the container process fails, in which case the handler is aborted."
    },
    "v1alpha1ListBatchNodeResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchNode"
          },
          "description": "BatchNode represents the list of BatchNode."
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "BatchNode information List"
    },
    "v1alpha1ListEdgeApplicationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EdgeApplication"
          },
          "title": "Data represents the response of CustomResource"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for data paging"
        }
      }
    },
    "v1alpha1ListTargetNodeGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1TargetNodeGroupInstance"
          },
          "title": "items represents the response of TargetNodeGroupInstance"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for items paging"
        }
      }
    },
    "v1alpha1LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
        }
      }
    },
    "v1alpha1Manifest": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "The kind of resourcce (no parameter is required. the back-end service is automatically generated)\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "The api version of deployment (no parameter is required. the back-end service is automatically generated)\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1DeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        }
      },
      "title": "message Manifest {\n  oneof resource {\n    Deployment deployment = 1;\n    Service service = 2;\n  }\n}\nmessage Deployment {\n  // \u6839\u636e\u9700\u6c42\u5b9a\u4e49 Deployment \u7684\u5b57\u6bb5\n}\nmessage Service {\n  // \u6839\u636e\u9700\u6c42\u5b9a\u4e49 Service \u7684\u5b57\u6bb5\n}\n \u6682\u65f6Manifest\u53ea\u6709deployment\uff0c\u540e\u7eed\u5982\u679c\u9700\u8981\u6dfb\u52a0\u5176\u4ed6\u8d44\u6e90\u53ef\u53c2\u8003\u4e0a\u65b9\u7684\u5b9a\u4e49"
    },
    "v1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/v1alpha1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "v1alpha1NodeGroupConfiguration": {
      "type": "object",
      "properties": {
        "targetNodeGroup": {
          "type": "string",
          "title": "name is the name of the node group being referenced"
        },
        "overriderConfiguration": {
          "$ref": "#/definitions/v1alpha1OverriderConfiguration",
          "title": "overriderConfiguration is the overriderConfiguration of the node group being referenced"
        }
      }
    },
    "v1alpha1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeSelectorTerm"
          },
          "description": "Required. A list of node selector terms. The terms are ORed."
        }
      },
      "title": "A node selector represents the union of the results of one or more label queries\nover a set of nodes; that is, it represents the OR of the selectors represented\nby the node selector terms.\n+structType=atomic"
    },
    "v1alpha1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
    },
    "v1alpha1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "v1alpha1NodeState": {
      "type": "string",
      "enum": [
        "available",
        "upgrading",
        "rollingback",
        "configUpdating"
      ],
      "default": "available"
    },
    "v1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "NodeName represents the name of the Node."
        },
        "readyStatus": {
          "type": "string",
          "description": "readyStatus represents the status of the Node."
        },
        "selectionStatus": {
          "type": "string",
          "description": "SelectionStatus contains status of the selection result for this node."
        },
        "selectionStatusReason": {
          "type": "string",
          "description": "SelectionStatusReason contains human-readable reason for this SelectionStatus."
        }
      },
      "description": "NodeStatuses represents the status of the Node."
    },
    "v1alpha1NodeUpgradeJob": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion represents the version of the CR."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the kind of the CR."
        },
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "Metadata is standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeUpgradeJobSpec",
          "description": "Spec is NodeUpgradeJob CR spec."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1NodeUpgradeJobStatus",
          "title": "Status is NodeUpgradeJob CR status.\n+optional"
        }
      },
      "description": "NodeUpgradeJob is used to upgrade edge node from cloud side."
    },
    "v1alpha1NodeUpgradeJobListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeUpgradeJob"
          },
          "title": "Items is collection of NodeUpgradeJob"
        },
        "pagination": {
          "$ref": "#/definitions/commonv1alpha1Pagination",
          "description": "returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1NodeUpgradeJobNodeTaskStatus": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "NodeName is the name of edge node."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1NodeState",
          "description": "State represents for the upgrade state phase of the edge node."
        },
        "event": {
          "type": "string",
          "title": "Event represents for the event"
        },
        "action": {
          "$ref": "#/definitions/v1alpha1TaskAction",
          "title": "Action represents for the action"
        },
        "reason": {
          "type": "string",
          "title": "Reason represents for the reason"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "description": "Time represents for the running unix timestamp, unit: second."
        }
      },
      "description": "NodeUpgradeJobNodeTaskStatus stores the status of Upgrade for each edge node."
    },
    "v1alpha1NodeUpgradeJobSpec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version is the EdgeCore version to upgrade."
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "TimeoutSeconds limits the duration of the node upgrade job. Default to 300.\n+optional"
        },
        "nodeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NodeNames is a request to select some specific nodes. If it is non-empty,\nthe upgrade job simply select these edge nodes to do upgrade operation.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "labelSelector": {
          "$ref": "#/definitions/apicommonv1alpha1LabelSelector",
          "title": "LabelSelector is a filter to select member clusters by labels.\nIt must match a node's labels for the NodeUpgradeJob to be operated on that node.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "image": {
          "type": "string",
          "title": "Image specifies a container image name, the image contains: keadm and edgecore.\nkeadm is used as upgradetool, to install the new version of edgecore.\nThe image name consists of registry hostname and repository name, but cannot includes the tag,\nVersion above will be used as the tag.\nIf the registry hostname is empty, docker.io will be used as default.\nThe default image name is: kubeedge/installation-package.\n+optional"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Concurrency specifies the max number of edge nodes that can be upgraded at the same time.\nThe default Concurrency value is 1.\n+optional"
        },
        "checkItems": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "CheckItems specifies the items need to be checked before the task is executed.\nThe default CheckItems value is nil.\n+optional"
        },
        "failureTolerate": {
          "type": "string",
          "title": "FailureTolerate specifies the task tolerance failure ratio.\nThe default FailureTolerate value is 0.1.\n+optional"
        }
      },
      "description": "NodeUpgradeJobSpec is the specification of the desired behavior of the NodeUpgradeJob."
    },
    "v1alpha1NodeUpgradeJobStatus": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/v1alpha1TaskState",
          "description": "State represents for the state phase of the NodeUpgradeJob."
        },
        "currentVersion": {
          "type": "string",
          "description": "CurrentVersion represents for the current status of the EdgeCore."
        },
        "historicVersion": {
          "type": "string",
          "description": "HistoricVersion represents for the historic status of the EdgeCore."
        },
        "event": {
          "type": "string",
          "title": "Event represents for the event of the NodeUpgradeJob"
        },
        "action": {
          "$ref": "#/definitions/v1alpha1TaskAction",
          "description": "Action represents for the action. There are two possible action values: Success, Failure."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents for the reason of the NodeUpgradeJob"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "description": "Time represents for the running unix timestamp of the NodeUpgradeJob, unit: second."
        },
        "status": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeUpgradeJobNodeTaskStatus"
          },
          "description": "Status contains upgrade Status for each edge node."
        }
      },
      "description": "NodeUpgradeJobStatus stores the status of NodeUpgradeJob.\nContains multiple edge nodes upgrade status."
    },
    "v1alpha1NodeUpgradeJobsCreateBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeUpgradeJobSpec"
        }
      }
    },
    "v1alpha1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
    },
    "v1alpha1Operator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "add",
        "remove",
        "replace"
      ],
      "default": "OPERATOR_UNSPECIFIED"
    },
    "v1alpha1Overrider": {
      "type": "object",
      "properties": {
        "imageOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImageOverrider"
          },
          "title": "imageOverriders is an optional field, used to override the image of the resource being referenced"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is an optional field, used to override the replicas of the resource being referenced\n+optional"
        },
        "envOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvOverrider"
          }
        },
        "commandOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        },
        "argsOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        },
        "resourcesOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ResourcesOverrider"
          }
        }
      }
    },
    "v1alpha1OverriderConfiguration": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is the replicas of the node group being referenced"
        },
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ImageConfiguration"
          },
          "title": "imageConfigurations is the image configurations of the node group being referenced"
        },
        "envConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EnvOverrider"
          }
        },
        "commandConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        },
        "argsConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          }
        },
        "resourceConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ResourcesOverrider"
          }
        }
      }
    },
    "v1alpha1OverriderType": {
      "type": "string",
      "enum": [
        "RESOURCE_UNSPECIFIED",
        "IMAGE",
        "ENV",
        "COMMAND",
        "ARGS",
        "RESOURCE",
        "COMMAND_ARGS"
      ],
      "default": "RESOURCE_UNSPECIFIED"
    },
    "v1alpha1PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/apicorev1alpha1LabelSelector",
          "title": "A label query over volumes to consider for binding.\n+optional"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements",
          "title": "Resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n+optional"
        },
        "volumeName": {
          "type": "string",
          "title": "VolumeName is the binding reference to the PersistentVolume backing this claim.\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional"
        },
        "volumeMode": {
          "type": "string",
          "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
        },
        "dataSource": {
          "$ref": "#/definitions/v1alpha1TypedLocalObjectReference",
          "title": "This field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nIf the AnyVolumeDataSource feature gate is enabled, this field will always have\nthe same contents as the DataSourceRef field.\n+optional"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/v1alpha1TypedLocalObjectReference",
          "title": "Specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any local object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the DataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, both fields (DataSource and DataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nThere are two important differences between DataSource and DataSourceRef:\n* While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n(Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n+optional"
        }
      },
      "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
    },
    "v1alpha1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "v1alpha1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "v1alpha1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/apicorev1alpha1LabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"\n+optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/apicorev1alpha1LabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.\nThis field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.\n+optional"
        }
      }
    },
    "v1alpha1PodAntiAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodAffinityTerm"
          },
          "title": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
    },
    "v1alpha1PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional"
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodDNSConfigOption"
          },
          "title": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional"
        }
      },
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
    },
    "v1alpha1PodReadinessGate": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string",
          "description": "ConditionType refers to a condition in the pod's condition list with matching type."
        }
      },
      "title": "PodReadinessGate contains the reference to a pod condition"
    },
    "v1alpha1PodSecurityContext": {
      "type": "object",
      "properties": {
        "seLinuxOptions": {
          "$ref": "#/definitions/v1alpha1SELinuxOptions",
          "title": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/v1alpha1WindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID.  If unspecified, no groups will be added to\nany container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroup": {
          "type": "string",
          "format": "int64",
          "description": "1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.\n+optional",
          "title": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:"
        },
        "sysctls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Sysctl"
          },
          "title": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroupChangePolicy": {
          "type": "string",
          "title": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/v1alpha1SeccompProfile",
          "title": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
    },
    "v1alpha1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Volume"
          },
          "title": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\n+optional\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys"
        },
        "initContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Container"
          },
          "title": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Container"
          },
          "title": "List of containers belonging to the pod.\nContainers cannot currently be added or removed.\nThere must be at least one container in a Pod.\nCannot be updated.\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EphemeralContainer"
          },
          "title": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.\nThis field is beta-level and available on clusters that haven't disabled the EphemeralContainers feature gate.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "restartPolicy": {
          "type": "string",
          "title": "Restart policy for all containers within the pod.\nOne of Always, OnFailure, Never.\nDefault to Always.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.\n+optional"
        },
        "activeDeadlineSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer.\n+optional"
        },
        "dnsPolicy": {
          "type": "string",
          "title": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.\n+optional"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional\n+mapType=atomic"
        },
        "serviceAccountName": {
          "type": "string",
          "title": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional"
        },
        "serviceAccount": {
          "type": "string",
          "title": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead.\n+k8s:conversion-gen=false\n+optional"
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "title": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n+optional"
        },
        "nodeName": {
          "type": "string",
          "title": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements.\n+optional"
        },
        "hostNetwork": {
          "type": "boolean",
          "title": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostPID": {
          "type": "boolean",
          "title": "Use the host's pid namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostIPC": {
          "type": "boolean",
          "title": "Use the host's ipc namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "shareProcessNamespace": {
          "type": "boolean",
          "title": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/v1alpha1PodSecurityContext",
          "title": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\n+optional"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LocalObjectReference"
          },
          "title": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the\nimages used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for\nthem to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info:\nhttps://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod +optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "hostname": {
          "type": "string",
          "title": "Specifies the hostname of the Pod\nIf not specified, the pod's hostname will be set to a system-defined value.\n+optional"
        },
        "subdomain": {
          "type": "string",
          "title": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster\ndomain>\". If not specified, the pod will not have a domainname at all. +optional"
        },
        "affinity": {
          "$ref": "#/definitions/v1alpha1Affinity",
          "title": "If specified, the pod's scheduling constraints\n+optional"
        },
        "schedulerName": {
          "type": "string",
          "title": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.\n+optional"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Toleration"
          },
          "title": "If specified, the pod's tolerations.\n+optional"
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HostAlias"
          },
          "title": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.\n+optional\n+patchMergeKey=ip\n+patchStrategy=merge"
        },
        "priorityClassName": {
          "type": "string",
          "title": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\n+optional"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\n+optional"
        },
        "dnsConfig": {
          "$ref": "#/definitions/v1alpha1PodDNSConfig",
          "title": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.\n+optional"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodReadinessGate"
          },
          "title": "If specified, all readiness gates will be evaluated for pod readiness.\nA pod is ready when all its containers are ready AND\nall conditions specified in the readiness gates have status equal to \"True\"\nMore info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates\n+optional"
        },
        "runtimeClassName": {
          "type": "string",
          "title": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class\nThis is a beta feature as of Kubernetes v1.14.\n+optional"
        },
        "enableServiceLinks": {
          "type": "boolean",
          "title": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.\n+optional"
        },
        "preemptionPolicy": {
          "type": "string",
          "title": "PreemptionPolicy is the Policy for preempting pods with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset.\nThis field is beta-level, gated by the NonPreemptingPriority feature-gate.\n+optional"
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.\nThis field will be autopopulated at admission time by the RuntimeClass admission controller. If\nthe RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.\nThe RuntimeClass admission controller will reject Pod create requests which have the overhead already\nset. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value\ndefined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md\nThis field is beta-level as of Kubernetes v1.18, and is only honored by servers that enable the PodOverhead\nfeature. +optional"
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1TopologySpreadConstraint"
          },
          "title": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.\n+optional\n+patchMergeKey=topologyKey\n+patchStrategy=merge\n+listType=map\n+listMapKey=topologyKey\n+listMapKey=whenUnsatisfiable"
        },
        "setHostnameAsFQDN": {
          "type": "boolean",
          "title": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).\nIn Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of\nstruct utsname). In Windows containers, this means setting the registry value of hostname for the registry key\nHKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN. If a pod does not have FQDN,\nthis has no effect. Default to false. +optional"
        },
        "os": {
          "$ref": "#/definitions/v1alpha1PodOS",
          "description": "Specifies the OS of the containers in the pod.\nSome pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset:\n-securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset:\n- spec.hostPID\n- spec.hostIPC\n- spec.securityContext.seLinuxOptions\n- spec.securityContext.seccompProfile\n- spec.securityContext.fsGroup\n- spec.securityContext.fsGroupChangePolicy\n- spec.securityContext.sysctls\n- spec.shareProcessNamespace\n- spec.securityContext.runAsUser\n- spec.securityContext.runAsGroup\n- spec.securityContext.supplementalGroups\n- spec.containers[*].securityContext.seLinuxOptions\n- spec.containers[*].securityContext.seccompProfile\n- spec.containers[*].securityContext.capabilities\n- spec.containers[*].securityContext.readOnlyRootFilesystem\n- spec.containers[*].securityContext.privileged\n- spec.containers[*].securityContext.allowPrivilegeEscalation\n- spec.containers[*].securityContext.procMount\n- spec.containers[*].securityContext.runAsUser\n- spec.containers[*].securityContext.runAsGroup\n+optional\nThis is an alpha field and requires the IdentifyPodOS feature"
        }
      }
    },
    "v1alpha1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicorev1alpha1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PodSpec",
          "title": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      }
    },
    "v1alpha1Predicate": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path is the path of the field to be compared\n+optional"
        }
      }
    },
    "v1alpha1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
        },
        "preference": {
          "$ref": "#/definitions/v1alpha1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
    },
    "v1alpha1Probe": {
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n+optional"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/v1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/v1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/v1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        },
        "grpc": {
          "$ref": "#/definitions/v1alpha1GRPCAction",
          "title": "GRPC specifies an action involving a GRPC port.\nThis is an alpha field and requires enabling GRPCContainerProbe feature gate.\n+featureGate=GRPCContainerProbe\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic."
    },
    "v1alpha1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes, optional for env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        },
        "divisor": {
          "type": "string",
          "title": "Specifies the output format of the exposed resources, defaults to \"1\"\n+optional"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
    },
    "v1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "v1alpha1ResourcesOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements"
        }
      }
    },
    "v1alpha1SELinuxOptions": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User is a SELinux user label that applies to the container.\n+optional"
        },
        "role": {
          "type": "string",
          "title": "Role is a SELinux role label that applies to the container.\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Type is a SELinux type label that applies to the container.\n+optional"
        },
        "level": {
          "type": "string",
          "title": "Level is SELinux level label that applies to the container.\n+optional"
        }
      },
      "title": "SELinuxOptions are the labels to be applied to the container"
    },
    "v1alpha1SeccompProfile": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Localhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.\n+unionDiscriminator",
          "title": "type indicates which kind of seccomp profile will be applied.\nValid options are:"
        },
        "localhostProfile": {
          "type": "string",
          "title": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\".\n+optional"
        }
      },
      "title": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.\n+union"
    },
    "v1alpha1SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Secret to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret must be defined\n+optional"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\n\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "v1alpha1SecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the secret in the pod's namespace to select from."
        },
        "key": {
          "type": "string",
          "description": "The key of the secret to select from.  Must be a valid secret key."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "v1alpha1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      }
    },
    "v1alpha1SecurityContext": {
      "type": "object",
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/v1alpha1Capabilities",
          "title": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "privileged": {
          "type": "boolean",
          "title": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/v1alpha1SELinuxOptions",
          "title": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/v1alpha1WindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "title": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "title": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "procMount": {
          "type": "string",
          "title": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/v1alpha1SeccompProfile",
          "title": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence."
    },
    "v1alpha1SingleJoinConfigsCreateBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "SingleJoinConfigMetadata represents the metadata of the SingleJoinConfig."
        },
        "spec": {
          "$ref": "#/definitions/joinconfigSingleJoinConfigSpec",
          "description": "SingleJoinConfigSpec represents the spec of the SingleJoinConfig."
        }
      },
      "title": "CreateSingleJoinConfigRequest represents create request to create one"
    },
    "v1alpha1SingleJoinConfigsUpdateBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apicommonv1alpha1ObjectMeta",
          "description": "SingleJoinConfigMetadata represents the metadata of the SingleJoinConfig."
        },
        "spec": {
          "$ref": "#/definitions/joinconfigSingleJoinConfigSpec",
          "description": "SingleJoinConfigSpec represents the spec of the SingleJoinConfig."
        }
      },
      "title": "UpdateSingleJoinConfigRequest represents update request to update one"
    },
    "v1alpha1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "title": "TCPSocketAction describes an action based on opening a socket"
    },
    "v1alpha1TargetNodeGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the name of the node group being referenced\n+optional"
        },
        "overriders": {
          "$ref": "#/definitions/v1alpha1Overrider",
          "title": "overriders is an optional field, used to override the resource being referenced\n+optional"
        }
      }
    },
    "v1alpha1TargetNodeGroupInstance": {
      "type": "object",
      "properties": {
        "deploymentName": {
          "type": "string",
          "title": "deploymentName is the name of the deployment being referenced"
        },
        "nodeGroupName": {
          "type": "string",
          "title": "nodeGroupName is the name of the node group being referenced"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is the replicas of the deployment being referenced"
        },
        "status": {
          "$ref": "#/definitions/batchv1alpha1Condition",
          "title": "status is the status of the deployment being referenced"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "images is the images of the deployment being referenced"
        }
      }
    },
    "v1alpha1TaskAction": {
      "type": "string",
      "enum": [
        "success",
        "failure"
      ],
      "default": "success"
    },
    "v1alpha1TaskState": {
      "type": "string",
      "enum": [
        "init",
        "checking",
        "successful",
        "failed",
        "pause"
      ],
      "default": "init",
      "description": "TaskState describe the status of node task."
    },
    "v1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.\n+optional"
        },
        "operator": {
          "type": "string",
          "title": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.\n+optional"
        },
        "value": {
          "type": "string",
          "title": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.\n+optional"
        },
        "effect": {
          "type": "string",
          "title": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n+optional"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.\n+optional"
        }
      },
      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
    },
    "v1alpha1TopologySpreadConstraint": {
      "type": "object",
      "properties": {
        "maxSkew": {
          "type": "integer",
          "format": "int32",
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 1/1/0:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|   P   |   P   |       |\n+-------+-------+-------+\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1;\nscheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
        },
        "topologyKey": {
          "type": "string",
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nIt's a required field."
        },
        "whenUnsatisfiable": {
          "type": "string",
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n| P P P |   P   |   P   |\n+-------+-------+-------+\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
        },
        "labelSelector": {
          "$ref": "#/definitions/apicorev1alpha1LabelSelector",
          "title": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.\n+optional"
        }
      },
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
    },
    "v1alpha1TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of resource being referenced"
        }
      },
      "title": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n+structType=atomic"
    },
    "v1alpha1UpdateTargetNodeGroupsResponse": {
      "type": "object",
      "properties": {
        "overriderConfiguration": {
          "$ref": "#/definitions/v1alpha1OverriderConfiguration",
          "description": "OverriderConfigration is the specification of the desired behavior of the TargetNodeGroupInstance."
        }
      }
    },
    "v1alpha1VerifyEdgeApplicationImageResponse": {
      "type": "object",
      "properties": {
        "defaultImages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "defaultImages represents the template container images of EdgeApplication."
        },
        "newImages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "containerImages represents the container images of EdgeApplication."
        }
      }
    },
    "v1alpha1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Volume's name.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "hostPath": {
          "$ref": "#/definitions/v1alpha1HostPathVolumeSource",
          "title": "HostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write.\n+optional"
        },
        "emptyDir": {
          "$ref": "#/definitions/v1alpha1EmptyDirVolumeSource",
          "title": "EmptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/v1alpha1GCEPersistentDiskVolumeSource",
          "title": "GCEPersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/v1alpha1AWSElasticBlockStoreVolumeSource",
          "title": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        },
        "gitRepo": {
          "$ref": "#/definitions/v1alpha1GitRepoVolumeSource",
          "title": "GitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.\n+optional"
        },
        "secret": {
          "$ref": "#/definitions/v1alpha1SecretVolumeSource",
          "title": "Secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "nfs": {
          "$ref": "#/definitions/v1alpha1NFSVolumeSource",
          "title": "NFS represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        },
        "iscsi": {
          "$ref": "#/definitions/v1alpha1ISCSIVolumeSource",
          "title": "ISCSI represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md\n+optional"
        },
        "glusterfs": {
          "$ref": "#/definitions/v1alpha1GlusterfsVolumeSource",
          "title": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md\n+optional"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional"
        },
        "rbd": {
          "$ref": "#/definitions/v1alpha1RBDVolumeSource",
          "title": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md\n+optional"
        },
        "flexVolume": {
          "$ref": "#/definitions/v1alpha1FlexVolumeSource",
          "title": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional"
        },
        "cinder": {
          "$ref": "#/definitions/v1alpha1CinderVolumeSource",
          "title": "Cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "cephfs": {
          "$ref": "#/definitions/v1alpha1CephFSVolumeSource",
          "title": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional"
        },
        "flocker": {
          "$ref": "#/definitions/v1alpha1FlockerVolumeSource",
          "title": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control\nservice being running +optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v1alpha1DownwardAPIVolumeSource",
          "title": "DownwardAPI represents downward API about the pod that should populate this volume\n+optional"
        },
        "fc": {
          "$ref": "#/definitions/v1alpha1FCVolumeSource",
          "title": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional"
        },
        "azureFile": {
          "$ref": "#/definitions/v1alpha1AzureFileVolumeSource",
          "title": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/v1alpha1ConfigMapVolumeSource",
          "title": "ConfigMap represents a configMap that should populate this volume\n+optional"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/v1alpha1VsphereVirtualDiskVolumeSource",
          "title": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional"
        },
        "quobyte": {
          "$ref": "#/definitions/v1alpha1QuobyteVolumeSource",
          "title": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional"
        },
        "azureDisk": {
          "$ref": "#/definitions/v1alpha1AzureDiskVolumeSource",
          "title": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/v1alpha1PhotonPersistentDiskVolumeSource",
          "title": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "projected": {
          "$ref": "#/definitions/v1alpha1ProjectedVolumeSource",
          "title": "Items for all in one resources secrets, configmaps, and downward API"
        },
        "portworxVolume": {
          "$ref": "#/definitions/v1alpha1PortworxVolumeSource",
          "title": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional"
        },
        "scaleIO": {
          "$ref": "#/definitions/v1alpha1ScaleIOVolumeSource",
          "title": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "storageos": {
          "$ref": "#/definitions/v1alpha1StorageOSVolumeSource",
          "title": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "csi": {
          "$ref": "#/definitions/v1alpha1CSIVolumeSource",
          "title": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers\n(Beta feature). +optional"
        },
        "ephemeral": {
          "$ref": "#/definitions/v1alpha1EphemeralVolumeSource",
          "description": "Ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.\n\n+optional"
        }
      }
    },
    "v1alpha1VolumeDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name must match the name of a persistentVolumeClaim in the pod"
        },
        "devicePath": {
          "type": "string",
          "description": "devicePath is the path inside of the container that the device will be mapped to."
        }
      },
      "description": "volumeDevice describes a mapping of a raw block device within a container."
    },
    "v1alpha1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's\nenvironment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount describes a mounting of a Volume within a container."
    },
    "v1alpha1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/v1alpha1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred\nnode(s)"
    },
    "v1alpha1WindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpecName": {
          "type": "string",
          "title": "GMSACredentialSpecName is the name of the GMSA credential spec to use.\n+optional"
        },
        "gmsaCredentialSpec": {
          "type": "string",
          "title": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.\n+optional"
        },
        "runAsUserName": {
          "type": "string",
          "title": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "hostProcess": {
          "type": "boolean",
          "title": "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true.\n+optional"
        }
      },
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
    },
    "v1alpha1WorkloadStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "$ref": "#/definitions/batchv1alpha1Condition",
          "title": "conditions is an optional field, used to indicate the status of the resource being referenced\n+optional"
        },
        "identifier": {
          "$ref": "#/definitions/v1alpha1Identifier",
          "title": "identifier is an optional field, used to identify the resource being referenced\n+optional"
        }
      }
    },
    "commonAWSElasticBlockStoreVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "title": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\".\nIf omitted, the default is \"false\".\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        }
      }
    },
    "commonAzureDiskVolumeSource": {
      "type": "object",
      "properties": {
        "diskName": {
          "type": "string",
          "title": "The Name of the data disk in the blob storage"
        },
        "diskURI": {
          "type": "string",
          "title": "The URI the data disk in the blob storage"
        },
        "cachingMode": {
          "type": "string",
          "title": "Host Caching mode: None, Read Only, Read Write.\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account\nManaged: azure managed data disk (only in managed availability set). defaults to shared"
        }
      },
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
    },
    "commonAzureFileVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "the name of secret that contains Azure Storage Account Name and Key"
        },
        "shareName": {
          "type": "string",
          "title": "Share Name"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
    },
    "commonBatchResourceResponse": {
      "type": "object",
      "properties": {
        "successNum": {
          "type": "integer",
          "format": "int32",
          "description": "SuccessNum represents success record."
        },
        "failNum": {
          "type": "integer",
          "format": "int32",
          "description": "FailNum represents fail record."
        },
        "taskResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonTaskResultSpec"
          },
          "title": "TaskResultSpec represents the task result data"
        }
      }
    },
    "commonCSIVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string",
          "description": "Driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Specifies a read-only configuration for the volume.\nDefaults to false (read/write).\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.\n+optional"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "VolumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.\n+optional"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "NodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.\n+optional"
        }
      },
      "title": "Represents a source location of a volume to mount, managed by an external CSI driver"
    },
    "commonCephFSVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        },
        "path": {
          "type": "string",
          "title": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional"
        },
        "user": {
          "type": "string",
          "title": "Optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "secretFile": {
          "type": "string",
          "title": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        }
      },
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod\nCephfs volumes do not support ownership management or SELinux relabeling."
    },
    "commonCinderVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "volume id used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "Optional: points to a secret object containing parameters used to connect\nto OpenStack.\n+optional"
        }
      },
      "description": "Represents a cinder volume resource in Openstack.\nA Cinder volume must exist before mounting to a container.\nThe volume must also be in the same region as the kubelet.\nCinder volumes support ownership management and SELinux relabeling."
    },
    "commonConfigMapProjection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonKeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode."
    },
    "commonContainerPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        },
        "hostIP": {
          "type": "string",
          "title": "What host IP to bind the external port to.\n+optional"
        }
      },
      "description": "ContainerPort represents a network port in a single container."
    },
    "commonDataSpec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "commonDeploymentSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/v2commonLabelSelector",
          "description": "Label selector for pods. Existing ReplicaSets whose pods are\nselected by this will be the ones affected by this deployment.\nIt must match the pod template's labels."
        },
        "template": {
          "$ref": "#/definitions/v2commonPodTemplateSpec",
          "description": "Template describes the pods that will be created."
        },
        "strategy": {
          "$ref": "#/definitions/commonDeploymentStrategy",
          "title": "The deployment strategy to use to replace existing pods with new ones.\n+optional\n+patchStrategy=retainKeys"
        },
        "minReadySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum number of seconds for which a newly created pod should be ready\nwithout any of its container crashing, for it to be considered available.\nDefaults to 0 (pod will be considered available as soon as it is ready)\n+optional"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "title": "The number of old ReplicaSets to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 10.\n+optional"
        },
        "paused": {
          "type": "boolean",
          "title": "Indicates that the deployment is paused.\n+optional"
        },
        "progressDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in seconds for a deployment to make progress before it\nis considered to be failed. The deployment controller will continue to\nprocess failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status. Note that progress will\nnot be estimated during the time a deployment is paused. Defaults to 600s."
        }
      }
    },
    "commonDeploymentStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.\n+optional"
        },
        "rollingUpdate": {
          "$ref": "#/definitions/commonRollingUpdateDeployment",
          "title": "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be.\n+optional"
        }
      },
      "description": "DeploymentStrategy describes how to replace existing pods with new ones."
    },
    "commonDownwardAPIProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonDownwardAPIVolumeFile"
          },
          "title": "Items is a list of DownwardAPIVolume file\n+optional"
        }
      },
      "description": "Represents downward API info for projecting into a projected volume.\nNote that this is identical to a downwardAPI volume source without the default\nmode."
    },
    "commonEphemeralContainerCommon": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ephemeral container specified as a DNS_LABEL.\nThis name must be unique among all containers, init containers and ephemeral containers."
        },
        "image": {
          "type": "string",
          "title": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonContainerPort"
          },
          "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonEnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonEnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/v2commonResourceRequirements",
          "title": "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources\nalready allocated to the pod.\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonVolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonVolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/v2commonProbe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/v2commonProbe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/v2commonProbe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/v2commonLifecycle",
          "title": "Lifecycle is not allowed for ephemeral containers.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/v2commonSecurityContext",
          "title": "Optional: SecurityContext defines the security options the ephemeral container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "EphemeralContainerCommon is a copy of all fields in Container to be inlined in\nEphemeralContainer. This separate type allows easy conversion from EphemeralContainer\nto Container and allows separate documentation for the fields of EphemeralContainer.\nWhen a new field is added to Container it must be added here as well."
    },
    "commonEphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/commonPersistentVolumeClaimTemplate",
          "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil."
        }
      },
      "description": "Represents an ephemeral volume that is handled by a normal storage driver."
    },
    "commonFCVolumeSource": {
      "type": "object",
      "properties": {
        "targetWWNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional: FC target worldwide names (WWNs)\n+optional"
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: FC target lun number\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "wwids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional"
        }
      },
      "description": "Represents a Fibre Channel volume.\nFibre Channel volumes can only be mounted as read/write once.\nFibre Channel volumes support ownership management and SELinux relabeling."
    },
    "commonFieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      }
    },
    "commonFlexVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string",
          "description": "Driver is the name of the driver to use for this volume."
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "Optional: SecretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional: Extra command options if any.\n+optional"
        }
      },
      "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
    },
    "commonFlockerVolumeSource": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string",
          "title": "Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated\n+optional"
        },
        "datasetUUID": {
          "type": "string",
          "title": "UUID of the dataset. This is unique identifier of a Flocker dataset\n+optional"
        }
      },
      "description": "Represents a Flocker volume mounted by the Flocker agent.\nOne and only one of datasetName and datasetUUID should be set.\nFlocker volumes do not support ownership management or SELinux relabeling."
    },
    "commonGCEPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "pdName": {
          "type": "string",
          "title": "Unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "title": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        }
      }
    },
    "commonGRPCAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535."
        },
        "service": {
          "type": "string",
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.\n+optional\n+default=\"\""
        }
      }
    },
    "commonGitRepoVolumeSource": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "title": "Repository URL"
        },
        "revision": {
          "type": "string",
          "title": "Commit hash for the specified revision.\n+optional"
        },
        "directory": {
          "type": "string",
          "title": "Target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional"
        }
      }
    },
    "commonGlusterfsVolumeSource": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "string",
          "title": "EndpointsName is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        },
        "path": {
          "type": "string",
          "title": "Path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n+optional"
        }
      },
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod.\nGlusterfs volumes do not support ownership management or SELinux relabeling."
    },
    "commonHTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The header field name"
        },
        "value": {
          "type": "string",
          "title": "The header field value"
        }
      },
      "title": "HTTPHeader describes a custom header to be used in HTTP probes"
    },
    "commonISCSIVolumeSource": {
      "type": "object",
      "properties": {
        "targetPortal": {
          "type": "string",
          "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
        },
        "iqn": {
          "type": "string",
          "description": "Target iSCSI Qualified Name."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "iSCSI Target Lun number."
        },
        "iscsiInterface": {
          "type": "string",
          "title": "iSCSI Interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional"
        },
        "chapAuthDiscovery": {
          "type": "boolean",
          "title": "whether support iSCSI Discovery CHAP authentication\n+optional"
        },
        "chapAuthSession": {
          "type": "boolean",
          "title": "whether support iSCSI Session CHAP authentication\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "CHAP Secret for iSCSI target and initiator authentication\n+optional"
        },
        "initiatorName": {
          "type": "string",
          "title": "Custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection.\n+optional"
        }
      }
    },
    "commonLabelSelectorOperator": {
      "type": "string",
      "enum": [
        "In",
        "NotIn",
        "Exists",
        "DoesNotExist"
      ],
      "default": "In",
      "description": "A label selector operator is the set of operators that can be used in a selector requirement."
    },
    "commonLifecycleHandler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/v2commonExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/v2commonHTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/v2commonTCPSocketAction",
          "title": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.\n+optional"
        }
      },
      "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle\nhook. One and only one of the fields, except TCPSocket must be specified."
    },
    "commonManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/commonTime",
          "title": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/commonFieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      }
    },
    "commonNFSVolumeSource": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "path": {
          "type": "string",
          "title": "Path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force\nthe NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        }
      },
      "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling."
    },
    "commonPersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/v2commonLabelSelector",
          "title": "A label query over volumes to consider for binding.\n+optional"
        },
        "resources": {
          "$ref": "#/definitions/v2commonResourceRequirements",
          "title": "Resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n+optional"
        },
        "volumeName": {
          "type": "string",
          "title": "VolumeName is the binding reference to the PersistentVolume backing this claim.\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional"
        },
        "volumeMode": {
          "type": "string",
          "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
        },
        "dataSource": {
          "$ref": "#/definitions/commonTypedLocalObjectReference",
          "title": "This field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nIf the AnyVolumeDataSource feature gate is enabled, this field will always have\nthe same contents as the DataSourceRef field.\n+optional"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/commonTypedLocalObjectReference",
          "title": "Specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any local object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the DataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, both fields (DataSource and DataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nThere are two important differences between DataSource and DataSourceRef:\n* While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n(Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n+optional"
        }
      },
      "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
    },
    "commonPersistentVolumeClaimTemplate": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.\n\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/commonPersistentVolumeClaimSpec",
          "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
        }
      },
      "description": "PersistentVolumeClaimTemplate is used to produce\nPersistentVolumeClaim objects as part of an EphemeralVolumeSource."
    },
    "commonPhotonPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "pdID": {
          "type": "string",
          "title": "ID that identifies Photon Controller persistent disk"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      },
      "description": "Represents a Photon Controller persistent disk resource."
    },
    "commonPodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required."
        },
        "value": {
          "type": "string",
          "title": "+optional"
        }
      },
      "description": "PodDNSConfigOption defines DNS resolver options of a pod."
    },
    "commonPodOS": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the operating system. The currently supported values are linux and windows.\nAdditional value may be defined in future and can be one of:\nhttps://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration\nClients should expect to handle additional values and treat unrecognized values in this field as os: null"
        }
      },
      "description": "PodOS defines the OS parameters of a pod."
    },
    "commonPortworxVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "VolumeID uniquely identifies a Portworx volume"
        },
        "fsType": {
          "type": "string",
          "description": "FSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "description": "PortworxVolumeSource represents a Portworx volume resource."
    },
    "commonProjectedVolumeSource": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonVolumeProjection"
          },
          "title": "list of volume projections\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "Represents a projected volume source"
    },
    "commonQuobyteVolumeSource": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "title": "Registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
        },
        "volume": {
          "type": "string",
          "description": "Volume is a string that references an already created Quobyte volume by name."
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional"
        },
        "user": {
          "type": "string",
          "title": "User to map volume access to\nDefaults to serivceaccount user\n+optional"
        },
        "group": {
          "type": "string",
          "title": "Group to map volume access to\nDefault is no group\n+optional"
        },
        "tenant": {
          "type": "string",
          "title": "Tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin\n+optional"
        }
      },
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod.\nQuobyte volumes do not support ownership management or SELinux relabeling."
    },
    "commonRBDVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "image": {
          "type": "string",
          "title": "The rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "pool": {
          "type": "string",
          "title": "The rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "user": {
          "type": "string",
          "title": "The rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "keyring": {
          "type": "string",
          "title": "Keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "SecretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        }
      }
    },
    "commonRollingUpdateDeployment": {
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "type": "string",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.\n+optional"
        },
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "commonScaleIOVolumeSource": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "The host address of the ScaleIO API Gateway."
        },
        "system": {
          "type": "string",
          "description": "The name of the storage system as configured in ScaleIO."
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "description": "SecretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
        },
        "sslEnabled": {
          "type": "boolean",
          "title": "Flag to enable/disable SSL communication with Gateway, default false\n+optional"
        },
        "protectionDomain": {
          "type": "string",
          "title": "The name of the ScaleIO Protection Domain for the configured storage.\n+optional"
        },
        "storagePool": {
          "type": "string",
          "title": "The ScaleIO Storage Pool associated with the protection domain.\n+optional"
        },
        "storageMode": {
          "type": "string",
          "title": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional"
        },
        "volumeName": {
          "type": "string",
          "description": "The name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "title": "ScaleIOVolumeSource represents a persistent ScaleIO volume"
    },
    "commonSecretProjection": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/v2commonLocalObjectReference"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonKeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode."
    },
    "commonServiceAccountTokenProjection": {
      "type": "object",
      "properties": {
        "audience": {
          "type": "string",
          "title": "Audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional"
        },
        "expirationSeconds": {
          "type": "string",
          "format": "int64",
          "title": "ExpirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional"
        },
        "path": {
          "type": "string",
          "description": "Path is the path relative to the mount point of the file to project the\ntoken into."
        }
      },
      "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise)."
    },
    "commonStorageOSVolumeSource": {
      "type": "object",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
        },
        "volumeNamespace": {
          "type": "string",
          "title": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonLocalObjectReference",
          "title": "SecretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.\n+optional"
        }
      },
      "description": "Represents a StorageOS persistent volume resource."
    },
    "commonSysctl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of a property to set"
        },
        "value": {
          "type": "string",
          "title": "Value of a property to set"
        }
      },
      "title": "Sysctl defines a kernel parameter to be set"
    },
    "commonTaskResultSpec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "errmsg": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      }
    },
    "commonTime": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      }
    },
    "commonTypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of resource being referenced"
        }
      },
      "title": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n+structType=atomic"
    },
    "commonVolumeProjection": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/commonSecretProjection",
          "title": "information about the secret data to project\n+optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/commonDownwardAPIProjection",
          "title": "information about the downwardAPI data to project\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/commonConfigMapProjection",
          "title": "information about the configMap data to project\n+optional"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/commonServiceAccountTokenProjection",
          "title": "information about the serviceAccountToken data to project\n+optional"
        }
      },
      "title": "Projection that may be projected along with other supported volume types"
    },
    "commonVsphereVirtualDiskVolumeSource": {
      "type": "object",
      "properties": {
        "volumePath": {
          "type": "string",
          "title": "Path that identifies vSphere volume vmdk"
        },
        "fsType": {
          "type": "string",
          "title": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "storagePolicyName": {
          "type": "string",
          "title": "Storage Policy Based Management (SPBM) profile name.\n+optional"
        },
        "storagePolicyID": {
          "type": "string",
          "title": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional"
        }
      },
      "description": "Represents a vSphere volume resource."
    },
    "corev1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1NodeStatusStatus",
          "description": "Status represents the current information/status of node."
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeAddress"
          },
          "description": "IP Address reachable to the node."
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeStatusRole"
          },
          "description": "The roles of current node."
        },
        "cpuCapacity": {
          "type": "string",
          "format": "int64",
          "description": "CpuCapacity is the total cpu of the node. Unit: m."
        },
        "cpuAllocated": {
          "type": "number",
          "format": "double",
          "description": "CpuAllocated is the total pod cpu request on the node. Unit: %."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "CpuUsage is the cpu usage on the node. Unit: %."
        },
        "memoryCapacity": {
          "type": "string",
          "format": "int64",
          "description": "MemoryCapacity is the total memory of the node. Unit: byte."
        },
        "memoryAllocated": {
          "type": "number",
          "format": "double",
          "description": "MemoryAllocated is the total pod memory request on the node. Unit: %."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "MemoryUsage is the memory usage on the node. Unit: %."
        },
        "systemInfo": {
          "$ref": "#/definitions/v1alpha1NodeSystemInfo",
          "description": "Set of ids/uuids to uniquely identify the node."
        },
        "allowedPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "AllowedPodNumber is the max pod number allowed on the node."
        },
        "podAllocated": {
          "type": "integer",
          "format": "int32",
          "description": "PodAllocated is the pod number already allocated on the node."
        },
        "readyPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "ReadyPodNumber is the ready pod number on the node."
        },
        "storageCapacity": {
          "type": "string",
          "format": "int64",
          "description": "StorageCapacity is the total storage of the node. Unit: byte."
        },
        "storageAllocated": {
          "type": "string",
          "format": "int64",
          "description": "StorageAllocated is the total pod storage request on the node. Unit: byte."
        },
        "storageUsage": {
          "type": "number",
          "format": "double",
          "description": "StorageUsage is the usage of storage space on the node. Unit: %."
        },
        "storageDriver": {
          "type": "string",
          "description": "StorageDriver is the docker storage driver (e.g. overlay2)."
        },
        "gpuTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_total is gpu total number."
        },
        "gpuAllocated": {
          "type": "string",
          "format": "int64",
          "description": "gpu_allocated is gpu allocated number."
        },
        "gpuMemoryTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_memory_total is all gpu memory number with node. Unit: byte."
        },
        "gpuMemoryAllocated": {
          "type": "string",
          "format": "int64",
          "title": "gpu_memory_allocated is allocated gpu memory number with node. Unit: byte"
        },
        "gpuCoreUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_core_usage is the usage rate of gpu"
        },
        "gpuMemoryUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_memory_usage is the usage rate of gpu video memory"
        }
      },
      "description": "NodeStatus is information about the current status of a node."
    },
    "edgeappCommandArgsOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/edgeappOperator"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "edgeappContainerArgs": {
      "type": "object",
      "properties": {
        "argsConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        }
      }
    },
    "edgeappContainerCommand": {
      "type": "object",
      "properties": {
        "commandConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        }
      }
    },
    "edgeappContainerCommandArgs": {
      "type": "object",
      "properties": {
        "commandConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        },
        "argsConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        }
      }
    },
    "edgeappContainerEnv": {
      "type": "object",
      "properties": {
        "envConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappEnvOverrider"
          }
        }
      }
    },
    "edgeappContainerResource": {
      "type": "object",
      "properties": {
        "resourceConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappResourcesOverrider"
          }
        }
      }
    },
    "edgeappDeployTargetNodeGroupResponse": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/edgeappNodeGroupConfiguration",
          "description": "NodeGroupInstance represents the name of TargetNodeGroupInstance."
        }
      }
    },
    "edgeappEdgeApplication": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "The kind of resourcce\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "apiVersion defines the versioned schema of this representation of an object.\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "title": "metadata is the standard object's metadata.\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/edgeappEdgeApplicationSpec",
          "title": "spec is the specification of the desired behavior of the EdgeApplication.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/edgeappEdgeApplicationStatus",
          "title": "status is the most recently observed status of the EdgeApplication.\n+optional"
        }
      }
    },
    "edgeappEdgeApplicationSpec": {
      "type": "object",
      "properties": {
        "workloadScope": {
          "$ref": "#/definitions/edgeappEdgeApplicationWorkloadScope",
          "title": "workloadScope is an optional field, used to specify the scope of the resource being referenced\n+optional"
        },
        "workloadTemplate": {
          "$ref": "#/definitions/edgeappEdgeApplicationWorkloadTemplate",
          "title": "workloadTemplate is an optional field, used to specify the template of the resource being referenced\n+optional"
        }
      }
    },
    "edgeappEdgeApplicationStatus": {
      "type": "object",
      "properties": {
        "workloadStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappWorkloadStatus"
          },
          "title": "workloadStatus is an optional field, used to indicate the status of the resource being referenced\n+optional"
        }
      }
    },
    "edgeappEdgeApplicationWorkloadScope": {
      "type": "object",
      "properties": {
        "targetNodeGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappTargetNodeGroup"
          },
          "title": "targetNodeGroups is an optional field, used to specify the node groups of the resource being referenced"
        }
      }
    },
    "edgeappEdgeApplicationWorkloadTemplate": {
      "type": "object",
      "properties": {
        "manifests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappManifest"
          },
          "title": "manifests is an optional field, used to specify the manifests of the resource being referenced"
        }
      }
    },
    "edgeappEnvOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/edgeappOperator"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonEnvVar"
          }
        }
      }
    },
    "edgeappGetEdgeAppCheckResultResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "edgeappGetEdgeAppOverrideFeaturesResponse": {
      "type": "object",
      "properties": {
        "replicasEnable": {
          "type": "boolean"
        },
        "imagesEnable": {
          "type": "boolean"
        },
        "envsEnable": {
          "type": "boolean"
        },
        "commandArgsEnable": {
          "type": "boolean"
        },
        "resourcesEnable": {
          "type": "boolean"
        }
      }
    },
    "edgeappGetTargetNodeGroupResponse": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/edgeappNodeGroupConfiguration",
          "description": "overrider is the specification of the desired behavior of the TargetNodeGroupInstance."
        }
      }
    },
    "edgeappIdentifier": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "group is the group of the resource being referenced\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "kind is kind of the resource being referenced\n+optional"
        },
        "name": {
          "type": "string",
          "title": "name is the name of resource being referenced\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "namespace is the namespace of the resource being referenced\n+optional"
        },
        "ordinal": {
          "type": "integer",
          "format": "int32",
          "title": "ordinal is an optional field, used to differentiate resources of the same kind within a manifest\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "resource is the resource type of the resource being referenced\n+optional"
        },
        "version": {
          "type": "string",
          "title": "version is the version of the resource being referenced\n+optional"
        }
      }
    },
    "edgeappImageComponent": {
      "type": "string",
      "enum": [
        "COMPONENT_UNSPECIFIED",
        "Registry",
        "Repository",
        "Tag"
      ],
      "default": "COMPONENT_UNSPECIFIED"
    },
    "edgeappImageConfiguration": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/edgeappImageComponent",
          "title": "component is the component of the image being referenced\n+optional"
        },
        "operator": {
          "$ref": "#/definitions/edgeappOperator",
          "title": "operator is the operator of the image being referenced\n+optional"
        },
        "containerIndex": {
          "type": "integer",
          "format": "int32",
          "title": "predicate is the predicate of the image being referenced\n+optional"
        },
        "value": {
          "type": "string",
          "title": "value is the value of the image being referenced"
        }
      }
    },
    "edgeappImageOverrider": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/edgeappImageComponent",
          "title": "component is the component of the image being referenced\n+optional"
        },
        "operator": {
          "$ref": "#/definitions/edgeappOperator",
          "title": "operator is the operator of the image being referenced\n+optional"
        },
        "predicate": {
          "$ref": "#/definitions/edgeappPredicate",
          "title": "predicate is the predicate of the image being referenced\n+optional"
        },
        "value": {
          "type": "string",
          "title": "value is the value of the image being referenced"
        }
      }
    },
    "edgeappListEdgeApplicationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappEdgeApplication"
          },
          "title": "Data represents the response of CustomResource"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for data paging"
        }
      }
    },
    "edgeappListFilterNodesByNodeGroupRequestNodePhase": {
      "type": "string",
      "enum": [
        "NODE_PHASE_UNSPECIFIED",
        "Ready",
        "Not_Ready",
        "Unknown"
      ],
      "default": "NODE_PHASE_UNSPECIFIED",
      "description": "Phase includes Ready, NotReady, and Unknown.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown."
    },
    "edgeappListFilterNodesByNodeGroupRequestRole": {
      "type": "string",
      "enum": [
        "NODE_ROLE_UNSPECIFIED",
        "CONTROL_PLANE",
        "WORKER"
      ],
      "default": "NODE_ROLE_UNSPECIFIED",
      "description": "Role includes control-plane and worker.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload."
    },
    "edgeappListNodeGroupResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappNodeGroup"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v2commonPagination"
        }
      }
    },
    "edgeappListTargetNodeGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappTargetNodeGroupInstance"
          },
          "title": "items represents the response of TargetNodeGroupInstance"
        },
        "pagination": {
          "$ref": "#/definitions/apitypesPagination",
          "title": "Pagination is for items paging"
        }
      }
    },
    "edgeappManifest": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "The kind of resourcce (no parameter is required. the back-end service is automatically generated)\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "The api version of deployment (no parameter is required. the back-end service is automatically generated)\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/commonDeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        }
      },
      "title": "message Manifest {\n  oneof resource {\n    Deployment deployment = 1;\n    Service service = 2;\n  }\n}\nmessage Deployment {\n  // \u6839\u636e\u9700\u6c42\u5b9a\u4e49 Deployment \u7684\u5b57\u6bb5\n}\nmessage Service {\n  // \u6839\u636e\u9700\u6c42\u5b9a\u4e49 Service \u7684\u5b57\u6bb5\n}\n \u6682\u65f6Manifest\u53ea\u6709deployment\uff0c\u540e\u7eed\u5982\u679c\u9700\u8981\u6dfb\u52a0\u5176\u4ed6\u8d44\u6e90\u53ef\u53c2\u8003\u4e0a\u65b9\u7684\u5b9a\u4e49"
    },
    "edgeappNodeGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of NodeGroup."
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreateTimestamp is a timestamp representing the server time when this object was created."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeappNodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        },
        "status": {
          "$ref": "#/definitions/edgeappNodeGroupStatus",
          "description": "NodeGroupStatus represents the status of the NodeGroup."
        }
      },
      "description": "NodeGroup represents the NodeGroup CR."
    },
    "edgeappNodeGroupConfiguration": {
      "type": "object",
      "properties": {
        "targetNodeGroup": {
          "type": "string",
          "title": "name is the name of the node group being referenced"
        },
        "overriderConfiguration": {
          "$ref": "#/definitions/edgeappOverriderConfiguration",
          "title": "overriderConfiguration is the overriderConfiguration of the node group being referenced"
        }
      }
    },
    "edgeappNodeGroupSpec": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Nodes contains names of all the nodes in the nodegroup."
        },
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "MatchLabels are used to select nodes that have these labels."
        },
        "topologyEnabled": {
          "type": "boolean",
          "description": "TopologyEnabled indicates whether the topology is enabled for this NodeGroup."
        }
      },
      "description": "NodeGroupSpec represents the spec of the NodeGroup."
    },
    "edgeappNodeGroupStatus": {
      "type": "object",
      "properties": {
        "nodeStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1edgeappNodeStatus"
          }
        }
      },
      "description": "NodeGroupStatus represents the status of the NodeGroup."
    },
    "edgeappOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "add",
        "remove",
        "replace"
      ],
      "default": "OPERATOR_UNSPECIFIED"
    },
    "edgeappOverrider": {
      "type": "object",
      "properties": {
        "imageOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappImageOverrider"
          },
          "title": "imageOverriders is an optional field, used to override the image of the resource being referenced"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is an optional field, used to override the replicas of the resource being referenced\n+optional"
        },
        "envOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappEnvOverrider"
          }
        },
        "commandOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        },
        "argsOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        },
        "resourcesOverriders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappResourcesOverrider"
          }
        }
      }
    },
    "edgeappOverriderConfiguration": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is the replicas of the node group being referenced"
        },
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappImageConfiguration"
          },
          "title": "imageConfigurations is the image configurations of the node group being referenced"
        },
        "envConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappEnvOverrider"
          }
        },
        "commandConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        },
        "argsConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappCommandArgsOverrider"
          }
        },
        "resourceConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappResourcesOverrider"
          }
        }
      }
    },
    "edgeappOverriderType": {
      "type": "string",
      "enum": [
        "RESOURCE_UNSPECIFIED",
        "IMAGE",
        "ENV",
        "COMMAND",
        "ARGS",
        "RESOURCE",
        "COMMAND_ARGS"
      ],
      "default": "RESOURCE_UNSPECIFIED"
    },
    "edgeappPredicate": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path is the path of the field to be compared\n+optional"
        }
      }
    },
    "edgeappResourcesOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/v2commonResourceRequirements"
        }
      }
    },
    "edgeappTargetNodeGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the name of the node group being referenced\n+optional"
        },
        "overriders": {
          "$ref": "#/definitions/edgeappOverrider",
          "title": "overriders is an optional field, used to override the resource being referenced\n+optional"
        }
      }
    },
    "edgeappTargetNodeGroupInstance": {
      "type": "object",
      "properties": {
        "deploymentName": {
          "type": "string",
          "title": "deploymentName is the name of the deployment being referenced"
        },
        "nodeGroupName": {
          "type": "string",
          "title": "nodeGroupName is the name of the node group being referenced"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is the replicas of the deployment being referenced"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1edgeappCondition",
          "title": "status is the status of the deployment being referenced"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "images is the images of the deployment being referenced"
        }
      }
    },
    "edgeappUpdateTargetNodeGroupsResponse": {
      "type": "object",
      "properties": {
        "overriderConfiguration": {
          "$ref": "#/definitions/edgeappOverriderConfiguration",
          "description": "OverriderConfigration is the specification of the desired behavior of the TargetNodeGroupInstance."
        }
      }
    },
    "edgeappVerifyEdgeApplicationImageResponse": {
      "type": "object",
      "properties": {
        "defaultImages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "defaultImages represents the template container images of EdgeApplication."
        },
        "newImages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "containerImages represents the container images of EdgeApplication."
        }
      }
    },
    "edgeappWorkloadStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "$ref": "#/definitions/v1alpha1edgeappCondition",
          "title": "conditions is an optional field, used to indicate the status of the resource being referenced\n+optional"
        },
        "identifier": {
          "$ref": "#/definitions/edgeappIdentifier",
          "title": "identifier is an optional field, used to identify the resource being referenced\n+optional"
        }
      }
    },
    "typesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "state",
        "workspace",
        "cluster",
        "namespace",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp."
    },
    "v1alpha1EdgeAppCreateEdgeApplicationBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "description": "metadata is the standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/edgeappEdgeApplicationSpec",
          "description": "spec is the specification of the desired behavior of the EdgeApplication."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1EdgeAppDeployTargetNodeGroupBody": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/edgeappNodeGroupConfiguration",
          "description": "NodeGroupInstance represents the name of TargetNodeGroupInstance."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1EdgeAppGetEdgeAppCheckResultBody": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/edgeappOverriderType"
        },
        "images": {
          "$ref": "#/definitions/v1alpha1edgeappContainerImage"
        },
        "envs": {
          "$ref": "#/definitions/edgeappContainerEnv"
        },
        "commands": {
          "$ref": "#/definitions/edgeappContainerCommand"
        },
        "args": {
          "$ref": "#/definitions/edgeappContainerArgs"
        },
        "resources": {
          "$ref": "#/definitions/edgeappContainerResource"
        },
        "commandArgs": {
          "$ref": "#/definitions/edgeappContainerCommandArgs"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1EdgeAppUpdateEdgeApplicationBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "description": "metadata is the standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/edgeappEdgeApplicationSpec",
          "description": "spec is the specification of the desired behavior of the EdgeApplication."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1EdgeAppUpdateTargetNodeGroupsBody": {
      "type": "object",
      "properties": {
        "overriderConfiguration": {
          "$ref": "#/definitions/edgeappOverriderConfiguration",
          "description": "OverriderConfiguration is the specification of the desired behavior of the TargetNodeGroupInstance."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1EdgeAppVerifyEdgeApplicationImageBody": {
      "type": "object",
      "properties": {
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappImageConfiguration"
          },
          "description": "ImageConfiguration represents the image configuration of EdgeApplication."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1EdgeAppWithWorkspaceCreateEdgeApplicationBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "description": "metadata is the standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/edgeappEdgeApplicationSpec",
          "description": "spec is the specification of the desired behavior of the EdgeApplication."
        }
      }
    },
    "v1alpha1EdgeAppWithWorkspaceDeployTargetNodeGroupBody": {
      "type": "object",
      "properties": {
        "nodeGroupConfiguration": {
          "$ref": "#/definitions/edgeappNodeGroupConfiguration",
          "description": "NodeGroupInstance represents the name of TargetNodeGroupInstance."
        }
      }
    },
    "v1alpha1EdgeAppWithWorkspaceGetEdgeAppCheckResultBody": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/edgeappOverriderType"
        },
        "images": {
          "$ref": "#/definitions/v1alpha1edgeappContainerImage"
        },
        "envs": {
          "$ref": "#/definitions/edgeappContainerEnv"
        },
        "commands": {
          "$ref": "#/definitions/edgeappContainerCommand"
        },
        "args": {
          "$ref": "#/definitions/edgeappContainerArgs"
        },
        "resources": {
          "$ref": "#/definitions/edgeappContainerResource"
        },
        "commandArgs": {
          "$ref": "#/definitions/edgeappContainerCommandArgs"
        }
      }
    },
    "v1alpha1EdgeAppWithWorkspaceUpdateEdgeApplicationBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "description": "metadata is the standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/edgeappEdgeApplicationSpec",
          "description": "spec is the specification of the desired behavior of the EdgeApplication."
        }
      }
    },
    "v1alpha1EdgeAppWithWorkspaceUpdateTargetNodeGroupsBody": {
      "type": "object",
      "properties": {
        "overriderConfiguration": {
          "$ref": "#/definitions/edgeappOverriderConfiguration",
          "description": "OverriderConfiguration is the specification of the desired behavior of the TargetNodeGroupInstance."
        }
      }
    },
    "v1alpha1EdgeAppWithWorkspaceVerifyEdgeApplicationImageBody": {
      "type": "object",
      "properties": {
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappImageConfiguration"
          },
          "description": "ImageConfiguration represents the image configuration of EdgeApplication."
        }
      }
    },
    "v1alpha1NodeGroupsBatchDeleteNodeGroupsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha1NodeGroupsCreateNodeGroupBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of NodeGroup."
        },
        "workspaceId": {
          "type": "string",
          "description": "WorkspaceId is the id of workspace."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeappNodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        }
      },
      "title": "SaveNodeGroupRequest representsrequest to create or update one"
    },
    "v1alpha1NodeGroupsUpdateNodeGroupBody": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "WorkspaceId is the id of workspace."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeappNodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        }
      },
      "title": "SaveNodeGroupRequest representsrequest to create or update one"
    },
    "v1alpha1NodeGroupsWithWorkspaceBatchDeleteNodeGroupsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        }
      }
    },
    "v1alpha1NodeGroupsWithWorkspaceCreateNodeGroupBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of NodeGroup."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeappNodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        }
      },
      "title": "SaveNodeGroupRequest representsrequest to create or update one"
    },
    "v1alpha1NodeGroupsWithWorkspaceUpdateNodeGroupBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeappNodeGroupSpec",
          "description": "NodeGroupSpec represents the spec of the NodeGroup."
        }
      },
      "title": "SaveNodeGroupRequest representsrequest to create or update one"
    },
    "v1alpha1edgeappCondition": {
      "type": "string",
      "enum": [
        "Unknown",
        "Processing",
        "Available"
      ],
      "default": "Unknown"
    },
    "v1alpha1edgeappContainerImage": {
      "type": "object",
      "properties": {
        "imageConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeappImageConfiguration"
          }
        }
      }
    },
    "v1alpha1edgeappNodeStatus": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "NodeName represents the name of the Node."
        },
        "readyStatus": {
          "type": "string",
          "description": "readyStatus represents the status of the Node."
        },
        "selectionStatus": {
          "type": "string",
          "description": "SelectionStatus contains status of the selection result for this node."
        },
        "selectionStatusReason": {
          "type": "string",
          "description": "SelectionStatusReason contains human-readable reason for this SelectionStatus."
        }
      },
      "description": "NodeStatuses represents the status of the Node."
    },
    "v2commonAffinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/v2commonNodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/v2commonPodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other\npod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/v2commonPodAntiAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some\nother pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "v2commonCapabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Added capabilities\n+optional"
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Removed capabilities\n+optional"
        }
      },
      "description": "Adds and removes POSIX capabilities from running containers."
    },
    "v2commonConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap must be defined\n+optional"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\n\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "v2commonConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "title": "Selects a key from a ConfigMap.\n+structType=atomic"
    },
    "v2commonConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonKeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "v2commonContainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
        },
        "image": {
          "type": "string",
          "title": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonContainerPort"
          },
          "title": "List of ports to expose from the container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonEnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonEnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/v2commonResourceRequirements",
          "title": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonVolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonVolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/v2commonProbe",
          "title": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/v2commonProbe",
          "title": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/v2commonProbe",
          "title": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/v2commonLifecycle",
          "title": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/v2commonSecurityContext",
          "title": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "A single application container that you want to run within a pod."
    },
    "v2commonDownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..'\npath. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/v2commonObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v2commonResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n+optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
    },
    "v2commonDownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonDownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "v2commonEmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "v2commonEnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/v2commonConfigMapEnvSource",
          "title": "The ConfigMap to select from\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v2commonSecretEnvSource",
          "title": "The Secret to select from\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "v2commonEnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "type": "string",
          "title": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional"
        },
        "valueFrom": {
          "$ref": "#/definitions/v2commonEnvVarSource",
          "title": "Source for the environment variable's value. Cannot be used if value is not empty.\n+optional"
        }
      },
      "description": "EnvVar represents an environment variable present in a Container."
    },
    "v2commonEnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/v2commonObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,\n`metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,\nstatus.podIPs. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v2commonResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and\nrequests.ephemeral-storage) are currently supported. +optional"
        },
        "configMapKeyRef": {
          "$ref": "#/definitions/v2commonConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/v2commonSecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar."
    },
    "v2commonEphemeralContainer": {
      "type": "object",
      "properties": {
        "ephemeralContainerCommon": {
          "$ref": "#/definitions/commonEphemeralContainerCommon",
          "description": "Ephemeral containers have all of the fields of Container, plus additional fields\nspecific to ephemeral containers. Fields in common with Container are in the\nfollowing inlined struct so than an EphemeralContainer may easily be converted\nto a Container."
        },
        "targetContainerName": {
          "type": "string",
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined.\n+optional"
        }
      },
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing\nPod. Ephemeral containers may not be removed or restarted.\n\nThis is a beta feature available on clusters that haven't disabled the EphemeralContainers feature gate."
    },
    "v2commonExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional"
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "v2commonHTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonHTTPHeader"
          },
          "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "v2commonHostAlias": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP address of the host file entry."
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames for the above IP address."
        }
      },
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file."
    },
    "v2commonHostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional"
        }
      },
      "description": "Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "v2commonKeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "Maps a string key to a path within a volume."
    },
    "v2commonLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonLabelSelectorRequirement"
          },
          "title": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      },
      "description": "LabelSelector is a label query over a set of resources."
    },
    "v2commonLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key is the label key that the selector applies to."
        },
        "operator": {
          "$ref": "#/definitions/commonLabelSelectorOperator",
          "description": "Operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      },
      "description": "LabelSelectorRequirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
    },
    "v2commonLifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/commonLifecycleHandler",
          "title": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/commonLifecycleHandler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle\nevents. For the PostStart and PreStop lifecycle handlers, management of the container blocks\nuntil the action is complete, unless the container process fails, in which case the handler is aborted."
    },
    "v2commonLocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
        }
      }
    },
    "v2commonNodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/v2commonNodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonPreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "v2commonNodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonNodeSelectorTerm"
          },
          "description": "Required. A list of node selector terms. The terms are ORed."
        }
      },
      "title": "A node selector represents the union of the results of one or more label queries\nover a set of nodes; that is, it represents the OR of the selectors represented\nby the node selector terms.\n+structType=atomic"
    },
    "v2commonNodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
    },
    "v2commonNodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonNodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonNodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "v2commonObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
    },
    "v2commonObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/v2commonTimestamp",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/v2commonTimestamp",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "title": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      }
    },
    "v2commonOwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      }
    },
    "v2commonPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "v2commonPersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "v2commonPodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonPodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonWeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "v2commonPodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/v2commonLabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"\n+optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/v2commonLabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.\nThis field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.\n+optional"
        }
      }
    },
    "v2commonPodAntiAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonPodAffinityTerm"
          },
          "title": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonWeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
    },
    "v2commonPodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional"
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonPodDNSConfigOption"
          },
          "title": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional"
        }
      },
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
    },
    "v2commonPodReadinessGate": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string",
          "description": "ConditionType refers to a condition in the pod's condition list with matching type."
        }
      },
      "title": "PodReadinessGate contains the reference to a pod condition"
    },
    "v2commonPodSecurityContext": {
      "type": "object",
      "properties": {
        "seLinuxOptions": {
          "$ref": "#/definitions/v2commonSELinuxOptions",
          "title": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/v2commonWindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID.  If unspecified, no groups will be added to\nany container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroup": {
          "type": "string",
          "format": "int64",
          "description": "1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.\n+optional",
          "title": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:"
        },
        "sysctls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonSysctl"
          },
          "title": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroupChangePolicy": {
          "type": "string",
          "title": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/v2commonSeccompProfile",
          "title": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
    },
    "v2commonPodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonVolume"
          },
          "title": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\n+optional\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys"
        },
        "initContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonContainer"
          },
          "title": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonContainer"
          },
          "title": "List of containers belonging to the pod.\nContainers cannot currently be added or removed.\nThere must be at least one container in a Pod.\nCannot be updated.\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonEphemeralContainer"
          },
          "title": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.\nThis field is beta-level and available on clusters that haven't disabled the EphemeralContainers feature gate.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "restartPolicy": {
          "type": "string",
          "title": "Restart policy for all containers within the pod.\nOne of Always, OnFailure, Never.\nDefault to Always.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.\n+optional"
        },
        "activeDeadlineSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer.\n+optional"
        },
        "dnsPolicy": {
          "type": "string",
          "title": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.\n+optional"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional\n+mapType=atomic"
        },
        "serviceAccountName": {
          "type": "string",
          "title": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional"
        },
        "serviceAccount": {
          "type": "string",
          "title": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead.\n+k8s:conversion-gen=false\n+optional"
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "title": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n+optional"
        },
        "nodeName": {
          "type": "string",
          "title": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements.\n+optional"
        },
        "hostNetwork": {
          "type": "boolean",
          "title": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostPID": {
          "type": "boolean",
          "title": "Use the host's pid namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostIPC": {
          "type": "boolean",
          "title": "Use the host's ipc namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "shareProcessNamespace": {
          "type": "boolean",
          "title": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/v2commonPodSecurityContext",
          "title": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\n+optional"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonLocalObjectReference"
          },
          "title": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the\nimages used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for\nthem to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info:\nhttps://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod +optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "hostname": {
          "type": "string",
          "title": "Specifies the hostname of the Pod\nIf not specified, the pod's hostname will be set to a system-defined value.\n+optional"
        },
        "subdomain": {
          "type": "string",
          "title": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster\ndomain>\". If not specified, the pod will not have a domainname at all. +optional"
        },
        "affinity": {
          "$ref": "#/definitions/v2commonAffinity",
          "title": "If specified, the pod's scheduling constraints\n+optional"
        },
        "schedulerName": {
          "type": "string",
          "title": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.\n+optional"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonToleration"
          },
          "title": "If specified, the pod's tolerations.\n+optional"
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonHostAlias"
          },
          "title": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.\n+optional\n+patchMergeKey=ip\n+patchStrategy=merge"
        },
        "priorityClassName": {
          "type": "string",
          "title": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\n+optional"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\n+optional"
        },
        "dnsConfig": {
          "$ref": "#/definitions/v2commonPodDNSConfig",
          "title": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.\n+optional"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonPodReadinessGate"
          },
          "title": "If specified, all readiness gates will be evaluated for pod readiness.\nA pod is ready when all its containers are ready AND\nall conditions specified in the readiness gates have status equal to \"True\"\nMore info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates\n+optional"
        },
        "runtimeClassName": {
          "type": "string",
          "title": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class\nThis is a beta feature as of Kubernetes v1.14.\n+optional"
        },
        "enableServiceLinks": {
          "type": "boolean",
          "title": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.\n+optional"
        },
        "preemptionPolicy": {
          "type": "string",
          "title": "PreemptionPolicy is the Policy for preempting pods with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset.\nThis field is beta-level, gated by the NonPreemptingPriority feature-gate.\n+optional"
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.\nThis field will be autopopulated at admission time by the RuntimeClass admission controller. If\nthe RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.\nThe RuntimeClass admission controller will reject Pod create requests which have the overhead already\nset. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value\ndefined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md\nThis field is beta-level as of Kubernetes v1.18, and is only honored by servers that enable the PodOverhead\nfeature. +optional"
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonTopologySpreadConstraint"
          },
          "title": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.\n+optional\n+patchMergeKey=topologyKey\n+patchStrategy=merge\n+listType=map\n+listMapKey=topologyKey\n+listMapKey=whenUnsatisfiable"
        },
        "setHostnameAsFQDN": {
          "type": "boolean",
          "title": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).\nIn Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of\nstruct utsname). In Windows containers, this means setting the registry value of hostname for the registry key\nHKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN. If a pod does not have FQDN,\nthis has no effect. Default to false. +optional"
        },
        "os": {
          "$ref": "#/definitions/commonPodOS",
          "description": "Specifies the OS of the containers in the pod.\nSome pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset:\n-securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset:\n- spec.hostPID\n- spec.hostIPC\n- spec.securityContext.seLinuxOptions\n- spec.securityContext.seccompProfile\n- spec.securityContext.fsGroup\n- spec.securityContext.fsGroupChangePolicy\n- spec.securityContext.sysctls\n- spec.shareProcessNamespace\n- spec.securityContext.runAsUser\n- spec.securityContext.runAsGroup\n- spec.securityContext.supplementalGroups\n- spec.containers[*].securityContext.seLinuxOptions\n- spec.containers[*].securityContext.seccompProfile\n- spec.containers[*].securityContext.capabilities\n- spec.containers[*].securityContext.readOnlyRootFilesystem\n- spec.containers[*].securityContext.privileged\n- spec.containers[*].securityContext.allowPrivilegeEscalation\n- spec.containers[*].securityContext.procMount\n- spec.containers[*].securityContext.runAsUser\n- spec.containers[*].securityContext.runAsGroup\n+optional\nThis is an alpha field and requires the IdentifyPodOS feature"
        }
      }
    },
    "v2commonPodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v2commonObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/v2commonPodSpec",
          "title": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      }
    },
    "v2commonPreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
        },
        "preference": {
          "$ref": "#/definitions/v2commonNodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
    },
    "v2commonProbe": {
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n+optional"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/v2commonExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/v2commonHTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/v2commonTCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        },
        "grpc": {
          "$ref": "#/definitions/commonGRPCAction",
          "title": "GRPC specifies an action involving a GRPC port.\nThis is an alpha field and requires enabling GRPCContainerProbe feature gate.\n+featureGate=GRPCContainerProbe\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic."
    },
    "v2commonResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes, optional for env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        },
        "divisor": {
          "type": "string",
          "title": "Specifies the output format of the exposed resources, defaults to \"1\"\n+optional"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
    },
    "v2commonResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "v2commonSELinuxOptions": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User is a SELinux user label that applies to the container.\n+optional"
        },
        "role": {
          "type": "string",
          "title": "Role is a SELinux role label that applies to the container.\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Type is a SELinux type label that applies to the container.\n+optional"
        },
        "level": {
          "type": "string",
          "title": "Level is SELinux level label that applies to the container.\n+optional"
        }
      },
      "title": "SELinuxOptions are the labels to be applied to the container"
    },
    "v2commonSeccompProfile": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Localhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.\n+unionDiscriminator",
          "title": "type indicates which kind of seccomp profile will be applied.\nValid options are:"
        },
        "localhostProfile": {
          "type": "string",
          "title": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\".\n+optional"
        }
      },
      "title": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.\n+union"
    },
    "v2commonSecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Secret to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret must be defined\n+optional"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\n\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "v2commonSecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the secret in the pod's namespace to select from."
        },
        "key": {
          "type": "string",
          "description": "The key of the secret to select from.  Must be a valid secret key."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "v2commonSecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2commonKeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      }
    },
    "v2commonSecurityContext": {
      "type": "object",
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/v2commonCapabilities",
          "title": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "privileged": {
          "type": "boolean",
          "title": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/v2commonSELinuxOptions",
          "title": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/v2commonWindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "title": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "title": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "procMount": {
          "type": "string",
          "title": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/v2commonSeccompProfile",
          "title": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence."
    },
    "v2commonTCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "title": "TCPSocketAction describes an action based on opening a socket"
    },
    "v2commonTimestamp": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v2commonToleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.\n+optional"
        },
        "operator": {
          "type": "string",
          "title": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.\n+optional"
        },
        "value": {
          "type": "string",
          "title": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.\n+optional"
        },
        "effect": {
          "type": "string",
          "title": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n+optional"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.\n+optional"
        }
      },
      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
    },
    "v2commonTopologySpreadConstraint": {
      "type": "object",
      "properties": {
        "maxSkew": {
          "type": "integer",
          "format": "int32",
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 1/1/0:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|   P   |   P   |       |\n+-------+-------+-------+\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1;\nscheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
        },
        "topologyKey": {
          "type": "string",
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nIt's a required field."
        },
        "whenUnsatisfiable": {
          "type": "string",
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n| P P P |   P   |   P   |\n+-------+-------+-------+\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
        },
        "labelSelector": {
          "$ref": "#/definitions/v2commonLabelSelector",
          "title": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.\n+optional"
        }
      },
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
    },
    "v2commonVolume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Volume's name.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "hostPath": {
          "$ref": "#/definitions/v2commonHostPathVolumeSource",
          "title": "HostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write.\n+optional"
        },
        "emptyDir": {
          "$ref": "#/definitions/v2commonEmptyDirVolumeSource",
          "title": "EmptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/commonGCEPersistentDiskVolumeSource",
          "title": "GCEPersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/commonAWSElasticBlockStoreVolumeSource",
          "title": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        },
        "gitRepo": {
          "$ref": "#/definitions/commonGitRepoVolumeSource",
          "title": "GitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.\n+optional"
        },
        "secret": {
          "$ref": "#/definitions/v2commonSecretVolumeSource",
          "title": "Secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "nfs": {
          "$ref": "#/definitions/commonNFSVolumeSource",
          "title": "NFS represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        },
        "iscsi": {
          "$ref": "#/definitions/commonISCSIVolumeSource",
          "title": "ISCSI represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md\n+optional"
        },
        "glusterfs": {
          "$ref": "#/definitions/commonGlusterfsVolumeSource",
          "title": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md\n+optional"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/v2commonPersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional"
        },
        "rbd": {
          "$ref": "#/definitions/commonRBDVolumeSource",
          "title": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md\n+optional"
        },
        "flexVolume": {
          "$ref": "#/definitions/commonFlexVolumeSource",
          "title": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional"
        },
        "cinder": {
          "$ref": "#/definitions/commonCinderVolumeSource",
          "title": "Cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "cephfs": {
          "$ref": "#/definitions/commonCephFSVolumeSource",
          "title": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional"
        },
        "flocker": {
          "$ref": "#/definitions/commonFlockerVolumeSource",
          "title": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control\nservice being running +optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v2commonDownwardAPIVolumeSource",
          "title": "DownwardAPI represents downward API about the pod that should populate this volume\n+optional"
        },
        "fc": {
          "$ref": "#/definitions/commonFCVolumeSource",
          "title": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional"
        },
        "azureFile": {
          "$ref": "#/definitions/commonAzureFileVolumeSource",
          "title": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/v2commonConfigMapVolumeSource",
          "title": "ConfigMap represents a configMap that should populate this volume\n+optional"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/commonVsphereVirtualDiskVolumeSource",
          "title": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional"
        },
        "quobyte": {
          "$ref": "#/definitions/commonQuobyteVolumeSource",
          "title": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional"
        },
        "azureDisk": {
          "$ref": "#/definitions/commonAzureDiskVolumeSource",
          "title": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/commonPhotonPersistentDiskVolumeSource",
          "title": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "projected": {
          "$ref": "#/definitions/commonProjectedVolumeSource",
          "title": "Items for all in one resources secrets, configmaps, and downward API"
        },
        "portworxVolume": {
          "$ref": "#/definitions/commonPortworxVolumeSource",
          "title": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional"
        },
        "scaleIO": {
          "$ref": "#/definitions/commonScaleIOVolumeSource",
          "title": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "storageos": {
          "$ref": "#/definitions/commonStorageOSVolumeSource",
          "title": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "csi": {
          "$ref": "#/definitions/commonCSIVolumeSource",
          "title": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers\n(Beta feature). +optional"
        },
        "ephemeral": {
          "$ref": "#/definitions/commonEphemeralVolumeSource",
          "description": "Ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.\n\n+optional"
        }
      }
    },
    "v2commonVolumeDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name must match the name of a persistentVolumeClaim in the pod"
        },
        "devicePath": {
          "type": "string",
          "description": "devicePath is the path inside of the container that the device will be mapped to."
        }
      },
      "description": "volumeDevice describes a mapping of a raw block device within a container."
    },
    "v2commonVolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's\nenvironment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount describes a mounting of a Volume within a container."
    },
    "v2commonWeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/v2commonPodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred\nnode(s)"
    },
    "v2commonWindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpecName": {
          "type": "string",
          "title": "GMSACredentialSpecName is the name of the GMSA credential spec to use.\n+optional"
        },
        "gmsaCredentialSpec": {
          "type": "string",
          "title": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.\n+optional"
        },
        "runAsUserName": {
          "type": "string",
          "title": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "hostProcess": {
          "type": "boolean",
          "title": "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true.\n+optional"
        }
      },
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
    },
    "commonLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonLabelSelectorRequirement"
          },
          "title": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      },
      "description": "LabelSelector is a label query over a set of resources."
    },
    "commonLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key is the label key that the selector applies to."
        },
        "operator": {
          "$ref": "#/definitions/commonLabelSelectorOperator",
          "description": "Operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      },
      "description": "LabelSelectorRequirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
    },
    "commonPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "nodetaskCheckItem": {
      "type": "string",
      "enum": [
        "cpu",
        "mem",
        "disk"
      ],
      "default": "cpu",
      "description": "CheckItem defines the enumeration value of check item."
    },
    "nodetaskImageDigestGetter": {
      "type": "object",
      "properties": {
        "ARM64": {
          "type": "string",
          "title": "ARM64 indicates the image digest of the arm64 platform for verification.\nE.g., sha256:0738039541234567890123456789012345678901234567890123456789012345\n+optional"
        },
        "AMD64": {
          "type": "string",
          "title": "AMD64 indicates the image digest of the amd64 platform for verification.\nE.g., sha256:0738039541234567890123456789012345678901234567890123456789012345\n+optional"
        },
        "registryAPI": {
          "$ref": "#/definitions/nodetaskRegistryAPI",
          "title": "RegistryAPI define registry v2 interface access configuration.\nUsed to automatically gets multiple platform image digests from a remote registry\nto set values into ARM64 and AMD64 fields.\n+optional"
        }
      },
      "description": "ImageDigestGetter used to define a method for getting the image digest."
    },
    "nodetaskImagePrePullJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of ImagePrePullJob."
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreateTimestamp is a timestamp representing the server time when this object was created."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/nodetaskImagePrePullJobSpec",
          "description": "Spec represents the specification of the desired behavior of ImagePrePullJob."
        },
        "status": {
          "$ref": "#/definitions/nodetaskImagePrePullJobStatus",
          "description": "Status represents the status of ImagePrePullJob."
        }
      },
      "description": "ImagePrePullJob is used to prepull images on edge node."
    },
    "nodetaskImagePrePullJobActionStatus": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/nodetaskImagePrePullJobActionStatusAction",
          "description": "Action represents for the action name."
        },
        "status": {
          "type": "boolean",
          "description": "Status represents for the status of this image pull on the edge node."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents the reason for the failure of the action.\n+optional"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "description": "Time represents for the running time of the node task."
        }
      },
      "description": "ImagePrePullJobActionStatus defines the results of executing the action."
    },
    "nodetaskImagePrePullJobActionStatusAction": {
      "type": "string",
      "enum": [
        "Undefined",
        "Check",
        "Pull"
      ],
      "default": "Undefined"
    },
    "nodetaskImagePrePullJobListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskImagePrePullJob"
          },
          "description": "Items is collection of ImagePrePullJob."
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "description": "returned contains current page, size, and total."
        }
      },
      "description": "ImagePrePullJobList represents a list of ImagePrePullJob."
    },
    "nodetaskImagePrePullJobSpec": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Images is the image list to be prepull"
        },
        "nodeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NodeNames is a request to select some specific nodes. If it is non-empty,\nthe upgrade job simply select these edge nodes to do upgrade operation.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "labelSelector": {
          "$ref": "#/definitions/commonLabelSelector",
          "title": "LabelSelector is a filter to select member clusters by labels.\nIt must match a node's labels for the NodeUpgradeJob to be operated on that node.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "checkItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nodetaskCheckItem"
          },
          "title": "CheckItems specifies the items need to be checked before the task is executed.\nThe default CheckItems value is disk.\n+optional"
        },
        "failureTolerate": {
          "type": "string",
          "title": "FailureTolerate specifies the task tolerance failure ratio.\nThe default FailureTolerate value is 0.1.\n+optional"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Concurrency specifies the maximum number of edge nodes that can pull images at the same time.\nThe default Concurrency value is 1.\n+optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "TimeoutSeconds limits the duration of the node prepull image job. Default to 300.\n+optional"
        },
        "imageSecret": {
          "type": "string",
          "title": "ImageSecret specifies the secret for image pull if private registry used.\nUse {namespace}/{secretName} in format.\n+optional"
        },
        "retryTimes": {
          "type": "integer",
          "format": "int32",
          "title": "RetryTimes specifies the retry times if image pull failed on each edgenode.\nDefault to 0.\n+optional"
        }
      },
      "description": "ImagePrePullSpec represents the specification of the desired behavior of ImagePrePullJob."
    },
    "nodetaskImagePrePullJobStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/nodetaskStatusPhase",
          "description": "Phase represents for the phase of the ImagePrePullJob."
        },
        "nodeStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskImagePrePullNodeTaskStatus"
          },
          "description": "NodeStatus contains image prepull status for each edge node."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents for the reason of the ImagePrePullJob.\n+optional"
        }
      },
      "description": "ImagePrePullJobStatus stores the status of ImagePrePullJob.\nContains images prepull status on multiple edge nodes."
    },
    "nodetaskImagePrePullNodeTaskStatus": {
      "type": "object",
      "properties": {
        "actionFlow": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskImagePrePullJobActionStatus"
          },
          "description": "ActionFlow represents for the results of executing the action flow."
        },
        "imageStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskImageStatus"
          },
          "description": "ImageStatus represents the prepull status for each image."
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is the name of edge node."
        },
        "phase": {
          "$ref": "#/definitions/nodetaskStatusPhase",
          "description": "Phase represents for the phase of the node task."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents the reason for the failure of the node task.\n+optional"
        }
      },
      "description": "ImagePrePullNodeTaskStatus stores image prepull status for each edge node."
    },
    "nodetaskImageStatus": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Image is the name of the image."
        },
        "status": {
          "type": "boolean",
          "description": "Status represents for the status of this image pull on the edge node."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents the fail reason if image pull failed.\n+optional"
        }
      },
      "description": "ImageStatus stores the prepull status for each image."
    },
    "nodetaskNodeUpgradeJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of NodeUpgradeJob."
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreateTimestamp is a timestamp representing the server time when this object was created."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/nodetaskNodeUpgradeJobSpec",
          "description": "Specification of the desired behavior of NodeUpgradeJob."
        },
        "status": {
          "$ref": "#/definitions/nodetaskNodeUpgradeJobStatus",
          "description": "Most recently observed status of the NodeUpgradeJob."
        }
      },
      "description": "NodeUpgradeJob is used to upgrade edgecore on edge node."
    },
    "nodetaskNodeUpgradeJobActionStatus": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/nodetaskNodeUpgradeJobActionStatusAction",
          "description": "Action represents for the action name."
        },
        "status": {
          "type": "boolean",
          "description": "Status represents for the status of this image pull on the edge node."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents the reason for the failure of the action.\n+optional"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "description": "Time represents for the running time of the node task."
        }
      }
    },
    "nodetaskNodeUpgradeJobActionStatusAction": {
      "type": "string",
      "enum": [
        "Undefined",
        "Check",
        "WaitingConfirmation",
        "BackUp",
        "Upgrade",
        "RollBack"
      ],
      "default": "Undefined"
    },
    "nodetaskNodeUpgradeJobListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskNodeUpgradeJob"
          },
          "description": "Items is collection of NodeUpgradeJob."
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "description": "returned contains current page, size, and total."
        }
      },
      "description": "NodeUpgradeJobList represents a list of NodeUpgradeJob."
    },
    "nodetaskNodeUpgradeJobNodeTaskStatus": {
      "type": "object",
      "properties": {
        "actionFlow": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskNodeUpgradeJobActionStatus"
          },
          "description": "ActionFlow represents for the results of executing the action flow."
        },
        "currentVersion": {
          "type": "string",
          "description": "CurrentVersion represents for the current status of the EdgeCore."
        },
        "historicVersion": {
          "type": "string",
          "description": "HistoricVersion represents for the historic status of the EdgeCore."
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is the name of edge node."
        },
        "phase": {
          "$ref": "#/definitions/nodetaskStatusPhase",
          "description": "Phase represents for the phase of the node task."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents the reason for the failure of the node task.\n+optional"
        }
      },
      "description": "NodeUpgradeJobNodeTaskStatus stores the status of Upgrade for each edge node."
    },
    "nodetaskNodeUpgradeJobSpec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version is the EdgeCore version to upgrade."
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "TimeoutSeconds limits the duration of the node upgrade job.\nDefault to 300.\nIf set to 0, we'll use the default value 300."
        },
        "nodeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NodeNames is a request to select some specific nodes. If it is non-empty,\nthe upgrade job simply select these edge nodes to do upgrade operation.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "labelSelector": {
          "$ref": "#/definitions/commonLabelSelector",
          "title": "LabelSelector is a filter to select member clusters by labels.\nIt must match a node's labels for the NodeUpgradeJob to be operated on that node.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one.\n+optional"
        },
        "image": {
          "type": "string",
          "title": "Image specifies a container image name, the image contains: keadm and edgecore.\nkeadm is used as upgradetool, to install the new version of edgecore.\nThe image name consists of registry hostname and repository name,\nif it includes the tag or digest, the tag or digest will be overwritten by Version field above.\nIf the registry hostname is empty, docker.io will be used as default.\nThe default image name is: kubeedge/installation-package.\n+optional"
        },
        "imageDigestGetter": {
          "$ref": "#/definitions/nodetaskImageDigestGetter",
          "title": "ImageDigestGetter define registry v2 interface access configuration.\nAs a transition, it is not required at first, and the image digest is checked when this field is set.\n+optional"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Concurrency specifies the maximum number of edge nodes that can pull images at the same time.\nThe default Concurrency value is 1.\n+optional"
        },
        "checkItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nodetaskCheckItem"
          },
          "title": "CheckItems specifies the items need to be checked before the task is executed.\nThe default CheckItems value is disk.\n+optional"
        },
        "failureTolerate": {
          "type": "string",
          "title": "FailureTolerate specifies the task tolerance failure ratio.\nThe default FailureTolerate value is 0.1.\n+optional"
        },
        "requireConfirmation": {
          "type": "boolean",
          "title": "RequireConfirmation specifies whether you need to confirm the upgrade.\nThe default RequireConfirmation value is false.\n+optional"
        }
      },
      "description": "NodeUpgradeJobSpec represents the specification of the desired behavior of NodeUpgradeJob."
    },
    "nodetaskNodeUpgradeJobStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/nodetaskStatusPhase",
          "title": "Phase represents for the phase of the NodeUpgradeJob"
        },
        "nodeStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nodetaskNodeUpgradeJobNodeTaskStatus"
          },
          "description": "NodeStatus contains image prepull status for each edge node."
        },
        "reason": {
          "type": "string",
          "title": "Reason represents for the reason of the NodeUpgradeJob.\n+optional"
        }
      },
      "description": "NodeUpgradeJobStatus stores the status of NodeUpgradeJob.\ncontains multiple edge nodes upgrade status."
    },
    "nodetaskRegistryAPI": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "description": "RegistryAPI used to define registry v2 interface access configuration."
    },
    "nodetaskStatusPhase": {
      "type": "string",
      "enum": [
        "Init",
        "Pending",
        "InProgress",
        "Completed",
        "Failure",
        "Successful",
        "Unknown"
      ],
      "default": "Init",
      "description": "StatusPhase defines the enumeration value of job phase and node task phase.\n\n - Init: Job\n - Pending: NodeTask\n - InProgress: Job & NodeTask\n - Completed: Job\n - Failure: Job & NodeTask\n - Successful: NodeTask\n - Unknown: NodeTask"
    },
    "v1alpha2ImagePrePullJobsBatchDeleteBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha2ImagePrePullJobsCreateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of ImagePrePullJob."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "description": "WorkspaceId is the id of workspace."
        },
        "spec": {
          "$ref": "#/definitions/nodetaskImagePrePullJobSpec",
          "description": "Spec represents the specification of the desired behavior of ImagePrePullJob."
        }
      },
      "description": "ImagePrePullJobSaveRequest represents the request to create or update ImagePrePullJob."
    },
    "v1alpha2ImagePrePullJobsWithWorkspaceBatchDeleteBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        }
      }
    },
    "v1alpha2ImagePrePullJobsWithWorkspaceCreateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of ImagePrePullJob."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/nodetaskImagePrePullJobSpec",
          "description": "Spec represents the specification of the desired behavior of ImagePrePullJob."
        }
      },
      "description": "ImagePrePullJobSaveRequest represents the request to create or update ImagePrePullJob."
    },
    "v1alpha2NodeUpgradeJobsBatchDeleteBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1alpha2NodeUpgradeJobsCreateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of  NodeUpgradeJob."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "description": "WorkspaceId is the id of workspace."
        },
        "spec": {
          "$ref": "#/definitions/nodetaskNodeUpgradeJobSpec",
          "description": "Spec represents the specification of the desired behavior of  NodeUpgradeJob."
        }
      },
      "description": "NodeUpgradeJobSaveRequest represents the request to create or update NodeUpgradeJob."
    },
    "v1alpha2NodeUpgradeJobsWithWorkspaceBatchDeleteBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        }
      }
    },
    "v1alpha2NodeUpgradeJobsWithWorkspaceCreateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of  NodeUpgradeJob."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/nodetaskNodeUpgradeJobSpec",
          "description": "Spec represents the specification of the desired behavior of  NodeUpgradeJob."
        }
      },
      "description": "NodeUpgradeJobSaveRequest represents the request to create or update NodeUpgradeJob."
    },
    "typesPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "EdgeUnitCloudCoreProtocolProtocolType": {
      "type": "string",
      "enum": [
        "websocket",
        "quic"
      ],
      "default": "websocket"
    },
    "EdgeUnitSpecManageType": {
      "type": "string",
      "enum": [
        "internal",
        "external"
      ],
      "default": "internal"
    },
    "EdgeUnitStatusPhase": {
      "type": "string",
      "enum": [
        "Pending",
        "Running",
        "Failed",
        "Terminated"
      ],
      "default": "Pending"
    },
    "deviceAccessMode": {
      "type": "string",
      "enum": [
        "ReadOnly",
        "ReadWrite"
      ],
      "default": "ReadOnly"
    },
    "deviceDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name represents the name of Device."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the Device belongs to."
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreateTimestamp is a timestamp representing the server time when this object was created."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceSpec",
          "description": "Specification of the device."
        },
        "status": {
          "$ref": "#/definitions/deviceDeviceStatus",
          "description": "Status of the device."
        }
      },
      "description": "Device is the description of a device instance."
    },
    "deviceDeviceModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name represents the name of DeviceModel."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the DeviceModel belongs to."
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreateTimestamp is a timestamp representing the server time when this object was created."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceModelSpec",
          "description": "Specification of a device model."
        }
      },
      "description": "DeviceModel specifies the information of a device model."
    },
    "deviceDeviceModelRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the referent"
        }
      },
      "title": "DeviceModelRef is reference to the device model used as a template to create the device instance"
    },
    "deviceDeviceModelSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceModelProperty"
          },
          "description": "The properties of device model."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol name used by the device of this device model."
        }
      },
      "description": "DeviceModelSpec is the specification of a device model."
    },
    "deviceDeviceProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this property."
        },
        "desired": {
          "$ref": "#/definitions/deviceTwinProperty",
          "description": "The desired value of this property."
        },
        "visitors": {
          "type": "string",
          "description": "The visitor config of this property."
        },
        "reportCycle": {
          "type": "integer",
          "format": "int32",
          "description": "The report cycle of this property."
        },
        "collectCycle": {
          "type": "integer",
          "format": "int32",
          "description": "The collect cycle of this property."
        },
        "reportToCloud": {
          "type": "boolean",
          "description": "The report to cloud of this property."
        }
      },
      "description": "DeviceProperty is the property of a device."
    },
    "deviceDeviceSpec": {
      "type": "object",
      "properties": {
        "deviceModelRef": {
          "$ref": "#/definitions/deviceDeviceModelRef",
          "description": "The device model which the device references."
        },
        "protocol": {
          "type": "string",
          "description": "The specific config of the protocol to access to the device."
        },
        "protocolName": {
          "type": "string",
          "description": "ProtocolName represents the protocol name of the device."
        },
        "nodeName": {
          "type": "string",
          "title": "The node which to schedule this device onto"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceDeviceProperty"
          },
          "description": "The properties provided by this device."
        }
      },
      "description": "DeviceSpec is the specification of the device."
    },
    "deviceDeviceStatus": {
      "type": "object",
      "properties": {
        "twins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceTwin"
          },
          "description": "the device twins of the device."
        },
        "state": {
          "type": "string",
          "description": "the state of the device like Online or Offline."
        },
        "lastOnlineTime": {
          "type": "string",
          "description": "the last time the device was online."
        },
        "ReportToCloud": {
          "type": "boolean",
          "title": "whether be reported to the cloud"
        },
        "ReportCycle": {
          "type": "string",
          "format": "int64",
          "description": "Define how frequent mapper will report the device status."
        }
      },
      "description": "DeviceStatus is the status of the device."
    },
    "deviceItem": {
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/deviceOperation"
        },
        "path": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "deviceListDeviceModelResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceDeviceModel"
          },
          "title": "Data represents the response of DeviceModel"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListDeviceResponse represents list all deviceModels"
    },
    "deviceListDeviceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceDevice"
          },
          "title": "Data represents the response of device"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListDeviceResponse represents list all devices"
    },
    "deviceModelProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this property."
        },
        "description": {
          "type": "string",
          "description": "The description of this property."
        },
        "type": {
          "$ref": "#/definitions/deviceModelPropertyType",
          "description": "The specific type of this property."
        },
        "accessMode": {
          "$ref": "#/definitions/deviceAccessMode",
          "description": "The access mode of this property,ReadWrite or ReadOnly."
        },
        "minimum": {
          "type": "string",
          "description": "The minimum value of this property."
        },
        "maximum": {
          "type": "string",
          "description": "The maximum value of this property."
        },
        "unit": {
          "type": "string",
          "description": "The unit of this property."
        }
      },
      "description": "ModelProperty describes an individual device property / attribute like temperature / humidity etc."
    },
    "deviceModelPropertyType": {
      "type": "string",
      "enum": [
        "INT",
        "FLOAT",
        "DOUBLE",
        "STRING",
        "BOOLEAN",
        "BYTES",
        "STREAM"
      ],
      "default": "INT"
    },
    "deviceOperation": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "add",
        "remove",
        "replace"
      ],
      "default": "OPERATOR_UNSPECIFIED"
    },
    "deviceTwin": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string",
          "description": "the name of the property."
        },
        "observedDesired": {
          "$ref": "#/definitions/deviceTwinProperty",
          "description": "the observedDesired value of the property configured by device manager."
        },
        "reported": {
          "$ref": "#/definitions/deviceTwinProperty",
          "description": "the reported value of the property from the real device."
        }
      },
      "description": "Twin is the digital model of a device. It contains a series of properties."
    },
    "deviceTwinProperty": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "the value of the property."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the metadata to describe this property."
        }
      },
      "description": "TwinProperty is the specification of the property."
    },
    "edgeunitAddonInfo": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "edgeunitCloudCoreHostIPsListResponse": {
      "type": "object",
      "properties": {
        "hostIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "edgeunitCustomizeRepository": {
      "type": "object",
      "properties": {
        "helmRepo": {
          "type": "string",
          "description": "HelmRepo sets helm repository name, default value is addon."
        },
        "registry": {
          "type": "string",
          "description": "Registry sets image registry."
        },
        "username": {
          "type": "string",
          "title": "Set repository username if custom image is private.\n+optional"
        },
        "password": {
          "type": "string",
          "title": "Set repository password if custom image is private.\n+optional"
        },
        "kubeedgeImageRepository": {
          "type": "string",
          "title": "KubeEdgeImageRepository sets the image repository of KubeEdge, default value is docker.m.daocloud.io/kubeedge.\n+optional"
        },
        "kantImageRepository": {
          "type": "string",
          "title": "KantImageRepository sets the image repository of Kant, default value is release.daocloud.io/kant.\nDeprecated: will be clean up after v0.20\n+optional"
        }
      },
      "description": "CustomizeRepository defines customize repositories of helm and image."
    },
    "edgeunitEdgeUnit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of EdgeUnit."
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreateTimestamp is a timestamp representing the server time when this object was created."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeunitEdgeUnitSpec",
          "title": "Spec defines the desired state of EdgeUnit"
        },
        "status": {
          "$ref": "#/definitions/edgeunitEdgeUnitStatus",
          "title": "Status defines the observed state of EdgeUnit"
        }
      }
    },
    "edgeunitEdgeUnitCloudCoreProtocol": {
      "type": "object",
      "properties": {
        "cloudcoreHost": {
          "type": "string",
          "title": "Sets node ip or domain of cloudcore"
        },
        "protocolTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdgeUnitCloudCoreProtocolProtocolType"
          },
          "title": "Set cloudcore protocol type, one of websocket, quic"
        },
        "websocketPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloudcore websocket server port"
        },
        "quicPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloudcore quic server port"
        },
        "httpServerPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloudcore http server port"
        },
        "cloudStreamPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets cloud stream port"
        },
        "tunnelPort": {
          "type": "integer",
          "format": "int32",
          "title": "Sets edge node tunnel port"
        }
      },
      "title": "Defines access mode of the edgecore to the cloudcore"
    },
    "edgeunitEdgeUnitComponentsRepositoryResponse": {
      "type": "object",
      "properties": {
        "kubeedge": {
          "type": "string"
        },
        "kant": {
          "type": "string",
          "title": "Deprecated: will be clean up after v0.20"
        }
      }
    },
    "edgeunitEdgeUnitCondition": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "title": "Status of the condition, one of True, False, Unknown"
        },
        "lastHeartbeatTime": {
          "type": "string",
          "format": "int64",
          "title": "Last unix timestamp we got an update on a given condition\n+optional"
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "title": "Last unix timestamp the condition transit from one status to another\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "Reason for the condition's last transition\n+optional"
        },
        "message": {
          "type": "string",
          "title": "Human readable message indicating details about last transition\n+optional"
        }
      },
      "title": "Contains condition information"
    },
    "edgeunitEdgeUnitListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeunitEdgeUnit"
          },
          "title": "Collection of EdgeUnit"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "description": "returned contains current page, size, and total."
        }
      }
    },
    "edgeunitEdgeUnitSaveRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of EdgeUnit."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeunitEdgeUnitSpec",
          "title": "Spec defines the desired state of EdgeUnit"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "edgeunitEdgeUnitSpec": {
      "type": "object",
      "properties": {
        "clusterRef": {
          "type": "string",
          "description": "Referenced cluster name."
        },
        "kubeedgeVersion": {
          "type": "string",
          "description": "kubeedgeVersion the version of KubeEdge."
        },
        "customizeRepository": {
          "$ref": "#/definitions/edgeunitCustomizeRepository",
          "title": "CustomizeRepository sets the customize helm repository and image repository.\n+optional"
        },
        "description": {
          "type": "string",
          "title": "Set description of EdgeUnit.\n+optional"
        },
        "cloudCoreProtocol": {
          "$ref": "#/definitions/edgeunitEdgeUnitCloudCoreProtocol",
          "description": "Sets access mode of the edgecore to the cloudcore."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Sets the replicas number of CloudCore."
        },
        "manageType": {
          "$ref": "#/definitions/EdgeUnitSpecManageType",
          "description": "Sets edgeunit manage type."
        },
        "kubeedgeMqttEnable": {
          "type": "boolean",
          "title": "Defines whether the default mqtt broker is installed on the edge node.\n+optional"
        },
        "deleteNamespace": {
          "type": "boolean",
          "title": "Defines whether the namespace is deleted when components are uninstalled.\n+optional"
        },
        "resourcePolicyRef": {
          "$ref": "#/definitions/edgeunitResourcePolicyRef",
          "title": "ResourcePolicyRef defines the resource policy for the edge-unit.\n+optional"
        }
      },
      "title": "Defines the desired state of EdgeUnit"
    },
    "edgeunitEdgeUnitStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/EdgeUnitStatusPhase",
          "title": "The recently observed lifecycle phase of the EdgeUnit,\none of Running, Failed, Pending, Terminated"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeunitEdgeUnitCondition"
          },
          "title": "Conditions is an array of current observed EdgeUnit conditions"
        },
        "totalNodes": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of nodes in cluster"
        },
        "availableNodes": {
          "type": "integer",
          "format": "int32",
          "title": "Available number of nodes in cluster"
        },
        "totalDeployments": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of deployments in cluster"
        },
        "availableDeployments": {
          "type": "integer",
          "format": "int32",
          "title": "Available number of deployments in cluster"
        },
        "totalPods": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of pods in cluster"
        },
        "availablePods": {
          "type": "integer",
          "format": "int32",
          "title": "Available number of pods in cluster"
        },
        "addons": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeunitAddonInfo"
          },
          "title": "Addons the status information of edgeunit addons"
        },
        "kantNeedUpgrade": {
          "type": "boolean",
          "title": "kantNeedUpgrade a extended business field, not the crd field,\nused to mark whether the kant-workeragent component needs to be upgraded"
        }
      }
    },
    "edgeunitGetAddonsResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeunitAddonInfo"
          }
        }
      }
    },
    "edgeunitResourcePolicyItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name mappers to the name of EdgeUnitResourcePolicy"
        },
        "version": {
          "type": "string",
          "title": "Version mappers to the crd version of EdgeUnitResourcePolicy"
        },
        "descZH": {
          "type": "string",
          "title": "DescZH describes the Chinese description"
        },
        "descEN": {
          "type": "string",
          "title": "DescEN describes the English description"
        }
      }
    },
    "edgeunitResourcePolicyListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/edgeunitResourcePolicyItem"
          }
        }
      }
    },
    "edgeunitResourcePolicyRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name mappers to the name of EdgeUnitResourcePolicy"
        },
        "version": {
          "type": "string",
          "title": "Version mappers to the crd version of EdgeUnitResourcePolicy"
        }
      }
    },
    "v1beta1DeviceModelsBatchDeleteDeviceModelsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        }
      }
    },
    "v1beta1DeviceModelsCreateDeviceModelBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name represents the name of DeviceModel."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceModelSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "SaveDeviceModelRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DeviceModelsUpdateDeviceModelBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceModelSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "SaveDeviceModelRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DeviceModelsWithWorkspaceBatchDeleteDeviceModelsBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        }
      }
    },
    "v1beta1DeviceModelsWithWorkspaceCreateDeviceModelBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name represents the name of DeviceModel."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceModelSpec",
          "description": "Specification of the device."
        }
      },
      "title": "SaveDeviceModelRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DeviceModelsWithWorkspaceUpdateDeviceModelBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceModelSpec",
          "description": "Specification of the device."
        }
      },
      "title": "SaveDeviceModelRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DevicesBatchDeleteDevicesBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1beta1DevicesBindNodeBody": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "nodeName represents which node will be bound by the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1beta1DevicesCreateDeviceBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name represents the name of Device."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "SaveDeviceRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DevicesPatchDevicesBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceItem"
          }
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1DevicesUpdateDeviceBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceSpec",
          "description": "Specification of the device."
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      },
      "title": "SaveDeviceRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DevicesWithWorkspaceBatchDeleteDevicesBody": {
      "type": "object",
      "properties": {
        "dataList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonDataSpec"
          },
          "description": "DataList represents data items."
        }
      }
    },
    "v1beta1DevicesWithWorkspaceBindNodeBody": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "nodeName represents which node will be bound by the device."
        }
      }
    },
    "v1beta1DevicesWithWorkspaceCreateDeviceBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name represents the name of Device."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceSpec",
          "description": "Specification of the device."
        }
      },
      "title": "SaveDeviceRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1DevicesWithWorkspacePatchDevicesBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/deviceItem"
          }
        }
      }
    },
    "v1beta1DevicesWithWorkspaceUpdateDeviceBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/deviceDeviceSpec",
          "description": "Specification of the device."
        }
      },
      "title": "SaveDeviceRequest represents the request to create or update one\nDevice of namespaced scope"
    },
    "v1beta1EdgeUnitsUpdateEdgeUnitBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeunitEdgeUnitSpec",
          "title": "Spec defines the desired state of EdgeUnit"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "workspaceId ID of workspace"
        }
      }
    },
    "v1beta1EdgeUnitsWithWorkspaceCreateEdgeUnitBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of EdgeUnit."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeunitEdgeUnitSpec",
          "title": "Spec defines the desired state of EdgeUnit"
        }
      }
    },
    "v1beta1EdgeUnitsWithWorkspaceUpdateEdgeUnitBody": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is a key value map used to extend resource capabilities."
        },
        "spec": {
          "$ref": "#/definitions/edgeunitEdgeUnitSpec",
          "title": "Spec defines the desired state of EdgeUnit"
        }
      }
    }
  }
}