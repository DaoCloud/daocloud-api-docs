{
  "swagger": "2.0",
  "info": {
    "title": "可观测性",
    "version": "v0.28.0"
  },
  "tags": [
    {
      "name": "Insight"
    },
    {
      "name": "FeatureGate"
    },
    {
      "name": "Alert"
    },
    {
      "name": "Log"
    },
    {
      "name": "Metric"
    },
    {
      "name": "Resource"
    },
    {
      "name": "Tracing"
    },
    {
      "name": "ServiceGraph"
    },
    {
      "name": "Event"
    },
    {
      "name": "Probe"
    },
    {
      "name": "Overview"
    },
    {
      "name": "NetFlow"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/insight.io/v1alpha1/agentinstallparam": {
      "post": {
        "operationId": "Insight_GetHelmInstallConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1helmInstallConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1helmInstallConfigRequest"
            }
          }
        ],
        "tags": [
          "Insight"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/alertcount": {
      "get": {
        "operationId": "Alert_CountAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CountAlertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resolved",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TARGET_TYPE_UNSPECIFIED",
              "GLOBAL",
              "CLUSTER",
              "NAMESPACE",
              "NODE",
              "DEPLOYMENT",
              "STATEFULSET",
              "DAEMONSET",
              "POD"
            ],
            "default": "TARGET_TYPE_UNSPECIFIED"
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "CRITICAL",
              "WARNING",
              "INFO"
            ],
            "default": "SEVERITY_UNSPECIFIED"
          },
          {
            "name": "start",
            "description": "start == 0 means from 1970.01.01",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "description": "step unit is minute\nstep == 0 means return total alert count num",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "groupByType",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/alerts": {
      "get": {
        "operationId": "Alert_ListAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAlertsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resolved",
            "description": "set resolved to True shows alert histories",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "groupName",
            "description": "filter alerts by group name fuzzily",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "filter alerts by group id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ruleName",
            "description": "filter alerts by rule name fuzzily",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ruleId",
            "description": "filter alerts by rule id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "description": "filter alerts by cluster name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter alerts by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "description": "filter alerts by severity",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "CRITICAL",
              "WARNING",
              "INFO"
            ],
            "default": "SEVERITY_UNSPECIFIED"
          },
          {
            "name": "targetType",
            "description": "filter alerts by target_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TARGET_TYPE_UNSPECIFIED",
              "GLOBAL",
              "CLUSTER",
              "NAMESPACE",
              "NODE",
              "DEPLOYMENT",
              "STATEFULSET",
              "DAEMONSET",
              "POD"
            ],
            "default": "TARGET_TYPE_UNSPECIFIED"
          },
          {
            "name": "target",
            "description": "filter alerts by target",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- start_at,desc or start_at\n- start_at,asc\n- severity,desc or severity\n- severity,asc\n- rule_name,desc or rule_name\n- rule_name,asc\n\nthe default sort is start_at,desc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/alerts/{id}": {
      "get": {
        "operationId": "Alert_GetAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Alert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "resolved",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/groups": {
      "get": {
        "operationId": "Alert_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "builtin",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "filter group by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "description": "filter alerts by cluster name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter alerts by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- name,desc or name\n- name,asc\n- create_at,desc or create_at\n- create_at,asc\n\nthe default sort is name,asc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/alertv1alpha1Group"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateGroupRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/groups/validate": {
      "post": {
        "operationId": "Alert_ValidateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ValidateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1ValidateGroupRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/groups/{id}": {
      "get": {
        "operationId": "Alert_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/alertv1alpha1Group"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "summary": "UpdateGroup only can update group description and notify",
        "operationId": "Alert_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/alertv1alpha1Group"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateGroupBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/groups/{id}/rules": {
      "get": {
        "operationId": "Alert_ListGroupRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "filter rule by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "description": "filter rules by severity",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "CRITICAL",
              "WARNING",
              "INFO"
            ],
            "default": "SEVERITY_UNSPECIFIED"
          },
          {
            "name": "status",
            "description": "filter rules by status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "FIRING",
              "ENABLED"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- name,desc or name\n- rule_name,asc\n- severity,desc or severity\n- severity,asc\n- status,desc or status\n- status,asc\n- source,desc or source\n- source,asc\n- create_at,desc or create_at\n- create_at,asc\n\nthe default sort is name,asc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_AddGroupRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Rule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required;",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertAddGroupRuleBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/groups/{id}/rules/{name}": {
      "get": {
        "operationId": "Alert_GetGroupRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Rule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required; id is group id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "required; name is rule name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteGroupRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required; id is group id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "required; name is rule name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateGroupRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Rule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required; id is group id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "required;",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateGroupRuleBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/history/clean": {
      "put": {
        "operationId": "Alert_CleanAlertHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CleanAlertHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/history/retentionperiod": {
      "get": {
        "operationId": "Alert_GetAlertHistoryRetentionPeriod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AlertHistoryRetentionPeriod"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateAlertHistoryRetentionPeriod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1AlertHistoryRetentionPeriod"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/hook": {
      "post": {
        "operationId": "Alert_AlertHook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1AMHookRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/inhibitions": {
      "get": {
        "summary": "Inhibition",
        "operationId": "Alert_ListInhibitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1InhibitionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- name,desc or name\n- name,asc\n- create_at,desc or create_at\n- create_at,asc\n\nthe default sort is name,asc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateInhibition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Inhibition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateInhibitionRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/inhibitions/{id}": {
      "get": {
        "operationId": "Alert_GetInhibition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Inhibition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteInhibition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateInhibition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Inhibition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateInhibitionBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/providers": {
      "get": {
        "operationId": "Alert_ListProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProvidersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "filter template by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- update_at,desc or update_at\n- update_at,asc\n\nthe default sort is update_at,desc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exactSearch",
            "description": "exact search by name",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ProviderDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Provider"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/providers/{name}": {
      "get": {
        "operationId": "Alert_GetProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ProviderDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "ProviderType type = 2 [ (validate.rules).enum.defined_only = true ];",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ProviderDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "ProviderType type = 2 [ (validate.rules).enum.defined_only = true ];",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ProviderDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateProviderBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/receivers": {
      "get": {
        "operationId": "Alert_ListReceivers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListReceiverResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "filter receivers by type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RECEIVER_TYPE_UNSPECIFIED",
              "webhook",
              "email",
              "dingtalk",
              "wecom",
              "sms"
            ],
            "default": "RECEIVER_TYPE_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- create_at,desc or create_at\n- create_at,asc\n\nthe default sort is create_at,desc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exactSearch",
            "description": "exact search by name",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateReceiver",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ReceiverDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Receiver"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/receivers/test": {
      "post": {
        "operationId": "Alert_TestReceiver",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Receiver"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/receivers/{name}": {
      "get": {
        "operationId": "Alert_GetReceiver",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ReceiverDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RECEIVER_TYPE_UNSPECIFIED",
              "webhook",
              "email",
              "dingtalk",
              "wecom",
              "sms"
            ],
            "default": "RECEIVER_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteReceiver",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ReceiverDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateReceiver",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ReceiverDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateReceiverBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/rule-template-summary": {
      "get": {
        "summary": "RuleTemplate",
        "operationId": "Alert_ListRuleTemplateSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuleTemplateSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "targetType",
            "description": "filter by target type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TARGET_TYPE_UNSPECIFIED",
              "GLOBAL",
              "CLUSTER",
              "NAMESPACE",
              "NODE",
              "DEPLOYMENT",
              "STATEFULSET",
              "DAEMONSET",
              "POD"
            ],
            "default": "TARGET_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/rule-templates": {
      "get": {
        "operationId": "Alert_ListRuleTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuleTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "builtin",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "filter group by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- name,desc or name\n- name,asc\n- create_at,desc or create_at\n- create_at,asc\n- update_at,desc or update_at\n- update_at,asc\n\nthe default sort is name,asc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "targetType",
            "description": "filter by target type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TARGET_TYPE_UNSPECIFIED",
              "GLOBAL",
              "CLUSTER",
              "NAMESPACE",
              "NODE",
              "DEPLOYMENT",
              "STATEFULSET",
              "DAEMONSET",
              "POD"
            ],
            "default": "TARGET_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateRuleTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RuleTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateRuleTemplateRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/rule-templates/{id}": {
      "get": {
        "operationId": "Alert_GetRuleTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RuleTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteRuleTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateRuleTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RuleTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateRuleTemplateBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/rules/preview": {
      "post": {
        "operationId": "Alert_PreviewRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PreviewRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1PreviewRuleRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/silences": {
      "get": {
        "operationId": "Alert_ListSilences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSilencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "expired",
            "description": "set \"expired\" to false show silences that vaild for now, otherwise show\nexpired silences",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateSilence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Silence"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateSilenceRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/silences/preview": {
      "post": {
        "operationId": "Alert_PreviewSilence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PreviewSilenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1PreviewSilenceRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/silences/{id}": {
      "get": {
        "operationId": "Alert_GetSilence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Silence"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteSilence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateSilence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Silence"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateSilenceBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/smtp": {
      "get": {
        "operationId": "Alert_GetSMTPStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetSMTPStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/templates": {
      "get": {
        "operationId": "Alert_ListTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "filter template by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- update_at,desc or update_at\n- update_at,asc\n\nthe default sort is update_at,desc",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exactSearch",
            "description": "exact search by name",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "post": {
        "operationId": "Alert_CreateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateTemplateRequest"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/alert/templates/{name}": {
      "get": {
        "operationId": "Alert_GetTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "delete": {
        "operationId": "Alert_DeleteTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Alert"
        ]
      },
      "put": {
        "operationId": "Alert_UpdateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertUpdateTemplateBody"
            }
          }
        ],
        "tags": [
          "Alert"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters": {
      "get": {
        "operationId": "Resource_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "showAllCluster",
            "description": "show_all_cluster default is false, will only return cluster with\ninsight-agent installed; if set to true, will return all cluster.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{clusterName}/namespaces/{namespace}/probes": {
      "get": {
        "summary": "get the list of probes of cluster and namespace scope",
        "operationId": "Probe_ListProbes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProbesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorts",
            "description": "sorts determines the data list order, do not support multiple sort option.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- job_name,desc or job_name\n- job_name,asc\n- create_at,desc or create_at\n- create_at,asc\n\nthe default sort is create_at,desc",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Probe"
        ]
      },
      "post": {
        "summary": "create one probe of cluster and namespace scope",
        "operationId": "Probe_AddProbe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Probe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProbeAddProbeBody"
            }
          }
        ],
        "tags": [
          "Probe"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{clusterName}/namespaces/{namespace}/probes/{jobName}": {
      "get": {
        "summary": "get one probe by probe name of cluster and namespace scope",
        "operationId": "Probe_GetProbe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Probe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Probe"
        ]
      },
      "delete": {
        "summary": "delete one probe by probe name of cluster and namespace scope",
        "operationId": "Probe_DeleteProbe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Probe"
        ]
      },
      "put": {
        "summary": "update probe content of cluster and namespace scope",
        "operationId": "Probe_UpdateProbe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProbeUpdateProbeBody"
            }
          }
        ],
        "tags": [
          "Probe"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{clusterName}/probers": {
      "get": {
        "summary": "get the list of prober(blackbox-exporter) of cluster scope",
        "operationId": "Probe_ListProbers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterProbersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Probe"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/agent": {
      "get": {
        "operationId": "Resource_GetAgentSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AgentSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "use cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/cronjobs": {
      "get": {
        "operationId": "Resource_ListCronjobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCronJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter jobs by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter jobs by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter jobs by phase\n\n - JOB_STATE_UNSPECIFIED: Job is unspecified.\n - JOB_STATE_WAITING: Waiting for job ready.\n - JOB_STATE_RUNNING: Job is working.\n - JOB_STATE_COMPLETED: Jobs has completed.\n - JOB_STATE_DELETING: Jobs is being deleted.\n - JOB_STATE_FAILED: Jobs is not ready to work .",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_WAITING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_COMPLETED",
              "JOB_STATE_DELETING",
              "JOB_STATE_FAILED"
            ],
            "default": "JOB_STATE_UNSPECIFIED"
          },
          {
            "name": "name",
            "description": "filter jobs by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/daemonsets": {
      "get": {
        "operationId": "Resource_ListDaemonsets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter workloads by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter workloads by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "filter workloads by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter workloads by phase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNKNOWN",
              "WORKLOAD_STATE_RUNNING",
              "WORKLOAD_STATE_DELETING",
              "WORKLOAD_STATE_NOT_READY",
              "WORKLOAD_STATE_STOPPED",
              "WORKLOAD_STATE_WAITING"
            ],
            "default": "WORKLOAD_STATE_UNKNOWN"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/deployments": {
      "get": {
        "operationId": "Resource_ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter workloads by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter workloads by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "filter workloads by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter workloads by phase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNKNOWN",
              "WORKLOAD_STATE_RUNNING",
              "WORKLOAD_STATE_DELETING",
              "WORKLOAD_STATE_NOT_READY",
              "WORKLOAD_STATE_STOPPED",
              "WORKLOAD_STATE_WAITING"
            ],
            "default": "WORKLOAD_STATE_UNKNOWN"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/jobs": {
      "get": {
        "operationId": "Resource_ListJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter jobs by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter jobs by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter jobs by phase\n\n - JOB_STATE_UNSPECIFIED: Job is unspecified.\n - JOB_STATE_WAITING: Waiting for job ready.\n - JOB_STATE_RUNNING: Job is working.\n - JOB_STATE_COMPLETED: Jobs has completed.\n - JOB_STATE_DELETING: Jobs is being deleted.\n - JOB_STATE_FAILED: Jobs is not ready to work .",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_WAITING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_COMPLETED",
              "JOB_STATE_DELETING",
              "JOB_STATE_FAILED"
            ],
            "default": "JOB_STATE_UNSPECIFIED"
          },
          {
            "name": "name",
            "description": "filter jobs by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces": {
      "get": {
        "operationId": "Resource_ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNamespacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs/{name}": {
      "get": {
        "operationId": "Resource_GetCronjob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CronJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs/{name}/pods": {
      "get": {
        "operationId": "Resource_GetCronjobPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/daemonsets/{name}": {
      "get": {
        "operationId": "Resource_GetDaemonset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/daemonsets/{name}/pods": {
      "get": {
        "operationId": "Resource_GetDaemonsetPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}": {
      "get": {
        "operationId": "Resource_GetDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}/pods": {
      "get": {
        "operationId": "Resource_GetDeploymentPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/jobs/{name}": {
      "get": {
        "operationId": "Resource_GetJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Job"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/jobs/{name}/pods": {
      "get": {
        "operationId": "Resource_GetJobPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods/{name}": {
      "get": {
        "operationId": "Resource_GetPod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pod"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods/{name}/containers": {
      "get": {
        "operationId": "Resource_ListPodContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter nodes by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter nodes by namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "filter containers by name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services/{name}": {
      "get": {
        "operationId": "Resource_GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}": {
      "get": {
        "operationId": "Resource_GetStatefulset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}/pods": {
      "get": {
        "operationId": "Resource_GetStatefulsetPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/namespaces/{name}": {
      "get": {
        "operationId": "Resource_GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NamespaceDetail"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/nodes": {
      "get": {
        "operationId": "Resource_ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter nodes by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter nodes by phase\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NODE_PHASE_READY: The node is ready to work.\n - NODE_PHASE_NOT_READY: The node is not ready.\n - NODE_PHASE_UNKNOWN: The node state is unknown.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NODE_PHASE_UNSPECIFIED",
              "NODE_PHASE_READY",
              "NODE_PHASE_NOT_READY",
              "NODE_PHASE_UNKNOWN"
            ],
            "default": "NODE_PHASE_UNSPECIFIED"
          },
          {
            "name": "name",
            "description": "filter nodes by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/nodes/{name}": {
      "get": {
        "operationId": "Resource_GetNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiresourcev1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/nodes/{name}/gpu": {
      "get": {
        "operationId": "Resource_GetNodeGPUDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetGPUResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gpuVendors",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "start",
            "description": "start unix timestamp with seconds unit\ndefault now - 1h",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "description": "end unix timestamp with seconds unit\ndefault now",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/pods": {
      "get": {
        "operationId": "Resource_ListPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter nodes by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter nodes by namespaces",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter nodes by status\n\n - POD_PHASE_UNKNOWN: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - POD_PHASE_PENDING: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - POD_PHASE_RUNNING: PodRunning means the pod has been bound to a node and all of the containers\nhave been started. At least one container is still running or is in the\nprocess of being restarted. PodSucceeded means that all containers in the\npod have voluntarily terminated with a container exit code of 0, and the\nsystem is not going to restart any of these containers.\n - POD_PHASE_SUCCEED: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - POD_PHASE_FAILED: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "POD_PHASE_UNSPECIFIED",
              "POD_PHASE_UNKNOWN",
              "POD_PHASE_PENDING",
              "POD_PHASE_RUNNING",
              "POD_PHASE_SUCCEED",
              "POD_PHASE_FAILED"
            ],
            "default": "POD_PHASE_UNSPECIFIED"
          },
          {
            "name": "name",
            "description": "filter pods by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/services": {
      "get": {
        "operationId": "Resource_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter services by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter services by namespaces",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "filter services by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{cluster}/statefulsets": {
      "get": {
        "operationId": "Resource_ListStatefulsets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "filter workloads by cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "filter workloads by namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "filter workloads by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter workloads by phase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNKNOWN",
              "WORKLOAD_STATE_RUNNING",
              "WORKLOAD_STATE_DELETING",
              "WORKLOAD_STATE_NOT_READY",
              "WORKLOAD_STATE_STOPPED",
              "WORKLOAD_STATE_WAITING"
            ],
            "default": "WORKLOAD_STATE_UNKNOWN"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clusters/{name}": {
      "get": {
        "operationId": "Resource_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterDetail"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/clustersummary": {
      "get": {
        "operationId": "Resource_ListClusterSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "filter cluster by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "description": "filter cluster by k8s version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "filter cluster by phase\n\n - CLUSTER_PHASE_UNSPECIFIED: The cluster state is unspecified.\n - UNKNOWN: The cluster state is unknown.\n - CREATING: The cluster is being created.\n - RUNNING: The cluster is running.\n - UPDATING: The cluster is updating.\n - DELETING: The cluster is being deleted.\n - FAILED: The cluster operations failed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLUSTER_PHASE_UNSPECIFIED",
              "UNKNOWN",
              "CREATING",
              "RUNNING",
              "UPDATING",
              "DELETING",
              "FAILED"
            ],
            "default": "CLUSTER_PHASE_UNSPECIFIED"
          },
          {
            "name": "showAllCluster",
            "description": "show_all_cluster default is false, will only return cluster with\ninsight-agent installed; if set to true, will return all cluster.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/config": {
      "get": {
        "operationId": "Insight_GetGlobalConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GlobalConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Insight"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/event/cluster/{clusterName}/events": {
      "get": {
        "operationId": "Event_QueryEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "startTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now-24 hour.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "endTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.type",
            "description": " - Normal: use lowercase to keep the same as the original Kubernetes event data",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_UNSPECIFIED",
              "Normal",
              "Warning"
            ],
            "default": "TYPE_UNSPECIFIED"
          },
          {
            "name": "filter.involveObjectKind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.reason",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.involveObjectName",
            "description": "fuzzy search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.message",
            "description": "fuzzy search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "sort determines the data list order.\nparameter and sort direction divided by comma.\nsupport sorts:\n- timestamp,desc\n- timestamp,asc\n- type,desc\n- type,asc\n\nOptional.\nDefault = timestamp,desc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.\nOptional.\nDefault = 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.\nOptional.\nDefault = 10.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Event"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/event/cluster/{clusterName}/events/context": {
      "get": {
        "operationId": "Event_QueryEventContext",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestamp",
            "description": "timestamp e.g. 2023-06-20T16:05:16.887681657Z\nRequired.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.type",
            "description": " - Normal: use lowercase to keep the same as the original Kubernetes event data",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_UNSPECIFIED",
              "Normal",
              "Warning"
            ],
            "default": "TYPE_UNSPECIFIED"
          },
          {
            "name": "filter.involveObjectKind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.reason",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.involveObjectName",
            "description": "fuzzy search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.message",
            "description": "fuzzy search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "description": "Optional.\ndefault = 50",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "after",
            "description": "Optional.\ndefault = 50",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Event"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/event/cluster/{clusterName}/events/count": {
      "post": {
        "operationId": "Event_QueryEventCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryEventCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventQueryEventCountBody"
            }
          }
        ],
        "tags": [
          "Event"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/event/cluster/{clusterName}/events/filter-options": {
      "get": {
        "operationId": "Event_QueryEventFilterOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryEventFilterOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "startTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now-24 hour.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "endTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Event"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/event/cluster/{clusterName}/events/histogram": {
      "get": {
        "operationId": "Event_QueryEventHistogram",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryEventHistogramResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "startTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now-24 hour.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "endTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "description": "interval e.g 1440s\nRequired.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Event"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/event/reasons": {
      "get": {
        "operationId": "Event_GetReasons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetReasonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Event"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/feature-gates": {
      "get": {
        "operationId": "FeatureGate_GetFeatureGates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1FeatureGatesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "FeatureGate"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/feature-gates/{id}": {
      "get": {
        "operationId": "FeatureGate_GetFeatureGateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1FeatureGate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "METRICS",
              "LOGGING",
              "TRACING",
              "GRAPH_VIRTUAL_NODE",
              "LOG_ALERT",
              "NET_FLOW"
            ]
          }
        ],
        "tags": [
          "FeatureGate"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/jaeger/v2/traces": {
      "get": {
        "operationId": "Tracing_FindJaegerTraces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1TracesResponseChunk"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "serviceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "operationName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "description": "e.g. tags[host.name]=localhost&tags[url]=http://test/test\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "description": "e.g. 2022-06-24T08:00:47.850Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "description": "e.g. 2022-06-24T08:00:47.850Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "durationMin",
            "description": "Span min duration. such as \"300ms\", \"-1.5h\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "durationMax",
            "description": "Span min duration. such as \"300ms\", \"-1.5h\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "only for auth",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/jaeger/v2/traces/{traceId}": {
      "get": {
        "operationId": "Tracing_FindJaegerTrace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1TracesResponseChunk"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "traceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "only for auth",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/log/context": {
      "post": {
        "operationId": "Log_QueryLogContext",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryLogContextRequest"
            }
          }
        ],
        "tags": [
          "Log"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/log/export": {
      "post": {
        "operationId": "Log_DownloadLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DownloadLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1DownloadLogRequest"
            }
          }
        ],
        "tags": [
          "Log"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/log/filepaths": {
      "get": {
        "operationId": "Log_ListLogFilePaths",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListLogFilePathsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "node",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Log"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/log/histogram": {
      "post": {
        "operationId": "Log_QueryLogHistogram",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryLogHistogramResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryLogHistogramRequest"
            }
          }
        ],
        "tags": [
          "Log"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/log/query": {
      "post": {
        "operationId": "Log_QueryLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryLogRequest"
            }
          }
        ],
        "tags": [
          "Log"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/log/search": {
      "get": {
        "operationId": "Log_SearchLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SearchLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Log"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/metric/query": {
      "get": {
        "operationId": "Metric_QueryMetric",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PrometheusQueryResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Optional, current server time is used if the time parameter is omitted.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Metric"
        ]
      },
      "post": {
        "operationId": "Metric_BatchQueryMetric",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchQueryRequest"
            }
          }
        ],
        "tags": [
          "Metric"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/metric/queryrange": {
      "get": {
        "operationId": "Metric_QueryRangeMetric",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PrometheusQueryRangeResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "Metric"
        ]
      },
      "post": {
        "operationId": "Metric_BatchQueryRangeMetric",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchQueryRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchQueryRangeRequest"
            }
          }
        ],
        "tags": [
          "Metric"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/net_flow/config": {
      "get": {
        "operationId": "NetFlow_GetNetFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "NetFlow"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/overview/resources/count": {
      "get": {
        "operationId": "Overview_GetResourcesCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetResourcesCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "time",
            "description": "time unix timestamp .e.g. 1697597347\ndefault now",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filters",
            "description": "default [CLUSTER_NORMAL_TOTAL, CLUSTER_TOTAL, NODE_NORMAL_TOTAL, NODE_TOTAL, DEPLOYMENT_NORMAL_TOTAL, DEPLOYMENT_TOTAL\nSTATEFULSET_NORMAL_TOTAL, STATEFULSET_TOTAL, DAEMONSET_NORMAL_TOTAL, DAEMONSET_TOTAL, JOB_NORMAL_TOTAL, JOB_TOTAL\nPOD_NORMAL_TOTAL, POD_TOTAL, LOG_TOTAL, TRACE_TOTAL]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_TYPE_UNSPECIFIED",
                "CLUSTER_NORMAL_TOTAL",
                "CLUSTER_TOTAL",
                "NODE_NORMAL_TOTAL",
                "NODE_TOTAL",
                "DEPLOYMENT_NORMAL_TOTAL",
                "DEPLOYMENT_TOTAL",
                "STATEFULSET_NORMAL_TOTAL",
                "STATEFULSET_TOTAL",
                "DAEMONSET_NORMAL_TOTAL",
                "DAEMONSET_TOTAL",
                "JOB_NORMAL_TOTAL",
                "JOB_TOTAL",
                "POD_NORMAL_TOTAL",
                "POD_TOTAL",
                "LOG_TOTAL",
                "TRACE_TOTAL"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Overview"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/overview/resources/range": {
      "get": {
        "operationId": "Overview_GetResourcesRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetResourcesRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filters",
            "description": "default [NODE_TOTAL, POD_NORMAL_TOTAL, POD_ABNORMAL_TOTAL]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_TYPE_UNSPECIFIED",
                "NODE_TOTAL",
                "POD_TOTAL",
                "POD_ABNORMAL_TOTAL",
                "POD_NORMAL_TOTAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "start",
            "description": "start unix timestamp .e.g. 1697597347\ndefault end - 1hour",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "description": "end unix timestamp .e.g. 1697597347\ndefault now",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "description": "step time step in second, default 60",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "Overview"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/overview/resources/usage": {
      "get": {
        "operationId": "Overview_GetResourcesUsage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetResourcesUsageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filters",
            "description": "default [CLUSTER_CPU_USAGE, NODE_CPU_USAGE]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_TYPE_UNSPECIFIED",
                "CLUSTER_CPU_USAGE",
                "CLUSTER_MEM_USAGE",
                "CLUSTER_DISK_USAGE",
                "NODE_CPU_USAGE",
                "NODE_MEM_USAGE",
                "NODE_DISK_USAGE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "description": "limit The max element of result in desc order\ndefault 5",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "description": "start unix timestamp .e.g. 1697597347\ndefault end - 1hour",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "description": "end unix timestamp .e.g. 1697597347\ndefault now",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "description": "step time step in second, default 60",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "Overview"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/overview/services/monitor": {
      "get": {
        "operationId": "Overview_GetServicesMonitor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetServicesMonitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filters",
            "description": "filter\ndefault [AVG_LATENCY, ERR_RATE]\nif It's AVG_LATENCY the result value uses ms as unit otherwise uses percentage as unit",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MONITOR_TYPE_UNSPECIFIED",
                "AVG_LATENCY",
                "ERR_RATE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "description": "limit The max element of result in desc order\ndefault 5",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "time",
            "description": "timestamp unix timestamp .e.g. 1697597347\ndefault now",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "spanKinds",
            "description": "spanKinds is the list of span kinds to include (logical OR) in the resulting metrics aggregation.\nOptional. Default = [SPAN_KIND_SERVER, SPAN_KIND_CLIENT].\n\n - SPAN_KIND_UNSPECIFIED: Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.\n - SPAN_KIND_INTERNAL: Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.\n - SPAN_KIND_SERVER: Indicates that the span covers server-side handling of an RPC or other\nremote network request.\n - SPAN_KIND_CLIENT: Indicates that the span describes a request to some remote service.\n - SPAN_KIND_PRODUCER: Indicates that the span describes a producer sending a message to a broker.\nUnlike CLIENT and SERVER, there is often no direct critical path latency relationship\nbetween producer and consumer spans. A PRODUCER span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.\n - SPAN_KIND_CONSUMER: Indicates that the span describes consumer receiving a message from a broker.\nLike the PRODUCER kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SPAN_KIND_UNSPECIFIED",
                "SPAN_KIND_INTERNAL",
                "SPAN_KIND_SERVER",
                "SPAN_KIND_CLIENT",
                "SPAN_KIND_PRODUCER",
                "SPAN_KIND_CONSUMER"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Overview"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/pods/{name}/gpu": {
      "get": {
        "operationId": "Resource_GetPodGPUDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetGPUResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "description": "start unix timestamp with seconds unit\ndefault now - 1h",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "description": "end unix timestamp with seconds unit\ndefault now",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/pods/{name}/jvm": {
      "post": {
        "operationId": "Resource_GetPodJVMInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PodJVMInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "required;",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGetPodJVMInfoBody"
            }
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/server/component": {
      "get": {
        "operationId": "Resource_GetServerComponentSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ServerComponentSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Resource"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/service-graph/graph": {
      "post": {
        "operationId": "ServiceGraph_GetGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Graph"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1BaseGraphQuery"
            }
          }
        ],
        "tags": [
          "ServiceGraph"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/service-graph/node-metrics": {
      "get": {
        "operationId": "ServiceGraph_GetNodeMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NodeMetricResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Required. e.g. cluster = 7760a3f4-bfca-4c1e-8731-aea80838525f",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extensionFilters",
            "description": "extension_filters eg. skoala_registry=ire-111,instance=xxx",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "end_time 结束时间 unix timestamp，单位 ms",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "lookback",
            "description": "lookback 回退时间 unix timestamp，单位 ms",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "description": "step 时间步长 unix timestamp，单位 ms",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ratePer",
            "description": "ratePer 变化率计算步长 unix timestamp，单位 ms",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "clusterName",
            "description": "Required. e.g. clusterName=kpanda-global-cluster must give one of\ncluster,clusterName in a query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spanKinds",
            "description": "spanKinds is the list of span kinds to include (logical OR) in the\nresulting metrics aggregation. Optional. Default = [SPAN_KIND_SERVER].\n\n - SPAN_KIND_UNSPECIFIED: Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.\n - SPAN_KIND_INTERNAL: Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.\n - SPAN_KIND_SERVER: Indicates that the span covers server-side handling of an RPC or other\nremote network request.\n - SPAN_KIND_CLIENT: Indicates that the span describes a request to some remote service.\n - SPAN_KIND_PRODUCER: Indicates that the span describes a producer sending a message to a broker.\nUnlike CLIENT and SERVER, there is often no direct critical path latency relationship\nbetween producer and consumer spans. A PRODUCER span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.\n - SPAN_KIND_CONSUMER: Indicates that the span describes consumer receiving a message from a broker.\nLike the PRODUCER kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SPAN_KIND_UNSPECIFIED",
                "SPAN_KIND_INTERNAL",
                "SPAN_KIND_SERVER",
                "SPAN_KIND_CLIENT",
                "SPAN_KIND_PRODUCER",
                "SPAN_KIND_CONSUMER"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ServiceGraph"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/traces/apdex": {
      "get": {
        "operationId": "Tracing_GetServiceApdex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PrometheusQueryResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "apdexThreshold",
            "description": "Unit is milseconds.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "extensionFilters",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/traces/clusters/{clusterName}/operations": {
      "get": {
        "operationId": "Tracing_QueryOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1QueryOperationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/traces/operation-detail": {
      "get": {
        "operationId": "Tracing_GetOperationDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetOperationDetailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "Required.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Required. namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "description": "Required. At least one service name must be provided.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Optional.\nsort determines the data list order.\nparameter and sort direction divided by comma.\nsupport sorts:\n- reqRate,desc\n- reqRate,asc\n- errRate,desc\n- errRate,asc\n- p50Latency,desc\n- p50Latency,asc\n- p95Latency,desc\n- p95Latency,asc\n- p99Latency,desc\n- p99Latency,asc\n\nthe default sort is P95_latency,desc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Optional. page is current page.\nDefault = 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Optional. size is the data number shown per page.\nDefault = 10.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "extensionFilters",
            "description": "Optional. support extension labels search\nsupport multiple labels, split by comma\neg. span_name=HTTP",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "end_time is the ending time of the time series query range.\nOptional. Default = now.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "lookback",
            "description": "lookback is the duration from the end_time to look back on for metrics data points.\nFor example, if set to 1h, the query would span from end_time-1h to end_time.\nOptional. Default = 1h.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "description": "step size is the duration between data points of the query results.\nFor example, if set to 5s, the results would produce a data point every 5 seconds\nfrom the start_time to end_time.\nOptional. Default = 1m.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ratePer",
            "description": "ratePer is the duration in which the per-second rate of change is calculated for a cumulative counter metric.\nOptional. Default = 1m.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "spanKinds",
            "description": "spanKinds is the list of span kinds to include (logical OR) in the resulting metrics aggregation.\nOptional. Default = [SPAN_KIND_SERVER, SPAN_KIND_CLIENT].\n\n - SPAN_KIND_UNSPECIFIED: Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.\n - SPAN_KIND_INTERNAL: Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.\n - SPAN_KIND_SERVER: Indicates that the span covers server-side handling of an RPC or other\nremote network request.\n - SPAN_KIND_CLIENT: Indicates that the span describes a request to some remote service.\n - SPAN_KIND_PRODUCER: Indicates that the span describes a producer sending a message to a broker.\nUnlike CLIENT and SERVER, there is often no direct critical path latency relationship\nbetween producer and consumer spans. A PRODUCER span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.\n - SPAN_KIND_CONSUMER: Indicates that the span describes consumer receiving a message from a broker.\nLike the PRODUCER kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SPAN_KIND_UNSPECIFIED",
                "SPAN_KIND_INTERNAL",
                "SPAN_KIND_SERVER",
                "SPAN_KIND_CLIENT",
                "SPAN_KIND_PRODUCER",
                "SPAN_KIND_CONSUMER"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/traces/service-detail": {
      "get": {
        "operationId": "Tracing_GetServiceDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetServiceDetailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Optional. namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceName",
            "description": "Optional. instance name(k8s.pod.name)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extensionFilters",
            "description": "Optional. support extension search\neg.service_name=my-otel-demo-adservice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceNames",
            "description": "service_names are the service names to fetch metrics from.\nThe results will be grouped by service_name.\nRequired. At least one service name must be provided.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "groupByOperation",
            "description": "groupByOperation determines if the metrics returned should be grouped by operation.\nOptional. Default = false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endTime",
            "description": "end_time is the ending time of the time series query range.\nOptional. Default = now.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "lookback",
            "description": "lookback is the duration from the end_time to look back on for metrics data points.\nFor example, if set to 1h, the query would span from end_time-1h to end_time.\nOptional. Default = 1h.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "step",
            "description": "step size is the duration between data points of the query results.\nFor example, if set to 5s, the results would produce a data point every 5 seconds\nfrom the start_time to end_time.\nOptional. Default = 5s.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ratePer",
            "description": "ratePer is the duration in which the per-second rate of change is calculated for a cumulative counter metric.\nOptional. Default = 10m.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "spanKinds",
            "description": "spanKinds is the list of span kinds to include (logical OR) in the resulting metrics aggregation.\nOptional. Default = [SPAN_KIND_SERVER].\n\n - SPAN_KIND_UNSPECIFIED: Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.\n - SPAN_KIND_INTERNAL: Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.\n - SPAN_KIND_SERVER: Indicates that the span covers server-side handling of an RPC or other\nremote network request.\n - SPAN_KIND_CLIENT: Indicates that the span describes a request to some remote service.\n - SPAN_KIND_PRODUCER: Indicates that the span describes a producer sending a message to a broker.\nUnlike CLIENT and SERVER, there is often no direct critical path latency relationship\nbetween producer and consumer spans. A PRODUCER span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.\n - SPAN_KIND_CONSUMER: Indicates that the span describes consumer receiving a message from a broker.\nLike the PRODUCER kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SPAN_KIND_UNSPECIFIED",
                "SPAN_KIND_INTERNAL",
                "SPAN_KIND_SERVER",
                "SPAN_KIND_CLIENT",
                "SPAN_KIND_PRODUCER",
                "SPAN_KIND_CONSUMER"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/traces/service-names": {
      "get": {
        "operationId": "Tracing_ListServiceNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetServiceNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/traces/services": {
      "get": {
        "operationId": "Tracing_GetServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Optional. namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extensionFilters",
            "description": "Optional. support extension search\neg.service_name=my-otel-demo-adservice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "end_time is the ending time of the time series query range.\nOptional. Default = now.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "lookback",
            "description": "lookback is the duration from the end_time to look back on for metrics data points.\nFor example, if set to 1h, the query would span from end_time-1h to end_time.\nOptional. Default = 1h.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "spanKinds",
            "description": "spanKinds is the list of span kinds to include (logical OR) in the resulting metrics aggregation.\nOptional. Default = [SPAN_KIND_SERVER, SPAN_KIND_CLIENT].\n\n - SPAN_KIND_UNSPECIFIED: Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.\n - SPAN_KIND_INTERNAL: Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.\n - SPAN_KIND_SERVER: Indicates that the span covers server-side handling of an RPC or other\nremote network request.\n - SPAN_KIND_CLIENT: Indicates that the span describes a request to some remote service.\n - SPAN_KIND_PRODUCER: Indicates that the span describes a producer sending a message to a broker.\nUnlike CLIENT and SERVER, there is often no direct critical path latency relationship\nbetween producer and consumer spans. A PRODUCER span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.\n - SPAN_KIND_CONSUMER: Indicates that the span describes consumer receiving a message from a broker.\nLike the PRODUCER kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SPAN_KIND_UNSPECIFIED",
                "SPAN_KIND_INTERNAL",
                "SPAN_KIND_SERVER",
                "SPAN_KIND_CLIENT",
                "SPAN_KIND_PRODUCER",
                "SPAN_KIND_CONSUMER"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "sorts determines the data list order.\nparameter and sort direction divided by comma.\nyou can also only give the parameter,the desc sort will apply it by default\nsupport sorts:\n- service_name,desc or service_name\n- service_name,asc\n- req_rate,desc or req_rate\n- req_rate,asc\n- rep_latency,desc or rep_latency\n- rep_latency,asc\n- error_rate,desc or error_rate\n- error_rate,asc\n\nthe default sort is service_name,asc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tracing"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/userinfo": {
      "get": {
        "operationId": "Insight_GetUserinfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1userinfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Insight"
        ]
      }
    },
    "/apis/insight.io/v1alpha1/version": {
      "get": {
        "operationId": "Insight_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VersionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Insight"
        ]
      }
    }
  },
  "definitions": {
    "AlertAddGroupRuleBody": {
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/v1alpha1CreateGroupRule"
        }
      }
    },
    "AlertUpdateGroupBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "notificationTemplate": {
          "type": "string"
        },
        "receivers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1groupReceiver"
          }
        },
        "notifyRepeatConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1repeatConfig"
          }
        }
      }
    },
    "AlertUpdateGroupRuleBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expr": {
          "type": "string"
        },
        "thresholdSymbol": {
          "type": "string",
          "title": "when create rule from metric_tpl,use thresholdSymbol and thresholdNum to\ncomplete the promql"
        },
        "thresholdNum": {
          "type": "number",
          "format": "float"
        },
        "duration": {
          "type": "string",
          "title": "For evaluation interval in time.Duration format,like 30s, 1m, 1h"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "customized labels"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "customized annotations"
        },
        "logFilterCondition": {
          "$ref": "#/definitions/v1alpha1RuleFilterCondition",
          "description": "logs alert part\nonly need when rule source is LOG_TPL."
        },
        "logQueryString": {
          "type": "string"
        }
      }
    },
    "AlertUpdateInhibitionBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "sourceMatchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          },
          "title": "required; support maxium 100 matches"
        },
        "targetMatchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          },
          "title": "required; support maxium 100 matches"
        },
        "equal": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlertUpdateProviderBody": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1ProviderType"
        },
        "aliyun": {
          "$ref": "#/definitions/ProviderAliyunConfig"
        },
        "tencent": {
          "$ref": "#/definitions/ProviderTencentConfig"
        },
        "custom": {
          "$ref": "#/definitions/ProviderCustomConfig"
        },
        "template": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AlertUpdateReceiverBody": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1ReceiverType"
        },
        "webhook": {
          "$ref": "#/definitions/v1alpha1WebhookConfig"
        },
        "email": {
          "$ref": "#/definitions/v1alpha1EmailConfig"
        },
        "wecom": {
          "$ref": "#/definitions/v1alpha1WecomConfig"
        },
        "dingtalk": {
          "$ref": "#/definitions/v1alpha1DingtalkConfig"
        },
        "sms": {
          "$ref": "#/definitions/v1alpha1SmsConfig"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AlertUpdateRuleTemplateBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CreateGroupRule"
          }
        }
      }
    },
    "AlertUpdateSilenceBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          },
          "title": "required; support maxium 100 matches"
        },
        "activeTimeInterval": {
          "$ref": "#/definitions/v1alpha1timeInterval",
          "title": "optional; null means rule always valid"
        }
      }
    },
    "AlertUpdateTemplateBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/v1alpha1TemplateBody"
        }
      }
    },
    "ClusterProbersResponseConfigmapMeta": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "ClusterProbersResponseProber": {
      "type": "object",
      "properties": {
        "prober": {
          "$ref": "#/definitions/v1alpha1ProberSpec"
        },
        "modules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "configmapMeta": {
          "$ref": "#/definitions/ClusterProbersResponseConfigmapMeta"
        }
      }
    },
    "EventInvolvedObject": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EventQueryEventCountBody": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "startTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now-24 hour."
        },
        "endTime": {
          "type": "string",
          "description": "endTime e.g. 2006-01-02T15:04:05.999999999Z07:00\nOptional.\nDefault = now."
        },
        "namespace": {
          "type": "string",
          "description": "Optional."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EventFilter"
          },
          "description": "support key value:\n- name: imagePullFail\n  value: {\"reason\":\"BackOff\",\"message\":\"Back-off pulling image\"}\n- name: healthyCheckFail\n  value: {\"reason\":\"Unhealthy\"}\n- name: podFailed\n  value: {\"involve_object_kind\":\"Pod\",\"reason\":\"Failed\"}\n- name: podFailedScheduling\n  value: {\"involve_object_kind\":\"Pod\",\"reason\":\"FailedScheduling\"}\n- name: podOOMKilling\n  value: {\"involve_object_kind\":\"Pod\",\"reason\":\"OOMKilling\"}\n- name: podFailedMount\n  value: {\"reason\":\"FailedMount\"}\nRequired.\nDefault = [imagePullFail, healthyCheckFail, podFailed, podFailedScheduling, podOOMKilling, podFailedMount]."
        }
      }
    },
    "EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "GetResourcesCountRequestResourcesFilter": {
      "type": "string",
      "enum": [
        "RESOURCE_TYPE_UNSPECIFIED",
        "CLUSTER_NORMAL_TOTAL",
        "CLUSTER_TOTAL",
        "NODE_NORMAL_TOTAL",
        "NODE_TOTAL",
        "DEPLOYMENT_NORMAL_TOTAL",
        "DEPLOYMENT_TOTAL",
        "STATEFULSET_NORMAL_TOTAL",
        "STATEFULSET_TOTAL",
        "DAEMONSET_NORMAL_TOTAL",
        "DAEMONSET_TOTAL",
        "JOB_NORMAL_TOTAL",
        "JOB_TOTAL",
        "POD_NORMAL_TOTAL",
        "POD_TOTAL",
        "LOG_TOTAL",
        "TRACE_TOTAL"
      ],
      "default": "RESOURCE_TYPE_UNSPECIFIED"
    },
    "GetResourcesRangeRequestResourceFilter": {
      "type": "string",
      "enum": [
        "RESOURCE_TYPE_UNSPECIFIED",
        "NODE_TOTAL",
        "POD_TOTAL",
        "POD_ABNORMAL_TOTAL",
        "POD_NORMAL_TOTAL"
      ],
      "default": "RESOURCE_TYPE_UNSPECIFIED"
    },
    "GetResourcesUsageRequestResourceFilters": {
      "type": "string",
      "enum": [
        "RESOURCE_TYPE_UNSPECIFIED",
        "CLUSTER_CPU_USAGE",
        "CLUSTER_MEM_USAGE",
        "CLUSTER_DISK_USAGE",
        "NODE_CPU_USAGE",
        "NODE_MEM_USAGE",
        "NODE_DISK_USAGE"
      ],
      "default": "RESOURCE_TYPE_UNSPECIFIED"
    },
    "GetServicesMonitorRequestMonitorFilter": {
      "type": "string",
      "enum": [
        "MONITOR_TYPE_UNSPECIFIED",
        "AVG_LATENCY",
        "ERR_RATE"
      ],
      "default": "MONITOR_TYPE_UNSPECIFIED"
    },
    "NodePosition": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "Position 可用于标记节点在画布中的位置。\n如果存在此值，那么就是后端计算出位置之后前端直接渲染。\n如果不需要，也可以不实现，由前端选择合适的方式进行展现，或者自己实现。"
    },
    "PreviewRuleRequestParams": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64",
          "title": "default end - 1h"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "title": "default now"
        },
        "step": {
          "type": "number",
          "format": "double",
          "title": "default 60"
        }
      },
      "title": "Describes querying data size paramaters"
    },
    "ProbeAddProbeBody": {
      "type": "object",
      "properties": {
        "probe": {
          "$ref": "#/definitions/v1alpha1ProbeSpec"
        }
      }
    },
    "ProbeUpdateProbeBody": {
      "type": "object",
      "properties": {
        "module": {
          "type": "string"
        },
        "targets": {
          "$ref": "#/definitions/v1alpha1Targets"
        },
        "interval": {
          "type": "string"
        },
        "scrapeTimeout": {
          "type": "string"
        }
      }
    },
    "ProviderAliyunConfig": {
      "type": "object",
      "properties": {
        "signName": {
          "type": "string"
        },
        "templateCode": {
          "type": "string"
        },
        "accessKeyId": {
          "type": "string"
        },
        "accessKeySecret": {
          "type": "string"
        }
      }
    },
    "ProviderCustomConfig": {
      "type": "object"
    },
    "ProviderTencentConfig": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        },
        "smsSdkAppId": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "secretId": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "ResourceGetPodJVMInfoBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "title": "required;"
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "step": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "StatusPhase": {
      "type": "string",
      "enum": [
        "Pending",
        "Running",
        "Failed"
      ],
      "default": "Pending"
    },
    "TargetsStaticConfig": {
      "type": "object",
      "properties": {
        "static": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relabelingConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RelabelConfig"
          }
        }
      }
    },
    "TraceProcessMapping": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        },
        "process": {
          "$ref": "#/definitions/v1alpha1Process"
        }
      }
    },
    "TraceTraceStatus": {
      "type": "string",
      "enum": [
        "UNHEALTHY",
        "HEALTHY"
      ],
      "default": "UNHEALTHY"
    },
    "WorkloadSumKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "DEPLOYMENT",
        "STATEFULSET",
        "DAEMONSET"
      ],
      "default": "KIND_UNSPECIFIED"
    },
    "alertv1alpha1CountAlert": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1countInfo"
          }
        }
      }
    },
    "alertv1alpha1Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "builtin": {
          "type": "boolean"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "notificationTemplate": {
          "type": "string"
        },
        "receivers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1groupReceiver"
          }
        },
        "notifyRepeatConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1repeatConfig"
          }
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apigraphv1alpha1Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "节点 ID，不可重复，可以按照一定规则生成。"
        },
        "parent": {
          "type": "string",
          "title": "父节点的 ID，可选实现，可能在做一些依赖关系的时候会用到。\n也可以用在，比如将多个服务放在一个 Namespace 的匡中这种场景。"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1NodeType",
          "title": "节点类型，可用于前端展现不同的图标，或者进行后一步操作。"
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1NodeMetadata"
        },
        "position": {
          "$ref": "#/definitions/NodePosition",
          "title": "节点的位置标记"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apigraphv1alpha1Status"
          },
          "title": "当前节点各种状态"
        }
      },
      "title": "Node 表示图上的每一个实体点"
    },
    "apigraphv1alpha1Status": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "可以定义一些初步的 name 共识：\nreplicas 表示副本数\navailableReplicas 表示可用副本数\nrequestsPerMinute 请求速率（RPM）\nerrorRate 错误率（%）\navgLatency 平均延迟（ms）\nconnections 连接数\nreceiveBytes 接收吞吐（B/S）\nsendBytes 发送吞吐（B/S）\nhealthyStatus 健康状态；0(未知) | 1(健康) | 2(告警) | 3(异常)"
        },
        "value": {
          "type": "number",
          "format": "float",
          "title": "具体的值，只能用浮点数来表示状态。"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "properties 可以给这个 Status 增加一些扩展的参数,\n比如在网格中，流量可能可以分为入口或者出口流量。"
        }
      },
      "title": "Status 用于定义节点或连线的状态。\n比如希望展示当前服务的 QPS，那么可以如下：\n{ name: qps, value: 100, properties: {protocol: http}}\n如果想要展示命名空间的服务数量：\n{ name: service_count, value: 5}\n具体的释义可以根据各个产品决定。"
    },
    "apiprobesv1alpha1Status": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/StatusPhase"
        }
      }
    },
    "apiresourcev1alpha1Condition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string",
          "title": "Last time the condition transitioned from one status to another.\n+optional"
        },
        "lastUpdateTime": {
          "type": "string",
          "title": "Last time we got an update on a given condition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "type": {
          "type": "string",
          "description": "Type of condition."
        }
      },
      "description": "Condition describes the state of a referent at a certain point."
    },
    "apiresourcev1alpha1Node": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "operatingSystem": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "nodeStatus": {
          "$ref": "#/definitions/v1alpha1NodeStatus"
        },
        "podSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "usage": {
          "$ref": "#/definitions/v1alpha1usage"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "timeIntervaltimeRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1AMHookRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "groupKey": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "receiver": {
          "type": "string"
        },
        "groupLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "commonLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "commonAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "externalURL": {
          "type": "string"
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1AmAlert"
          }
        },
        "truncatedAlerts": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "alert message send by alertmanager"
    },
    "v1alpha1AgentSummary": {
      "type": "object",
      "properties": {
        "insightAgentState": {
          "$ref": "#/definitions/v1alpha1insightAgentState"
        },
        "agentModuleStatus": {
          "$ref": "#/definitions/v1alpha1agentModuleStatus"
        }
      }
    },
    "v1alpha1AggType": {
      "type": "string",
      "enum": [
        "INTERSECTION",
        "UNION"
      ],
      "default": "INTERSECTION",
      "title": "- INTERSECTION: INTERSECTION preform a intersection operation after FilterOperator\n - UNION: UNION preform a union operation after FilterOperator\nCURRENT NOT SUPPORT"
    },
    "v1alpha1Alert": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "target": {
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "value": {
          "type": "string"
        },
        "notifyResponse": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promQL": {
          "type": "string",
          "title": "real sql that used to query, add info like cluster, namespaces"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        },
        "lastSent": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1AlertHistoryRetentionPeriod": {
      "type": "object",
      "properties": {
        "retentionTime": {
          "type": "integer",
          "format": "int32",
          "title": "retention_time unit is day, 0 means no need to clean"
        }
      }
    },
    "v1alpha1AlertSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "target": {
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "value": {
          "type": "string"
        },
        "notifyResponse": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        },
        "lastSent": {
          "type": "string",
          "format": "int64"
        },
        "builtin": {
          "type": "boolean",
          "title": "inherits from group"
        }
      }
    },
    "v1alpha1AmAlert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startsAt": {
          "type": "string"
        },
        "endsAt": {
          "type": "string"
        },
        "generatorURL": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        }
      }
    },
    "v1alpha1BaseGraphQuery": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "layer": {
          "$ref": "#/definitions/v1alpha1Layer",
          "title": "期望展示的 layer 层级，比如 MESH, TRACING"
        },
        "start": {
          "type": "string",
          "format": "int64",
          "title": "start 开始时间 unix timestamp，单位 ms"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "title": "end 结束时间 unix timestamp，单位 ms"
        },
        "extensionLabels": {
          "type": "string",
          "title": "eg. \"skoala_registry=ireg-1233,instance_name=xxxxx\""
        },
        "graphType": {
          "$ref": "#/definitions/v1alpha1GraphType"
        },
        "clusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "cluster_names 集群名字列表"
        },
        "filters": {
          "$ref": "#/definitions/v1alpha1Filter",
          "title": "filters optional. Filter defines some filter operation to the graph data\nindependently. After filter operators done, there is a collection operation\non filtered graph data depending on filters.agg_type, finally, there is a\ndependency fetch operation on the second step result as a root graph to\nfetch its dependent data(downstream node or upstream node) from the origin\nGraph with dependency_max_depth depth the root node data will have a\nproperty DEPENDENT_TYPE = ROOT the dependency node data will have a\nproperty DEPENDENT_TYPE = DEPENDENT"
        },
        "showVirtualNode": {
          "type": "boolean",
          "title": "TODO(jian): remove this in next milestone.\nshow virtual node in service graph or not. Default: false"
        },
        "showUpDownRelatedNode": {
          "type": "boolean",
          "title": "show upstream and downstream node. Default: false"
        },
        "workloads": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1BasicAuth": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1alpha1BatchQueryRangeRequest": {
      "type": "object",
      "properties": {
        "param": {
          "$ref": "#/definitions/v1alpha1BatchQueryRangeRequestParam"
        },
        "matchLabel": {
          "$ref": "#/definitions/v1alpha1MatchLabel"
        },
        "queryList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1BatchQueryRangeRequestParam": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "step": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1alpha1BatchQueryRangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryRangeResult"
          }
        }
      }
    },
    "v1alpha1BatchQueryRangeResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1PrometheusQueryRangeResult"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1requestStatus"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1alpha1BatchQueryRequest": {
      "type": "object",
      "properties": {
        "param": {
          "$ref": "#/definitions/v1alpha1BatchQueryRequestParam"
        },
        "matchLabel": {
          "$ref": "#/definitions/v1alpha1MatchLabel"
        },
        "queryList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1BatchQueryRequestParam": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1BatchQueryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryResult"
          }
        }
      }
    },
    "v1alpha1BatchQueryResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1PrometheusQueryResult"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1requestStatus"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1alpha1CleanAlertHistoryResponse": {
      "type": "object",
      "properties": {
        "num": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kubeSystemId": {
          "type": "string",
          "title": "kube-system id"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase"
        },
        "role": {
          "$ref": "#/definitions/v1alpha1Role"
        }
      }
    },
    "v1alpha1ClusterDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kubeSystemId": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase"
        },
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "KubernetesVersion represents version of the cluster."
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "nodeNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "deploymentNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "statefulsetNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "daemonsetNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "podNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "insightAgentStatus": {
          "$ref": "#/definitions/v1alpha1insightAgentState"
        }
      }
    },
    "v1alpha1ClusterPhase": {
      "type": "string",
      "enum": [
        "CLUSTER_PHASE_UNSPECIFIED",
        "UNKNOWN",
        "CREATING",
        "RUNNING",
        "UPDATING",
        "DELETING",
        "FAILED"
      ],
      "default": "CLUSTER_PHASE_UNSPECIFIED",
      "description": " - CLUSTER_PHASE_UNSPECIFIED: The cluster state is unspecified.\n - UNKNOWN: The cluster state is unknown.\n - CREATING: The cluster is being created.\n - RUNNING: The cluster is running.\n - UPDATING: The cluster is updating.\n - DELETING: The cluster is being deleted.\n - FAILED: The cluster operations failed."
    },
    "v1alpha1ClusterProbersResponse": {
      "type": "object",
      "properties": {
        "probers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClusterProbersResponseProber"
          }
        }
      }
    },
    "v1alpha1ClusterProvider": {
      "type": "string",
      "enum": [
        "GENERIC",
        "DAOCLOUD_KUBESPRAY",
        "DAOCLOUD_CLUSTER_API",
        "DAOCLOUD_DCE4",
        "REDHAT_OPENSHIFT4",
        "SUSE_RANCHER",
        "VMWARE_TANZU",
        "AWS_EKS",
        "ALIYUN_ACK",
        "TENCENT_TKE",
        "HUAWEI_CCE",
        "MICROSOFT_AZURE"
      ],
      "default": "GENERIC",
      "description": " - GENERIC: GENERIC indicates other providers\n - DAOCLOUD_KUBESPRAY: 1.DaoCloud\nDAOCLOUD_KUBESPRAY indicates a provider of DaoCloud's KubeSpray Engine\n - DAOCLOUD_CLUSTER_API: DAOCLOUD_CLUSTER_API indicates a provider of DaoCloud's Cluster API Engine\n - DAOCLOUD_DCE4: DAOCLOUD_DCE4 indicates a provider of DaoCloud's DCE4 Engine\n - REDHAT_OPENSHIFT4: 2.OverSea Distribtion\nREDHAT_OPENSHIFT4 indicates a provider of RedHat Openshift4\n - SUSE_RANCHER: SUSE_RANCHER indicates a provider of SUSE Rancher\n - VMWARE_TANZU: VMWARE_TANZU indicates a provider of VMware Tanzu\n - AWS_EKS: 3.Public Cloud\nAWS_EKS indicates a provider of AWS EKS\n - ALIYUN_ACK: ALIYUN_ACK indicates a provider of Aliyun ACK\n - TENCENT_TKE: TENCENT_TKE indicates a provider of Tencent TKE.\n - HUAWEI_CCE: TENCENT_TKE indicates a provider of Huawei CCE.\n - MICROSOFT_AZURE: MICROSOFT_AZURE=11; indicates a provider of Microsoft Azure."
    },
    "v1alpha1ClusterSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kubeSystemId": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase"
        },
        "nodeNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "insightAgentStatus": {
          "$ref": "#/definitions/v1alpha1insightAgentState"
        },
        "role": {
          "$ref": "#/definitions/v1alpha1Role"
        }
      }
    },
    "v1alpha1ConditionStatus": {
      "type": "string",
      "enum": [
        "CONDITION_STATUS_UNSPECIFIED",
        "True",
        "False",
        "Unknown"
      ],
      "default": "CONDITION_STATUS_UNSPECIFIED",
      "description": "These are valid condition statuses.\n\n - CONDITION_STATUS_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - True: True means a resource is in the condition.\n - False: False means a resource is not in the condition.\n - Unknown: Unknown means kubernetes can't decide if a resource is in the condition or\nnot."
    },
    "v1alpha1ContainerPhase": {
      "type": "string",
      "enum": [
        "CONTAINER_PHASE_UNSPECIFIED",
        "CONTAINER_PHASE_WAITING",
        "CONTAINER_PHASE_RUNNING",
        "CONTAINER_PHASE_TERMINATED"
      ],
      "default": "CONTAINER_PHASE_UNSPECIFIED"
    },
    "v1alpha1ContainerSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ContainerPhase"
        }
      }
    },
    "v1alpha1CountAlertResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/alertv1alpha1CountAlert"
          }
        }
      }
    },
    "v1alpha1CreateGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CreateGroupRule"
          }
        },
        "notificationTemplate": {
          "type": "string"
        },
        "receivers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1groupReceiver"
          }
        },
        "notifyRepeatConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1repeatConfig"
          }
        }
      }
    },
    "v1alpha1CreateGroupRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "required"
        },
        "description": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1RuleSource",
          "title": "required"
        },
        "expr": {
          "type": "string"
        },
        "thresholdSymbol": {
          "type": "string",
          "title": "when create rule from metric_tpl,use thresholdSymbol and thresholdNum to\ncomplete the promql"
        },
        "thresholdNum": {
          "type": "number",
          "format": "float"
        },
        "duration": {
          "type": "string",
          "title": "Supported units: h, m, s"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "customized labels"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "customized annotations"
        },
        "logFilterCondition": {
          "$ref": "#/definitions/v1alpha1RuleFilterCondition",
          "description": "logs alert part\nonly need when rule source is LOG_TPL."
        },
        "logQueryString": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateInhibitionRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sourceMatchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          },
          "title": "required; support maxium 100 matches"
        },
        "targetMatchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          },
          "title": "required; support maxium 100 matches"
        },
        "equal": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1CreateRuleTemplateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CreateGroupRule"
          }
        }
      }
    },
    "v1alpha1CreateSilenceRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          },
          "title": "required; support maxium 100 matches"
        },
        "activeTimeInterval": {
          "$ref": "#/definitions/v1alpha1timeInterval",
          "title": "optional; null means rule always valid"
        }
      }
    },
    "v1alpha1CreateTemplateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/v1alpha1TemplateBody"
        }
      }
    },
    "v1alpha1CronJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1CronJobPhase"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "jobNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiresourcev1alpha1Condition"
          },
          "description": "conditions of current cronjob."
        }
      }
    },
    "v1alpha1CronJobPhase": {
      "type": "string",
      "enum": [
        "CRONJOB_STATE_UNSPECIFIED",
        "CRONJOB_STATE_WAITING",
        "CRONJOB_STATE_ACTIVATED",
        "CRONJOB_STATE_STOPPED",
        "CRONJOB_STATE_DELETING"
      ],
      "default": "CRONJOB_STATE_UNSPECIFIED",
      "description": " - CRONJOB_STATE_UNSPECIFIED: CronJob is unspecified.\n - CRONJOB_STATE_WAITING: Waiting for cronjob ready.\n - CRONJOB_STATE_ACTIVATED: The number of pending and running pods.\n - CRONJOB_STATE_STOPPED: CronJob has stopped.\n - CRONJOB_STATE_DELETING: CronJob is being deleted."
    },
    "v1alpha1CronJobSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1CronJobPhase"
        },
        "jobNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        }
      }
    },
    "v1alpha1DingtalkConfig": {
      "type": "object",
      "properties": {
        "webhook": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "v1alpha1DownloadFileType": {
      "type": "string",
      "enum": [
        "TEXT",
        "CSV",
        "JSON"
      ],
      "default": "TEXT"
    },
    "v1alpha1DownloadLogRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1DownloadFileType"
        },
        "queryLog": {
          "$ref": "#/definitions/v1alpha1QueryLogRequest"
        },
        "queryLogContext": {
          "$ref": "#/definitions/v1alpha1QueryLogContextRequest"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LogField"
          }
        }
      }
    },
    "v1alpha1DownloadLogResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1Edge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "与 Node.id 一致，一个唯一标志符，理论上，Edge 的 ID 可以为空。"
        },
        "source": {
          "type": "string",
          "title": "source 表示当前连线的起始节点 ID"
        },
        "target": {
          "type": "string",
          "title": "target 表示当前连线的目标节点 ID"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apigraphv1alpha1Status"
          },
          "title": "当前连线各种状态"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "当前连线的一些扩展状态，比如可以展示当前协议，线的展示类型等。\n根据各个产品商议。"
        }
      },
      "title": "Edge 表示连线，用于连接两个 Node。"
    },
    "v1alpha1EmailConfig": {
      "type": "object",
      "properties": {
        "to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1Event": {
      "type": "object",
      "properties": {
        "reportingComponent": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "lastTimestamp": {
          "type": "string",
          "title": "e.g. 2023-06-21T01:16:56.000Z"
        },
        "count": {
          "type": "string",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/EventSource"
        },
        "reportingInstance": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1EventMetadata"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1EventType"
        },
        "firstTimestamp": {
          "type": "string",
          "title": "e.g. 2023-06-21T01:16:56.000Z"
        },
        "involveObject": {
          "$ref": "#/definitions/EventInvolvedObject"
        },
        "clusterUuid": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "title": "unique primary key, e.g. 2023-06-20T16:05:16.887681657Z"
        },
        "action": {
          "type": "string"
        },
        "eventTime": {
          "type": "string"
        }
      }
    },
    "v1alpha1EventFilter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1EventType"
        },
        "involveObjectKind": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "involveObjectName": {
          "type": "string",
          "title": "fuzzy search"
        },
        "message": {
          "type": "string",
          "title": "fuzzy search"
        }
      }
    },
    "v1alpha1EventHistogram": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "title": "timestamp e.g. 2023-06-21T01:48:00.000Z"
        },
        "normalCount": {
          "type": "string",
          "format": "int64"
        },
        "warningCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1EventMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string"
        }
      }
    },
    "v1alpha1EventType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "Normal",
        "Warning"
      ],
      "default": "TYPE_UNSPECIFIED",
      "title": "- Normal: use lowercase to keep the same as the original Kubernetes event data"
    },
    "v1alpha1FeatureGate": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/v1alpha1FeatureGateIDEnum",
          "title": "唯一标志符"
        },
        "name": {
          "type": "string",
          "title": "名字"
        },
        "description": {
          "type": "string",
          "title": "关于此 FeatureGate 的描述"
        },
        "enabled": {
          "type": "boolean",
          "title": "是否启用"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1alpha1FeatureGateIDEnum": {
      "type": "string",
      "enum": [
        "METRICS",
        "LOGGING",
        "TRACING",
        "GRAPH_VIRTUAL_NODE",
        "LOG_ALERT",
        "NET_FLOW"
      ],
      "default": "METRICS"
    },
    "v1alpha1FeatureGatesResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FeatureGate"
          }
        }
      }
    },
    "v1alpha1Filter": {
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1OperatorClause"
          },
          "title": "clause define a list of filter clause"
        },
        "aggType": {
          "$ref": "#/definitions/v1alpha1AggType",
          "title": "agg_type define a type of set operation"
        },
        "dependencyMaxDepth": {
          "type": "integer",
          "format": "int32",
          "title": "dependency_max_depth display the dependency graph with max depth\ndefault value is 1"
        }
      }
    },
    "v1alpha1FilterDataType": {
      "type": "string",
      "enum": [
        "NODE_DATA",
        "EDGE_DATA"
      ],
      "default": "NODE_DATA",
      "title": "- EDGE_DATA: CURRENT NOT SUPPORT"
    },
    "v1alpha1FilterField": {
      "type": "string",
      "enum": [
        "SERVICE_NAME",
        "STATUS_ERROR_RATE",
        "STATUS_LATENCY",
        "CUSTOM_LABEL"
      ],
      "default": "SERVICE_NAME",
      "title": "- SERVICE_NAME: SERVICE_NAME support operation:\n- FilterOperator_CONTAIN\n- FilterOperator_NOT_CONTAIN\n- FilterOperator_EQUAL\n- FilterOperator_NOT_EQUAL\n- FilterOperator_REGEX_PATTERN\n - STATUS_ERROR_RATE: STATUS_ERROR_RATE support operation:\n- FilterOperator_LE\n- FilterOperator_GE\n - STATUS_LATENCY: STATUS_LATENCY support operation:\n- FilterOperator_LE\n- FilterOperator_GE\n - CUSTOM_LABEL: CURRENT NOT SUPPORT"
    },
    "v1alpha1FilterOperator": {
      "type": "string",
      "enum": [
        "EQ",
        "NE",
        "LT",
        "LE",
        "GT",
        "GE",
        "CONTAIN",
        "NOT_CONTAIN",
        "EQUAL",
        "NOT_EQUAL",
        "REGEX_PATTERN"
      ],
      "default": "EQ",
      "title": "- EQ: EQ only support apply on numerical data\n= Equality relation between numerics\n - NE: NE only support apply on numerical data\n!= Inequality relation between numerics\n - LT: LT only support apply on numerical data\n< Less than relation between numerics\n - LE: LE only support apply on numerical data\n<= Less than or equal relation between numerics\n - GT: GT only support apply on numerical data\n> Greater than relation between numerics\n - GE: GE only support apply on numerical data\n>= Greater than or equal relation between numerics\n - CONTAIN: CONTAIN only support apply on string data\nRegularExpression\n - NOT_CONTAIN: NOT_CONTAIN only support apply on string data\nRegularExpression operation\n - EQUAL: EQUAL only support apply on string data\nRegularExpression operation\n - NOT_EQUAL: only support apply on string data\nRegularExpression operation\n - REGEX_PATTERN: only support apply on string data\nRegularExpression operation"
    },
    "v1alpha1GetConfigResponse": {
      "type": "object",
      "properties": {
        "grafanaUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetGPUResponse": {
      "type": "object",
      "properties": {
        "urls": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1dashboardURL"
          }
        }
      }
    },
    "v1alpha1GetOperationDetailResponse": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1MetricsWithOperation"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1GetReasonsResponse": {
      "type": "object",
      "properties": {
        "node": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "daemonSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deployment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "job": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pod": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statefulSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1GetResourcesCountResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryResult"
          },
          "title": "data contain difference metric with a __name__ label which describe the name of metric"
        }
      }
    },
    "v1alpha1GetResourcesRangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryRangeResult"
          }
        }
      }
    },
    "v1alpha1GetResourcesUsageResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryRangeResult"
          }
        }
      }
    },
    "v1alpha1GetSMTPStatusResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1GetServiceDetailResponse": {
      "type": "object",
      "properties": {
        "p95Metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "请求时延 95 百分位趋势图，时间范围内的"
        },
        "p75Metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "请求时延 75 百分位趋势图，时间范围内的"
        },
        "p50Metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "请求时延 50 百分位趋势图，时间范围内的"
        },
        "reqRateMetric": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "吞吐率趋势图，时间范围内的"
        },
        "errorsRateMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "错误率延趋势图，时间范围内的"
        }
      }
    },
    "v1alpha1GetServiceNamesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1GetServicesMonitorResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1BatchQueryResult"
          }
        }
      }
    },
    "v1alpha1GetServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ServiceItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1GlobalConfig": {
      "type": "object",
      "properties": {
        "vmStorageRetentionTime": {
          "type": "string"
        },
        "logRetentionTime": {
          "type": "string"
        },
        "traceDataRetentionTime": {
          "type": "string"
        },
        "traceApdexThreshold": {
          "type": "string"
        },
        "k8sEventLogRetentionTime": {
          "type": "string"
        },
        "skoalaLogRetentionTime": {
          "type": "string"
        }
      }
    },
    "v1alpha1Graph": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apigraphv1alpha1Node"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Edge"
          }
        },
        "layer": {
          "$ref": "#/definitions/v1alpha1Layer"
        },
        "graphType": {
          "$ref": "#/definitions/v1alpha1GraphType"
        }
      },
      "description": "样例 2，根据服务网格的观测数据，画出拓扑图\n{\n\"nodes\": [\n{\n\"id\": \"test-cluster/test-ns\",\n\"type\": \"NAMESPACE\",\n\"metadata\": {\n\"cluster\": \"test-cluster\",\n\"name\": \"test-ns\",\n\"layer\": \"MESH\",\n\"properties\": {\n\"mesh_id\": \"demo-dev\"\n}\n},\n\"status\": [\n{\n\"name\": \"replicas\",\n\"value\": 10,\n\"properties\": {\n\"type\": \"pod\"\n}\n},\n{\n\"name\": \"service_count\",\n\"value\": 5\n}\n]\n},\n{\n\"id\": \"test-cluster/test-ns/services/echo\",\n\"parent\": \"test-cluster/test-ns\",\n\"type\": \"SERVICE\",\n\"metadata\": {\n\"cluster\": \"test-cluster\",\n\"namespace\": \"test-ns\",\n\"name\": \"echo\",\n\"layer\": \"MESH\",\n\"properties\": {\n\"mesh_id\": \"demo-dev\"\n}\n},\n\"status\": [\n{\n\"name\": \"requestsPerMinute\",\n\"value\": 133.5,\n\"properties\": {\n\"direction\": \"in\"\n}\n},\n{\n\"name\": \"requestsPerMinute\",\n\"value\": 2,\n\"properties\": {\n\"direction\": \"out\"\n}\n}\n]\n},\n{\n\"id\": \"test-cluster/test-ns/services/echo-client\",\n\"parent\": \"test-cluster/test-ns\",\n\"type\": \"SERVICE\",\n\"metadata\": {\n\"cluster\": \"test-cluster\",\n\"namespace\": \"test-ns\",\n\"name\": \"echo-client\",\n\"layer\": \"MESH\",\n\"properties\": {\n\"mesh_id\": \"demo-dev\"\n}\n},\n\"status\": [\n{\n\"name\": \"requestsPerMinute\",\n\"value\": 100,\n\"properties\": {\n\"direction\": \"out\"\n}\n}\n]\n}\n],\n\"edges\": [\n{\n\"id\":\n\"test-cluster/test-ns/services/echo-client---test-cluster/test-ns/services/echo\"\n\"source\": \"test-cluster/test-ns/services/echo-client\",\n\"target\": \"test-cluster/test-ns/services/echo\",\n\"status\": [\n{\n\"name\": \"requestsPerMinute\",\n\"value\": 100\n}\n],\n\"properties\": {\n\"protocol\": \"HTTP\"\n}\n}\n],\n\"type\": \"SERVICE_SCOPE\"\n}",
      "title": "样例 1，根据 Kubernetes 的资源结构，画出拓扑图（可能不存在节点连线）\n{\n\"nodes\": [\n{\n\"id\": \"test-cluster/test-ns\",\n\"type\": \"NAMESPACE\",\n\"metadata\": {\n\"cluster\": \"test-cluster\",\n\"name\": \"test-ns\",\n\"layer\": \"KUBERNETES\"\n},\n\"status\": [\n{\n\"name\": \"replicas\",\n\"value\": 10,\n\"properties\": {\n\"type\": \"pod\"\n}\n},\n{\n\"name\": \"service_count\",\n\"value\": 5\n}\n]\n},\n{\n\"id\": \"test-cluster/test-ns/services/echo\",\n\"parent\": \"test-cluster/test-ns\",\n\"type\": \"SERVICE\",\n\"metadata\": {\n\"cluster\": \"test-cluster\",\n\"namespace\": \"test-ns\",\n\"name\": \"echo\",\n\"layer\": \"KUBERNETES\"\n},\n\"status\": [\n{\n\"name\": \"replicas\",\n\"value\": 3,\n\"properties\": {\n\"type\": \"pod\"\n}\n}\n]\n}\n],\n\"type\": \"SERVICE_SCOPE\"\n}"
    },
    "v1alpha1GraphType": {
      "type": "string",
      "enum": [
        "GRAPH_UNSPECIFIED",
        "CLUSTER_SCOPE",
        "NAMESPACE_SCOPE",
        "SERVICE_SCOPE",
        "WORKLOAD_SCOPE",
        "INSTANCE_SCOPE",
        "MIXED"
      ],
      "default": "GRAPH_UNSPECIFIED",
      "description": "- CLUSTER_SCOPE: 用于展现集群之间的拓扑关系\n - NAMESPACE_SCOPE: 用于展示命名空间之间的拓扑关系",
      "title": "图的展示类型\n与节点类型 NodeType 不同的是，如果 GraphType 为 WORKLOAD,\n但是也可以在接口中返回 Namespace 的 Node 可能用于用户手动展开等场景。"
    },
    "v1alpha1GroupSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "builtin": {
          "type": "boolean"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupRuleStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1groupRuleStatus"
          }
        },
        "description": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1HTTPConfig": {
      "type": "object",
      "properties": {
        "basicAuth": {
          "$ref": "#/definitions/v1alpha1BasicAuth"
        },
        "bearerToken": {
          "type": "string"
        },
        "tlsConfig": {
          "$ref": "#/definitions/v1alpha1SafeTLSConfig"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HTTPHeader"
          }
        }
      }
    },
    "v1alpha1HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "See k8s.io.api.core.v1.HTTPHeader."
    },
    "v1alpha1Inhibition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sourceMatchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          }
        },
        "targetMatchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          }
        },
        "equal": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1InhibitionList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Inhibition"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1InsightAgentStatus": {
      "type": "string",
      "enum": [
        "NOT_INSTALLED",
        "HEALTHY",
        "UNHEALTHY",
        "OFFLINE"
      ],
      "default": "NOT_INSTALLED"
    },
    "v1alpha1JVMType": {
      "type": "string",
      "enum": [
        "JMX",
        "OTEL",
        "NONE"
      ],
      "default": "JMX",
      "description": " - JMX: metrics exposed by JMX exporter\n - OTEL: metrics exposed by OTEL Java Agent\n - NONE: empty metrics, no jvm collected."
    },
    "v1alpha1JVMUrls": {
      "type": "object",
      "properties": {
        "en": {
          "type": "string",
          "title": "English grafana dashboard url"
        },
        "zh": {
          "type": "string",
          "title": "Chinese grafana dashboard url"
        }
      }
    },
    "v1alpha1Job": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1JobStatus"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "jobPodNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiresourcev1alpha1Condition"
          },
          "description": "conditions of current job."
        }
      }
    },
    "v1alpha1JobState": {
      "type": "string",
      "enum": [
        "JOB_STATE_UNSPECIFIED",
        "JOB_STATE_WAITING",
        "JOB_STATE_RUNNING",
        "JOB_STATE_COMPLETED",
        "JOB_STATE_DELETING",
        "JOB_STATE_FAILED"
      ],
      "default": "JOB_STATE_UNSPECIFIED",
      "description": " - JOB_STATE_UNSPECIFIED: Job is unspecified.\n - JOB_STATE_WAITING: Waiting for job ready.\n - JOB_STATE_RUNNING: Job is working.\n - JOB_STATE_COMPLETED: Jobs has completed.\n - JOB_STATE_DELETING: Jobs is being deleted.\n - JOB_STATE_FAILED: Jobs is not ready to work ."
    },
    "v1alpha1JobStatus": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "succeed": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1JobState"
        }
      }
    },
    "v1alpha1JobSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1JobStatus"
        },
        "jobPodNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        }
      }
    },
    "v1alpha1KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "vType": {
          "$ref": "#/definitions/v1alpha1ValueType"
        },
        "vStr": {
          "type": "string"
        },
        "vBool": {
          "type": "boolean"
        },
        "vInt64": {
          "type": "string",
          "format": "int64"
        },
        "vFloat64": {
          "type": "number",
          "format": "double"
        },
        "vBinary": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1alpha1Layer": {
      "type": "string",
      "enum": [
        "LAYER_UNSPECIFIED",
        "KUBERNETES",
        "MESH",
        "OS_LINUX",
        "VM",
        "INFRA",
        "GENERAL"
      ],
      "default": "LAYER_UNSPECIFIED",
      "description": "- KUBERNETES: 直接部署在 Kubernetes 上\n - MESH: 服务网格层级\n - OS_LINUX: 虚拟机或操作系统层级\n - INFRA: 基础设施层级，\n - GENERAL: 通用层级，可能是传统应用上报的数据",
      "title": "像 Skywalking 一样，表示当前所处的层级\n用于展示不同的视图模型，甚至可以展示不同层级之间的关系。"
    },
    "v1alpha1ListAlertsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1AlertSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListClusterSummaryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ClusterSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListClustersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Cluster"
          }
        }
      }
    },
    "v1alpha1ListContainersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ContainerSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListCronJobsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CronJobSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1GroupSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListJobsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1JobSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListLogFilePathsResponse": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Namespace"
          }
        }
      }
    },
    "v1alpha1ListNodesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListPodsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PodSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListProbesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Probe"
          },
          "title": "items represents the response of CustomResource"
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListProbesResponse represents list all of the Probe of namespaced scope in cluster"
    },
    "v1alpha1ListProvidersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Provider"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListReceiverResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Receiver"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      },
      "title": "list receiver"
    },
    "v1alpha1ListRuleTemplateSummaryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RuleTemplateSummary"
          }
        }
      }
    },
    "v1alpha1ListRuleTemplatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RuleTemplate"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListRulesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RuleSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1serviceSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListSilencesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Silence"
          }
        }
      }
    },
    "v1alpha1ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1TemplateSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1ListWorkloadsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1workloadSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1LogContextEventFilter": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        }
      }
    },
    "v1alpha1LogContextResourceFilter": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha1LogContextSystemFilter": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "file": {
          "type": "string"
        }
      }
    },
    "v1alpha1LogField": {
      "type": "string",
      "enum": [
        "LOG_FIELD_UNSPECIFIED",
        "Timestamp",
        "Cluster",
        "Namespace",
        "Pod",
        "Container",
        "Node",
        "File"
      ],
      "default": "LOG_FIELD_UNSPECIFIED",
      "title": "- Namespace: container log only\n - Node: system log only"
    },
    "v1alpha1LogHistogramResult": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1LogQueryEventFilter": {
      "type": "object",
      "properties": {
        "logSearch": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1LogQueryResourceFilter": {
      "type": "object",
      "properties": {
        "logSearch": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespaceFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workloadSearch": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workloadFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "podSearch": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "podFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerSearch": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "traceIdSearch": {
          "type": "string"
        },
        "luceneFilter": {
          "type": "string",
          "title": "lucene_filter is a string that contains the lucene query string\nthe syntax is define in https://www.elastic.co/guide/en/elasticsearch/reference/7.16/query-dsl-query-string-query.html#query-string-syntax\nsupport key list:\n- `kubernetes.namespace_name.keyword`\n- `kubernetes.pod_name.keyword`\n- `trace_id.keyword`\n- `kubernetes.container_name.keyword`\n- `log`"
        }
      }
    },
    "v1alpha1LogQueryResult": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1LogQuerySystemFilter": {
      "type": "object",
      "properties": {
        "logSearch": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nodeFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "luceneFilter": {
          "type": "string",
          "title": "lucene_filter is a string that contains the lucene query string\nthe syntax is define in https://www.elastic.co/guide/en/elasticsearch/reference/7.16/query-dsl-query-string-query.html#query-string-syntax\nsupport key list:\n- `syslog.host.keyword`\n- `syslog.file.keyword`\n- `syslog.ident.keyword`\n- `log`"
        }
      }
    },
    "v1alpha1MatchLabel": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "extraLabel": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1MetricsEntity": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1samplePair"
          }
        },
        "metricsAvg": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1alpha1MetricsWithOperation": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string"
        },
        "metricsMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1MetricsEntity"
          },
          "title": "available keys:\n- reqRate\n- errRate\n- p50Latency\n- p95Latency\n- p99Latency"
        },
        "spanKind": {
          "$ref": "#/definitions/v1alpha1SpanKind"
        }
      }
    },
    "v1alpha1Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1alpha1Role"
        }
      }
    },
    "v1alpha1NamespaceDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1NamespacePhase"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "deploymentNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "statefulsetNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "daemonsetNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "podNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        }
      }
    },
    "v1alpha1NamespacePhase": {
      "type": "string",
      "enum": [
        "NAMESPACE_PHASE_UNSPECIFIED",
        "Active",
        "Terminating"
      ],
      "default": "NAMESPACE_PHASE_UNSPECIFIED",
      "title": "- NAMESPACE_PHASE_UNSPECIFIED: The namespace state is unspecified.\n - Active: NamespaceActive means the namespace is available for use in the system\n - Terminating: NamespaceTerminating means the namespace is undergoing graceful termination"
    },
    "v1alpha1NodeCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of node condition. The built-in set of conditions are: Ready,\nMemoryPressure, DiskPressure, PIDPressure,\nNetworkUnavailable, and SchedulingDisabled."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ConditionStatus",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        }
      },
      "description": "NodeCondition contains condition information for a node."
    },
    "v1alpha1NodeMetadata": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "service": {
          "type": "string",
          "title": "预定义的所属服务信息，可以为空。"
        },
        "name": {
          "type": "string",
          "title": "当前节点需要显示的名字。"
        },
        "layer": {
          "$ref": "#/definitions/v1alpha1Layer",
          "title": "所述层级"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "存储额外的信息，比如版本信息之类的。"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "v1alpha1NodeMetricResponse": {
      "type": "object",
      "properties": {
        "reqRateMetric": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "吞吐率趋势图，时间范围内的"
        },
        "errorsRateMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "错误率延趋势图，时间范围内的"
        },
        "repLatencyMetric": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "平均请求时延趋势图，时间范围内的"
        }
      }
    },
    "v1alpha1NodePhase": {
      "type": "string",
      "enum": [
        "NODE_PHASE_UNSPECIFIED",
        "NODE_PHASE_READY",
        "NODE_PHASE_NOT_READY",
        "NODE_PHASE_UNKNOWN"
      ],
      "default": "NODE_PHASE_UNSPECIFIED",
      "description": "status includes Ready, NotReady, and Unknown.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NODE_PHASE_READY: The node is ready to work.\n - NODE_PHASE_NOT_READY: The node is not ready.\n - NODE_PHASE_UNKNOWN: The node state is unknown."
    },
    "v1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1NodePhase"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1NodeCondition"
          }
        }
      }
    },
    "v1alpha1NodeSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1NodePhase"
        },
        "podNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "gpuVendors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "NodeSummary only return node name,status and podSummary"
    },
    "v1alpha1NodeType": {
      "type": "string",
      "enum": [
        "NODE_TYPE_UNSPECIFIED",
        "CLUSTER",
        "NAMESPACE",
        "SERVICE",
        "WORKLOAD",
        "INSTANCE",
        "NODE",
        "CUSTOM"
      ],
      "default": "NODE_TYPE_UNSPECIFIED",
      "title": "- WORKLOAD: 比如需要展示 Deployment 之类的 Workload\n - INSTANCE: 实例，比如 Pod 的时候可以展示\n - NODE: 节点，如果需要的话\n - CUSTOM: 自定义类型，如果需要的话，推荐通过 metadata.properties.type\n进行详细说明。"
    },
    "v1alpha1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "type": "string",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "v1alpha1OperatorClause": {
      "type": "object",
      "properties": {
        "dataType": {
          "$ref": "#/definitions/v1alpha1FilterDataType",
          "title": "data_type define the data type that can be used in filter"
        },
        "field": {
          "$ref": "#/definitions/v1alpha1FilterField",
          "title": "field define the field that can be used in filter"
        },
        "operation": {
          "$ref": "#/definitions/v1alpha1FilterOperator",
          "title": "operation define the operation that can be used in filter"
        },
        "stringValue": {
          "type": "string"
        },
        "floatValue": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "OperatorClause definition"
    },
    "v1alpha1OwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent."
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "v1alpha1Pagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      }
    },
    "v1alpha1Pod": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1PodPhase"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "containerNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "podIp": {
          "type": "string"
        },
        "hostIp": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiresourcev1alpha1Condition"
          },
          "description": "conditions of current pod."
        }
      }
    },
    "v1alpha1PodJVMInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1JVMType",
          "title": "type means pod exposed by JMX/OTEL/NONE"
        },
        "urls": {
          "$ref": "#/definitions/v1alpha1JVMUrls",
          "title": "jvm grafana dashboard urls"
        }
      }
    },
    "v1alpha1PodPhase": {
      "type": "string",
      "enum": [
        "POD_PHASE_UNSPECIFIED",
        "POD_PHASE_UNKNOWN",
        "POD_PHASE_PENDING",
        "POD_PHASE_RUNNING",
        "POD_PHASE_SUCCEED",
        "POD_PHASE_FAILED"
      ],
      "default": "POD_PHASE_UNSPECIFIED",
      "description": " - POD_PHASE_UNKNOWN: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - POD_PHASE_PENDING: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - POD_PHASE_RUNNING: PodRunning means the pod has been bound to a node and all of the containers\nhave been started. At least one container is still running or is in the\nprocess of being restarted. PodSucceeded means that all containers in the\npod have voluntarily terminated with a container exit code of 0, and the\nsystem is not going to restart any of these containers.\n - POD_PHASE_SUCCEED: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - POD_PHASE_FAILED: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system)."
    },
    "v1alpha1PodSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1PodPhase"
        },
        "containerNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "podIp": {
          "type": "string"
        }
      }
    },
    "v1alpha1PreviewRuleRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/PreviewRuleRequestParams"
        },
        "group": {
          "$ref": "#/definitions/v1alpha1PreviewRuleRequestGroup"
        },
        "rule": {
          "$ref": "#/definitions/v1alpha1CreateGroupRule"
        }
      }
    },
    "v1alpha1PreviewRuleRequestGroup": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Describes rule's owner group info"
    },
    "v1alpha1PreviewRuleResponse": {
      "type": "object",
      "properties": {
        "matrix": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          }
        }
      }
    },
    "v1alpha1PreviewSilenceRequest": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          }
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "size limits the preview result,\nif not set, will use default 200"
        }
      }
    },
    "v1alpha1PreviewSilenceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1AlertSummary"
          }
        }
      }
    },
    "v1alpha1Probe": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the kind of CustomResource."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion represents the apiVersion of CustomResource."
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ProbeSpec"
        },
        "status": {
          "$ref": "#/definitions/apiprobesv1alpha1Status"
        }
      }
    },
    "v1alpha1ProbeSpec": {
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "prober": {
          "$ref": "#/definitions/v1alpha1ProberSpec"
        },
        "targets": {
          "$ref": "#/definitions/v1alpha1Targets"
        },
        "interval": {
          "type": "string"
        },
        "scrapeTimeout": {
          "type": "string"
        },
        "relabelings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RelabelConfig"
          }
        },
        "proxyUrl": {
          "type": "string"
        },
        "enableHttp2": {
          "type": "boolean"
        },
        "filterRunning": {
          "type": "boolean"
        },
        "honorTimestamps": {
          "type": "boolean"
        },
        "honorLabels": {
          "type": "boolean"
        },
        "metricRelabelings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RelabelConfig"
          }
        },
        "followRedirects": {
          "type": "boolean"
        },
        "sampleLimit": {
          "type": "string",
          "format": "uint64",
          "title": "TODO: add more: https://github.com/prometheus-operator/prometheus-operator/blob/52d1e55af2d223474aab35bf54bd56c2b9b22385/pkg/apis/monitoring/v1/probe_types.go#L48\ntlsConfig\nbearerTokenSecret\nauthorization\noauth2\nbasicAuth"
        }
      },
      "title": "Probe represents all fileds of probe rule"
    },
    "v1alpha1ProberSpec": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "proxyUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1Process": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValue"
          }
        }
      }
    },
    "v1alpha1PrometheusQueryRangeResult": {
      "type": "object",
      "properties": {
        "matrix": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SampleStream"
          }
        }
      }
    },
    "v1alpha1PrometheusQueryResult": {
      "type": "object",
      "properties": {
        "vector": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Sample"
          }
        }
      }
    },
    "v1alpha1Provider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ProviderType"
        },
        "aliyun": {
          "$ref": "#/definitions/ProviderAliyunConfig"
        },
        "tencent": {
          "$ref": "#/definitions/ProviderTencentConfig"
        },
        "custom": {
          "$ref": "#/definitions/ProviderCustomConfig"
        },
        "template": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1ProviderDataResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1Provider"
        }
      }
    },
    "v1alpha1ProviderType": {
      "type": "string",
      "enum": [
        "PROVIDER_TYPE_UNSPECIFIED",
        "aliyun",
        "tencent",
        "custom"
      ],
      "default": "PROVIDER_TYPE_UNSPECIFIED"
    },
    "v1alpha1QueryEventCountResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "v1alpha1QueryEventFilterOptionsResponse": {
      "type": "object",
      "properties": {
        "reasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "involvedObjectKinds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1QueryEventHistogramResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EventHistogram"
          }
        },
        "totalNormal": {
          "type": "string",
          "format": "int64"
        },
        "totalWarning": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1QueryEventResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Event"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1QueryLogContextRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "before": {
          "type": "integer",
          "format": "int32"
        },
        "after": {
          "type": "integer",
          "format": "int32"
        },
        "nanotimestamp": {
          "type": "string"
        },
        "resource": {
          "$ref": "#/definitions/v1alpha1LogContextResourceFilter"
        },
        "system": {
          "$ref": "#/definitions/v1alpha1LogContextSystemFilter"
        },
        "event": {
          "$ref": "#/definitions/v1alpha1LogContextEventFilter"
        }
      }
    },
    "v1alpha1QueryLogHistogramRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "resource": {
          "$ref": "#/definitions/v1alpha1LogQueryResourceFilter"
        },
        "system": {
          "$ref": "#/definitions/v1alpha1LogQuerySystemFilter"
        },
        "event": {
          "$ref": "#/definitions/v1alpha1LogQueryEventFilter"
        }
      }
    },
    "v1alpha1QueryLogHistogramResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LogHistogramResult"
          }
        }
      }
    },
    "v1alpha1QueryLogRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "title": "startTime e.g. 2006-01-02T15:04:05.999999999Z07:00"
        },
        "endTime": {
          "type": "string",
          "title": "startTime e.g. 2006-01-02T15:04:05.999999999Z07:00"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "sorts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "$ref": "#/definitions/v1alpha1LogQueryResourceFilter"
        },
        "system": {
          "$ref": "#/definitions/v1alpha1LogQuerySystemFilter"
        },
        "event": {
          "$ref": "#/definitions/v1alpha1LogQueryEventFilter"
        }
      }
    },
    "v1alpha1QueryLogResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LogQueryResult"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1Pagination"
        }
      }
    },
    "v1alpha1QueryOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1Receiver": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ReceiverType"
        },
        "webhook": {
          "$ref": "#/definitions/v1alpha1WebhookConfig"
        },
        "email": {
          "$ref": "#/definitions/v1alpha1EmailConfig"
        },
        "wecom": {
          "$ref": "#/definitions/v1alpha1WecomConfig"
        },
        "dingtalk": {
          "$ref": "#/definitions/v1alpha1DingtalkConfig"
        },
        "sms": {
          "$ref": "#/definitions/v1alpha1SmsConfig"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1ReceiverDataResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1Receiver"
        }
      }
    },
    "v1alpha1ReceiverType": {
      "type": "string",
      "enum": [
        "RECEIVER_TYPE_UNSPECIFIED",
        "webhook",
        "email",
        "dingtalk",
        "wecom",
        "sms"
      ],
      "default": "RECEIVER_TYPE_UNSPECIFIED"
    },
    "v1alpha1RelabelConfig": {
      "type": "object",
      "properties": {
        "sourceLabels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "separator": {
          "type": "string"
        },
        "targetLabel": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "modulus": {
          "type": "string",
          "format": "uint64"
        },
        "replacement": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "v1alpha1ResourceNumSummary": {
      "type": "object",
      "properties": {
        "totalNum": {
          "type": "integer",
          "format": "int32"
        },
        "readyNum": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1Role": {
      "type": "string",
      "enum": [
        "ROLE_UNSPECIFIED",
        "ROLE_VIEWER",
        "ROLE_ADMIN"
      ],
      "default": "ROLE_UNSPECIFIED"
    },
    "v1alpha1Rule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "expr": {
          "type": "string"
        },
        "thresholdSymbol": {
          "type": "string",
          "title": "when create rule from metric_tpl,use thresholdSymbol and thresholdNum to\ncomplete the promql"
        },
        "thresholdNum": {
          "type": "number",
          "format": "float"
        },
        "duration": {
          "type": "string",
          "title": "For evaluation interval in time.Duration format,like 30s, 1m, 1h"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1RuleSource"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RuleStatus"
        },
        "promQL": {
          "type": "string",
          "title": "real sql that used to query, add info like cluster, namespaces"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "customized labels"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "customized annotations"
        },
        "description": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        },
        "logFilterCondition": {
          "$ref": "#/definitions/v1alpha1RuleFilterCondition",
          "description": "logs alert part\nonly need when rule source is LOG_TPL."
        },
        "logQueryString": {
          "type": "string"
        }
      }
    },
    "v1alpha1RuleFilterCondition": {
      "type": "string",
      "enum": [
        "FILTER_CONDITION_UNSPECIFIED",
        "AND",
        "OR",
        "REG",
        "FUZZINESS",
        "WILD_CARD"
      ],
      "default": "FILTER_CONDITION_UNSPECIFIED",
      "description": "- AND: union\n - OR: Intersection\n - REG: Regular expressions\n - FUZZINESS: Fuzziness\n - WILD_CARD: Wildcards",
      "title": "condition for logs filter string"
    },
    "v1alpha1RuleSource": {
      "type": "string",
      "enum": [
        "RULE_SOURCE_UNSPECIFIED",
        "METRIC_TPL",
        "PROMQL",
        "LOG_TPL",
        "EVENT_TPL"
      ],
      "default": "RULE_SOURCE_UNSPECIFIED"
    },
    "v1alpha1RuleStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "FIRING",
        "ENABLED"
      ],
      "default": "UNSPECIFIED"
    },
    "v1alpha1RuleSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1RuleSource"
        },
        "expr": {
          "type": "string"
        },
        "thresholdSymbol": {
          "type": "string"
        },
        "thresholdNum": {
          "type": "number",
          "format": "float"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RuleStatus"
        },
        "description": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "logFilterCondition": {
          "$ref": "#/definitions/v1alpha1RuleFilterCondition",
          "description": "logs alert part\nonly need when rule source is LOG_TPL."
        },
        "logQueryString": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "v1alpha1RuleTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CreateGroupRule"
          }
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1RuleTemplateSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        }
      }
    },
    "v1alpha1SafeTLSConfig": {
      "type": "object",
      "properties": {
        "insecureSkipVerify": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1Sample": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "$ref": "#/definitions/v1alpha1samplePair"
        }
      }
    },
    "v1alpha1SampleStream": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1samplePair"
          }
        }
      }
    },
    "v1alpha1SearchLogResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      }
    },
    "v1alpha1ServerComponentSummary": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1serverComponent"
          }
        }
      }
    },
    "v1alpha1Service": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "serviceType": {
          "$ref": "#/definitions/v1alpha1ServiceType"
        },
        "clusterIp": {
          "type": "string"
        },
        "workloadData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WorkloadSum"
          }
        }
      }
    },
    "v1alpha1ServiceItem": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "reqRate": {
          "type": "number",
          "format": "double"
        },
        "repLatency": {
          "type": "number",
          "format": "double"
        },
        "errorRate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1alpha1ServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_UNSPECIFIED",
        "CLUSTER_IP",
        "NODE_PORT",
        "LOAD_BALANCER",
        "EXTERNAL_NAME"
      ],
      "default": "SERVICE_TYPE_UNSPECIFIED",
      "description": "- SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CLUSTER_IP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NODE_PORT: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LOAD_BALANCER: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - EXTERNAL_NAME: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
      "title": "ServiceType string describes ingress methods for a service"
    },
    "v1alpha1Severity": {
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "CRITICAL",
        "WARNING",
        "INFO"
      ],
      "default": "SEVERITY_UNSPECIFIED"
    },
    "v1alpha1Silence": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1match"
          }
        },
        "activeTimeInterval": {
          "$ref": "#/definitions/v1alpha1timeInterval"
        },
        "expired": {
          "type": "boolean"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1SmsConfig": {
      "type": "object",
      "properties": {
        "contact": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SmsConfigContact"
          }
        },
        "provider": {
          "type": "string",
          "title": "provider"
        }
      }
    },
    "v1alpha1SmsConfigContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "v1alpha1SpanKind": {
      "type": "string",
      "enum": [
        "SPAN_KIND_UNSPECIFIED",
        "SPAN_KIND_INTERNAL",
        "SPAN_KIND_SERVER",
        "SPAN_KIND_CLIENT",
        "SPAN_KIND_PRODUCER",
        "SPAN_KIND_CONSUMER"
      ],
      "default": "SPAN_KIND_UNSPECIFIED",
      "description": "SpanKind is the type of span. Can be used to specify additional relationships between spans\nin addition to a parent/child relationship.\n\n - SPAN_KIND_UNSPECIFIED: Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.\n - SPAN_KIND_INTERNAL: Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.\n - SPAN_KIND_SERVER: Indicates that the span covers server-side handling of an RPC or other\nremote network request.\n - SPAN_KIND_CLIENT: Indicates that the span describes a request to some remote service.\n - SPAN_KIND_PRODUCER: Indicates that the span describes a producer sending a message to a broker.\nUnlike CLIENT and SERVER, there is often no direct critical path latency relationship\nbetween producer and consumer spans. A PRODUCER span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.\n - SPAN_KIND_CONSUMER: Indicates that the span describes consumer receiving a message from a broker.\nLike the PRODUCER kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans."
    },
    "v1alpha1TargetType": {
      "type": "string",
      "enum": [
        "TARGET_TYPE_UNSPECIFIED",
        "GLOBAL",
        "CLUSTER",
        "NAMESPACE",
        "NODE",
        "DEPLOYMENT",
        "STATEFULSET",
        "DAEMONSET",
        "POD"
      ],
      "default": "TARGET_TYPE_UNSPECIFIED"
    },
    "v1alpha1Targets": {
      "type": "object",
      "properties": {
        "staticConfig": {
          "$ref": "#/definitions/TargetsStaticConfig"
        }
      }
    },
    "v1alpha1Template": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/v1alpha1TemplateBody"
        },
        "builtin": {
          "type": "boolean"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1TemplateBody": {
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/v1alpha1emailBody"
        },
        "wecom": {
          "type": "string"
        },
        "dingtalk": {
          "type": "string"
        },
        "webhook": {
          "type": "string"
        }
      }
    },
    "v1alpha1TemplateSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        },
        "builtin": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1Trace": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string"
        },
        "processMap": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TraceProcessMapping"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "traceId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/TraceTraceStatus"
        },
        "spanCount": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "v1alpha1TracesResponseChunk": {
      "type": "object",
      "properties": {
        "traces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Trace"
          }
        }
      }
    },
    "v1alpha1ValidateGroupCode": {
      "type": "string",
      "enum": [
        "ERR_CODE_UNSPECIFIED",
        "ERR_YAML_UNMARSHAL",
        "ERR_GROUP_NAME",
        "ERR_GROUP_RULES",
        "ERR_GROUP_NAME_DUPLICATED",
        "ERR_RULE",
        "ERR_RULE_ALERT",
        "ERR_RULE_RECORD",
        "ERR_RULE_FOR",
        "ERR_RULE_EXPR",
        "ERR_RULE_SEVERITY",
        "ERR_RULE_ANNOTATIONS",
        "ERR_RULE_LABELS",
        "ERR_RULE_ALERT_DUPLICATED",
        "ERR_RULE_DESCRIPTION"
      ],
      "default": "ERR_CODE_UNSPECIFIED",
      "title": "- ERR_YAML_UNMARSHAL: VMRule YAML format error\n - ERR_GROUP_NAME: Alert Group's name has error\n - ERR_GROUP_RULES: Alert Group's rule list is empty or more than one\n - ERR_GROUP_NAME_DUPLICATED: Alert Group's name was duplicated\n - ERR_RULE: Alert rule has error\n - ERR_RULE_ALERT: Alert rule's alert name has error\n - ERR_RULE_RECORD: Alert rule's alert name has error\n - ERR_RULE_FOR: Alert rule's for time has error\n - ERR_RULE_EXPR: Alert rule's promql expression has error\n - ERR_RULE_SEVERITY: Alert rule's severity has error\n - ERR_RULE_ANNOTATIONS: Alert rule's annotations has error\n - ERR_RULE_LABELS: Alert rule's labels has error\n - ERR_RULE_ALERT_DUPLICATED: Alert rule's alert was duplicated\n - ERR_RULE_DESCRIPTION: Alert rule's description has error"
    },
    "v1alpha1ValidateGroupError": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/v1alpha1ValidateGroupCode"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha1ValidateGroupRequest": {
      "type": "object",
      "properties": {
        "yamlString": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha1ValidateGroupResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ValidateGroupError"
          }
        },
        "params": {
          "$ref": "#/definitions/v1alpha1CreateGroupRequest"
        }
      }
    },
    "v1alpha1ValueType": {
      "type": "string",
      "enum": [
        "STRING",
        "BOOL",
        "INT64",
        "FLOAT64",
        "BINARY"
      ],
      "default": "STRING"
    },
    "v1alpha1VersionInfo": {
      "type": "object",
      "properties": {
        "gitVersion": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "buildDate": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "v1alpha1WebhookConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "httpConfig": {
          "$ref": "#/definitions/v1alpha1HTTPConfig"
        }
      }
    },
    "v1alpha1WecomConfig": {
      "type": "object",
      "properties": {
        "webhook": {
          "type": "string"
        }
      }
    },
    "v1alpha1Workload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1WorkloadPhase"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "podNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiresourcev1alpha1Condition"
          },
          "description": "conditions of current workload."
        }
      }
    },
    "v1alpha1WorkloadKind": {
      "type": "string",
      "enum": [
        "WORKLOAD_KIND_UNKNOWN",
        "WORKLOAD_KIND_DEPLOYMENT",
        "WORKLOAD_KIND_STATEFULSET",
        "WORKLOAD_KIND_DAEMONSET"
      ],
      "default": "WORKLOAD_KIND_UNKNOWN"
    },
    "v1alpha1WorkloadPhase": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATE_UNKNOWN",
        "WORKLOAD_STATE_RUNNING",
        "WORKLOAD_STATE_DELETING",
        "WORKLOAD_STATE_NOT_READY",
        "WORKLOAD_STATE_STOPPED",
        "WORKLOAD_STATE_WAITING"
      ],
      "default": "WORKLOAD_STATE_UNKNOWN",
      "title": "WorkloadPhase describes the state of\nworkload(deployments/daemonsets/statefulsets)"
    },
    "v1alpha1WorkloadSum": {
      "type": "object",
      "properties": {
        "workloadKind": {
          "$ref": "#/definitions/WorkloadSumKind"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1agentModuleStatus": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Pod"
          }
        }
      }
    },
    "v1alpha1countInfo": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "target is the object that match the targetType, null means no specific\ntarget or not group_by_type."
        },
        "sum": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "v1alpha1dashboardURL": {
      "type": "object",
      "properties": {
        "en": {
          "type": "string"
        },
        "zh": {
          "type": "string"
        }
      }
    },
    "v1alpha1emailBody": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      }
    },
    "v1alpha1empty": {
      "type": "object"
    },
    "v1alpha1groupReceiver": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1ReceiverType"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1groupRuleStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1RuleStatus"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1helmInstallConfigRequest": {
      "type": "object",
      "properties": {
        "chartName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "key:registry_host,val:registry_url"
        }
      }
    },
    "v1alpha1helmInstallConfigResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "string"
        }
      }
    },
    "v1alpha1insightAgentState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1InsightAgentStatus"
        },
        "version": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "int64"
        },
        "traceStatus": {
          "$ref": "#/definitions/v1alpha1InsightAgentStatus"
        }
      }
    },
    "v1alpha1match": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1matchType"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1matchType": {
      "type": "string",
      "enum": [
        "MATCH_TYPE_UNSPECIFIED",
        "EQUAL",
        "NOT_EQUAL",
        "REGEXP"
      ],
      "default": "MATCH_TYPE_UNSPECIFIED"
    },
    "v1alpha1repeatConfig": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "title": "interval unit is hour"
        }
      }
    },
    "v1alpha1requestStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "SUCCESS",
        "FAIL"
      ],
      "default": "STATUS_UNSPECIFIED"
    },
    "v1alpha1resourceType": {
      "type": "string",
      "enum": [
        "overview",
        "dashboard",
        "resourceInsight",
        "scenarioInsight",
        "dataQuery",
        "alertList",
        "alertRules",
        "notificationSettings",
        "alertSilence",
        "notificationTemplates",
        "dataCollection",
        "systemComponents",
        "systemSettings",
        "netFlow",
        "alertInhibition"
      ],
      "default": "overview",
      "title": "refs:\ncharts/insight/templates/ghippo/gproduct-resource-permissions.yaml#resourceTypes"
    },
    "v1alpha1samplePair": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1serverComponent": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/v1alpha1serverComponentName",
          "title": "serverComponentName is service name"
        },
        "workloadName": {
          "type": "string",
          "title": "workloadName is full workload name in cluster"
        },
        "workloadNamespace": {
          "type": "string",
          "description": "workloadNamespace is namespace that workload installed, null means not in\nthis cluster."
        },
        "workloadKind": {
          "$ref": "#/definitions/v1alpha1WorkloadKind"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1WorkloadPhase"
        },
        "availability": {
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "title": "message give the reason when service is unavailable"
        },
        "version": {
          "type": "string"
        },
        "podNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1serverComponentName": {
      "type": "string",
      "enum": [
        "NAME_UNSPECIFIED",
        "VMINSERT",
        "VMALERT",
        "VMALERTMANAGER",
        "VMSELECT",
        "VMSTORAGE",
        "GRAFANA",
        "JAEGER_COLLECTOR",
        "JAEGER_QUERY",
        "OPENTELEMETRY_COLLECTOR",
        "ELASTICSEARCH"
      ],
      "default": "NAME_UNSPECIFIED"
    },
    "v1alpha1serviceSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "tracingEnabled": {
          "type": "boolean",
          "title": "tracing enabled"
        }
      }
    },
    "v1alpha1timeInterval": {
      "type": "object",
      "properties": {
        "timeRanges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/timeIntervaltimeRange"
          },
          "description": "if weekday_range is null, start and end is the unix timestamp like\n1678350699;\nif weekday_range is not null, start and end represents a range\nof seconds within a 86400 second day.In this case, start can be greater\nthan end; For example, 17:00 to End of the day would Start at 61200 and End\nat 86400.[default timezone is UTC]\nsupport multiple timerange if weekday_range is not null."
        },
        "weekdayRange": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A list ranges between [0, 6] where 0 = Sunday.\nFor example: [1,2] means Monday and Tuesday.\n[0,1,2,3,4,5,6] means all week."
        }
      }
    },
    "v1alpha1usage": {
      "type": "object",
      "properties": {
        "cpuCapacity": {
          "type": "string",
          "format": "int64",
          "description": "CpuCapacity is the total cpu of the node. Unit: m."
        },
        "cpuAllocated": {
          "type": "number",
          "format": "double",
          "description": "CpuAllocated is the total pod cpu request on the node. Unit: m."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "CpuUsage is the actual total pod cpu usage on the node. Unit: m."
        },
        "memoryCapacity": {
          "type": "string",
          "format": "int64",
          "description": "MemoryCapacity is the total memory of the node. Unit: byte."
        },
        "memoryAllocated": {
          "type": "number",
          "format": "double",
          "description": "MemoryAllocated is the total pod memory request on the node. Unit: byte."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "MemoryUsage is the actual total pod memory usage on the node. Unit: byte."
        },
        "storageCapacity": {
          "type": "string",
          "format": "int64",
          "description": "StorageCapacity is the total storage of the node. Unit: byte."
        },
        "storageAllocated": {
          "type": "string",
          "format": "int64",
          "description": "StorageAllocated is the total pod storage request on the node. Unit: byte."
        },
        "storageUsage": {
          "type": "number",
          "format": "double",
          "description": "StorageUsage is the actual total storage usage on the node. Unit: byte."
        }
      }
    },
    "v1alpha1userinfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "canViewCluster": {
          "type": "boolean"
        },
        "canViewNs": {
          "type": "boolean"
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1resourceType"
          }
        }
      }
    },
    "v1alpha1workloadSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1WorkloadPhase"
        },
        "podNumSummary": {
          "$ref": "#/definitions/v1alpha1ResourceNumSummary"
        }
      }
    }
  }
}
