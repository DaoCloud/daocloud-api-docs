{
  "swagger": "2.0",
  "info": {
    "title": "应用工作台",
    "version": "v0.121.0"
  },
  "tags": [
    {
      "name": "Workloads"
    },
    {
      "name": "Image"
    },
    {
      "name": "ApplicationService"
    },
    {
      "name": "KubeService"
    },
    {
      "name": "SummaryService"
    },
    {
      "name": "OAMService"
    },
    {
      "name": "MutilCloudApplication"
    },
    {
      "name": "Aggregation"
    },
    {
      "name": "Cluster"
    },
    {
      "name": "Core"
    },
    {
      "name": "Apps"
    },
    {
      "name": "Policy"
    },
    {
      "name": "OLMService"
    },
    {
      "name": "Core"
    },
    {
      "name": "Management"
    },
    {
      "name": "GatewayServer"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "GitOps"
    },
    {
      "name": "Pipelines"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "Toolchain"
    },
    {
      "name": "Jira"
    },
    {
      "name": "GitLab"
    },
    {
      "name": "Sonarqube"
    },
    {
      "name": "PluginService"
    },
    {
      "name": "Rollouts"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/amamba.io/v1alpha1/clusternames": {
      "get": {
        "summary": "List all cluster names, no workspace scoped",
        "operationId": "Core_ListClusterNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/clusters/{cluster}/namespacenames": {
      "get": {
        "summary": "List all namespace names in a specified cluster, no workspace scoped",
        "operationId": "Core_ListClusterNamespaceNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNamespaceNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/feature-gates": {
      "get": {
        "summary": "List all feature gate status.",
        "operationId": "Management_ListFeatureGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListFeatureGatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Management"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/feature-gates/{id}": {
      "get": {
        "summary": "Get feature's gate status.",
        "operationId": "Management_GetFeatureGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1FeatureGate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Management"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/permissions": {
      "get": {
        "operationId": "Core_ListPlatformRolePermissionsForCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPlatformRolePermissionsForCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces": {
      "get": {
        "summary": "List the workspaces that have been bound to the account.",
        "operationId": "Core_ListVisibleWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "workspace name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/approvalusers": {
      "get": {
        "operationId": "Pipelines_ListApprovalPermissionUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListApprovalPermissionUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters": {
      "get": {
        "summary": "List clusters that have been bound to the workspace.",
        "operationId": "Core_ListBoundClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBoundClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/gpusettings": {
      "get": {
        "operationId": "Core_ListGPUSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGPUSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "availableEnable",
            "description": "if available_enable is true will return available gpu number\nif available_enable is false AvailableResource return nil",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/gpusummary": {
      "get": {
        "operationId": "Core_ListClusterGPUSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterGPUSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces": {
      "post": {
        "summary": "Create a namespace in the specified workspace and cluster.",
        "operationId": "Core_CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/amambaioapicorev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the name of the namespace."
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "the labels of the namespace."
                },
                "resourceQuota": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "resource quota of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}": {
      "delete": {
        "summary": "Delete a namespace in the specified workspace and cluster.",
        "operationId": "Core_DeleteNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateNamespace a namespace in the specified workspace and cluster.",
        "operationId": "Core_UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/amambaioapicorev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "the labels of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/gateways": {
      "get": {
        "operationId": "GatewayServer_GetGateway",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetGatewayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayServer"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/gateways/{gateway}/apis": {
      "get": {
        "operationId": "GatewayServer_ListGatewayAPI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGatewayAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GatewayServer"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/quota": {
      "get": {
        "operationId": "Core_GetNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNamespaceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Core_CreateNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/amambaioapicorev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "resource quota of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Core_UpdateNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/amambaioapicorev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "resource quota of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/quota": {
      "get": {
        "operationId": "Core_GetWorkspaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetWorkspaceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/control-plane/namespaces": {
      "get": {
        "operationId": "Core_GetControlPlaneNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetControlPlaneNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Core_CreateControlPlaneNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateControlNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "namespace name"
                },
                "isCreate": {
                  "type": "boolean",
                  "description": "whether to create the namespace, false means only select already existed namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/deploytargets": {
      "get": {
        "operationId": "Core_ListDeployTargets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicorev1alpha1ListDeployTargetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/namespaces": {
      "get": {
        "summary": "List a cluster's namespaces that have been bound to the workspace.",
        "operationId": "Core_ListBoundNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBoundNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "name",
            "description": "fuzzy search for namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/permissions": {
      "get": {
        "summary": "Obtain the Perms of the current user Ctx needs to include JwtToken (GProduct sensitive)",
        "operationId": "Core_ListRolePermissionsByWorkspaceForCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolePermissionsByWorkspaceForCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmcharts": {
      "get": {
        "operationId": "Workloads_ListHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "OTHERS",
              "STORAGE",
              "NETWORKING",
              "MONITORING",
              "DATABASE"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrelease": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Workloads_ListClusterHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrepos": {
      "get": {
        "operationId": "Workloads_ListHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmRepoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}": {
      "get": {
        "operationId": "Workloads_GetHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1GetHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}/versions/{version}": {
      "get": {
        "operationId": "Workloads_GetHelmChartValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version represents for the resource version.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nacos": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Workloads_ListNacosRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1ListRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nacos/{nacosName}/namespaces": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Workloads_ListNacosRegistryNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1ListRegistryNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosNamespace",
            "description": "the nacos belong to which cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/helmrelease": {
      "get": {
        "operationId": "Workloads_ListHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/ingressnames": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Workloads_ListIngressNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1ListIngressNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/services": {
      "get": {
        "summary": "DEPRECATED: 与ListWorkloads情况相同，考虑迁移到rollout",
        "operationId": "Workloads_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/pluginsinfo": {
      "get": {
        "operationId": "Workloads_GetPluginInstallationInformation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPluginInstallationInformationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/create_workload_by_git": {
      "post": {
        "operationId": "Workloads_CreateAppFromGit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
                },
                "workloadType": {
                  "$ref": "#/definitions/apiapplicationv1alpha1WorkloadType",
                  "title": "The kind of resource will be created in the cluster"
                },
                "appgroup": {
                  "type": "string",
                  "title": "The group resource belongs to"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "image": {
                  "type": "string",
                  "description": "Image registry and name to use to push.\nimage: can only contain lowercase letters, numbers, hyphens (-), periods (.), slashes (/), and colons (:),\nand start and end with lowercase letters or numbers."
                },
                "imageTag": {
                  "type": "string",
                  "description": "Tag for the image to build.\nimage_tag: can only contain lowercase and uppercase letters, numbers, underscores (_), hyphens\n(-), period (.). Labels cannot start with a period or hyphen and can contain up to 128 characters."
                },
                "imagePullSecret": {
                  "type": "string",
                  "description": "Name of the secret in the same namespace as `DeployTarget` specified to\npull image. If the image registry is public, no image pull secret is\nneeded."
                },
                "serviceSpec": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ServiceSpec",
                  "title": "A service with same name will be created as the workload"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Replicas of deployment, statefulset, daemonset, etc. Default 1."
                },
                "microService": {
                  "$ref": "#/definitions/v1alpha1MicroServiceSpec"
                },
                "resources": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
                  "title": "Resource limit&request spec"
                },
                "buildArgs": {
                  "type": "string"
                },
                "gitRepository": {
                  "$ref": "#/definitions/apiapplicationv1alpha1GitRepository"
                },
                "repositoryCredential": {
                  "type": "string"
                },
                "repositoryBranch": {
                  "type": "string"
                },
                "dockerfilePath": {
                  "type": "string"
                },
                "contextPath": {
                  "type": "string"
                },
                "optionalFeatures": {
                  "$ref": "#/definitions/v1alpha1ContainerSpec"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "observability": {
                  "$ref": "#/definitions/v1alpha1ObservabilitySpec"
                },
                "application": {
                  "type": "string"
                },
                "imageSelector": {
                  "$ref": "#/definitions/v1alpha1ImageSelector"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/create_workload_by_image": {
      "post": {
        "summary": "CreateAppByImage create workload given an image name",
        "operationId": "Workloads_CreateAppByImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
                },
                "workloadType": {
                  "$ref": "#/definitions/apiapplicationv1alpha1WorkloadType",
                  "title": "The kind of resource will be created in the cluster"
                },
                "appgroup": {
                  "type": "string",
                  "title": "The group resource belongs to"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "image": {
                  "type": "string",
                  "description": "Image to use for the workload, consists of the image name and tag."
                },
                "imagePullSecret": {
                  "type": "string",
                  "description": "Name of the secret in the same namespace as `DeployTarget` specified to\npull image. If the image registry is public, no image pull secret is\nneeded."
                },
                "serviceSpec": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ServiceSpec",
                  "title": "A service with same name will be created as the workload"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Replicas of deployment, statefulset, daemonset, etc. Default 1."
                },
                "microService": {
                  "$ref": "#/definitions/v1alpha1MicroServiceSpec",
                  "title": "MicroService configuration"
                },
                "resources": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
                  "title": "Resource limit&request spec"
                },
                "optionalFeatures": {
                  "$ref": "#/definitions/v1alpha1ContainerSpec"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "observability": {
                  "$ref": "#/definitions/v1alpha1ObservabilitySpec"
                },
                "application": {
                  "type": "string"
                },
                "imageSelector": {
                  "$ref": "#/definitions/v1alpha1ImageSelector"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/create_workload_by_jar": {
      "post": {
        "operationId": "Workloads_CreateAppFromJar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
                },
                "workloadType": {
                  "$ref": "#/definitions/apiapplicationv1alpha1WorkloadType",
                  "title": "The kind of resource will be created in the cluster"
                },
                "appgroup": {
                  "type": "string",
                  "title": "The group resource belongs to"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "image": {
                  "type": "string",
                  "description": "Image registry and name to use to push.\nimage: can only contain lowercase letters, numbers, hyphens (—), periods (.), slashes (/), and colons (:),\nand start and end with lowercase letters or numbers."
                },
                "imageTag": {
                  "type": "string",
                  "description": "Tag for the image to build.\nimage_tag: can only contain lowercase and uppercase letters, numbers, underscores (_), hyphens\n(-), period (.). Labels cannot start with a period or hyphen and can contain up to 128 characters."
                },
                "imagePullSecret": {
                  "type": "string",
                  "description": "Name of the secret in the same namespace as `DeployTarget` specified to\npull image. If the image registry is public, no image pull secret is\nneeded."
                },
                "serviceSpec": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ServiceSpec",
                  "title": "A service with same name will be created as the workload"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Replicas of deployment, statefulset, daemonset, etc. Default 1."
                },
                "microService": {
                  "$ref": "#/definitions/v1alpha1MicroServiceSpec"
                },
                "resources": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
                  "title": "Resource limit&request spec"
                },
                "buildArgs": {
                  "type": "string"
                },
                "javaOpts": {
                  "type": "string"
                },
                "optionalFeatures": {
                  "$ref": "#/definitions/v1alpha1ContainerSpec"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "observability": {
                  "$ref": "#/definitions/v1alpha1ObservabilitySpec"
                },
                "application": {
                  "type": "string"
                },
                "imageSelector": {
                  "$ref": "#/definitions/v1alpha1ImageSelector"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/deploytargets": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Workloads_ListDeployTargets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1ListDeployTargetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/helmrelease": {
      "post": {
        "summary": "CreateAppByHelm create workload given an image name",
        "operationId": "Workloads_CreateAppByHelm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRelease"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "target workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "repo": {
                  "type": "string",
                  "title": "helm repo name"
                },
                "charts": {
                  "$ref": "#/definitions/CreateWorkloadByHelmRequestCharts"
                },
                "wait": {
                  "type": "boolean",
                  "description": "If set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout."
                },
                "atomic": {
                  "type": "boolean",
                  "title": "If set, the installation process deletes the installation on failure. The --wait flag will be set automatically if --atomic is used"
                },
                "debug": {
                  "type": "boolean",
                  "title": "Enable verbose output"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/imageinfo/{image}": {
      "get": {
        "operationId": "Image_GetImageInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetImageInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries": {
      "get": {
        "summary": "ListRegistries returns a list of registries",
        "operationId": "Image_ListRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "global",
            "description": "Global is to list all global registries.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects": {
      "get": {
        "summary": "ListProjects returns a list of projects of specified registry",
        "operationId": "Image_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "public",
            "description": "Public is distinguish public projects and private projects.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyBind",
            "description": "if true only return bound data.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "all",
            "description": "if true the public field will become invalid.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects/{project}/repositories": {
      "get": {
        "summary": "ListRepositories returns a list of image names of specified project",
        "operationId": "Image_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request, \"/\" is a possible value.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "showArtifacts",
            "description": "ShowArtifacts is to list artifacts of per image, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts returns a list of tags of specified image",
        "operationId": "Image_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "Repository is image name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads": {
      "get": {
        "summary": "DEPRECATED: 在创建灰度发布的时候使用，需要获取deployment的labels，在下一步中筛选svc\n考虑为rollout提供专门的接口\nListWorkloads list workloads in a given workspace",
        "operationId": "Workloads_ListWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the workload created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace which the workload is deployed at.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workloadType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_TYPE_UNSPECIFIED",
              "WORKLOAD_TYPE_DEPLOYMENT",
              "WORKLOAD_TYPE_STATEFUL_SET",
              "WORKLOAD_TYPE_DAEMON_SET",
              "WORKLOAD_TYPE_JOB",
              "WORKLOAD_TYPE_CRONJOB"
            ],
            "default": "WORKLOAD_TYPE_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/json": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Workloads_GetWorkloadJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1WorkloadsJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workloadType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_TYPE_UNSPECIFIED",
              "WORKLOAD_TYPE_DEPLOYMENT",
              "WORKLOAD_TYPE_STATEFUL_SET",
              "WORKLOAD_TYPE_DAEMON_SET",
              "WORKLOAD_TYPE_JOB",
              "WORKLOAD_TYPE_CRONJOB"
            ],
            "default": "WORKLOAD_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/replicas": {
      "put": {
        "operationId": "Workloads_UpdateWorkloadReplicas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateWorkloadReplicasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "The cluster which the namespace belongs to."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace where the secret lives in."
                },
                "workloadType": {
                  "$ref": "#/definitions/apiapplicationv1alpha1WorkloadType"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/components_definition": {
      "get": {
        "summary": "list system buildin components.",
        "operationId": "OAMService_ListComponentDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListSchemaDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/components_definition/{name}": {
      "get": {
        "summary": "get component properties schema json.",
        "operationId": "OAMService_GetComponentProperties",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2SchemaDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/traits_definition": {
      "get": {
        "summary": "list system buildin traits.",
        "operationId": "OAMService_ListTraitDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListSchemaDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "componentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/traits_definition/{traitType}": {
      "get": {
        "summary": "get trait properties json schema.",
        "operationId": "OAMService_GetTraitProperties",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2SchemaDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "traitType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications": {
      "get": {
        "operationId": "ApplicationService_ListApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2ListApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceID restricts the cluster and namespace must be in the workspace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster restricts the list to only those in the cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace restricts the list to only those in the namespace.\nif empty all namespaces will be filtered.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName restricts the list to only those whose name match the fuzzy name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "description": "MetadataOnly restricts the result only return metadata.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "ApplicationService_CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "name": {
                  "type": "string"
                },
                "descriptor": {
                  "$ref": "#/definitions/v1alpha2Descriptor"
                },
                "components": {
                  "$ref": "#/definitions/v1alpha2Components"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{application}/pods/{podName}/containers/{container}/cloudshell": {
      "get": {
        "operationId": "ApplicationService_GetCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "description": "pod_name defines the name of the specified pod.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "container",
            "description": "container defines which container or init container to create cloud shell.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster specified the cluster name for cloudshell.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace defines the namespace of the specified pod.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "ApplicationService_DeleteCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "description": "pod_name defines the name of the specified pod.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "container",
            "description": "container defines which container or init container to create cloud shell.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "cluster specified the cluster name for cloudshell."
                },
                "namespace": {
                  "type": "string",
                  "description": "namespace defines the namespace of the specified pod."
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "ApplicationService_CreateCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "description": "pod_name defines the name of the specified pod.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "container",
            "description": "container defines which container or init container to create cloud shell.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "cluster specified the cluster name for cloudshell."
                },
                "namespace": {
                  "type": "string",
                  "description": "namespace defines the namespace of the specified pod."
                },
                "filePath": {
                  "type": "string",
                  "description": "file_path defines the file path."
                },
                "logCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "log_count defines the count of display logs."
                },
                "data": {
                  "$ref": "#/definitions/v1alpha1CloudShell",
                  "description": "cloud_shell defines the data of cloud shell."
                },
                "type": {
                  "$ref": "#/definitions/applicationv1alpha2CloudShellType"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}": {
      "get": {
        "operationId": "ApplicationService_GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "ApplicationService_DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "propagationPolicy": {
                  "$ref": "#/definitions/applicationv1alpha2PropagationPolicy",
                  "description": "PropagationPolicy specifies the gc policy for resource deletion.\nDefault is orphan, which means children will not be gc-ed.\nBackground means children will be removed in background."
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "ApplicationService_UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "descriptor": {
                  "$ref": "#/definitions/v1alpha2Descriptor"
                },
                "components": {
                  "$ref": "#/definitions/v1alpha2Components"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components": {
      "post": {
        "summary": "DEPRECATED: not in use, will be removed from v0.25.0",
        "operationId": "ApplicationService_AddApplicationComponents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "components": {
                  "$ref": "#/definitions/v1alpha2Components"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}": {
      "get": {
        "operationId": "ApplicationService_ListComponents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListComponentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "ApplicationService_CreateComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}": {
      "get": {
        "operationId": "ApplicationService_GetComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "ApplicationService_DeleteComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "ApplicationService_UpdateComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}/podcontainers": {
      "get": {
        "operationId": "ApplicationService_ListWorkloadPodContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListApplicationComponentPodContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "description": "Name of the application component",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Name of the cluster where the Pod is located",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of the namespace where the Pod is located",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}:pause": {
      "post": {
        "operationId": "ApplicationService_PauseComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}:restart": {
      "post": {
        "operationId": "ApplicationService_RestartComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}:resume": {
      "post": {
        "operationId": "ApplicationService_ResumeComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}:start": {
      "post": {
        "operationId": "ApplicationService_StartComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components/{groupKind}/{componentName}:stop": {
      "post": {
        "operationId": "ApplicationService_StopComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Component"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/info": {
      "post": {
        "operationId": "ApplicationService_UpdateApplicationInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "descriptor": {
                  "$ref": "#/definitions/v1alpha2Descriptor"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/pods/{pod}/containers/{container}/log": {
      "get": {
        "operationId": "ApplicationService_GetPodContainerLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetApplicationComponentLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pod",
            "description": "Name of pod",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "container",
            "description": "Name of the pod where the container is located",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Name of the cluster where the Pod is located",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of the namespace where the Pod is located",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "Start time of get pod container log",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "End time of get pod container log",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Number of page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Log number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "logSearch",
            "description": "for fuzzy query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/topology": {
      "get": {
        "operationId": "ApplicationService_GetApplicationTopology",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ApplicationTopology"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/workloads": {
      "get": {
        "summary": "NOT_IMPLEMENTED",
        "operationId": "ApplicationService_ListApplicationWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListApplicationWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/yaml": {
      "get": {
        "operationId": "ApplicationService_GetApplicationYAML",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetApplicationYAMLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "ApplicationService_UpdateApplicationYAML",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2UpdateApplicationYAMLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/addons": {
      "post": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "ApplicationService_CreateApplicationManager",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2CreateApplicationManagerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/apiresources": {
      "get": {
        "summary": "GetAPIResources get cluster api resources",
        "operationId": "OLMService_GetAPIResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetAPIResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "cluster name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/mesh_id": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "ApplicationService_GetMeshID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetMeshIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/nacos": {
      "get": {
        "operationId": "SummaryService_ListNacosRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2ListRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/nacos/{nacosName}/namespaces": {
      "get": {
        "operationId": "SummaryService_ListNacosRegistryNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2ListRegistryNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosNamespace",
            "description": "the nacos belong to which cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/applications/{applicationName}/revisions": {
      "get": {
        "operationId": "ApplicationService_ListRevisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListRevisionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceID restricts the cluster and namespace must be in the workspace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster restricts the list to only those in the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace restricts the list to only those in the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "description": "MetadataOnly restricts the result only return metadata.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "ApplicationService_CreateRevision",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Revision"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revisionName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/applications/{applicationName}/revisions/{revisionNumber}": {
      "get": {
        "operationId": "ApplicationService_GetRevision",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2Revision"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "ApplicationService_DeleteRevision",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/applications/{applicationName}/revisions/{revisionNumber}:rollback": {
      "post": {
        "operationId": "ApplicationService_RollbackRevision",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2RollbackAppRevisionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dryRun": {
                  "type": "boolean",
                  "description": "dry_run will not apply the changes to the cluster."
                },
                "cleanupOnFail": {
                  "type": "boolean",
                  "description": "cleanup_on_fail will delete the created resources if the rollback fails."
                },
                "force": {
                  "type": "boolean",
                  "description": "use `kubectl replace` to rollback the application, otherwise use `patch` resources."
                },
                "reCreate": {
                  "type": "boolean",
                  "description": "Deprecated."
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/applications/{name}/templates": {
      "get": {
        "operationId": "ApplicationService_GetApplicationTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetApplicationTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators": {
      "get": {
        "operationId": "OLMService_ListClusterServiceVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterServiceVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/collectionresources": {
      "get": {
        "operationId": "OLMService_ListCollectionResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCollectionResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the operator resource. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.csvName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.csvNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/customresourcedefinitions": {
      "get": {
        "operationId": "OLMService_ListClusterServiceVersionCustomResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterServiceVersionCustomResourceDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/customresources": {
      "get": {
        "operationId": "OLMService_ListClusterServiceVersionCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterServiceVersionCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/events": {
      "get": {
        "operationId": "OLMService_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/kolmioapicorev1alpha1ListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the operator resource. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "description": "cluster represents the name of deployment belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.kind",
            "description": "Kind represents what type of event is needed.\n\n - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Deployment: ListEvents by deployment.\n - StatefulSet: ListEvents by statefulSet.\n - DaemonSet: ListEvents by daemonSet.\n - Pod: ListEvents by pod.\n - Service: ListEvents by service.\n - Ingress: ListEvents by ingress.\n - Job: ListEvents by job.\n - CronJob: ListEvents by cronJob.\n - HorizontalPodAutoscaler: ListEvents by HorizontalPodAutoscaler.\n - ReplicaSet: ListEvents by replicaset.\n - CronHPA: ListEvents by CronHPA.\n - PersistentVolumeClaim: ListEvents by PersistentVolumeClaim.\n - GroupVersionResource: ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,\nyou must specify the value of group version resource.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet",
              "Pod",
              "Service",
              "Ingress",
              "Job",
              "CronJob",
              "HorizontalPodAutoscaler",
              "ReplicaSet",
              "CronHPA",
              "PersistentVolumeClaim",
              "GroupVersionResource"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "payload.kindName",
            "description": "The name of involvedObject.\nIf the kind is DEPLOYMENT,\nthis presents the name of deployments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name stands for event name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the event list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.type",
            "description": "Type is used for query, showing events of specified type.\nUse example: type=WARNING&type=NORMAL.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "Normal",
                "Warning"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "payload.group",
            "description": "resource group,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "description": "resource version,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "description": "resource name,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/examples": {
      "get": {
        "operationId": "OLMService_ListClusterServiceVersionExamples",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterServiceVersionResourceExamplesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/resources": {
      "get": {
        "operationId": "OLMService_ListResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/resourcesv1alpha1ListResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the operator resource. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "description": "Cluster represents which cluster the CustomResources belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.group",
            "description": "Group represents the resource group of CustomResources.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "description": "Version represents the resource version of CustomResources.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the CustomResources belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.showDetail",
            "description": "ShowDetail is the presentation details, including metadata, spec, and status",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "payload.csvName",
            "description": "list cr created by crd in csv",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.csvNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "OLMService_CreateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/v1alpha1CreateResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/resources/{name}": {
      "get": {
        "operationId": "OLMService_GetResourceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetResourceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name represents the name of CustomResource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "OLMService_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/resourcesv1alpha1DeleteResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "OLMService_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiresourcesv1alpha1Resource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/resourcesv1alpha1UpdateResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/resources": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "KubeService_ListResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2ListResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "Selector (label query) to filter on, supports '=', '==', and '!='.(e.g.  key1=value1,key2=value2). Matching\nobjects must satisfy all of the specified label constraints.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "description": "metadata_only indicates whether to return only metadata of the resources.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the resources list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the resources list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/resources/{groupKind}": {
      "get": {
        "summary": "ListNamespacedResources lists resources with specified `GroupKind` in target cluster/namespace",
        "operationId": "SummaryService_ListNamespacedResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListNamespacedResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "Selector (label query) to filter on, supports '=', '==', and '!='.(e.g.  key1=value1,key2=value2). Matching\nobjects must satisfy all of the specified label constraints.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "description": "metadata_only indicates whether to return only metadata of the resources.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the resources list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the resources list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/resources/{groupKind}/{name}": {
      "get": {
        "summary": "GetNamespacedResource gets the resource with specified `GroupKind` in target cluster/namespace",
        "operationId": "SummaryService_GetNamespacedResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Resource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/resources/{name}": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "KubeService_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Resource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "KubeService_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupKind": {
                  "type": "string",
                  "title": "GroupKind specifies the resource group and kind"
                }
              }
            }
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "KubeService_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2UpdateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupKind": {
                  "type": "string",
                  "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group."
                },
                "data": {
                  "type": "string",
                  "title": "data The data field is the Workload YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "patch": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "KubeService_PatchResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2PatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupKind": {
                  "type": "string",
                  "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group."
                },
                "data": {
                  "type": "string",
                  "title": "The applincation patch data"
                }
              }
            }
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/operators": {
      "get": {
        "operationId": "OLMService_ListClusterClusterServiceVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterClusterServiceVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.namespaces",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/operators/{operator}/collectionresources": {
      "get": {
        "operationId": "OLMService_ListClusterCollectionResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCollectionResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.csvName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.csvNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the operator resource. is required and should same with `payload.namespace`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/operators/{operator}/customresources": {
      "get": {
        "operationId": "OLMService_ListClusterClusterServiceVersionCustomResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterClusterServiceVersionCustomResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.workspace",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.searchNamespaces",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "payload.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/operators/{operator}/resources": {
      "get": {
        "operationId": "OLMService_ListClusterResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster is the cluster of the operator resource. is required and should same with `payload.cluster`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "description": "Cluster represents which cluster the CustomResources belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.group",
            "description": "Group represents the resource group of CustomResources.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "description": "Version represents the resource version of CustomResources.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.showDetail",
            "description": "ShowDetail is the presentation details, including metadata, spec, and status",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "payload.csvName",
            "description": "list cr created by crd in csv",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.csvNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "payload.sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "OLMService_CreateClusterResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateClusterResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/v1alpha1CreateClusterResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/operators/{operator}/resources/{name}": {
      "get": {
        "operationId": "OLMService_GetClusterResourceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetClusterResourceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name represents the name of CustomResource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "OLMService_DeleteClusterResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/v1alpha1DeleteClusterResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "OLMService_UpdateClusterResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiresourcesv1alpha1Resource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/v1alpha1UpdateClusterResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/sentinel_address": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.25.0",
        "operationId": "ApplicationService_GetSentinelAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetSentinelAddrResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nacosNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/summary/ingressclasses": {
      "get": {
        "summary": "ListIngressClasses lists instances of `ingressclass` in target cluster\nif the scope was namespace, then only matched namespace or namespaceSelector\ningressClass will be returned",
        "operationId": "SummaryService_ListIngressClassSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListIngressClassSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SCOPE_CLUSTER",
              "SCOPE_NAMESPACE"
            ],
            "default": "SCOPE_CLUSTER"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/summary/metallbippools": {
      "get": {
        "summary": "ListMetallbIPPools lists instances of `ipaddresspools.metallb.io` in metallb-system",
        "operationId": "SummaryService_ListMetallbIPPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListMetallbIPPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/summary/namespaces": {
      "get": {
        "summary": "ListNamespaceSummary lists basic namespace information in target cluster, \nonly workspace-bound namespaces are shown.",
        "operationId": "SummaryService_ListNamespaceSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNamespaceSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phase",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/summary/networkallocatedresources": {
      "get": {
        "summary": "ListClusterNetworkAllocatedResources lists network resources allocated in target cluster,\neg: spidernet.io/hca_shared_devices, intel.com/sriov_netdevice\nrefer: https://docs.daocloud.io/network/modules/spiderpool/userdma.html",
        "operationId": "SummaryService_ListClusterNetworkAllocatedResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterSriovAllocatedResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/summary/nodes": {
      "get": {
        "summary": "ListNodeSummary lists basic node information in target cluster",
        "operationId": "SummaryService_ListNodeSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/summary/storageclasses": {
      "get": {
        "summary": "ListStorageClasses lists StorageClasses declared in target cluster",
        "operationId": "SummaryService_ListStorageClasses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAllStorageClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the resources list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the resources list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "SummaryService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/clusters": {
      "get": {
        "summary": "ListJoinedCluster Get the list of clusters that have been added to karmada",
        "operationId": "Cluster_ListJoinedClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.role",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "payload.kubernetesVersion",
            "description": "KUBERNETESVERSION cluster k8s version use to support search sub cluster at\nListClusters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.phase",
            "description": "Phases is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.managedBy",
            "description": "ManagedBy represents who manages the cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.name",
            "description": "Name of cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.region",
            "description": "Region represents the region of the member cluster locate in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.provider",
            "description": "Provider represents the cloud provider name of the member cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.zone",
            "description": "Zone represents the zone of the member cluster locate in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used  to filter the clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.clusterSelector",
            "description": "A cluster selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.allCluster",
            "description": "list all kpanda clusters",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/clusters-labels": {
      "get": {
        "operationId": "Cluster_ListClustersLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "karmada instance",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/clusters-locations": {
      "get": {
        "operationId": "Cluster_ListClustersLocationSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersLocationsSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/aggregationresource": {
      "post": {
        "operationId": "Aggregation_CreateAggregationResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AggregationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "$ref": "#/definitions/aggregationv1alpha1CreateAggregationResourceRequest"
                }
              }
            }
          }
        ],
        "tags": [
          "Aggregation"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/configmaps": {
      "get": {
        "summary": "ListConfigMaps lists configmaps in the specified instance and namespace.",
        "operationId": "Core_ListConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListConfigMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the configmap belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/deployments": {
      "get": {
        "summary": "ListDeployments lists deployments",
        "operationId": "Apps_ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the deployment belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.phase",
            "description": "Phase represents the phase of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/deployments/{name}": {
      "delete": {
        "summary": "DeleteDeployment deletes a deployment under the namespaces of a specific\ninstance",
        "operationId": "Apps_DeleteDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is the name of the application. is required and should same with `payload.name`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the deployment belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name represents the name of deployment",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/deployments/{name}/json": {
      "get": {
        "operationId": "Apps_GetDeploymentJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetDeploymentJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is the name of the application. is required and should same with `payload.name`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which instance the configmap belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced Deployment.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "name represents for the resource name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/overridepolicies": {
      "get": {
        "summary": "ListOverridePolicies return all OverridePolicy for a given namespace and instance",
        "operationId": "Policy_ListOverridePolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListOverridePoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "karmada instance",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.kind",
            "description": "The kind of service.\nIf the kind is Deployment,\nthis presents the name of the deployment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.kindName",
            "description": "Name of kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name stands for service name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.apiVersion",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/overridepolicies/{name}": {
      "get": {
        "summary": "GetOverridePolicy gets override policy under the namespaces of a specific instance",
        "operationId": "Policy_GetOverridePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetOverridePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which instance the override belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced OverridePolicy.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "name represents for the resource name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/overridepolicies/{name}/json": {
      "get": {
        "summary": "GetOverridePolicyJSON gets override policy by JSON under the namespaces of a specific instance",
        "operationId": "Policy_GetOverridePolicyJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipolicyv1alpha1GetOverridePolicyJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which instance the override belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced OverridePolicy.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "name represents for the resource name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/propagationpolicies": {
      "get": {
        "summary": "ListPropagationPolicies return all PropagationPolicy for a given instance and namespace",
        "operationId": "Policy_ListPropagationPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPropagationPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "karmada instance",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.kind",
            "description": "The kind of service.\nIf the kind is Deployment,\nthis presents the name of the deployment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.kindName",
            "description": "Name of kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name stands for service name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.apiVersion",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/propagationpolicies/{name}": {
      "get": {
        "summary": "GetPropagationPolicy gets propagation policy under the namespaces of a specific instance",
        "operationId": "Policy_GetPropagationPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPropagationPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which instance the propagation belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced PropagationPolicy.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "name represents for the resource name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/propagationpolicies/{name}/json": {
      "get": {
        "summary": "GetPropagationPolicyJSON gets propagation policy by JSON under the namespaces of a specific instance",
        "operationId": "Policy_GetPropagationPolicyJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPropagationPolicyJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which instance the propagation belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced PropagationPolicy.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "name represents for the resource name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/secrets": {
      "get": {
        "operationId": "Core_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the secret belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "The name use to search specific secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "SortDir determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/kairship_namespaces/{namespace}/secrets/{name}": {
      "get": {
        "summary": "GetSecret gets a secret under the namespaces of a specific cluster",
        "operationId": "Core_GetSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/corev1alpha1Secret"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is the namespace of the application. is required and should same with `payload.namespace`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the secret belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Secret name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{instance}/namespacesummary": {
      "get": {
        "operationId": "Core_ListNamespaceSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNamespaceSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "description": "instance is the instance name of the application. is required and should same with `payload.instance`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance the namespace summary list belong to.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/mutil-cloud-deploytargets": {
      "get": {
        "operationId": "MutilCloudApplication_ListMutilCloudDeployTarget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListMutilCloudDeployTargetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MutilCloudApplication"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam": {
      "get": {
        "operationId": "OAMService_ListOAMApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListOAMApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": " - OAM_APPLICATION_PHASE_STARTING: ApplicationStarting means the app is preparing for reconcile\n - OAM_APPLICATION_PHASE_RENDERING: ApplicationRendering means the app is rendering\n - OAM_APPLICATION_PHASE_POLICY_GENERATING: ApplicationPolicyGenerating means the app is generating policies\n - OAM_APPLICATION_PHASE_RUNNING_WORKFLOW: ApplicationRunningWorkflow means the app is running workflow\n - OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING: ApplicationWorkflowSuspending means the app's workflow is suspending\n - OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED: ApplicationWorkflowTerminated means the app's workflow is terminated\n - OAM_APPLICATION_PHASE_WORKFLOW_FAILED: ApplicationWorkflowFailed means the app's workflow is failed\n - OAM_APPLICATION_PHASE_RUNNING: ApplicationRunning means the app finished rendering and applied result to the cluster\n - OAM_APPLICATION_PHASE_UNHEALTHY: ApplicationUnhealthy means the app finished rendering and applied result to the cluster, but still unhealthy\n - OAM_APPLICATION_PHASE_DELETING: ApplicationDeleting means application is being deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OAM_APPLICATION_PHASE_UNSPECIFIED",
              "OAM_APPLICATION_PHASE_STARTING",
              "OAM_APPLICATION_PHASE_RENDERING",
              "OAM_APPLICATION_PHASE_POLICY_GENERATING",
              "OAM_APPLICATION_PHASE_RUNNING_WORKFLOW",
              "OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING",
              "OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED",
              "OAM_APPLICATION_PHASE_WORKFLOW_FAILED",
              "OAM_APPLICATION_PHASE_RUNNING",
              "OAM_APPLICATION_PHASE_UNHEALTHY",
              "OAM_APPLICATION_PHASE_DELETING"
            ],
            "default": "OAM_APPLICATION_PHASE_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "OAMService_CreateOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "deployTargets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                  },
                  "title": "where to deploy the application"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha2OAMComponent"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}": {
      "get": {
        "operationId": "OAMService_GetOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "OAMService_DeleteOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "update app alias and description.",
        "operationId": "OAMService_UpdateOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components": {
      "post": {
        "operationId": "OAMService_AddOAMComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "component": {
                  "$ref": "#/definitions/v1alpha2OAMComponent"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components/{componentName}": {
      "delete": {
        "operationId": "OAMService_DeleteOAMComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "OAMService_UpdateOAMComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "component": {
                  "$ref": "#/definitions/v1alpha2OAMComponent"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components/{componentName}/traits": {
      "put": {
        "summary": "batch update traits.",
        "operationId": "OAMService_BatchUpdateOAMTraits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "traits": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha2Trait"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components/{componentName}/traits/{traitType}": {
      "delete": {
        "operationId": "OAMService_DeleteOAMTrait",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "traitType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/json": {
      "get": {
        "operationId": "OAMService_GetOAMApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetOAMApplicationJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "OAMService_UpdateOAMApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2UpdateOAMApplicationJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/revisions": {
      "get": {
        "operationId": "OAMService_ListApplicationRevisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListApplicationRevisionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/revisions/{revisionHash}:rollback": {
      "post": {
        "operationId": "OAMService_RollbackApplicationRevision",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2RollbackRevisionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionHash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/credential.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Credentials_ListCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1ListCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "name",
            "description": "The filter of the credential, fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeGlobal",
            "description": "The filter of the credential, include global credentials, such as gitlab, sonarqube, etc.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Credentials_CreateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace id of the credential.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credentialName": {
                  "type": "string",
                  "description": "The credential_name of the credential."
                },
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apicredentialv1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1BasicCredential"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                },
                "sshCredential": {
                  "$ref": "#/definitions/v1alpha1SSHKeyCredential"
                }
              }
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/credential.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials/{credentialName}": {
      "get": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Credentials_GetCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Credentials_DeleteCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "DEPRECATED: will be removed from v0.26.0",
        "operationId": "Credentials_UpdateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apicredentialv1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1BasicCredential",
                  "title": "+optional"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                },
                "sshCredential": {
                  "$ref": "#/definitions/v1alpha1SSHKeyCredential"
                }
              },
              "description": "The request for the update credential."
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications": {
      "get": {
        "operationId": "GitOps_ListApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gitopsv1alpha1ListApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "syncStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SYNC_STATUS_UNSPECIFIED",
              "SYNC_STATUS_UNKNOWN",
              "SYNC_STATUS_SYNCED",
              "SYNC_STATUS_OUT_OF_SYNC"
            ],
            "default": "SYNC_STATUS_UNSPECIFIED"
          },
          {
            "name": "healthStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HEALTH_STATUS_UNSPECIFIED",
              "HEALTH_STATUS_MISSING",
              "HEALTH_STATUS_DEGRADED",
              "HEALTH_STATUS_HEALTHY",
              "HEALTH_STATUS_UNKNOWN",
              "HEALTH_STATUS_SUSPENDED",
              "HEALTH_STATUS_PROGRESSING"
            ],
            "default": "HEALTH_STATUS_UNSPECIFIED"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new application",
        "operationId": "GitOps_CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which\neach name must be unique."
                },
                "setDeletionFinalizers": {
                  "type": "boolean"
                },
                "source": {
                  "$ref": "#/definitions/v1alpha1ApplicationSource"
                },
                "syncPolicy": {
                  "$ref": "#/definitions/apigitopsv1alpha1SyncPolicy"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/status": {
      "get": {
        "operationId": "GitOps_GetApplicationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetApplicationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}": {
      "get": {
        "operationId": "GitOps_GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "NORMAL",
              "HARD"
            ],
            "default": "UNSPECIFIED"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "GitOps_DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "GitOps_UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which\neach name must be unique."
                },
                "source": {
                  "$ref": "#/definitions/v1alpha1ApplicationSource"
                },
                "syncPolicy": {
                  "$ref": "#/definitions/apigitopsv1alpha1SyncPolicy"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}/dashboard": {
      "get": {
        "operationId": "GitOps_GetApplicationDashboardURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetDashboardUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_TYPE_UNSPECIFIED",
              "VIEW_TYPE_TREE",
              "VIEW_TYPE_PODS",
              "VIEW_TYPE_NETWORK",
              "VIEW_TYPE_LIST"
            ],
            "default": "VIEW_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}/events": {
      "get": {
        "operationId": "GitOps_ListApplicationEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListApplicationEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}/json": {
      "get": {
        "operationId": "GitOps_GetApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationJson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "GitOps_UpdateApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationJson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}/revisions": {
      "get": {
        "operationId": "GitOps_GetApplicationRevisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetApplicationRevisionMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}:sync": {
      "delete": {
        "operationId": "GitOps_TerminateApplicationSync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "GitOps_SyncApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "string"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "prune": {
                  "type": "boolean"
                },
                "applyOnly": {
                  "type": "boolean"
                },
                "force": {
                  "type": "boolean"
                },
                "syncPolicy": {
                  "$ref": "#/definitions/apigitopsv1alpha1SyncPolicy"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1SyncOperationResource"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/gitreferences": {
      "get": {
        "operationId": "GitOps_ListGitReferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1ListGitReferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repoName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/helmcharts": {
      "get": {
        "operationId": "GitOps_GetHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1GetHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "the url of helm chart repo,like: https://release-ci.daocloud.io/chartrepo/demo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/repositories": {
      "get": {
        "operationId": "GitOps_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - ARGOCD_REPO_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - ARGOCD_REPO_SORT_BY_NAME: Sort result by name.\n - ARGOCD_REPO_SORT_BY_REPO: Sort result by repo.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ARGOCD_REPO_SORT_BY_UNSPECIFIED",
              "ARGOCD_REPO_SORT_BY_NAME",
              "ARGOCD_REPO_SORT_BY_REPO"
            ],
            "default": "ARGOCD_REPO_SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "GitOps_CreateRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1RepoType"
                },
                "repo": {
                  "$ref": "#/definitions/v1alpha1Repo",
                  "title": "The URL to the repo"
                },
                "username": {
                  "type": "string",
                  "title": "Username for accessing repo"
                },
                "password": {
                  "type": "string",
                  "title": "Password for accessing repo"
                },
                "sshPrivateKey": {
                  "type": "string",
                  "title": "Private key data for accessing SSH repository"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/repositories/{name}": {
      "delete": {
        "operationId": "GitOps_DeleteRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/httpapis": {
      "get": {
        "operationId": "Pipelines_CollectionOfHTTPAPI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HttpApiResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/plugins": {
      "get": {
        "operationId": "PluginService_ListPipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPipelinePluginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyMetadata",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showHidden",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PluginSource_UNSPECIFIED",
              "PluginSource_BUILTIN",
              "PluginSource_CUSTOM"
            ],
            "default": "PluginSource_UNSPECIFIED"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PluginCategory_UNSPECIFIED",
              "PluginCategory_Others",
              "PluginCategory_Build",
              "PluginCategory_Test",
              "PluginCategory_Security",
              "PluginCategory_Release",
              "PluginCategory_Deploy",
              "PluginCategory_Command",
              "PluginCategory_General",
              "PluginCategory_Repository",
              "PluginCategory_Quality"
            ],
            "default": "PluginCategory_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PluginStatus_UNSPECIFIED",
              "PluginStatus_Enable",
              "PluginStatus_Disable"
            ],
            "default": "PluginStatus_UNSPECIFIED"
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "PluginService_CreatePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelinePlugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreatePipelinePluginRequest"
            }
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/plugins/{name}/versions/{version}": {
      "get": {
        "operationId": "PluginService_GetPipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelinePlugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "PluginService_DeletePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "PluginService_UpdatePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelinePlugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/plugins/{name}/versions/{version}/disable": {
      "post": {
        "operationId": "PluginService_DisablePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelinePlugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/plugins/{name}/versions/{version}/enable": {
      "post": {
        "operationId": "PluginService_EnablePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelinePlugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/sonarqube/{toolchainId}/bind_workspace": {
      "get": {
        "operationId": "Sonarqube_ListSonarqubeBindWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSonarqubeBindWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "description": "toolchain id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Sonarqube"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/templates": {
      "get": {
        "operationId": "Pipelines_ListGlobalTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "type",
            "description": "Type filters the type of response templates.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TEMPLATE_TYPE_UNSPECIFIED",
              "TEMPLATE_TYPE_BUILTIN",
              "TEMPLATE_TYPE_CUSTOM"
            ],
            "default": "TEMPLATE_TYPE_UNSPECIFIED"
          },
          {
            "name": "metadataOnly",
            "description": "MetadataOnly indicates whether to return parameter definitions and jenkinsfile.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "template name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Pipelines_CreateGlobalTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateGlobalTemplateRequest"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/templates/{name}": {
      "get": {
        "operationId": "Pipelines_GetGlobalTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "description": "raw specifies whether return the original spec instead of parsed json only",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeleteGlobalTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdateGlobalTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "spec": {
                  "type": "string",
                  "title": "spec describes the parameter definitions and jenkinsfile in yaml"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/templates/{name}:disable": {
      "post": {
        "operationId": "Pipelines_DisableTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/templates/{name}:enable": {
      "post": {
        "operationId": "Pipelines_EnableTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains": {
      "get": {
        "operationId": "Toolchain_AdminListInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "types",
            "description": "types that need to be queried,if empty all types,",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSTANCE_TYPE_UNSPECIFIED",
                "INSTANCE_TYPE_JIRA",
                "INSTANCE_TYPE_GITLAB",
                "INSTANCE_TYPE_JENKINS",
                "INSTANCE_TYPE_SONARQUBE",
                "INSTANCE_TYPE_TESTLINK",
                "INSTANCE_TYPE_NEXUS"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Toolchain_AdminCreateToolchainInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateToolchainRequest"
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}": {
      "get": {
        "operationId": "Toolchain_AdminGetInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "INSTANCE_TYPE_UNSPECIFIED",
              "INSTANCE_TYPE_JIRA",
              "INSTANCE_TYPE_GITLAB",
              "INSTANCE_TYPE_JENKINS",
              "INSTANCE_TYPE_SONARQUBE",
              "INSTANCE_TYPE_TESTLINK",
              "INSTANCE_TYPE_NEXUS"
            ],
            "default": "INSTANCE_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Toolchain_AdminDeleteInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string",
                  "description": "If it is an administrator operation, it does not need to be filled in."
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}/resources": {
      "get": {
        "operationId": "Toolchain_AdminListToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "used for fuzzy query based on project name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RESOURCE_TYPE_UNSPECIFIED",
              "RESOURCE_TYPE_JIRA_PROJECT",
              "RESOURCE_TYPE_GITLAB_PROJECT",
              "RESOURCE_TYPE_SONARQUBE",
              "RESOURCE_TYPE_TESTLINK_PROJECT",
              "RESOURCE_TYPE_NEXUS_REPOSITORY"
            ],
            "default": "RESOURCE_TYPE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}/resources/{resourceId}:bind": {
      "post": {
        "operationId": "Toolchain_AdminBindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}/resources/{resourceId}:unbind": {
      "post": {
        "operationId": "Toolchain_AdminUnbindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnbindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}:sync": {
      "post": {
        "operationId": "Toolchain_AdminSyncToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string",
                  "description": "If it is an administrator operation, it does not need to be filled in."
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials": {
      "get": {
        "summary": "Deprecated, remove in v0.25.0, use credential service instead",
        "operationId": "Credentials_ListCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1ListCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "name",
            "description": "The filter of the credential, fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Deprecated, remove in v0.25.0, use credential service instead",
        "operationId": "Credentials_CreateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace id of the credential.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credentialName": {
                  "type": "string",
                  "description": "The credential_name of the credential."
                },
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apipipelinev1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1BasicCredential"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                }
              }
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials/{credentialName}": {
      "get": {
        "summary": "Deprecated, remove in v0.25.0, use credential service instead",
        "operationId": "Credentials_GetCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deprecated, remove in v0.25.0, use credential service instead",
        "operationId": "Credentials_DeleteCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "Deprecated, remove in v0.25.0, use credential service instead",
        "operationId": "Credentials_UpdateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apipipelinev1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1BasicCredential",
                  "title": "+optional"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                }
              },
              "description": "The request for the update credential."
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/all_projects": {
      "get": {
        "operationId": "GitLab_ListWorkspaceBindGitLabProjectList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceBindGitLabProjectListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "description": "used to query the source of toolchain integration.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "WORKSPACE",
              "ADMINISTRATOR"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "connectStatus",
            "description": "used to filter based on connection status.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/{toolchainId}/credential": {
      "get": {
        "operationId": "GitLab_GetGitlabCredentialName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetGitlabCredentialNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/{toolchainId}/projects/{projectId}/branches": {
      "get": {
        "operationId": "GitLab_ListGitlabProjectBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGitlabProjectBranchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "GitLab_CreateGitlabBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GitlabBranch"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/{toolchainId}/projects/{projectId}/details": {
      "get": {
        "operationId": "GitLab_GetGitlabProjectDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GitlabProjectDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/{toolchainId}/projects/{projectId}/refs": {
      "get": {
        "operationId": "GitLab_ListGitlabAllBranchesAndTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGitlabAllBranchesAndTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/{toolchainId}/projects/{projectId}/tags": {
      "get": {
        "operationId": "GitLab_ListGitlabProjectTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGitlabProjectTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "GitLab_CreateGitlabTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GitlabTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitreferences": {
      "get": {
        "operationId": "Pipelines_ListGitReferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1ListGitReferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo.toolchainId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "repo.url",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo.credentialId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo.resourceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/grafana_dashboard": {
      "get": {
        "operationId": "Pipelines_GrafanaDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineMetricsDashboardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/groups": {
      "get": {
        "operationId": "Pipelines_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Pipelines_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Group"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/groups/{id}": {
      "delete": {
        "operationId": "Pipelines_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/jira/all_projects": {
      "get": {
        "operationId": "Jira_ListWorkspaceBindJiraProjectList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceBindJiraProjectListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Jira"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/jira/{jiraId}/projects/{projectId}/issues": {
      "get": {
        "operationId": "Jira_ListJiraProjectIssues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJiraProjectIssuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jiraId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "type filter used to eliminate issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "creator",
            "description": "creator used to filter the issues created by this person",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assignee",
            "description": "assignee of issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "description": "priority of issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status of issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "JIRA_ISSUE_SORT_BY_UNSPECIFIED",
              "JIRA_ISSUE_SORT_BY_TYPE",
              "JIRA_ISSUE_SORT_BY_STATUS",
              "JIRA_ISSUE_SORT_BY_PRIORITY",
              "JIRA_ISSUE_SORT_BY_CREATOR",
              "JIRA_ISSUE_SORT_BY_ASSIGNEE",
              "JIRA_ISSUE_SORT_BY_UPDATED"
            ],
            "default": "JIRA_ISSUE_SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Jira"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/jira/{jiraId}/projects/{projectId}/keywords": {
      "get": {
        "operationId": "Jira_ListJiraProjectsSearchKeywords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJiraSearchKeywordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jiraId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Jira"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/nodelabels": {
      "get": {
        "operationId": "Pipelines_ListJenkinsNodeLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodeLabelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines": {
      "get": {
        "operationId": "Pipelines_ListPipelines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPipelinesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the pipeline list order reference.\n\n - PIPELINE_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - PIPELINE_FIELD_NAME: Sort result by name.\n - PIPELINE_CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_LAST_RUN_TIME: sort result by last run time",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_SORT_BY_UNSPECIFIED",
              "PIPELINE_FIELD_NAME",
              "PIPELINE_CREATED_AT",
              "PIPELINE_LAST_RUN_TIME"
            ],
            "default": "PIPELINE_SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "searchName",
            "description": "search is used to obfuscate the names in the query pipeline.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchBuildType",
            "description": "Search the build type in the query pipeline.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_TYPE_UNSPECIFIED",
              "PIPELINE_TYPE_CUSTOM",
              "PIPELINE_TYPE_SCM",
              "PIPELINE_TYPE_TEMPLATE",
              "PIPELINE_TYPE_MULTI_BRANCH"
            ],
            "default": "PIPELINE_TYPE_UNSPECIFIED"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "weather",
            "description": " - PIPELINE_WEATHER_SUNNY: No recent builds failed.\n - PIPELINE_WEATHER_PARTIALLY: 80% of recent builds success.\n - PIPELINE_WEATHER_CLOUDY: 60% of recent builds success.\n - PIPELINE_WEATHER_RAINING: 40% of recent builds success.\n - PIPELINE_WEATHER_STORM: All recent builds failed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_WEATHER_UNSPECIFIED",
              "PIPELINE_WEATHER_SUNNY",
              "PIPELINE_WEATHER_PARTIALLY",
              "PIPELINE_WEATHER_CLOUDY",
              "PIPELINE_WEATHER_RAINING",
              "PIPELINE_WEATHER_STORM"
            ],
            "default": "PIPELINE_WEATHER_UNSPECIFIED"
          },
          {
            "name": "lastRunState",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_UNSPECIFIED",
              "QUEUE",
              "RUNNING",
              "SUCCESS",
              "FAILED",
              "CANCELED",
              "ERROR",
              "NOT_BUILT",
              "PAUSED",
              "SKIPPED"
            ],
            "default": "STATUS_UNSPECIFIED"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Pipelines_CreatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the pipeline."
                },
                "description": {
                  "type": "string",
                  "title": "The description of the pipeline.\n+optional"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1ParameterDefinition"
                  },
                  "title": "The parameters defines pipeline parameters when build, you can override the default value\nIt can be left empty and filled later.\n+optional"
                },
                "buildConfig": {
                  "$ref": "#/definitions/v1alpha1BuildConfig",
                  "title": "The build config for pipeline\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1PipelineType",
                  "title": "The type of pipeline"
                },
                "triggers": {
                  "$ref": "#/definitions/v1alpha1BuildTrigger",
                  "title": "The build triggers for pipeline"
                },
                "pipelineScm": {
                  "$ref": "#/definitions/v1alpha1PipelineScm",
                  "title": "Configuration to create a pipeline based on a codebase"
                },
                "template": {
                  "$ref": "#/definitions/v1alpha1TemplateRef"
                },
                "pipelineMultiBranch": {
                  "$ref": "#/definitions/v1alpha1PipelineMultiBranch",
                  "title": "PipelineMultiBranch the definition of multi branch pipeline"
                },
                "force": {
                  "type": "boolean",
                  "title": "whether forced to sync a pipeline, used for this case: a pipeline already exists in jenkins, force updates it"
                },
                "genericWebhookTrigger": {
                  "$ref": "#/definitions/v1alpha1GenericWebhookTrigger",
                  "title": "The Generic Webhook Trigger"
                },
                "manualWebhookTrigger": {
                  "$ref": "#/definitions/v1alpha1ManualWebhookTrigger"
                },
                "group": {
                  "$ref": "#/definitions/v1alpha1Group"
                }
              },
              "description": "Request message for the `CreatePipeline` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}": {
      "get": {
        "operationId": "Pipelines_GetPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The description of the pipeline.\n+optional"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1ParameterDefinition"
                  },
                  "title": "The build parameters\n+optional"
                },
                "buildConfig": {
                  "$ref": "#/definitions/v1alpha1BuildConfig",
                  "title": "build config for pipeline\n+optional"
                },
                "triggers": {
                  "$ref": "#/definitions/v1alpha1BuildTrigger",
                  "title": "The build triggers for pipeline"
                },
                "pipelineScm": {
                  "$ref": "#/definitions/v1alpha1PipelineScm",
                  "title": "Configuration to create a pipeline based on a codebase"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1PipelineType",
                  "title": "The type of pipeline"
                },
                "pipelineMultiBranch": {
                  "$ref": "#/definitions/v1alpha1PipelineMultiBranch",
                  "title": "The multi branch pipeline"
                },
                "genericWebhookTrigger": {
                  "$ref": "#/definitions/v1alpha1GenericWebhookTrigger",
                  "title": "The Generic Webhook Trigger"
                },
                "manualWebhookTrigger": {
                  "$ref": "#/definitions/v1alpha1ManualWebhookTrigger"
                },
                "group": {
                  "$ref": "#/definitions/v1alpha1Group"
                }
              },
              "description": "Request message for the `UpdatePipeline` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/branches": {
      "get": {
        "operationId": "Pipelines_GetBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetBranchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/code_analyze_result": {
      "get": {
        "operationId": "Pipelines_GetCodeAnalyzeResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCodeAnalyzeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/jenkinsfile": {
      "put": {
        "operationId": "Pipelines_UpdatePipelineJenkinsfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "jenkinsfile": {
                  "type": "string",
                  "title": "The jenksinfile defines how pipeline runs, such as nodes, steps and agent.\n+optional"
                }
              },
              "description": "Request message for the `UpdatePipelineJenkinsfile` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/jenkinsjson": {
      "get": {
        "operationId": "Pipelines_GetJenkinsJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetJenkinsJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdateJenkinsJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateJenkinsJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "json": {
                  "type": "string",
                  "title": "The json content"
                }
              },
              "title": "UpdateJenkinsJSONRequest the request parameter for update jenkinsjson"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/name": {
      "put": {
        "operationId": "Pipelines_UpdatePipelineName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newName": {
                  "type": "string",
                  "description": "The newly updated name of the pipeline, no changes made if left blank."
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/parameters": {
      "get": {
        "operationId": "Pipelines_GetBuildParameter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetBuildParameterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs": {
      "get": {
        "operationId": "Pipelines_ListPipelineRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPipelineRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_RUN_ID: Sort result by pipelineRunID.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "CREATED_AT",
              "PIPELINE_RUN_ID"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "searchRunId",
            "description": "search is used to accurately query the id of the pipeline running record.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}": {
      "get": {
        "operationId": "Pipelines_GetPipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelineRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeletePipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/artifacts": {
      "get": {
        "operationId": "Pipelines_GetPipelineArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/junit_report": {
      "get": {
        "operationId": "Pipelines_GetJunitReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetJunitReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "result",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "JUNIT_RESULT_UNSPECIFIED",
              "JUNIT_RESULT_PASSED",
              "JUNIT_RESULT_SKIPPED",
              "JUNIT_RESULT_FAILED",
              "JUNIT_RESULT_FIXED",
              "JUNIT_RESULT_REGRESSION",
              "JUNIT_RESULT_EXISTING_FAILED"
            ],
            "default": "JUNIT_RESULT_UNSPECIFIED"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/junit_summary": {
      "get": {
        "operationId": "Pipelines_GetJunitReportSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetJunitSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/log": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunSteps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunStepsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps/{stepId}/log": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunStepLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunStepLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stepId",
            "description": "The step of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "start",
            "description": "The start location of log",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps/{stepId}:abort": {
      "post": {
        "operationId": "Pipelines_SubmitInputToAbort",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SubmitInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stepId",
            "description": "The step of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputId": {
                  "type": "string",
                  "title": "The id of input"
                }
              },
              "title": "SubmitInputRequest the quest parameter for approval/abort input"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps/{stepId}:process": {
      "post": {
        "operationId": "Pipelines_SubmitInputToProceed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SubmitInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stepId",
            "description": "The step of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputId": {
                  "type": "string",
                  "title": "The id of input"
                }
              },
              "title": "SubmitInputRequest the quest parameter for approval/abort input"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}:restart": {
      "post": {
        "operationId": "Pipelines_RestartPipelineRunNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RestartPipelineNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run, the node type must be STAGE",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}:cancel": {
      "post": {
        "operationId": "Pipelines_CancelPipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelineRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the `CancelPipelineRun` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}:replay": {
      "post": {
        "operationId": "Pipelines_ReplayPipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelineRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the `ReplayPipelineRun` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/scan": {
      "post": {
        "operationId": "Pipelines_ScanMultiBranchPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ScanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/scanlog": {
      "get": {
        "operationId": "Pipelines_GetScanlogOfMultiBranchPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetScanlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}:sync": {
      "post": {
        "summary": "sync pipeline from database to jenkins.\n if a pipeline is not existed in jenkins, create it. if exist, update it.",
        "operationId": "Pipelines_SyncPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SyncPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}:toJenkinsfile": {
      "post": {
        "operationId": "Pipelines_JSONToJenkinsfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1JSONToJenkinsFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "json": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}:toJson": {
      "post": {
        "operationId": "Pipelines_JenkinsfileToJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1JenkinsFileToJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "jenkinsfile": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{pipeline}/token": {
      "get": {
        "operationId": "Pipelines_GetPipelineArtifactsDownloadToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineArtifactsDownloadTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines:replicate": {
      "post": {
        "operationId": "Pipelines_ReplicatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourcePipelineName": {
                  "type": "string",
                  "description": "The source pipeline name."
                },
                "destPipelineName": {
                  "type": "string",
                  "description": "The destination pipeline name."
                }
              },
              "title": "ReplicatePipelineRequest the request parameter for copy job"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/plugins": {
      "get": {
        "operationId": "PluginService_ListWorkspacePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspacePipelinePluginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyMetadata",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showHidden",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PluginSource_UNSPECIFIED",
              "PluginSource_BUILTIN",
              "PluginSource_CUSTOM"
            ],
            "default": "PluginSource_UNSPECIFIED"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PluginCategory_UNSPECIFIED",
              "PluginCategory_Others",
              "PluginCategory_Build",
              "PluginCategory_Test",
              "PluginCategory_Security",
              "PluginCategory_Release",
              "PluginCategory_Deploy",
              "PluginCategory_Command",
              "PluginCategory_General",
              "PluginCategory_Repository",
              "PluginCategory_Quality"
            ],
            "default": "PluginCategory_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": " - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PluginStatus_UNSPECIFIED",
              "PluginStatus_Enable",
              "PluginStatus_Disable"
            ],
            "default": "PluginStatus_UNSPECIFIED"
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/plugins/{name}/versions/{version}": {
      "get": {
        "operationId": "PluginService_GetWorkspacePipelinePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelinePlugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PluginService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/sonarqube/all_projects": {
      "get": {
        "operationId": "Sonarqube_ListBindedSonarqube",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBindedSonarqubeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sonarqube"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/sonarqube/{toolchainId}/credential": {
      "get": {
        "operationId": "Sonarqube_GetSonarqubeCredentialName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetSonarqubeCredentialNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Sonarqube"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/templates": {
      "get": {
        "operationId": "Pipelines_ListTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "type",
            "description": "Type filters the type of response templates.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TEMPLATE_TYPE_UNSPECIFIED",
              "TEMPLATE_TYPE_BUILTIN",
              "TEMPLATE_TYPE_CUSTOM"
            ],
            "default": "TEMPLATE_TYPE_UNSPECIFIED"
          },
          {
            "name": "metadataOnly",
            "description": "MetadataOnly indicates whether to return parameter definitions and jenkinsfile.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "template name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Pipelines_CreateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "spec": {
                  "type": "string",
                  "title": "spec describes the parameter definitions and jenkinsfile in yaml"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/templates/{name}": {
      "get": {
        "operationId": "Pipelines_GetTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "raw",
            "description": "raw specifies whether return the original spec instead of parsed json only",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeleteTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "spec": {
                  "type": "string",
                  "title": "spec describes the parameter definitions and jenkinsfile in yaml"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/token": {
      "post": {
        "operationId": "Pipelines_CheckWebhookToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains": {
      "get": {
        "operationId": "Toolchain_ListInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "types",
            "description": "types that need to be queried,if empty all types,",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSTANCE_TYPE_UNSPECIFIED",
                "INSTANCE_TYPE_JIRA",
                "INSTANCE_TYPE_GITLAB",
                "INSTANCE_TYPE_JENKINS",
                "INSTANCE_TYPE_SONARQUBE",
                "INSTANCE_TYPE_TESTLINK",
                "INSTANCE_TYPE_NEXUS"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Public interface",
        "operationId": "Toolchain_CreateToolchainInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                },
                "jiraConfig": {
                  "$ref": "#/definitions/v1alpha1JiraConfig"
                },
                "gitlabConfig": {
                  "$ref": "#/definitions/v1alpha1GitLabConfig"
                },
                "jenkinsConfig": {
                  "$ref": "#/definitions/v1alpha1JenkinsConfig"
                },
                "sonarqubeConfig": {
                  "$ref": "#/definitions/v1alpha1SonarqubeConfig"
                },
                "testlinkConfig": {
                  "$ref": "#/definitions/v1alpha1TestlinkConfig"
                },
                "nexusConfig": {
                  "$ref": "#/definitions/v1alpha1NexusConfig"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}": {
      "get": {
        "operationId": "Toolchain_GetInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "INSTANCE_TYPE_UNSPECIFIED",
              "INSTANCE_TYPE_JIRA",
              "INSTANCE_TYPE_GITLAB",
              "INSTANCE_TYPE_JENKINS",
              "INSTANCE_TYPE_SONARQUBE",
              "INSTANCE_TYPE_TESTLINK",
              "INSTANCE_TYPE_NEXUS"
            ],
            "default": "INSTANCE_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Toolchain_DeleteInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}/resources": {
      "get": {
        "summary": "Gitlab related interfaces",
        "operationId": "Toolchain_ListToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "used for fuzzy query based on project name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RESOURCE_TYPE_UNSPECIFIED",
              "RESOURCE_TYPE_JIRA_PROJECT",
              "RESOURCE_TYPE_GITLAB_PROJECT",
              "RESOURCE_TYPE_SONARQUBE",
              "RESOURCE_TYPE_TESTLINK_PROJECT",
              "RESOURCE_TYPE_NEXUS_REPOSITORY"
            ],
            "default": "RESOURCE_TYPE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}/resources/{resourceId}:bind": {
      "post": {
        "operationId": "Toolchain_BindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}/resources/{resourceId}:unbind": {
      "post": {
        "operationId": "Toolchain_UnbindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnbindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}:sync": {
      "post": {
        "operationId": "Toolchain_SyncToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/ingressnames": {
      "get": {
        "operationId": "Rollouts_ListIngressNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1ListIngressNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/services": {
      "get": {
        "operationId": "Rollouts_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rolloutinfo/{name}": {
      "get": {
        "summary": "GetRolloutInfo returns the information for a rollout and pod/RS/analysisRun which the rollout manages.",
        "operationId": "Rollouts_GetRolloutInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RolloutInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts": {
      "get": {
        "summary": "ListRollouts lists all argo rollouts in a given namespace.",
        "operationId": "Rollouts_ListRollouts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolloutsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Name of cluster in which the namespace lives, declared when created from kpanda api.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of namespace in which the resource Rollout lives.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rolloutPhase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ROLLOUT_PHASE_UNSPECIFIED",
              "ROLLOUT_PHASE_HEALTHY",
              "ROLLOUT_PHASE_DEGRADED",
              "ROLLOUT_PHASE_PROCESSING",
              "ROLLOUT_PHASE_PAUSED",
              "ROLLOUT_PHASE_SCALEDDOWN"
            ],
            "default": "ROLLOUT_PHASE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "CreateRollout creates a argo rollout for a given workload.",
        "operationId": "Rollouts_CreateRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace."
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "workloadRef": {
                  "$ref": "#/definitions/v1alpha1WorkloadRef",
                  "description": "WorkloadRef holds a references to a workload that provides Pod template."
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of desired pods. Note this field is for Rollout not workload."
                },
                "strategy": {
                  "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
                  "description": "The deployment strategy to use to replace existing pods with new ones."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}": {
      "get": {
        "summary": "GetRollout gets the argo rollouts with a given name and namespace.",
        "operationId": "Rollouts_GetRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Name of cluster in which the namespace lives, declared when created from kpanda api.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of namespace in which the resource Rollout lives.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "DeleteRollout deletes a rollout in the namespace with a given name.",
        "operationId": "Rollouts_DeleteRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateRollout updates the spec of a argo rollout.",
        "operationId": "Rollouts_UpdateRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of desired pods. Note this field is for Rollout not workload. Leave it empty if want to keep\nthe old value. We use google warppers to fix grpc-gateway-ts does not support keyword optional"
                },
                "strategy": {
                  "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
                  "description": "The deployment strategy to use to replace existing pods with new ones."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}/containters": {
      "get": {
        "operationId": "Rollouts_ListRolloutContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolloutContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}/json": {
      "get": {
        "operationId": "Rollouts_GetRolloutJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetRolloutJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Rollouts_UpdateRolloutJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateRolloutJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}/revisions/{revision}:undo": {
      "post": {
        "summary": "UndoRollout rollbacks the workload to a previous rollout.",
        "operationId": "Rollouts_UndoRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "description": "The revision to rollback to. Default to 0 (last revision).",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                }
              },
              "description": "Rollback to a given revision."
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}:abort": {
      "post": {
        "summary": "AbortRollout stops progressing the current rollout and reverts all steps. The previous ReplicaSet will be active.",
        "operationId": "Rollouts_AbortRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}:promote": {
      "post": {
        "summary": "PromoteRollout promotes a rollout to the next step, or to end of all steps",
        "operationId": "Rollouts_PromoteRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "full": {
                  "type": "boolean",
                  "description": "Perform a full promotion, skipping analysis, pauses, and steps."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}:upgrade": {
      "post": {
        "summary": "UpgradeRollout sets a new image to a container of the workload referenced.",
        "operationId": "Rollouts_UpgradeRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "container": {
                  "type": "string",
                  "description": "Name of container of which image will be update."
                },
                "image": {
                  "type": "string",
                  "description": "New image name to set for the container, keep it unchanged if left it empty."
                }
              },
              "description": "Set rollout images."
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/json": {
      "get": {
        "operationId": "Rollouts_GetWorkloadJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1WorkloadsJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workloadType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_TYPE_UNSPECIFIED",
              "WORKLOAD_TYPE_DEPLOYMENT",
              "WORKLOAD_TYPE_STATEFUL_SET",
              "WORKLOAD_TYPE_DAEMON_SET",
              "WORKLOAD_TYPE_JOB",
              "WORKLOAD_TYPE_CRONJOB"
            ],
            "default": "WORKLOAD_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "CanaryStrategyAnalysis": {
      "type": "object",
      "properties": {
        "templateNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Name of templates to be used in AnalysisRuns."
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1Argument"
          },
          "description": "Args the arguments that will be added to the AnalysisRuns."
        }
      }
    },
    "CreateWorkloadByHelmRequestCharts": {
      "type": "object",
      "properties": {
        "chartName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "values": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DNSOptionsStrategy": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "CLUSTER_FIRST",
        "CLUSTER_FIRST_WITH_HOST_NET",
        "NONE"
      ],
      "default": "DEFAULT"
    },
    "DataStorageDataVolume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "subPath": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "DataStorageNodePathMapping": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DataStorageNodePathMappingType"
        },
        "key": {
          "type": "string",
          "title": "if mode is MODE_EMPTY_DIR: key is \"\"\nif mode is MODE_HOST_PATH: key is  host path\nif mode is MODE_SECRET: key is secret name\nif mode is MODE_CONFIG_MAP: key is configmap name"
        },
        "mountPath": {
          "type": "string"
        },
        "subPath": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "DataStorageNodePathMappingType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_EMPTY_DIR",
        "TYPE_HOST_PATH",
        "TYPE_SECRET",
        "TYPE_CONFIG_MAP"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "EnvironmentVariableReference": {
      "type": "object",
      "properties": {
        "variableName": {
          "type": "string",
          "title": "name of variable"
        },
        "name": {
          "type": "string",
          "title": "name like container_name/configmap_name/secret_name"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "GetApplicationComponentLogResponseData": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "title": "the log of the pod container's log"
        },
        "timeStamp": {
          "type": "string",
          "title": "the time stamp the pod container's log"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "the labels of log"
        }
      },
      "title": "the data of log"
    },
    "HealthInspectionPublicInspectionBody": {
      "type": "object",
      "properties": {
        "inspectionMethod": {
          "$ref": "#/definitions/PublicInspectionBodyInspectionMethod"
        },
        "httpCheck": {
          "$ref": "#/definitions/v1alpha1HTTPRequest",
          "title": "There is only one about http_check,tcp_check,command_check\ntheir presence strict correspondence inspection method"
        },
        "tcpCheck": {
          "$ref": "#/definitions/PublicInspectionBodyTCPCheck"
        },
        "commandCheck": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "advancedSetting": {
          "$ref": "#/definitions/PublicInspectionBodyAdvancedSetting"
        }
      }
    },
    "HelmRepoMetadataOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "controller": {
          "type": "boolean"
        }
      }
    },
    "HelmRepoSpec": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "clientSecret": {
          "$ref": "#/definitions/HelmRepoSpecSecretReference"
        }
      }
    },
    "HelmRepoSpecSecretReference": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "LifeCycleCommandLineScript": {
      "type": "object",
      "properties": {
        "runCommand": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LifeCycleCommandProcessingType": {
      "type": "string",
      "enum": [
        "COMMAND_PROCESSING_TYPE_UNSPECIFIED",
        "COMMAND_PROCESSING_TYPE_SCRIPT",
        "COMMAND_PROCESSING_TYPE_HTTP"
      ],
      "default": "COMMAND_PROCESSING_TYPE_UNSPECIFIED"
    },
    "LifeCyclePreAndPostStartCommand": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/LifeCycleCommandProcessingType"
        },
        "script": {
          "$ref": "#/definitions/LifeCycleCommandLineScript"
        },
        "httpRequest": {
          "$ref": "#/definitions/v1alpha1HTTPRequest"
        }
      }
    },
    "LifeCycleStartCommand": {
      "type": "object",
      "properties": {
        "runCommand": {
          "type": "string"
        },
        "operatingParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListHelmChartsRequestCategory": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "OTHERS",
        "STORAGE",
        "NETWORKING",
        "MONITORING",
        "DATABASE"
      ],
      "default": "UNSPECIFIED"
    },
    "ListHelmChartsResponseCategoryItem": {
      "type": "object",
      "properties": {
        "othersNums": {
          "type": "integer",
          "format": "int32"
        },
        "storageNums": {
          "type": "integer",
          "format": "int32"
        },
        "networkNums": {
          "type": "integer",
          "format": "int32"
        },
        "monitorNums": {
          "type": "integer",
          "format": "int32"
        },
        "databaseNums": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListPipelineRunsRequestPipelineRunSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "CREATED_AT",
        "PIPELINE_RUN_ID"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_RUN_ID: Sort result by pipelineRunID."
    },
    "PersistentVolumeClaimInfoAccessMode": {
      "type": "string",
      "enum": [
        "ACCESS_MODE_UNKNOWN",
        "READ_WRITE_ONCE",
        "READ_ONLY_MANY",
        "READ_WRITE_MANY",
        "READ_WRITE_ONCE_POD"
      ],
      "default": "ACCESS_MODE_UNKNOWN",
      "description": "- READ_WRITE_ONCE: ReadWriteOnce means the volume can be mounted as read-write by a single node\n - READ_ONLY_MANY: ReadOnlyMany means the volume can be mounted read-only by many nodes\n - READ_WRITE_MANY: ReadWriteMany means the volume can be mounted as read-write by many nodes\n - READ_WRITE_ONCE_POD: the volume can be mounted as read-write by a single Pod. Use ReadWriteOncePod \naccess mode if you want to ensure that only one pod across whole cluster can read \nthat PVC or write to it. This is only supported for CSI volumes and Kubernetes \nversion 1.22+.",
      "title": "The actual access mode the volume backing the PVC has.\nmore details: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"
    },
    "PipelineArtifactLinks": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "class": {
          "type": "string"
        }
      }
    },
    "PublicInspectionBodyAdvancedSetting": {
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "requestHeader": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PublicInspectionBodyInspectionMethod": {
      "type": "string",
      "enum": [
        "INSPECTION_METHOD_UNSPECIFIED",
        "INSPECTION_METHOD_HTTP",
        "INSPECTION_METHOD_TCP",
        "INSPECTION_METHOD_COMMAND"
      ],
      "default": "INSPECTION_METHOD_UNSPECIFIED"
    },
    "PublicInspectionBodyTCPCheck": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "StatusRepoPhase": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "UNKNOWN",
        "ACTIVE"
      ],
      "default": "UNSPECIFIED"
    },
    "StorageClassReclaimPolicy": {
      "type": "string",
      "enum": [
        "RECLAIM_AOLICY_UNSPECIFIED",
        "Delete",
        "Retain"
      ],
      "default": "RECLAIM_AOLICY_UNSPECIFIED",
      "description": " - Delete: PersistentVolumeReclaimDelete means the volume will be deleted from Kubernetes on release from its claim.\nThe volume plugin must support Deletion.\n - Retain: PersistentVolumeReclaimRetain means the volume will be left in its current phase (Released) for manual reclamation by the administrator.\nThe default policy is Retain."
    },
    "StorageClassVolumeBindingMode": {
      "type": "string",
      "enum": [
        "VOLUME_BINDING_MODE_UNSPECIFIED",
        "Immediate",
        "WaitForFirstConsumer"
      ],
      "default": "VOLUME_BINDING_MODE_UNSPECIFIED",
      "description": " - Immediate: VolumeBindingImmediate indicates that PersistentVolumeClaims should be\nimmediately provisioned and bound.  This is the default mode.\n - WaitForFirstConsumer: VolumeBindingWaitForFirstConsumer indicates that PersistentVolumeClaims\nshould not be provisioned and bound until the first Pod is created that\nreferences the PeristentVolumeClaim.  The volume provisioning and\nbinding will occur during Pod scheduing."
    },
    "UpgradeStrategyUpgradeType": {
      "type": "string",
      "enum": [
        "ROLLING_UPDATE",
        "RECREATE"
      ],
      "default": "ROLLING_UPDATE"
    },
    "aggregationv1alpha1CreateAggregationResourceRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance the specified propagation policy belongs to."
        },
        "namespace": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1alpha1AggregationResource"
        },
        "gvr": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GVR"
          },
          "description": "GVR represents the resource gvr of CustomResources."
        }
      }
    },
    "amambaioapicorev1alpha1Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the namespace."
        },
        "cluster": {
          "type": "string",
          "title": "Which cluster does it belong to"
        },
        "workspaceId": {
          "type": "string",
          "title": "Which workspace  does it belong to"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "the created timestamp of the namespace."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the labels of the namespace."
        },
        "resourceQuota": {
          "$ref": "#/definitions/corev1alpha1ResourceQuota",
          "description": "resource quota of the namespace."
        }
      }
    },
    "amambaioapitypesObjectMeta": {
      "type": "object",
      "properties": {
        "workspace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "deletedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "amambaioapitypesPage": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Page is for data paging."
    },
    "amambaioapitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "FIELD_NAME",
        "CREATED_AT",
        "CLUSTER",
        "NAMESPACE"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace."
    },
    "amambaioapitypesSortDir": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC",
      "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order."
    },
    "apiapplicationv1alpha1Affinity": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/v1alpha1SchedulingStrategyCondition"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "topologicalDomain": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "selector": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SchedulingStrategySelector"
          }
        }
      }
    },
    "apiapplicationv1alpha1ClusterStatus": {
      "type": "string",
      "enum": [
        "CLUSTER_STATUS_UNSPECIFIED",
        "CLUSTER_STATUS_RUNNING",
        "CLUSTER_STATUS_NOT_RUNNING",
        "CLUSTER_STATUS_UNKNOWN"
      ],
      "default": "CLUSTER_STATUS_UNSPECIFIED"
    },
    "apiapplicationv1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
        },
        "image": {
          "type": "string",
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "resources": {
          "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
          "description": "Resource requirements for the container, including CPU/Memory limits and requests."
        }
      }
    },
    "apiapplicationv1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Container"
          },
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Container"
          },
          "description": "List of initialization containers belonging to the pod."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Condition"
          }
        },
        "selector": {
          "$ref": "#/definitions/applicationv1alpha1Selector"
        }
      }
    },
    "apiapplicationv1alpha1DeploymentTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/apiapplicationv1alpha1ClusterStatus"
        }
      }
    },
    "apiapplicationv1alpha1GetHelmChartsResponse": {
      "type": "object",
      "properties": {
        "chart": {
          "$ref": "#/definitions/v1alpha1HelmCharts"
        }
      }
    },
    "apiapplicationv1alpha1GitRepository": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiapplicationv1alpha1ListDeployTargetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1DeploymentTarget"
          }
        }
      }
    },
    "apiapplicationv1alpha1ListIngressNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "apiapplicationv1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ioapiapplicationv1alpha1Repository"
          },
          "description": "Items is a list of repositories."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListRepositoriesResponse returns a list of projects of a registry"
    },
    "apiapplicationv1alpha1ListServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1Service"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "apiapplicationv1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/v1alpha1SchedulingStrategyCondition"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SchedulingStrategySelector"
          }
        }
      }
    },
    "apiapplicationv1alpha1Protocol": {
      "type": "string",
      "enum": [
        "PROTOCOL_UNSPECIFIED",
        "PROTOCOL_TCP",
        "PROTOCOL_UDP",
        "PROTOCOL_SCTP"
      ],
      "default": "PROTOCOL_UNSPECIFIED"
    },
    "apiapplicationv1alpha1Resource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion of the resource."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the resource."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ResourcePhase",
          "description": "Phase stands for the resource phase."
        }
      },
      "title": "Resource belongs to ReleaseStatus"
    },
    "apiapplicationv1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "cpuRequest": {
          "type": "number",
          "format": "double",
          "title": "CPU request in unit cores"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double",
          "title": "CPU limit in unit cores"
        },
        "memoryRequest": {
          "type": "number",
          "format": "double",
          "title": "Memory request in unit bytes"
        },
        "memoryLimit": {
          "type": "number",
          "format": "double",
          "title": "Memory limit in unit bytes"
        },
        "gpuQuota": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "gpuType": {
          "type": "string"
        }
      }
    },
    "apiapplicationv1alpha1ServicePort": {
      "type": "object",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/apiapplicationv1alpha1Protocol",
          "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP."
        },
        "name": {
          "type": "string",
          "description": "The name of this port within the service. This must be a DNS_LABEL. All\nports within a ServiceSpec must have unique names. When considering the\nendpoints for a Service, this must match the 'name' field in the\nEndpointPort. Optional if only one ServicePort is defined on this service."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "The port that will be exposed by this service"
        },
        "targetPort": {
          "type": "string",
          "description": "Number or name of the port to access on the pods targeted by the service.\ncorev1.ServicePort.TargetPort could be number or string. Number must be\nin the range 1 to 65535. Name must be an IANA_SVC_NAME."
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "title": "The port on each node on which this service is exposed when type is\nNodePort or LoadBalancer. Usually assigned by the system. If a value is\nspecified, in-range, and not in use it will be used, otherwise the\noperation will fail. If not specified, a port will be allocated if this\nService requires one. If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped when\nupdating a Service to no longer need it (e.g. changing type from NodePort\nto ClusterIP). More info:\nhttps://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
        }
      }
    },
    "apiapplicationv1alpha1ServiceSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apiapplicationv1alpha1ServiceType",
          "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1ServicePort"
          },
          "description": "The list of ports that are exposed by this service."
        },
        "loadBalancerIp": {
          "type": "string",
          "description": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system."
        },
        "externalTrafficPolicy": {
          "$ref": "#/definitions/v1alpha1ExternalTrafficPolicy",
          "description": "externalTrafficPolicy denotes if this Service desires to route external\ntraffic to node-local or cluster-wide endpoints. \"Local\" preserves the\nclient source IP and avoids a second hop for LoadBalancer and Nodeport\ntype services, but risks potentially imbalanced traffic spreading.\n\"Cluster\" obscures the client source IP and may cause a second hop to\nanother node, but should have good overall load-spreading."
        },
        "sessionAffinity": {
          "$ref": "#/definitions/v1alpha1SessionAffinity",
          "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None."
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/applicationv1alpha1SessionAffinityConfig",
          "description": "sessionAffinityConfig contains the configurations of session affinity."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "apiapplicationv1alpha1ServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_UNSPECIFIED",
        "CLUSTER_IP",
        "NODE_PORT",
        "LOAD_BALANCER"
      ],
      "default": "SERVICE_TYPE_UNSPECIFIED"
    },
    "apiapplicationv1alpha1WorkloadType": {
      "type": "string",
      "enum": [
        "WORKLOAD_TYPE_UNSPECIFIED",
        "WORKLOAD_TYPE_DEPLOYMENT",
        "WORKLOAD_TYPE_STATEFUL_SET",
        "WORKLOAD_TYPE_DAEMON_SET",
        "WORKLOAD_TYPE_JOB",
        "WORKLOAD_TYPE_CRONJOB"
      ],
      "default": "WORKLOAD_TYPE_UNSPECIFIED"
    },
    "apiapplicationv1alpha1WorkloadsJSON": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "apiappsv1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1PodTemplateSpec",
          "title": "Template describes the data a pod should have when created from a template"
        },
        "strategy": {
          "$ref": "#/definitions/kairshipioapitypesUpdateStrategy",
          "description": "Strategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the deployment is paused."
        }
      },
      "description": "DeploymentSpec specifies the state of a Deployment."
    },
    "apicloudshellv1alpha1LocalSecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        }
      },
      "description": "LocalSecretReference is a reference to a secret within the enclosing\nnamespace."
    },
    "apiclusterv1alpha1Cluster": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ClusterSpec",
          "description": "ClusterSpec describes how the cluster execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/apiclusterv1alpha1ClusterStatus",
          "description": "ClusterStatus contains the cluster status."
        }
      }
    },
    "apiclusterv1alpha1ClusterStatus": {
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "KubernetesVersion represents version of the member cluster."
        },
        "kubeSystemID": {
          "type": "string",
          "description": "KubeSystemId represents the uuid of sub cluster kube-system namespace."
        },
        "serviceCIDR": {
          "type": "string",
          "description": "ServiceCIDR represents the service network CIDR."
        },
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod network CIDR."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase",
          "description": "Condition represents the status of the member cluster."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "The cpu usage of the member cluster."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "The memory usage of the member cluster."
        },
        "proxyMode": {
          "type": "string",
          "description": "ProxyMode represents the kube-proxy mode of the member cluster."
        },
        "resourceSummary": {
          "$ref": "#/definitions/v1alpha1ClusterResourceSummary",
          "description": "ResourceSummary represents the resource of the member cluster."
        }
      }
    },
    "apiclusterv1alpha1LocalSecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace for the resource being referenced."
        },
        "resourceVersion": {
          "type": "string",
          "description": "ResourceVersion is the version of resource being referenced."
        }
      },
      "title": "SecretRef represents the secret contains mandatory credentials to access the member cluster.\nThe secret should hold credentials as follows:\n- secret.data.token\n- secret.data.caBundle\n+optional"
    },
    "apicorev1alpha1Cluster": {
      "type": "object",
      "properties": {
        "kubeSystemId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "cluster name"
        },
        "aliasName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "cluster creation time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "cluster labels"
        },
        "status": {
          "$ref": "#/definitions/apiapplicationv1alpha1ClusterStatus",
          "title": "cluster status"
        }
      }
    },
    "apicorev1alpha1ConfigMap": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the configuration data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nValues with non-UTF-8 byte sequences must use the BinaryData field.\nThe keys stored in Data must not overlap with the keys in\nthe BinaryData field, this is enforced during validation process.\n+optional"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "BinaryData contains the binary data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range.\nThe keys stored in BinaryData must not overlap with the ones in\nthe Data field, this is enforced during validation process.\nUsing this field will require 1.10+ apiserver and\nkubelet.\n+optional"
        }
      },
      "description": "ConfigMap holds configuration data for pods to consume."
    },
    "apicorev1alpha1DeploymentTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/apiapplicationv1alpha1ClusterStatus"
        }
      }
    },
    "apicorev1alpha1ListConfigMapsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the configmap belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "OrderBy determines the list order."
        },
        "name": {
          "type": "string",
          "title": "name is used for query.\n+optional"
        },
        "labelSelector": {
          "type": "string",
          "title": "LabelSelector is the format after labels.FormatLabels used to filter"
        },
        "fieldSelector": {
          "type": "string",
          "title": "FieldSelector is the format after labels.FormatLabels used to filter"
        }
      },
      "description": "It returns the list of Cluster ConfigMaps information."
    },
    "apicorev1alpha1ListDeployTargetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1DeploymentTarget"
          }
        }
      }
    },
    "apicredentialv1alpha1BasicCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the credential."
        },
        "password": {
          "type": "string",
          "description": "The password of the credential."
        }
      }
    },
    "apicredentialv1alpha1Credential": {
      "type": "object",
      "properties": {
        "baseInfo": {
          "$ref": "#/definitions/apicredentialv1alpha1CredentialBaseInfo",
          "description": "The base info of the credential."
        },
        "basicCredential": {
          "$ref": "#/definitions/apicredentialv1alpha1BasicCredential",
          "title": "+optional"
        },
        "kubeconfigCredential": {
          "$ref": "#/definitions/apicredentialv1alpha1KubeconfigCredential",
          "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
        },
        "secretTextCredential": {
          "$ref": "#/definitions/apicredentialv1alpha1SecretTextCredential",
          "title": "The SecretTextCredential is SecretText type of credential basic info"
        },
        "sshCredential": {
          "$ref": "#/definitions/v1alpha1SSHKeyCredential"
        }
      }
    },
    "apicredentialv1alpha1CredentialBaseInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apicredentialv1alpha1CredentialType",
          "description": "The type of the credential."
        },
        "name": {
          "type": "string",
          "description": "The name of the credential."
        },
        "description": {
          "type": "string",
          "title": "The description of the credential.\n+optional"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "The create time of the credential."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "The update time of the credential."
        },
        "workspaceId": {
          "type": "string",
          "description": "The workspace id of the credential."
        }
      }
    },
    "apicredentialv1alpha1CredentialType": {
      "type": "string",
      "enum": [
        "CREDENTIAL_TYPE_UNSPECIFIED",
        "USERNAME_PASSWORD",
        "SSH_KEY",
        "KUBECONFIG",
        "SECRET_TEXT"
      ],
      "default": "CREDENTIAL_TYPE_UNSPECIFIED"
    },
    "apicredentialv1alpha1KubeconfigCredential": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "apicredentialv1alpha1ListCredentialsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicredentialv1alpha1Credential"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "title": "Pagination is for data paging"
        }
      },
      "description": "The response message for the list credentials."
    },
    "apicredentialv1alpha1SecretTextCredential": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        }
      }
    },
    "apigitopsv1alpha1Application": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/apisapplicationv1alpha1Application"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "operationStartedAt": {
          "type": "string",
          "format": "int64"
        },
        "operationFinishedAt": {
          "type": "string",
          "format": "int64"
        },
        "deletedAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "TODO: convert createTimeStamp to int64"
    },
    "apigitopsv1alpha1ConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "attemptedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apigitopsv1alpha1GetHelmChartsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GetHelmChartsResponseItem"
          }
        }
      }
    },
    "apigitopsv1alpha1HealthStatus": {
      "type": "string",
      "enum": [
        "HEALTH_STATUS_UNSPECIFIED",
        "HEALTH_STATUS_MISSING",
        "HEALTH_STATUS_DEGRADED",
        "HEALTH_STATUS_HEALTHY",
        "HEALTH_STATUS_UNKNOWN",
        "HEALTH_STATUS_SUSPENDED",
        "HEALTH_STATUS_PROGRESSING"
      ],
      "default": "HEALTH_STATUS_UNSPECIFIED"
    },
    "apigitopsv1alpha1ListGitReferencesResponse": {
      "type": "object",
      "properties": {
        "branchs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apigitopsv1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apigitopsv1alpha1Repository"
          }
        },
        "page": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "apigitopsv1alpha1Repository": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RepoType"
        },
        "repo": {
          "type": "string"
        },
        "connectionState": {
          "$ref": "#/definitions/apigitopsv1alpha1ConnectionState"
        }
      }
    },
    "apigitopsv1alpha1SyncPolicy": {
      "type": "object",
      "properties": {
        "automated": {
          "$ref": "#/definitions/v1alpha1SyncPolicyAutomated"
        },
        "options": {
          "$ref": "#/definitions/v1alpha1SyncOptions"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy"
        }
      }
    },
    "apigitopsv1alpha1SyncStatus": {
      "type": "string",
      "enum": [
        "SYNC_STATUS_UNSPECIFIED",
        "SYNC_STATUS_UNKNOWN",
        "SYNC_STATUS_SYNCED",
        "SYNC_STATUS_OUT_OF_SYNC"
      ],
      "default": "SYNC_STATUS_UNSPECIFIED"
    },
    "apioperatorsv1alpha1ResourceList": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceInstance"
          }
        }
      },
      "description": "ResourceList represents a list of resources which are of the same Group/Kind."
    },
    "apipipelinev1alpha1BasicCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the credential."
        },
        "password": {
          "type": "string",
          "description": "The password of the credential."
        }
      }
    },
    "apipipelinev1alpha1Credential": {
      "type": "object",
      "properties": {
        "baseInfo": {
          "$ref": "#/definitions/apipipelinev1alpha1CredentialBaseInfo",
          "description": "The base info of the credential."
        },
        "basicCredential": {
          "$ref": "#/definitions/apipipelinev1alpha1BasicCredential",
          "title": "+optional"
        },
        "kubeconfigCredential": {
          "$ref": "#/definitions/apipipelinev1alpha1KubeconfigCredential",
          "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
        },
        "secretTextCredential": {
          "$ref": "#/definitions/apipipelinev1alpha1SecretTextCredential",
          "title": "The SecretTextCredential is SecretText type of credential basic info"
        }
      }
    },
    "apipipelinev1alpha1CredentialBaseInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apipipelinev1alpha1CredentialType",
          "description": "The type of the credential."
        },
        "name": {
          "type": "string",
          "description": "The name of the credential."
        },
        "description": {
          "type": "string",
          "title": "The description of the credential.\n+optional"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "The create time of the credential."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "The update time of the credential."
        },
        "workspaceId": {
          "type": "string",
          "description": "The workspace id of the credential."
        }
      }
    },
    "apipipelinev1alpha1CredentialType": {
      "type": "string",
      "enum": [
        "CREDENTIAL_TYPE_UNSPECIFIED",
        "USERNAME_PASSWORD",
        "SSH_KEY",
        "KUBECONFIG",
        "SECRET_TEXT"
      ],
      "default": "CREDENTIAL_TYPE_UNSPECIFIED"
    },
    "apipipelinev1alpha1GitRepository": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "credentialId": {
          "type": "string"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apipipelinev1alpha1KubeconfigCredential": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "apipipelinev1alpha1ListCredentialsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apipipelinev1alpha1Credential"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "title": "Pagination is for data paging"
        }
      },
      "description": "The response message for the list credentials."
    },
    "apipipelinev1alpha1ListGitReferencesResponse": {
      "type": "object",
      "properties": {
        "branchs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apipipelinev1alpha1SecretTextCredential": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        }
      }
    },
    "apipolicyv1alpha1GetOverridePolicyJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the OverridePolicy YAML details"
        }
      },
      "description": "OverridePolicy data information in json format."
    },
    "apipolicyv1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values."
        },
        "value": {
          "type": "string",
          "description": "An array of string values."
        },
        "effect": {
          "type": "string",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Taint tolerations to static pods,\nso they are not evicted when there are node problems."
    },
    "apiresourcesv1alpha1Resource": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the kind of CustomResource."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion represents the apiVersion of CustomResource."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp represents the creationTime of the CustomResource."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "data": {
          "type": "string",
          "description": "The Data field is the CustomResource YAML details."
        }
      },
      "title": "Resource represents the CustomResource message"
    },
    "apirolloutv1alpha1Argument": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name argument name."
        },
        "value": {
          "type": "string",
          "description": "Value a hardcoded value for the argument."
        }
      },
      "description": "Argument describes the name and value for AnalysisRuns."
    },
    "apirolloutv1alpha1BlueGreenStrategy": {
      "type": "object",
      "properties": {
        "activeService": {
          "type": "string"
        }
      },
      "title": "Placeholder for Blue-Green Strategy"
    },
    "apirolloutv1alpha1CanaryStep": {
      "type": "object",
      "properties": {
        "setWeight": {
          "type": "integer",
          "format": "int32",
          "title": "SetWeight sets what percentage of the newRS should receive\n+optional"
        },
        "pauseDuration": {
          "type": "integer",
          "format": "int32",
          "title": "Minutes to wait, forever if set to zero"
        },
        "setHeaderRoute": {
          "$ref": "#/definitions/v1alpha1SetHeaderRoute",
          "title": "SetHeaderRoute defines the route with specified header name to send 100% of traffic to the canary service\n+optional"
        },
        "setCanaryScale": {
          "$ref": "#/definitions/v1alpha1SetCanaryScale",
          "title": "read only, do not use it"
        }
      },
      "description": "CanaryStep defines a step of a canary deployment."
    },
    "apirolloutv1alpha1CanaryStrategy": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1CanaryStep"
          },
          "description": "Steps define the order of phases to execute the canary deployment."
        },
        "analysis": {
          "$ref": "#/definitions/CanaryStrategyAnalysis",
          "description": "Leave it empty if no analysis specified."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1CanaryType"
        },
        "stableService": {
          "type": "string",
          "title": "StableService holds the name of a service which selects pods with stable version and don't select any pods with canary version.\n+optional"
        },
        "stableIngress": {
          "type": "string"
        },
        "trafficRouting": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutTrafficRouting"
        }
      }
    },
    "apirolloutv1alpha1ContainerStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Each container in a pod must have a unique name.\nCannot be updated."
        },
        "image": {
          "type": "string",
          "title": "The image the container is running.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        }
      },
      "description": "ContainerStatus represents the container status."
    },
    "apirolloutv1alpha1ListIngressNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "apirolloutv1alpha1ListServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1Service"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "apirolloutv1alpha1Rollout": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access."
        },
        "name": {
          "type": "string",
          "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace."
        },
        "deployTarget": {
          "$ref": "#/definitions/applicationv1alpha1DeployTarget",
          "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
        },
        "workloadRef": {
          "$ref": "#/definitions/v1alpha1WorkloadRef",
          "description": "WorkloadRef holds a references to a workload that provides Pod template."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of desired pods. Note this field is for Rollout not workload."
        },
        "strategy": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
          "description": "The deployment strategy to use to replace existing pods with new ones."
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "created_at is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC."
        },
        "status": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutStatus",
          "description": "Status describes the conditions for a resource Rollout."
        }
      }
    },
    "apirolloutv1alpha1RolloutStatus": {
      "type": "object",
      "properties": {
        "abort": {
          "type": "boolean",
          "title": "Abort cancel the current rollout progression"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of non-terminated pods targeted by this rollout (their labels match the selector)."
        },
        "updatedReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of non-terminated pods targeted by this rollout that have the desired template spec."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of ready pods targeted by this rollout."
        },
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this rollout."
        },
        "canary": {
          "$ref": "#/definitions/v1alpha1CanaryStatus",
          "title": "Canary describes the state of the canary rollout"
        },
        "blueGreen": {
          "$ref": "#/definitions/v1alpha1BlueGreenStatus",
          "title": "BlueGreen describes the state of the bluegreen rollout"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1RolloutPhase",
          "title": "Phase is the rollout phase. Clients should only rely on the value if status.observedGeneration equals metadata.generation"
        },
        "message": {
          "type": "string",
          "title": "Message provides details on why the rollout is in its current phase"
        }
      }
    },
    "apirolloutv1alpha1RolloutStrategy": {
      "type": "object",
      "properties": {
        "canary": {
          "$ref": "#/definitions/apirolloutv1alpha1CanaryStrategy"
        },
        "blueGreen": {
          "$ref": "#/definitions/apirolloutv1alpha1BlueGreenStrategy"
        }
      }
    },
    "apirolloutv1alpha1RolloutTrafficRouting": {
      "type": "object",
      "properties": {
        "plugin": {
          "$ref": "#/definitions/v1alpha1Plugin"
        }
      }
    },
    "apirolloutv1alpha1WorkloadType": {
      "type": "string",
      "enum": [
        "WORKLOAD_TYPE_UNSPECIFIED",
        "WORKLOAD_TYPE_DEPLOYMENT",
        "WORKLOAD_TYPE_STATEFUL_SET",
        "WORKLOAD_TYPE_DAEMON_SET",
        "WORKLOAD_TYPE_JOB",
        "WORKLOAD_TYPE_CRONJOB"
      ],
      "default": "WORKLOAD_TYPE_UNSPECIFIED"
    },
    "apirolloutv1alpha1WorkloadsJSON": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "apisapplicationv1alpha1Application": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/applicationv1alpha1ApplicationSpec"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha1ApplicationStatus"
        },
        "operation": {
          "$ref": "#/definitions/applicationv1alpha1Operation"
        }
      },
      "title": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10"
    },
    "apisapplicationv1alpha1HealthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status holds the status code of the application or resource"
        },
        "message": {
          "type": "string",
          "title": "Message is a human-readable informational message describing the health status"
        }
      },
      "title": "HealthStatus contains information about the currently observed health state of an application or resource"
    },
    "apisapplicationv1alpha1SyncPolicy": {
      "type": "object",
      "properties": {
        "automated": {
          "$ref": "#/definitions/v1alpha1SyncPolicyAutomated",
          "title": "Automated will keep an application synced to the target revision"
        },
        "syncOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Options allow you to specify whole app sync-options"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy",
          "title": "Retry controls failed sync retry behavior"
        }
      },
      "title": "SyncPolicy controls when a sync will be performed in response to updates in git"
    },
    "apisapplicationv1alpha1SyncStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status is the sync state of the comparison"
        },
        "comparedTo": {
          "$ref": "#/definitions/v1alpha1ComparedTo",
          "title": "ComparedTo contains information about what has been compared"
        },
        "revision": {
          "type": "string",
          "title": "Revision contains information about the revision the comparison has been performed to"
        }
      },
      "title": "SyncStatus contains information about the currently observed live and desired states of an application"
    },
    "apitypesTaint": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The taint key to be applied to a node."
        },
        "value": {
          "type": "string",
          "description": "The taint value corresponding to the taint key."
        },
        "effect": {
          "$ref": "#/definitions/apitypesTaintEffect",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        }
      }
    },
    "apitypesTaintEffect": {
      "type": "string",
      "enum": [
        "TAINT_EFFECT_UNSPECIFIED",
        "NoSchedule",
        "PreferNoSchedule",
        "NoExecute"
      ],
      "default": "TAINT_EFFECT_UNSPECIFIED",
      "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute.\n\n - TAINT_EFFECT_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NoSchedule: NoSchedule tries to avoid scheduling pods to nodes where they can't\ntolerate taints.\n - PreferNoSchedule: This is not mandatory tries to avoid scheduling pods to nodes.\n - NoExecute: NoExecute is not assign pod  to or evicted pod from the node."
    },
    "apitypesTypeMeta": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1ApplicationSpec": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the location of the application's manifests or chart"
        },
        "destination": {
          "$ref": "#/definitions/v1alpha1ApplicationDestination",
          "title": "Destination is a reference to the target Kubernetes server and namespace"
        },
        "project": {
          "type": "string",
          "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project."
        },
        "syncPolicy": {
          "$ref": "#/definitions/apisapplicationv1alpha1SyncPolicy",
          "title": "SyncPolicy controls when and how a sync will be performed"
        },
        "ignoreDifferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceIgnoreDifferences"
          },
          "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Info"
          },
          "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application"
        },
        "revisionHistoryLimit": {
          "type": "string",
          "format": "int64",
          "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10."
        }
      },
      "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision."
    },
    "applicationv1alpha1ApplicationStatus": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceStatus"
          },
          "title": "Resources is a list of Kubernetes resources managed by this application"
        },
        "sync": {
          "$ref": "#/definitions/apisapplicationv1alpha1SyncStatus",
          "title": "Sync contains information about the application's current sync status"
        },
        "health": {
          "$ref": "#/definitions/apisapplicationv1alpha1HealthStatus",
          "title": "Health contains information about the application's current health status"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RevisionHistory"
          },
          "title": "History contains information about the application's sync history"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ApplicationCondition"
          },
          "title": "Conditions is a list of currently observed application conditions"
        },
        "reconciledAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ReconciledAt indicates when the application state was reconciled using the latest git version"
        },
        "operationState": {
          "$ref": "#/definitions/v1alpha1OperationState",
          "title": "OperationState contains information about any ongoing operations, such as a sync"
        },
        "observedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ObservedAt indicates when the application state was updated without querying latest git state\nDeprecated: controller no longer updates ObservedAt field"
        },
        "sourceType": {
          "type": "string",
          "title": "SourceType specifies the type of this application"
        },
        "summary": {
          "$ref": "#/definitions/v1alpha1ApplicationSummary",
          "title": "Summary contains a list of URLs and container images used by this application"
        }
      },
      "title": "ApplicationStatus contains status information for the application"
    },
    "applicationv1alpha1Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1DeployTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "The cluster of the namespace where the workload is deployed.\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace where the workload is deployed."
        }
      }
    },
    "applicationv1alpha1EnvEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the variable, usually expressed in uppercase"
        },
        "value": {
          "type": "string",
          "title": "Value is the value of the variable"
        }
      },
      "title": "EnvEntry represents an entry in the application's environment"
    },
    "applicationv1alpha1Info": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1ListRegistryNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1RegistryNamespace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "applicationv1alpha1ListRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Nacos"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "applicationv1alpha1Nacos": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        },
        "certificationEnabled": {
          "type": "boolean",
          "title": "whether a username and password are required"
        }
      }
    },
    "applicationv1alpha1Operation": {
      "type": "object",
      "properties": {
        "sync": {
          "$ref": "#/definitions/v1alpha1SyncOperation",
          "title": "Sync contains parameters for the operation"
        },
        "initiatedBy": {
          "$ref": "#/definitions/v1alpha1OperationInitiator",
          "title": "InitiatedBy contains information about who initiated the operations"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Info"
          },
          "title": "Info is a list of informational items for this operation"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy",
          "title": "Retry controls the strategy to apply if a sync fails"
        }
      },
      "title": "Operation contains information about a requested or running operation"
    },
    "applicationv1alpha1RegistryNamespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1Selector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
        }
      }
    },
    "applicationv1alpha1SessionAffinityConfig": {
      "type": "object",
      "properties": {
        "clientIp": {
          "$ref": "#/definitions/v1alpha1ClientIP"
        }
      }
    },
    "applicationv1alpha1Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "Tag push time."
        }
      },
      "description": "Tag of an image."
    },
    "applicationv1alpha1Workload": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the workload belongs to."
        },
        "name": {
          "type": "string",
          "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
        },
        "appGroup": {
          "type": "string",
          "description": "App group is a label indicates the common attributes in workloads."
        },
        "deployTarget": {
          "$ref": "#/definitions/applicationv1alpha1DeployTarget",
          "description": "Target namespace where the workload to deploy, in a multi-cluster\nenvironment, cluster is required."
        },
        "deploymentSpec": {
          "$ref": "#/definitions/apiapplicationv1alpha1DeploymentSpec",
          "title": "WorkloadType defines the"
        },
        "serviceSpec": {
          "$ref": "#/definitions/apiapplicationv1alpha1ServiceSpec",
          "title": "Service definition"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha1WorkloadStatus",
          "title": "workload status"
        },
        "workloadType": {
          "$ref": "#/definitions/apiapplicationv1alpha1WorkloadType"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "microService": {
          "$ref": "#/definitions/v1alpha1MicroServiceSpec"
        },
        "createBy": {
          "type": "string"
        },
        "redirect": {
          "$ref": "#/definitions/v1alpha1Redirect"
        },
        "jenkinsPipelineInfo": {
          "$ref": "#/definitions/v1alpha1JenkinsPipelineInfo"
        },
        "workloadResourceRef": {
          "$ref": "#/definitions/v1alpha1WorkloadResourceRef"
        },
        "previews": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "observability": {
          "$ref": "#/definitions/v1alpha1ObservabilitySpec"
        }
      }
    },
    "applicationv1alpha1WorkloadStatus": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATUS_UNSPECIFIED",
        "WORKLOAD_STATUS_RUNNING",
        "WORKLOAD_STATUS_DELETING",
        "WORKLOAD_STATUS_NOT_READY",
        "WORKLOAD_STATUS_STOPPED",
        "WORKLOAD_STATUS_WAITING",
        "WORKLOAD_STATUS_COMPLETED",
        "WORKLOAD_STATUS_FAILED",
        "WORKLOAD_STATUS_ACTIVATED"
      ],
      "default": "WORKLOAD_STATUS_UNSPECIFIED",
      "title": "- WORKLOAD_STATUS_UNSPECIFIED: status of the workload: deployment, statefulset, daemonset\n - WORKLOAD_STATUS_COMPLETED: status of the workload: job, cronjob"
    },
    "applicationv1alpha2Application": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/applicationv1alpha2ApplicationSpec"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2ApplicationStatus"
        }
      }
    },
    "applicationv1alpha2ApplicationSpec": {
      "type": "object",
      "properties": {
        "componentKinds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          }
        },
        "descriptor": {
          "$ref": "#/definitions/v1alpha2Descriptor"
        },
        "selector": {
          "$ref": "#/definitions/metav1LabelSelector"
        },
        "addOwnerRef": {
          "type": "boolean"
        }
      }
    },
    "applicationv1alpha2ApplicationStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Condition"
          }
        },
        "componentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ObjectStatus"
          }
        },
        "componentsReady": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2ApplicationStatusPhase"
        },
        "error": {
          "type": "string",
          "description": "Error provides a detailed message why current phase is not ready."
        }
      }
    },
    "applicationv1alpha2CloudShellType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "exec",
        "logs"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "Type defines the cloudshell command type (exec, logs, bash)."
    },
    "applicationv1alpha2Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "int64"
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "applicationv1alpha2DeployTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha2DeploymentTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "applicationv1alpha2ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Application"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "applicationv1alpha2ListRegistryNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2RegistryNamespace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "applicationv1alpha2ListRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Nacos"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "applicationv1alpha2ListResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Resource"
          },
          "description": "Resources list."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Page information."
        }
      }
    },
    "applicationv1alpha2Nacos": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        },
        "certificationEnabled": {
          "type": "boolean",
          "title": "whether a username and password are required"
        }
      }
    },
    "applicationv1alpha2Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identity represent the node across graph."
        },
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta"
        },
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta"
        },
        "ingress": {
          "$ref": "#/definitions/v1alpha2IngressInfo",
          "description": "Following fields are only valid when `type` indicates the Kind was using."
        },
        "service": {
          "$ref": "#/definitions/v1alpha2ServiceInfo"
        },
        "deployment": {
          "$ref": "#/definitions/v1alpha2DeploymentInfo"
        },
        "daemonSet": {
          "$ref": "#/definitions/v1alpha2DaemonSetInfo"
        },
        "statefulSet": {
          "$ref": "#/definitions/v1alpha2StatefulSetInfo"
        },
        "pod": {
          "$ref": "#/definitions/applicationv1alpha2PodInfo"
        },
        "secret": {
          "$ref": "#/definitions/v1alpha2SecretInfo"
        },
        "configMap": {
          "$ref": "#/definitions/v1alpha2ConfigMapInfo"
        },
        "pvc": {
          "$ref": "#/definitions/v1alpha2PersistentVolumeClaimInfo"
        }
      }
    },
    "applicationv1alpha2PodInfo": {
      "type": "object",
      "properties": {
        "resources": {
          "$ref": "#/definitions/applicationv1alpha2ResourceRequirements",
          "description": "Resource requirements of the pod, sum of all containers."
        },
        "podIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must\nmatch the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list\nis empty if no IPs have been allocated yet."
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2PodInfoPodPhase"
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about why the pod is in this condition."
        }
      }
    },
    "applicationv1alpha2PropagationPolicy": {
      "type": "string",
      "enum": [
        "PROPAGATION_POLICY_UNSPECIFIED",
        "PROPAGATION_POLICY_ORPHAN",
        "PROPAGATION_POLICY_BACKGROUND"
      ],
      "default": "PROPAGATION_POLICY_UNSPECIFIED"
    },
    "applicationv1alpha2RegistryNamespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha2Resource": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta",
          "title": "resource gvk"
        },
        "meta": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Resource metadata."
        },
        "data": {
          "type": "string",
          "description": "Resource instance."
        }
      }
    },
    "applicationv1alpha2ResourceRequirements": {
      "type": "object",
      "properties": {
        "cpuRequest": {
          "type": "number",
          "format": "double",
          "title": "CPU request in unit cores"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double",
          "title": "CPU limit in unit cores"
        },
        "memoryRequest": {
          "type": "number",
          "format": "double",
          "title": "Memory request in unit MB"
        },
        "memoryLimit": {
          "type": "number",
          "format": "double",
          "title": "Memory limit in unit MB"
        }
      }
    },
    "applicationv1alpha2UpdateResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha2Workload": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta"
        },
        "meta": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Resource metadata."
        },
        "data": {
          "type": "string",
          "description": "Resource instance."
        },
        "state": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus",
          "title": "Workload status"
        }
      }
    },
    "applicationv1alpha2WorkloadStatus": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATUS_UNKNOWN",
        "WORKLOAD_STATUS_RUNNING",
        "WORKLOAD_STATUS_DELETING",
        "WORKLOAD_STATUS_NOT_READY",
        "WORKLOAD_STATUS_STOPPED",
        "WORKLOAD_STATUS_WAITING"
      ],
      "default": "WORKLOAD_STATUS_UNKNOWN"
    },
    "appsv1DeploymentSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Number of desired pods. This is a pointer to distinguish between explicit\nzero and not specified. Defaults to 1.\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/metav1LabelSelector",
          "description": "Label selector for pods. Existing ReplicaSets whose pods are\nselected by this will be the ones affected by this deployment.\nIt must match the pod template's labels."
        },
        "template": {
          "$ref": "#/definitions/corev1PodTemplateSpec",
          "description": "Template describes the pods that will be created."
        },
        "strategy": {
          "$ref": "#/definitions/v1DeploymentStrategy",
          "title": "The deployment strategy to use to replace existing pods with new ones.\n+optional\n+patchStrategy=retainKeys"
        },
        "minReadySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum number of seconds for which a newly created pod should be ready\nwithout any of its container crashing, for it to be considered available.\nDefaults to 0 (pod will be considered available as soon as it is ready)\n+optional"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "title": "The number of old ReplicaSets to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 10.\n+optional"
        },
        "paused": {
          "type": "boolean",
          "title": "Indicates that the deployment is paused.\n+optional"
        },
        "progressDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in seconds for a deployment to make progress before it\nis considered to be failed. The deployment controller will continue to\nprocess failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status. Note that progress will\nnot be estimated during the time a deployment is paused. Defaults to 600s."
        }
      },
      "description": "DeploymentSpec is the specification of the desired behavior of the Deployment."
    },
    "appsv1alpha1DeleteDeploymentRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the deployment belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the deployment belongs to."
        },
        "name": {
          "type": "string",
          "title": "Name represents the name of deployment"
        }
      },
      "title": "DeleteDeploymentRequest represents delete request to delete one Deployment"
    },
    "appsv1alpha1Deployment": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Metadata is that all persisted resources must have, which includes all objects\nusers must create."
        },
        "spec": {
          "$ref": "#/definitions/apiappsv1alpha1DeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/appsv1alpha1DeploymentStatus",
          "title": "Most recently observed status of the Deployment.\n+optional"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      },
      "description": "Deployment provides declarative updates for Pods and ReplicaSets."
    },
    "appsv1alpha1DeploymentStatus": {
      "type": "object",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of ready pods targeted by this deployment.\n+optional"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional"
        },
        "state": {
          "$ref": "#/definitions/kairshipioapitypesWorkloadState",
          "title": "state describes the state of deployments"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapitypesCondition"
          },
          "description": "Current service state of deployments."
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterProviderSummary"
          },
          "title": "Clusters represents target member clusters where the resource to be deployed"
        }
      },
      "description": "DeploymentStatus holds information about the observed status of a deployment."
    },
    "appsv1alpha1GetDeploymentJSONRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which instance the configmap belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced Deployment.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "name represents for the resource name"
        }
      },
      "description": "Get Deployment data information in json format."
    },
    "appsv1alpha1ListDeploymentsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the deployment belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the deployment belongs to."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "name": {
          "type": "string",
          "title": "Name represents the name of workloads to search"
        },
        "phase": {
          "type": "string",
          "title": "Phase represents the phase of workloads to search"
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the data list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "SortDir determines the data list order."
        }
      },
      "description": "ListDeploymentsRequest represents the request of list deployment."
    },
    "clusterv1alpha1ListClustersLabelsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "title": "karmada instance"
        }
      },
      "description": "ListClustersLabelsRequest describe request params."
    },
    "clusterv1alpha1ListClustersLocationsSummaryRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string"
        }
      },
      "description": "ListClustersLocationsSummaryRequest get all kpanda-cluster's zones and regions."
    },
    "clusterv1alpha1ListClustersRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "role": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kubernetesVersion": {
          "type": "string",
          "title": "KUBERNETESVERSION cluster k8s version use to support search sub cluster at\nListClusters"
        },
        "phase": {
          "type": "string",
          "description": "Phases is used for filter."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are key/value pairs that are attached to objects."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to attach arbitrary metadata to objects."
        },
        "managedBy": {
          "type": "string",
          "title": "ManagedBy represents who manages the cluster"
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the cluster list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "OrderBy determines the cluster list order."
        },
        "name": {
          "type": "string",
          "description": "Name of cluster."
        },
        "region": {
          "type": "string",
          "description": "Region represents the region of the member cluster locate in."
        },
        "provider": {
          "type": "string",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "zone": {
          "type": "string",
          "description": "Zone represents the zone of the member cluster locate in."
        },
        "labelSelector": {
          "type": "string",
          "description": "LabelSelector is the format after labels.FormatLabels used to filter clusters."
        },
        "fieldSelector": {
          "type": "string",
          "description": "FieldSelector is the format after labels.FormatLabels used  to filter the clusters."
        },
        "clusterSelector": {
          "type": "string",
          "description": "A cluster selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
        },
        "allCluster": {
          "type": "boolean",
          "title": "list all kpanda clusters"
        }
      },
      "description": "Get Clusters information List."
    },
    "corev1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/corev1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/corev1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).\n+optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/corev1PodAntiAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).\n+optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "corev1Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Added capabilities\n+optional"
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Removed capabilities\n+optional"
        }
      },
      "description": "Adds and removes POSIX capabilities from running containers."
    },
    "corev1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "description": "The ConfigMap to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap must be defined\n+optional"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\n\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "corev1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "title": "Selects a key from a ConfigMap.\n+structType=atomic"
    },
    "corev1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1KeyToPath"
          },
          "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "corev1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
        },
        "image": {
          "type": "string",
          "title": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ContainerPort"
          },
          "title": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1EnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1EnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/corev1ResourceRequirements",
          "title": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1VolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1VolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/corev1Probe",
          "title": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/corev1Probe",
          "title": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/corev1Probe",
          "title": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/corev1Lifecycle",
          "title": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/corev1SecurityContext",
          "title": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "A single application container that you want to run within a pod."
    },
    "corev1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/corev1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/corev1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n+optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
    },
    "corev1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "corev1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "$ref": "#/definitions/resourceQuantity",
          "title": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "corev1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/corev1ConfigMapEnvSource",
          "title": "The ConfigMap to select from\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1SecretEnvSource",
          "title": "The Secret to select from\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "corev1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "type": "string",
          "title": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional"
        },
        "valueFrom": {
          "$ref": "#/definitions/corev1EnvVarSource",
          "title": "Source for the environment variable's value. Cannot be used if value is not empty.\n+optional"
        }
      },
      "description": "EnvVar represents an environment variable present in a Container."
    },
    "corev1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/corev1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/corev1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\n+optional"
        },
        "configMapKeyRef": {
          "$ref": "#/definitions/corev1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/corev1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar."
    },
    "corev1EphemeralContainer": {
      "type": "object",
      "properties": {
        "ephemeralContainerCommon": {
          "$ref": "#/definitions/v1EphemeralContainerCommon",
          "description": "Ephemeral containers have all of the fields of Container, plus additional fields\nspecific to ephemeral containers. Fields in common with Container are in the\nfollowing inlined struct so than an EphemeralContainer may easily be converted\nto a Container."
        },
        "targetContainerName": {
          "type": "string",
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined.\n+optional"
        }
      },
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing\nPod. Ephemeral containers may not be removed or restarted."
    },
    "corev1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional"
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "corev1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "$ref": "#/definitions/intstrIntOrString",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HTTPHeader"
          },
          "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "corev1HostAlias": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP address of the host file entry."
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames for the above IP address."
        }
      },
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file."
    },
    "corev1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "type": {
          "type": "string",
          "title": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional"
        }
      },
      "description": "Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "corev1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the key to project."
        },
        "path": {
          "type": "string",
          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "Maps a string key to a path within a volume."
    },
    "corev1Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/v1LifecycleHandler",
          "title": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/v1LifecycleHandler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle\nevents. For the PostStart and PreStop lifecycle handlers, management of the container blocks\nuntil the action is complete, unless the container process fails, in which case the handler is aborted."
    },
    "corev1LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "title": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)\n+optional"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1PortStatus"
          },
          "title": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it\n+listType=atomic\n+optional"
        }
      },
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point."
    },
    "corev1LoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1LoadBalancerIngress"
          },
          "title": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points.\n+optional"
        }
      },
      "description": "LoadBalancerStatus represents the status of a load-balancer."
    },
    "corev1LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
        }
      },
      "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
    },
    "corev1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/corev1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "corev1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1NodeSelectorTerm"
          },
          "description": "Required. A list of node selector terms. The terms are ORed."
        }
      },
      "title": "A node selector represents the union of the results of one or more label queries\nover a set of nodes; that is, it represents the OR of the selectors represented\nby the node selector terms.\n+structType=atomic"
    },
    "corev1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
    },
    "corev1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "corev1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
    },
    "corev1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "title": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional"
        }
      },
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.\n 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity\n    during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple\n    and the version of the actual struct is irrelevant.\n 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\n\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+structType=atomic"
    },
    "corev1PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/metav1LabelSelector",
          "title": "selector is a label query over volumes to consider for binding.\n+optional"
        },
        "resources": {
          "$ref": "#/definitions/corev1ResourceRequirements",
          "title": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n+optional"
        },
        "volumeName": {
          "type": "string",
          "title": "volumeName is the binding reference to the PersistentVolume backing this claim.\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional"
        },
        "volumeMode": {
          "type": "string",
          "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
        },
        "dataSource": {
          "$ref": "#/definitions/corev1TypedLocalObjectReference",
          "title": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nIf the AnyVolumeDataSource feature gate is enabled, this field will always have\nthe same contents as the DataSourceRef field.\n+optional"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/corev1TypedLocalObjectReference",
          "title": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any local object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the DataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, both fields (DataSource and DataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nThere are two important differences between DataSource and DataSourceRef:\n* While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n+optional"
        }
      },
      "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
    },
    "corev1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "corev1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "corev1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/metav1LabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".\n+optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/metav1LabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.\n+optional"
        }
      },
      "title": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
    },
    "corev1PodAntiAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1PodAffinityTerm"
          },
          "title": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
    },
    "corev1PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional"
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PodDNSConfigOption"
          },
          "title": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional"
        }
      },
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
    },
    "corev1PodReadinessGate": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string",
          "description": "ConditionType refers to a condition in the pod's condition list with matching type."
        }
      },
      "title": "PodReadinessGate contains the reference to a pod condition"
    },
    "corev1PodSecurityContext": {
      "type": "object",
      "properties": {
        "seLinuxOptions": {
          "$ref": "#/definitions/corev1SELinuxOptions",
          "title": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/corev1WindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID.  If unspecified, no groups will be added to\nany container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroup": {
          "type": "string",
          "format": "int64",
          "description": "1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.\n+optional",
          "title": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:"
        },
        "sysctls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Sysctl"
          },
          "title": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "fsGroupChangePolicy": {
          "type": "string",
          "title": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/corev1SeccompProfile",
          "title": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
    },
    "corev1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1Volume"
          },
          "title": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\n+optional\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys"
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1Container"
          },
          "title": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1Container"
          },
          "title": "List of containers belonging to the pod.\nContainers cannot currently be added or removed.\nThere must be at least one container in a Pod.\nCannot be updated.\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1EphemeralContainer"
          },
          "title": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "restartPolicy": {
          "type": "string",
          "title": "Restart policy for all containers within the pod.\nOne of Always, OnFailure, Never.\nDefault to Always.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.\n+optional"
        },
        "activeDeadlineSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer.\n+optional"
        },
        "dnsPolicy": {
          "type": "string",
          "title": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.\n+optional"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional\n+mapType=atomic"
        },
        "serviceAccountName": {
          "type": "string",
          "title": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional"
        },
        "serviceAccount": {
          "type": "string",
          "title": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead.\n+k8s:conversion-gen=false\n+optional"
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "title": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n+optional"
        },
        "nodeName": {
          "type": "string",
          "title": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements.\n+optional"
        },
        "hostNetwork": {
          "type": "boolean",
          "title": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostPID": {
          "type": "boolean",
          "title": "Use the host's pid namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "hostIPC": {
          "type": "boolean",
          "title": "Use the host's ipc namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "shareProcessNamespace": {
          "type": "boolean",
          "title": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/corev1PodSecurityContext",
          "title": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\n+optional"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1LocalObjectReference"
          },
          "title": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "hostname": {
          "type": "string",
          "title": "Specifies the hostname of the Pod\nIf not specified, the pod's hostname will be set to a system-defined value.\n+optional"
        },
        "subdomain": {
          "type": "string",
          "title": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\".\nIf not specified, the pod will not have a domainname at all.\n+optional"
        },
        "affinity": {
          "$ref": "#/definitions/corev1Affinity",
          "title": "If specified, the pod's scheduling constraints\n+optional"
        },
        "schedulerName": {
          "type": "string",
          "title": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.\n+optional"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1Toleration"
          },
          "title": "If specified, the pod's tolerations.\n+optional"
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1HostAlias"
          },
          "title": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.\n+optional\n+patchMergeKey=ip\n+patchStrategy=merge"
        },
        "priorityClassName": {
          "type": "string",
          "title": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\n+optional"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\n+optional"
        },
        "dnsConfig": {
          "$ref": "#/definitions/corev1PodDNSConfig",
          "title": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.\n+optional"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1PodReadinessGate"
          },
          "title": "If specified, all readiness gates will be evaluated for pod readiness.\nA pod is ready when all its containers are ready AND\nall conditions specified in the readiness gates have status equal to \"True\"\nMore info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates\n+optional"
        },
        "runtimeClassName": {
          "type": "string",
          "title": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class\n+optional"
        },
        "enableServiceLinks": {
          "type": "boolean",
          "title": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.\n+optional"
        },
        "preemptionPolicy": {
          "type": "string",
          "title": "PreemptionPolicy is the Policy for preempting pods with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset.\n+optional"
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/resourceQuantity"
          },
          "title": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.\nThis field will be autopopulated at admission time by the RuntimeClass admission controller. If\nthe RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.\nThe RuntimeClass admission controller will reject Pod create requests which have the overhead already\nset. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value\ndefined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md\n+optional"
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1TopologySpreadConstraint"
          },
          "title": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.\n+optional\n+patchMergeKey=topologyKey\n+patchStrategy=merge\n+listType=map\n+listMapKey=topologyKey\n+listMapKey=whenUnsatisfiable"
        },
        "setHostnameAsFQDN": {
          "type": "boolean",
          "title": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).\nIn Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).\nIn Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN.\nIf a pod does not have FQDN, this has no effect.\nDefault to false.\n+optional"
        },
        "os": {
          "$ref": "#/definitions/v1PodOS",
          "description": "Specifies the OS of the containers in the pod.\nSome pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset:\n-securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset:\n- spec.hostPID\n- spec.hostIPC\n- spec.hostUsers\n- spec.securityContext.seLinuxOptions\n- spec.securityContext.seccompProfile\n- spec.securityContext.fsGroup\n- spec.securityContext.fsGroupChangePolicy\n- spec.securityContext.sysctls\n- spec.shareProcessNamespace\n- spec.securityContext.runAsUser\n- spec.securityContext.runAsGroup\n- spec.securityContext.supplementalGroups\n- spec.containers[*].securityContext.seLinuxOptions\n- spec.containers[*].securityContext.seccompProfile\n- spec.containers[*].securityContext.capabilities\n- spec.containers[*].securityContext.readOnlyRootFilesystem\n- spec.containers[*].securityContext.privileged\n- spec.containers[*].securityContext.allowPrivilegeEscalation\n- spec.containers[*].securityContext.procMount\n- spec.containers[*].securityContext.runAsUser\n- spec.containers[*].securityContext.runAsGroup\n+optional"
        },
        "hostUsers": {
          "type": "boolean",
          "title": "Use the host's user namespace.\nOptional: Default to true.\nIf set to true or not present, the pod will be run in the host user namespace, useful\nfor when the pod needs a feature only available to the host user namespace, such as\nloading a kernel module with CAP_SYS_MODULE.\nWhen set to false, a new userns is created for the pod. Setting false is useful for\nmitigating container breakout vulnerabilities even allowing users to run their\ncontainers as root without actually having root privileges on the host.\nThis field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.\n+k8s:conversion-gen=false\n+optional"
        }
      },
      "description": "PodSpec is a description of a pod."
    },
    "corev1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/corev1PodSpec",
          "title": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      },
      "title": "PodTemplateSpec describes the data a pod should have when created from a template"
    },
    "corev1PortStatus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Port is the port number of the service port of which status is recorded here"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
        },
        "error": {
          "type": "string",
          "title": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n- built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.\n---\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+optional\n+kubebuilder:validation:Required\n+kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n+kubebuilder:validation:MaxLength=316"
        }
      }
    },
    "corev1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
        },
        "preference": {
          "$ref": "#/definitions/corev1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
    },
    "corev1Probe": {
      "type": "object",
      "properties": {
        "handler": {
          "$ref": "#/definitions/v1ProbeHandler",
          "title": "The action taken to determine the health of a container"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n+optional"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic."
    },
    "corev1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes, optional for env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        },
        "divisor": {
          "$ref": "#/definitions/resourceQuantity",
          "title": "Specifies the output format of the exposed resources, defaults to \"1\"\n+optional"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
    },
    "corev1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/resourceQuantity"
          },
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/resourceQuantity"
          },
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "corev1SELinuxOptions": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User is a SELinux user label that applies to the container.\n+optional"
        },
        "role": {
          "type": "string",
          "title": "Role is a SELinux role label that applies to the container.\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Type is a SELinux type label that applies to the container.\n+optional"
        },
        "level": {
          "type": "string",
          "title": "Level is SELinux level label that applies to the container.\n+optional"
        }
      },
      "title": "SELinuxOptions are the labels to be applied to the container"
    },
    "corev1SeccompProfile": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Localhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.\n+unionDiscriminator",
          "title": "type indicates which kind of seccomp profile will be applied.\nValid options are:"
        },
        "localhostProfile": {
          "type": "string",
          "title": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\".\n+optional"
        }
      },
      "title": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.\n+union"
    },
    "corev1SecretEnvSource": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "description": "The Secret to select from."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret must be defined\n+optional"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\n\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "corev1SecretKeySelector": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "description": "The name of the secret in the pod's namespace to select from."
        },
        "key": {
          "type": "string",
          "description": "The key of the secret to select from.  Must be a valid secret key."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "corev1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1KeyToPath"
          },
          "title": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "optional field specify whether the Secret or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
    },
    "corev1SecurityContext": {
      "type": "object",
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/corev1Capabilities",
          "title": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "privileged": {
          "type": "boolean",
          "title": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/corev1SELinuxOptions",
          "title": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "windowsOptions": {
          "$ref": "#/definitions/corev1WindowsSecurityContextOptions",
          "title": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.\n+optional"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsGroup": {
          "type": "string",
          "format": "int64",
          "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "title": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "title": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "procMount": {
          "type": "string",
          "title": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        },
        "seccompProfile": {
          "$ref": "#/definitions/corev1SeccompProfile",
          "title": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
        }
      },
      "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence."
    },
    "corev1Service": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/corev1ServiceSpec",
          "title": "Spec defines the behavior of a service.\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        },
        "status": {
          "$ref": "#/definitions/corev1ServiceStatus",
          "title": "Most recently observed status of the service.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      },
      "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port\n(for example 3306) that the proxy listens on, and the selector that determines which pods\nwill answer requests sent through the proxy."
    },
    "corev1ServicePort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. When considering\nthe endpoints for a Service, this must match the 'name' field in the\nEndpointPort.\nOptional if only one ServicePort is defined on this service.\n+optional"
        },
        "protocol": {
          "type": "string",
          "title": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP.\n+default=\"TCP\"\n+optional"
        },
        "appProtocol": {
          "type": "string",
          "title": "The application protocol for this port.\nThis field follows standard Kubernetes label syntax.\nUn-prefixed names are reserved for IANA standard service names (as per\nRFC-6335 and https://www.iana.org/assignments/service-names).\nNon-standard protocols should use prefixed names such as\nmycompany.com/my-custom-protocol.\n+optional"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port that will be exposed by this service."
        },
        "targetPort": {
          "$ref": "#/definitions/intstrIntOrString",
          "title": "Number or name of the port to access on the pods targeted by the service.\nNumber must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\nIf this is a string, it will be looked up as a named port in the\ntarget Pod's container ports. If this is not specified, the value\nof the 'port' field is used (an identity map).\nThis field is ignored for services with clusterIP=None, and should be\nomitted or set equal to the 'port' field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\n+optional"
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "title": "The port on each node on which this service is exposed when type is\nNodePort or LoadBalancer.  Usually assigned by the system. If a value is\nspecified, in-range, and not in use it will be used, otherwise the\noperation will fail.  If not specified, a port will be allocated if this\nService requires one.  If this field is specified when creating a\nService which does not need it, creation will fail. This field will be\nwiped when updating a Service to no longer need it (e.g. changing type\nfrom NodePort to ClusterIP).\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n+optional"
        }
      },
      "description": "ServicePort contains information on service's port."
    },
    "corev1ServiceSpec": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1ServicePort"
          },
          "title": "The list of ports that are exposed by this service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+patchMergeKey=port\n+patchStrategy=merge\n+listType=map\n+listMapKey=port\n+listMapKey=protocol"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Route service traffic to pods with label keys and values matching this\nselector. If empty or not present, the service is assumed to have an\nexternal process managing its endpoints, which Kubernetes will not\nmodify. Only applies to types ClusterIP, NodePort, and LoadBalancer.\nIgnored if type is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/\n+optional\n+mapType=atomic"
        },
        "clusterIP": {
          "type": "string",
          "title": "clusterIP is the IP address of the service and is usually assigned\nrandomly. If an address is specified manually, is in-range (as per\nsystem configuration), and is not in use, it will be allocated to the\nservice; otherwise creation of the service will fail. This field may not\nbe changed through updates unless the type field is also being changed\nto ExternalName (which requires this field to be blank) or the type\nfield is being changed from ExternalName (in which case this field may\noptionally be specified, as describe above).  Valid values are \"None\",\nempty string (\"\"), or a valid IP address. Setting this to \"None\" makes a\n\"headless service\" (no virtual IP), which is useful when direct endpoint\nconnections are preferred and proxying is not required.  Only applies to\ntypes ClusterIP, NodePort, and LoadBalancer. If this field is specified\nwhen creating a Service of type ExternalName, creation will fail. This\nfield will be wiped when updating a Service to type ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional"
        },
        "clusterIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.  If an address is specified manually, is\nin-range (as per system configuration), and is not in use, it will be\nallocated to the service; otherwise creation of the service will fail.\nThis field may not be changed through updates unless the type field is\nalso being changed to ExternalName (which requires this field to be\nempty) or the type field is being changed from ExternalName (in which\ncase this field may optionally be specified, as describe above).  Valid\nvalues are \"None\", empty string (\"\"), or a valid IP address.  Setting\nthis to \"None\" makes a \"headless service\" (no virtual IP), which is\nuseful when direct endpoint connections are preferred and proxying is\nnot required.  Only applies to types ClusterIP, NodePort, and\nLoadBalancer. If this field is specified when creating a Service of type\nExternalName, creation will fail. This field will be wiped when updating\na Service to type ExternalName.  If this field is not specified, it will\nbe initialized from the clusterIP field.  If this field is specified,\nclients must ensure that clusterIPs[0] and clusterIP have the same\nvalue.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order).\nThese IPs must correspond to the values of the ipFamilies field. Both\nclusterIPs and ipFamilies are governed by the ipFamilyPolicy field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+listType=atomic\n+optional"
        },
        "type": {
          "type": "string",
          "title": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n+optional"
        },
        "externalIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system.\n+optional"
        },
        "sessionAffinity": {
          "type": "string",
          "title": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional"
        },
        "loadBalancerIP": {
          "type": "string",
          "title": "Only applies to Service Type: LoadBalancer.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.\nDeprecated: This field was under-specified and its meaning varies across implementations,\nand it cannot support dual-stack.\nAs of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available.\nThis field may be removed in a future API version.\n+optional"
        },
        "loadBalancerSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/\n+optional"
        },
        "externalName": {
          "type": "string",
          "title": "externalName is the external reference that discovery mechanisms will\nreturn as an alias for this service (e.g. a DNS CNAME record). No\nproxying will be involved.  Must be a lowercase RFC-1123 hostname\n(https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\".\n+optional"
        },
        "externalTrafficPolicy": {
          "type": "string",
          "title": "externalTrafficPolicy describes how nodes distribute service traffic they\nreceive on one of the Service's \"externally-facing\" addresses (NodePorts,\nExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure\nthe service in a way that assumes that external load balancers will take care\nof balancing the service traffic between nodes, and so each node will deliver\ntraffic only to the node-local endpoints of the service, without masquerading\nthe client source IP. (Traffic mistakenly sent to a node with no endpoints will\nbe dropped.) The default value, \"Cluster\", uses the standard behavior of\nrouting to all endpoints evenly (possibly modified by topology and other\nfeatures). Note that traffic sent to an External IP or LoadBalancer IP from\nwithin the cluster will always get \"Cluster\" semantics, but clients sending to\na NodePort from within the cluster may need to take traffic policy into account\nwhen picking a node.\n+optional"
        },
        "healthCheckNodePort": {
          "type": "integer",
          "format": "int32",
          "title": "healthCheckNodePort specifies the healthcheck nodePort for the service.\nThis only applies when type is set to LoadBalancer and\nexternalTrafficPolicy is set to Local. If a value is specified, is\nin-range, and is not in use, it will be used.  If not specified, a value\nwill be automatically allocated.  External systems (e.g. load-balancers)\ncan use this port to determine if a given node holds endpoints for this\nservice or not.  If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped\nwhen updating a Service to no longer need it (e.g. changing type).\nThis field cannot be updated once set.\n+optional"
        },
        "publishNotReadyAddresses": {
          "type": "boolean",
          "title": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this\nService should disregard any indications of ready/not-ready.\nThe primary use case for setting this field is for a StatefulSet's Headless Service to\npropagate SRV DNS records for its Pods for the purpose of peer discovery.\nThe Kubernetes controllers that generate Endpoints and EndpointSlice resources for\nServices interpret this to mean that all endpoints are considered \"ready\" even if the\nPods themselves are not. Agents which consume only Kubernetes generated endpoints\nthrough the Endpoints or EndpointSlice resources can safely assume this behavior.\n+optional"
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/corev1SessionAffinityConfig",
          "title": "sessionAffinityConfig contains the configurations of session affinity.\n+optional"
        },
        "ipFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice. This field is usually assigned automatically based on cluster\nconfiguration and the ipFamilyPolicy field. If this field is specified\nmanually, the requested family is available in the cluster,\nand ipFamilyPolicy allows it, it will be used; otherwise creation of\nthe service will fail. This field is conditionally mutable: it allows\nfor adding or removing a secondary IP family, but it does not allow\nchanging the primary IP family of the Service. Valid values are \"IPv4\"\nand \"IPv6\".  This field only applies to Services of types ClusterIP,\nNodePort, and LoadBalancer, and does apply to \"headless\" services.\nThis field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in\neither order).  These families must correspond to the values of the\nclusterIPs field, if specified. Both clusterIPs and ipFamilies are\ngoverned by the ipFamilyPolicy field.\n+listType=atomic\n+optional"
        },
        "ipFamilyPolicy": {
          "type": "string",
          "title": "IPFamilyPolicy represents the dual-stack-ness requested or required by\nthis Service. If there is no value provided, then this field will be set\nto SingleStack. Services can be \"SingleStack\" (a single IP family),\n\"PreferDualStack\" (two IP families on dual-stack configured clusters or\na single IP family on single-stack clusters), or \"RequireDualStack\"\n(two IP families on dual-stack configured clusters, otherwise fail). The\nipFamilies and clusterIPs fields depend on the value of this field. This\nfield will be wiped when updating a service to type ExternalName.\n+optional"
        },
        "allocateLoadBalancerNodePorts": {
          "type": "boolean",
          "title": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically\nallocated for services with type LoadBalancer.  Default is \"true\". It\nmay be set to \"false\" if the cluster load-balancer does not rely on\nNodePorts.  If the caller requests specific NodePorts (by specifying a\nvalue), those requests will be respected, regardless of this field.\nThis field may only be set for services with type LoadBalancer and will\nbe cleared if the type is changed to any other type.\n+optional"
        },
        "loadBalancerClass": {
          "type": "string",
          "title": "loadBalancerClass is the class of the load balancer implementation this Service belongs to.\nIf specified, the value of this field must be a label-style identifier, with an optional prefix,\ne.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users.\nThis field can only be set when the Service type is 'LoadBalancer'. If not set, the default load\nbalancer implementation is used, today this is typically done through the cloud provider integration,\nbut should apply for any default implementation. If set, it is assumed that a load balancer\nimplementation is watching for Services with a matching class. Any default load balancer\nimplementation (e.g. cloud providers) should ignore Services that set this field.\nThis field can only be set when creating or updating a Service to type 'LoadBalancer'.\nOnce set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.\n+featureGate=LoadBalancerClass\n+optional"
        },
        "internalTrafficPolicy": {
          "type": "string",
          "title": "InternalTrafficPolicy describes how nodes distribute service traffic they\nreceive on the ClusterIP. If set to \"Local\", the proxy will assume that pods\nonly want to talk to endpoints of the service on the same node as the pod,\ndropping the traffic if there are no local endpoints. The default value,\n\"Cluster\", uses the standard behavior of routing to all endpoints evenly\n(possibly modified by topology and other features).\n+featureGate=ServiceInternalTrafficPolicy\n+optional"
        }
      },
      "description": "ServiceSpec describes the attributes that a user creates on a service."
    },
    "corev1ServiceStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/corev1LoadBalancerStatus",
          "title": "LoadBalancer contains the current status of the load-balancer,\nif one is present.\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1Condition"
          },
          "title": "Current service state\n+optional\n+patchMergeKey=type\n+patchStrategy=merge\n+listType=map\n+listMapKey=type"
        }
      },
      "description": "ServiceStatus represents the current status of a service."
    },
    "corev1SessionAffinityConfig": {
      "type": "object",
      "properties": {
        "clientIP": {
          "$ref": "#/definitions/v1ClientIPConfig",
          "title": "clientIP contains the configurations of Client IP based session affinity.\n+optional"
        }
      },
      "description": "SessionAffinityConfig represents the configurations of session affinity."
    },
    "corev1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "$ref": "#/definitions/intstrIntOrString",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "title": "TCPSocketAction describes an action based on opening a socket"
    },
    "corev1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.\n+optional"
        },
        "operator": {
          "type": "string",
          "title": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.\n+optional"
        },
        "value": {
          "type": "string",
          "title": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.\n+optional"
        },
        "effect": {
          "type": "string",
          "title": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n+optional"
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "int64",
          "title": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.\n+optional"
        }
      },
      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
    },
    "corev1TopologySpreadConstraint": {
      "type": "object",
      "properties": {
        "maxSkew": {
          "type": "integer",
          "format": "int32",
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|  P P  |  P P  |   P   |\n+-------+-------+-------+\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
        },
        "topologyKey": {
          "type": "string",
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
        },
        "whenUnsatisfiable": {
          "type": "string",
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n| P P P |   P   |   P   |\n+-------+-------+-------+\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
        },
        "labelSelector": {
          "$ref": "#/definitions/metav1LabelSelector",
          "title": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.\n+optional"
        },
        "minDomains": {
          "type": "integer",
          "format": "int32",
          "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|  P P  |  P P  |  P P  |\n+-------+-------+-------+\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).\n+optional"
        },
        "nodeAffinityPolicy": {
          "type": "string",
          "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.\n+optional"
        },
        "nodeTaintsPolicy": {
          "type": "string",
          "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.\n+optional"
        },
        "matchLabelKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. Keys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n+listType=atomic\n+optional"
        }
      },
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
    },
    "corev1TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of resource being referenced"
        }
      },
      "title": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n+structType=atomic"
    },
    "corev1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "volumeSource": {
          "$ref": "#/definitions/v1VolumeSource",
          "description": "volumeSource represents the location and type of the mounted volume.\nIf not specified, the Volume is implied to be an EmptyDir.\nThis implied behavior is deprecated and will be removed in a future version."
        }
      },
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod."
    },
    "corev1VolumeDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name must match the name of a persistentVolumeClaim in the pod"
        },
        "devicePath": {
          "type": "string",
          "description": "devicePath is the path inside of the container that the device will be mapped to."
        }
      },
      "description": "volumeDevice describes a mapping of a raw block device within a container."
    },
    "corev1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.\n+optional"
        }
      },
      "description": "VolumeMount describes a mounting of a Volume within a container."
    },
    "corev1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/corev1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
    },
    "corev1WindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpecName": {
          "type": "string",
          "title": "GMSACredentialSpecName is the name of the GMSA credential spec to use.\n+optional"
        },
        "gmsaCredentialSpec": {
          "type": "string",
          "title": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.\n+optional"
        },
        "runAsUserName": {
          "type": "string",
          "title": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "hostProcess": {
          "type": "boolean",
          "title": "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true.\n+optional"
        }
      },
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
    },
    "corev1alpha1GetSecretRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the secret belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "description": "Secret name."
        }
      },
      "description": "Get Secret information ."
    },
    "corev1alpha1ListNamespaceSummaryRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance the namespace summary list belong to."
        }
      }
    },
    "corev1alpha1ListSecretsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the secret belongs to."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "The name use to search specific secret"
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "SortDir determines the list order."
        },
        "labelSelector": {
          "type": "string",
          "title": "LabelSelector is the format after labels.FormatLabels used to filter"
        },
        "fieldSelector": {
          "type": "string",
          "title": "FieldSelector is the format after labels.FormatLabels used to filter"
        }
      },
      "description": "Get list of Secrets data details."
    },
    "corev1alpha1NamespacePhase": {
      "type": "string",
      "enum": [
        "NAMESPACE_PHASE_UNSPECIFIED",
        "Active",
        "Terminating"
      ],
      "default": "NAMESPACE_PHASE_UNSPECIFIED",
      "title": "- NAMESPACE_PHASE_UNSPECIFIED: The namespace state is unspecified.\n - Active: NamespaceActive means the namespace is available for use in the system\n - Terminating: NamespaceTerminating means the namespace is undergoing graceful termination"
    },
    "corev1alpha1Node": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kpandaioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/corev1alpha1NodeSpec",
          "description": "NodeSpec defines the behavior of a node."
        },
        "status": {
          "$ref": "#/definitions/corev1alpha1NodeStatus",
          "description": "Most recently observed status of the node.\nPopulated by the system."
        }
      }
    },
    "corev1alpha1NodeAddress": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type is a array used for frontend filter."
        },
        "address": {
          "type": "string",
          "description": "IP Address reachable to the node."
        }
      },
      "description": "NodeAddress contains information for the instance's address.\nThe node addresses returned here will be set on the node's status.addresses\nfield."
    },
    "corev1alpha1NodeCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of node condition. The built-in set of conditions are: Ready,\nMemoryPressure, DiskPressure, PIDPressure,\nNetworkUnavailable, and SchedulingDisabled."
        },
        "status": {
          "$ref": "#/definitions/kpandaioapitypesConditionStatus",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        }
      },
      "description": "NodeCondition contains condition information for a node."
    },
    "corev1alpha1NodeSpec": {
      "type": "object",
      "properties": {
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod IP range assigned to the node."
        },
        "unschedulable": {
          "type": "boolean",
          "description": "Unschedulable controls node schedulability of new pods. By default, node is\nschedulable."
        },
        "taints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1Taint"
          },
          "description": "If specified, the node's taints."
        }
      }
    },
    "corev1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1NodeStatusStatus",
          "description": "Status represents the current information/status of node."
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1NodeAddress"
          },
          "description": "IP Address reachable to the node."
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeStatusRole"
          },
          "description": "The roles of current node."
        },
        "cpuCapacity": {
          "type": "string",
          "format": "int64",
          "description": "CpuCapacity is the total cpu of the node. Unit: m."
        },
        "cpuAllocated": {
          "type": "number",
          "format": "double",
          "description": "CpuAllocated is the total pod cpu request on the node. Unit: %."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "CpuUsage is the cpu usage on the node. Unit: %."
        },
        "memoryCapacity": {
          "type": "string",
          "format": "int64",
          "description": "MemoryCapacity is the total memory of the node. Unit: byte."
        },
        "memoryAllocated": {
          "type": "number",
          "format": "double",
          "description": "MemoryAllocated is the total pod memory request on the node. Unit: %."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "MemoryUsage is the memory usage on the node. Unit: %."
        },
        "systemInfo": {
          "$ref": "#/definitions/corev1alpha1NodeSystemInfo",
          "description": "Set of ids/uuids to uniquely identify the node."
        },
        "allowedPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "AllowedPodNumber is the max pod number allowed on the node."
        },
        "podAllocated": {
          "type": "integer",
          "format": "int32",
          "description": "PodAllocated is the pod number already allocated on the node."
        },
        "readyPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "ReadyPodNumber is the ready pod number on the node."
        },
        "storageCapacity": {
          "type": "string",
          "format": "int64",
          "description": "StorageCapacity is the total storage of the node. Unit: byte."
        },
        "storageAllocated": {
          "type": "string",
          "format": "int64",
          "description": "StorageAllocated is the total pod storage request on the node. Unit: byte."
        },
        "storageUsage": {
          "type": "number",
          "format": "double",
          "description": "StorageUsage is the usage of storage space on the node. Unit: %."
        },
        "storageDriver": {
          "type": "string",
          "description": "StorageDriver is the docker storage driver (e.g. overlay2)."
        },
        "gpuTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_total is gpu total number."
        },
        "gpuAllocated": {
          "type": "string",
          "format": "int64",
          "description": "gpu_allocated is gpu allocated number."
        },
        "gpuMemoryTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_memory_total is all gpu memory number with node. Unit: byte."
        },
        "gpuMemoryAllocated": {
          "type": "string",
          "format": "int64",
          "title": "gpu_memory_allocated is allocated gpu memory number with node. Unit: byte"
        },
        "gpuCoreUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_core_usage is the usage rate of gpu"
        },
        "gpuMemoryUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_memory_usage is the usage rate of gpu video memory"
        }
      },
      "description": "NodeStatus is information about the current status of a node."
    },
    "corev1alpha1NodeSystemInfo": {
      "type": "object",
      "properties": {
        "kernelVersion": {
          "type": "string",
          "description": "Kernel Version reported by the node from 'uname -r'\n(e.g. 3.16.0-0.bpo.4-amd64)."
        },
        "osImage": {
          "type": "string",
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7\n(wheezy))."
        },
        "containerRuntimeVersion": {
          "type": "string",
          "description": "ContainerRuntime Version reported by the node through runtime remote API\n(e.g. docker://1.5.0)."
        },
        "kubeletVersion": {
          "type": "string",
          "description": "Kubelet Version reported by the node."
        },
        "kubeProxyVersion": {
          "type": "string",
          "description": "KubeProxy Version reported by the node."
        },
        "operatingSystem": {
          "type": "string",
          "description": "The Operating System reported by the node."
        },
        "architecture": {
          "type": "string",
          "description": "The Architecture reported by the node."
        }
      }
    },
    "corev1alpha1ResourceQuota": {
      "type": "object",
      "properties": {
        "setting": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "namespace quota total value."
        },
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "namespace quota remaining allocatable value."
        },
        "used": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "namespace quota used value."
        }
      }
    },
    "corev1alpha1Secret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the Secret cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the secret data. Each key must consist of alphanumeric\ncharacters, '-', '_' or '.'. The serialized form of the secret data is a\nbase64 encoded string, representing the arbitrary (possibly non-string)\ndata value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n+optional"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only input field for convenience.\nAll keys and values are merged into the data field on write, overwriting any existing values.\nThe stringData field is never output when reading from the API.\n+k8s:conversion-gen=false\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Used to facilitate programmatic handling of secret data.\n+optional"
        }
      }
    },
    "corev1alpha1Taint": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The taint key to be applied to a node."
        },
        "value": {
          "type": "string",
          "description": "The taint value corresponding to the taint key."
        },
        "effect": {
          "$ref": "#/definitions/corev1alpha1TaintEffect",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        }
      }
    },
    "corev1alpha1TaintEffect": {
      "type": "string",
      "enum": [
        "TAINT_EFFECT_UNSPECIFIED",
        "NoSchedule",
        "PreferNoSchedule",
        "NoExecute"
      ],
      "default": "TAINT_EFFECT_UNSPECIFIED",
      "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute.\n\n - TAINT_EFFECT_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NoSchedule: NoSchedule tries to avoid scheduling pods to nodes where they can't\ntolerate taints.\n - PreferNoSchedule: This is not mandatory tries to avoid scheduling pods to nodes.\n - NoExecute: NoExecute is not assign pod  to or evicted pod from the node."
    },
    "gitopsv1alpha1ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apigitopsv1alpha1Application"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "intstrIntOrString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "int64"
        },
        "intVal": {
          "type": "integer",
          "format": "int32"
        },
        "strVal": {
          "type": "string"
        }
      },
      "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
      "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
    },
    "ioapiapplicationv1alpha1Repository": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of repository."
        },
        "public": {
          "type": "boolean"
        },
        "tagCount": {
          "type": "string",
          "format": "int64"
        },
        "pullCount": {
          "type": "string",
          "format": "int64"
        },
        "updateTime": {
          "type": "string",
          "format": "int64"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Artifacts of repository."
        }
      },
      "title": "Repository concept from Harbor"
    },
    "kairshipioapicorev1alpha1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the\nsame node, zone, etc. as some other pod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1PodAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod\nin the same node, zone, etc. as some other pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "kairshipioapicorev1alpha1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "kairshipioapicorev1alpha1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "description": "ConfigMapKeySelector selects a key from a ConfigMap."
    },
    "kairshipioapicorev1alpha1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "kairshipioapicorev1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Container."
        },
        "image": {
          "type": "string",
          "description": "The used image of Container."
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The container command."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workingDir": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1Ports"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1EnvFromSource"
          },
          "title": "EnvFromSource represents the source of a set of ConfigMaps"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1EnvVar"
          },
          "description": "EnvVar represents an environment variable present in a Container."
        },
        "resources": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ResourceRequirements",
          "description": "Source represents a source for the value of an EnvVar."
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1VolumeMount"
          },
          "description": "VolumeMount describes a mounting of a Volume within a container."
        },
        "livenessProbe": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Probe",
          "description": "Liveness probe is aimed to help in situarions where fluentd\nsilently hangs for no apparent reasons until manual restart.\nThe idea of this probe is that if fluentd is not queueing or\nflushing chunks for 5 minutes, something is not right. If\nyou want to change the fluentd configuration, reducing amount of\nlogs fluentd collects, consider changing the threshold or turning\nliveness probe off completely."
        },
        "readinessProbe": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Probe",
          "description": "Readiness updates the cached pod status with the given readiness, and\ntriggers a status update."
        },
        "startupProbe": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Probe",
          "description": "Startup updates the cached container status with the given startup, and\ntriggers a status update."
        },
        "lifecycle": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Lifecycle",
          "description": "The life cycle of a Container."
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Pull image policy."
        },
        "securityContext": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1SecurityContext",
          "description": "SecurityContext holds security attributes."
        }
      }
    },
    "kairshipioapicorev1alpha1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must\nnot be absolute or contain the '..' path. Must be utf-8 encoded. The first\nitem of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and\nnamespace are supported. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently\nsupported. +optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal\nvalue between 0000 and 0777 or a decimal value between 0 and 511. YAML\naccepts both octal and decimal values, JSON requires decimal values for\nmode bits. If not specified, the volume defaultMode will be used. This\nmight be in conflict with other options that affect the file mode, like\nfsGroup, and the result can be other mode bits set. +optional"
        }
      },
      "description": "DownwardAPIVolumeFile represents information to create the file containing\nthe pod field."
    },
    "kairshipioapicorev1alpha1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "DefaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "kairshipioapicorev1alpha1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value\nbetween the SizeLimit specified here and the sum of memory limits of all\ncontainers in a pod. The default is nil which means that the limit is\nundefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "kairshipioapicorev1alpha1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ConfigMapEnvSource",
          "title": "The ConfigMap to select from.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1SecretEnvSource",
          "title": "The Secret to select from.\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "kairshipioapicorev1alpha1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of EnvVar."
        },
        "value": {
          "type": "string",
          "description": "The value of EnvVar."
        },
        "valueFrom": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1EnvVarSource",
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key\nexists in multiple sources, the value associated with the last source will\ntake precedence. Values defined by an Env with a duplicate key will take\nprecedence. Cannot be updated.\","
        }
      },
      "description": "Environment variable information."
    },
    "kairshipioapicorev1alpha1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace,\n`metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName,\nspec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,\nrequests.memory and requests.ephemeral-storage) are currently supported.\n+optional"
        },
        "ConfigMapKeyRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar.\nOnly one of its fields may be set."
    },
    "kairshipioapicorev1alpha1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "kairshipioapicorev1alpha1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "string",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "kairshipioapicorev1alpha1Handler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "TCPSocket": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      }
    },
    "kairshipioapicorev1alpha1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path."
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\n+optional"
        }
      },
      "description": "HostPathVolumeSource Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "kairshipioapicorev1alpha1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on this file, should be a value between 0\nand 0777. If not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "KeyToPath maps a string key to a path within a volume."
    },
    "kairshipioapicorev1alpha1Lifecycle": {
      "type": "object",
      "properties": {
        "PostStart": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Handler",
          "title": "PostStart is called immediately after a container is created. If the\nhandler fails, the container is terminated and restarted according to its\nrestart policy. Other management of the container blocks until the hook\ncompletes. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Handler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown\nbegins before the PreStop hook is executed. Regardless of the outcome of\nthe handler, the container will eventually terminate within the Pod's\ntermination grace period (unless delayed by finalizers). Other management\nof the container blocks until the hook completes or until the termination\ngrace period is reached. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in\nresponse to container lifecycle events. For the PostStart and PreStop\nlifecycle handlers, management of the container blocks until the action is\ncomplete, unless the container process fails, in which case the handler is\naborted."
    },
    "kairshipioapicorev1alpha1NamespaceSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name must be unique within a instance."
        },
        "instance": {
          "type": "string",
          "description": "Instance the namespace belongs to."
        }
      }
    },
    "kairshipioapicorev1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions;\nthe node(s) with the highest sum are the most preferred. +optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "kairshipioapicorev1alpha1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1NodeSelectorTerm"
          }
        }
      },
      "title": "A node selector represents the union of the results of one or more label\nqueries over a set of nodes; that is, it represents the OR of the selectors\nrepresented by the node selector terms. +structType=atomic"
    },
    "kairshipioapicorev1alpha1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. If the operator is Gt or Lt,\nthe values array must have a single element, which will be interpreted as\nan integer. This array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an\noperator that relates the key and values."
    },
    "kairshipioapicorev1alpha1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "kairshipioapicorev1alpha1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to\n\"v1\". +optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "description": "ObjectFieldSelector selects an APIVersioned field of an object."
    },
    "kairshipioapicorev1alpha1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as\nthe pod using this volume. More info:\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same\nnamespace. This volume finds the bound PV and mounts that volume for the pod.\nA PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "kairshipioapicorev1alpha1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding\npodAffinityTerm; the node(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "kairshipioapicorev1alpha1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/kairshipioapitypesLabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies\nto. The term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's\nnamespace\" +optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity)\nwith the pods matching the labelSelector in the specified namespaces, where\nco-located is defined as running on a node whose value of the label with\nkey topologyKey matches that of any node on which any of the selected pods\nis running. Empty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/kairshipioapitypesLabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's\nnamespace\". An empty selector ({}) matches all namespaces. This field is\nbeta-level and is only honored when PodAffinityNamespaceSelector feature is\nenabled. +optional"
        }
      },
      "title": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
    },
    "kairshipioapicorev1alpha1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1Volume"
          }
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1Container"
          },
          "title": "init containers"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1Container"
          },
          "description": "Containers name."
        },
        "restartPolicy": {
          "type": "string",
          "title": "repeated Container ephemeralContainers = 4;"
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node.\nIf it is non-empty, the scheduler simply schedules this pod onto that node,\nassuming that it fits resource requirements."
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "affinity": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1Affinity",
          "title": "bool hostPID = 15;\nbool hostIPC = 16;\nbool shareProcessNamespace = 17;\nPodSecurityContext SecurityContext = 18;\nrepeated LocalObjectReference imagePullSecrets = 19;\nstring hostname = 20;\nstring subdomain = 21;"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1Toleration"
          },
          "title": "string schedulerName = 23;"
        }
      },
      "description": "PodSpec describes the attributes that a pod is created with."
    },
    "kairshipioapicorev1alpha1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1PodSpec",
          "description": "Spec describes the attributes that a pod is created with."
        }
      },
      "description": "template is the object that describes the pod that will be created if\ninsufficient replicas are detected. Each pod stamped out by the StatefulSet\nwill fulfill this Template, but have a unique identity from the rest\nof the StatefulSet."
    },
    "kairshipioapicorev1alpha1Ports": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "ContainerPort connects to a certain container port in a pod."
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        }
      },
      "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
    },
    "kairshipioapicorev1alpha1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the\nrange 1-100."
        },
        "preference": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects\n(i.e. is also a no-op)."
    },
    "kairshipioapicorev1alpha1Probe": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after\nhaving succeeded. Defaults to 3. Minimum value is 1. +optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful\nafter having failed. Defaults to 1. Must be 1 for liveness and startup.\nMinimum value is 1. +optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes\nare initiated. More info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon\nprobe failure. The grace period is the duration in seconds after the\nprocesses running in the pod are sent a termination signal and the time\nwhen the processes are forcibly halted with a kill signal. Set this value\nlonger than the expected cleanup time for your process. If this value is\nnil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop\nimmediately via the kill signal (no opportunity to shut down). This is a\nbeta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1HTTPGetAction",
          "title": "handler\nHTTPGet specifies the http request to perform.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
    },
    "kairshipioapicorev1alpha1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes,\nfor env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their\noutput format"
    },
    "kairshipioapicorev1alpha1ResourceList": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu is the total pod cpu resource. Unit: m."
        },
        "memory": {
          "type": "string",
          "description": "Memory is the total memory resource. Unit: byte."
        },
        "storage": {
          "type": "string",
          "description": "Storage is the total storage resource. Unit: byte."
        }
      },
      "description": "ResourceList returns a string representation of a resource list in a human\nreadable format."
    },
    "kairshipioapicorev1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ResourceList",
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ResourceList",
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value. More\ninfo:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "kairshipioapicorev1alpha1SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of SecretEnvSource."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "kairshipioapicorev1alpha1SecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Secret."
        },
        "key": {
          "type": "string",
          "description": "Required. The secret key to be applied to a pod."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "SecretKeySelector selects a key of a Secret."
    },
    "kairshipioapicorev1alpha1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
    },
    "kairshipioapicorev1alpha1SecurityContext": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "title": "Capabilities capabilities = 1;"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "SELinuxOptions seLinuxOptions = 3;\nWindowsSecurityContextOptions WindowsOptions = 4;"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "kairshipioapicorev1alpha1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "description": "TCPSocketAction describes an action based on opening a socket."
    },
    "kairshipioapicorev1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values."
        },
        "value": {
          "type": "string",
          "description": "An array of string values."
        },
        "effect": {
          "type": "string",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Taint tolerations to static pods,\nso they are not evicted when there are node problems."
    },
    "kairshipioapicorev1alpha1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hostPath": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1HostPathVolumeSource",
          "description": "HostPathVolumeSource represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux\nrelabeling."
        },
        "emptyDir": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1EmptyDirVolumeSource",
          "description": "EmptyDirVolumeSource represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux\nrelabeling."
        },
        "secret": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1SecretVolumeSource",
          "description": "SecretVolumeSource adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names. Secret\nvolumes support ownership management and SELinux relabeling."
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1PersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace"
        },
        "downwardAPI": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1DownwardAPIVolumeSource",
          "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
        },
        "configMap": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1ConfigMapVolumeSource",
          "description": "ConfigMapVolumeSource adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
        }
      },
      "description": "Volume represents a named volume in a pod that may be accessed by any\ncontainer in the pod."
    },
    "kairshipioapicorev1alpha1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Full path to the mount volume path."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be\nmounted. Behaves similarly to SubPath but environment variable references\n$(VAR_NAME) are expanded using the container's environment. Defaults to \"\"\n(volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount for this container."
    },
    "kairshipioapicorev1alpha1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/kairshipioapicorev1alpha1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added\nper-node to find the most preferred node(s)"
    },
    "kairshipioapitypesCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string",
          "title": "Last time the condition transitioned from one status to another.\n+optional"
        },
        "lastUpdateTime": {
          "type": "string",
          "title": "Last time we got an update on a given condition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "type": {
          "type": "string",
          "description": "Type of condition."
        }
      },
      "description": "Condition describes the state of a referent at a certain point."
    },
    "kairshipioapitypesLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the\nmatchLabels map is equivalent to an element of matchExpressions, whose key\nfield is \"key\", the operator is \"In\", and the values array contains only\n\"value\". The requirements are ANDed. +optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapitypesLabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements\nare ANDed. +optional"
        }
      },
      "description": "A label selector is a label query over a set of resources. The result of\nmatchLabels and matchExpressions are ANDed. An empty label selector matches\nall objects. A null label selector matches no objects."
    },
    "kairshipioapitypesLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. This array is replaced during\na strategic merge patch. +optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and\nan operator that relates the key and values."
    },
    "kairshipioapitypesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapitypesOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request."
        },
        "workspaceAlias": {
          "type": "string",
          "description": "The name of the workspace which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent workspaces. This field is not set anywhere right now and\napiserver is going to ignore it if set in create or update request."
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "kairshipioapitypesOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "kairshipioapitypesPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "kairshipioapitypesRollingUpdate": {
      "type": "object",
      "properties": {
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods that can be scheduled above the desired number\nof pods. Value can be an absolute number (ex: 5) or a percentage of desired\npods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number\nis calculated from percentage by rounding up. Defaults to 25%. Example:\nwhen this is set to 30%, the new ReplicaSet can be scaled up immediately\nwhen the rolling update starts, such that the total number of old and new\npods do not exceed 130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods\nrunning at any time during the update is at most 130% of desired pods.\n+optional"
        },
        "maxUnavailable": {
          "type": "string",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods\n(ex: 10%). Absolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to\n70% of desired pods immediately when the rolling update starts. Once new\npods are ready, old ReplicaSet can be scaled down further, followed by\nscaling up the new ReplicaSet, ensuring that the total number of pods\navailable at all times during the update is at least 70% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "kairshipioapitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "state",
        "workspace",
        "cluster",
        "namespace",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp."
    },
    "kairshipioapitypesSortDir": {
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "default": "desc",
      "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order."
    },
    "kairshipioapitypesUpdateStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/kairshipioapitypesRollingUpdate",
          "title": "RollingUpdate is used to communicate parameters when Type is\nRollingUpdateType. +optional"
        },
        "type": {
          "type": "string",
          "title": "Type indicates the type of the UpdateStrategy.\n+optional"
        }
      },
      "description": "UpdateStrategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
    },
    "kairshipioapitypesWorkloadState": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATE_UNSPECIFIED",
        "WORKLOAD_STATE_RUNNING",
        "WORKLOAD_STATE_DELETING",
        "WORKLOAD_STATE_NOT_READY",
        "WORKLOAD_STATE_STOPPED",
        "WORKLOAD_STATE_WAITING"
      ],
      "default": "WORKLOAD_STATE_UNSPECIFIED",
      "description": "- WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - WORKLOAD_STATE_RUNNING: Running shows the referent is available.\n - WORKLOAD_STATE_DELETING: Deleting is when the referent will be deleted.\n - WORKLOAD_STATE_NOT_READY: NotReady shows the referent is unavailable.\n - WORKLOAD_STATE_STOPPED: Stopped indicates that the referent has 0 ready pods.\n - WORKLOAD_STATE_WAITING: Waiting indicates that the referent is paused.",
      "title": "WorkloadState describes the state of\nworkload(deployments/daemonsets/statefulsets)"
    },
    "kolmioapicorev1alpha1Event": {
      "type": "object",
      "properties": {
        "involvedObject": {
          "$ref": "#/definitions/kolmioapicorev1alpha1ObjectReference",
          "description": "The object that this event is about."
        },
        "reason": {
          "type": "string",
          "description": "reason is why the action was taken. It is human-readable.\nThis field cannot be empty for new Events and it can have at most 128\ncharacters."
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation."
        },
        "source": {
          "$ref": "#/definitions/kolmioapicorev1alpha1EventSource",
          "description": "The component reporting this event. Should be a short machine\nunderstandable string."
        },
        "lastTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the most recent occurrence of this event was recorded."
        },
        "type": {
          "$ref": "#/definitions/kolmioapicorev1alpha1EventType",
          "description": "Type of this event (Normal, Warning), new types could be added in the\nfuture."
        }
      },
      "description": "Event is a report of an event somewhere in the cluster.  Events\nhave a limited retention time and triggers and messages may evolve\nwith time.  Event consumers should not rely on the timing of an event\nwith a given Reason reflecting a consistent underlying trigger, or the\ncontinued existence of events with that Reason.  Events should be\ntreated as informative, best-effort, supplemental data."
    },
    "kolmioapicorev1alpha1EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "title": "Component from which the event is generated.\n+optional"
        },
        "host": {
          "type": "string",
          "title": "Node name on which the event is generated.\n+optional"
        }
      },
      "description": "EventSource contains information for an event."
    },
    "kolmioapicorev1alpha1EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "Normal",
        "Warning"
      ],
      "default": "EVENT_TYPE_UNSPECIFIED",
      "description": "Type of event (Normal, Warning), new types could be added in the\nfuture.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type."
    },
    "kolmioapicorev1alpha1ListEventsRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "cluster represents the name of deployment belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the deployment belongs to."
        },
        "kind": {
          "$ref": "#/definitions/kolmioapicorev1alpha1ListEventsRequestKind",
          "description": "Kind represents what type of event is needed."
        },
        "kindName": {
          "type": "string",
          "description": "The name of involvedObject.\nIf the kind is DEPLOYMENT,\nthis presents the name of deployments."
        },
        "name": {
          "type": "string",
          "description": "Name stands for event name, used for fuzzy search."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy",
          "description": "SortBy determines the event list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir",
          "description": "OrderBy determines the event list order."
        },
        "type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kolmioapicorev1alpha1EventType"
          },
          "description": "Type is used for query, showing events of specified type.\nUse example: type=WARNING&type=NORMAL."
        },
        "group": {
          "type": "string",
          "description": "resource group,used when the kind type is GroupVersionResource."
        },
        "version": {
          "type": "string",
          "description": "resource version,used when the kind type is GroupVersionResource."
        },
        "resource": {
          "type": "string",
          "description": "resource name,used when the kind type is GroupVersionResource."
        }
      },
      "title": "ListEventsRequest represents the request of events list of specified\nkind of resource"
    },
    "kolmioapicorev1alpha1ListEventsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet",
        "Pod",
        "Service",
        "Ingress",
        "Job",
        "CronJob",
        "HorizontalPodAutoscaler",
        "ReplicaSet",
        "CronHPA",
        "PersistentVolumeClaim",
        "GroupVersionResource"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Deployment: ListEvents by deployment.\n - StatefulSet: ListEvents by statefulSet.\n - DaemonSet: ListEvents by daemonSet.\n - Pod: ListEvents by pod.\n - Service: ListEvents by service.\n - Ingress: ListEvents by ingress.\n - Job: ListEvents by job.\n - CronJob: ListEvents by cronJob.\n - HorizontalPodAutoscaler: ListEvents by HorizontalPodAutoscaler.\n - ReplicaSet: ListEvents by replicaset.\n - CronHPA: ListEvents by CronHPA.\n - PersistentVolumeClaim: ListEvents by PersistentVolumeClaim.\n - GroupVersionResource: ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,\nyou must specify the value of group version resource."
    },
    "kolmioapicorev1alpha1ListEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kolmioapicorev1alpha1Event"
          },
          "title": "Data response of the workload's event"
        },
        "pages": {
          "$ref": "#/definitions/kolmioapitypesPage",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListEventsByWorkloadNameResponse the response of listEvents by workload name"
    },
    "kolmioapicorev1alpha1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        }
      },
      "description": "ObjectReference contains enough information to let you inspect or modify the\nreferred object."
    },
    "kolmioapitypesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/metav1Timestamp",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/metav1Timestamp",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "kolmioapitypesPage": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Page is for data paging."
    },
    "kolmioapitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "FIELD_NAME",
        "CREATED_AT",
        "CLUSTER",
        "NAMESPACE"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace."
    },
    "kolmioapitypesSortDir": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC",
      "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order."
    },
    "kpandaioapicorev1alpha1NamespaceSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name must be unique within a cluster."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster the namespace belongs to."
        },
        "phase": {
          "$ref": "#/definitions/corev1alpha1NamespacePhase",
          "description": "Phases is used for filter."
        }
      }
    },
    "kpandaioapitypesConditionStatus": {
      "type": "string",
      "enum": [
        "CONDITION_STATUS_UNSPECIFIED",
        "True",
        "False",
        "Unknown"
      ],
      "default": "CONDITION_STATUS_UNSPECIFIED",
      "description": "These are valid condition statuses.\n\n - CONDITION_STATUS_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - True: True means a resource is in the condition.\n - False: False means a resource is not in the condition.\n - Unknown: Unknown means kubernetes can't decide if a resource is in the condition or\nnot."
    },
    "kpandaioapitypesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kpandaioapitypesOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request."
        },
        "workspaceAlias": {
          "type": "string",
          "description": "The name of the workspace which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent workspaces. This field is not set anywhere right now and\napiserver is going to ignore it if set in create or update request."
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "kpandaioapitypesOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent."
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "kpandaioapitypesPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "metav1Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n+kubebuilder:validation:MaxLength=316"
        },
        "status": {
          "type": "string",
          "title": "status of the condition, one of True, False, Unknown.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:Enum=True;False;Unknown"
        },
        "observedGeneration": {
          "type": "string",
          "format": "int64",
          "title": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.\n+optional\n+kubebuilder:validation:Minimum=0"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/v1Time",
          "title": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:Type=string\n+kubebuilder:validation:Format=date-time"
        },
        "reason": {
          "type": "string",
          "title": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:MaxLength=1024\n+kubebuilder:validation:MinLength=1\n+kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`"
        },
        "message": {
          "type": "string",
          "title": "message is a human readable message indicating details about the transition.\nThis may be an empty string.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:MaxLength=32768"
        }
      },
      "description": "type FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\t    // other fields\n\t}",
      "title": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,"
    },
    "metav1LabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1LabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      },
      "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
    },
    "metav1LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
    },
    "metav1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
    },
    "metav1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      },
      "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic"
    },
    "metav1Timestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "Timestamp is a struct that is equivalent to Time, but intended for\nprotobuf marshalling/unmarshalling. It is generated into a serialization\nthat matches Time. Do not use in Go structs."
    },
    "metav1TypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional"
        }
      },
      "description": "TypeMeta describes an individual object in an API response or request\nwith strings representing the type of the object and its API schema version.\nStructures that are versioned or persisted should inline TypeMeta.\n\n+k8s:deepcopy-gen=false"
    },
    "operatorsv1alpha1ListClusterClusterServiceVersionCustomResourcesRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "workspace": {
          "type": "integer",
          "format": "int32"
        },
        "namespace": {
          "type": "string"
        },
        "searchNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "fuzzyName": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir"
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy"
        }
      }
    },
    "operatorsv1alpha1ListClusterServiceVersionCustomResourceDefinitionRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "operatorsv1alpha1ListClusterServiceVersionCustomResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fuzzyName": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir"
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy"
        }
      }
    },
    "operatorsv1alpha1ListClusterServiceVersionRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "operatorsv1alpha1ListClusterServiceVersionResourceExamplesRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "policyv1alpha1GetOverridePolicyJSONRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which instance the override belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced OverridePolicy.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "name represents for the resource name"
        }
      },
      "description": "Get OverridePolicy data information in json format."
    },
    "policyv1alpha1GetOverridePolicyRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which instance the override belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced OverridePolicy.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "name represents for the resource name"
        }
      },
      "title": "Get OverridePolicy represents the request of get one override policy"
    },
    "policyv1alpha1GetPropagationPolicyJSONRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which instance the propagation belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced PropagationPolicy.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "name represents for the resource name"
        }
      },
      "description": "Get PropagationPolicy data information in json format."
    },
    "policyv1alpha1GetPropagationPolicyRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which instance the propagation belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced PropagationPolicy.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "name represents for the resource name"
        }
      },
      "title": "Get PropagationPolicy represents the request of get one propagation policy"
    },
    "policyv1alpha1ListOverridePoliciesRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "title": "karmada instance"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "kind": {
          "type": "string",
          "description": "The kind of service.\nIf the kind is Deployment,\nthis presents the name of the deployment."
        },
        "kindName": {
          "type": "string",
          "description": "Name of kind."
        },
        "name": {
          "type": "string",
          "description": "Name stands for service name, used for fuzzy search."
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the data list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "OrderBy determines the data list order."
        },
        "apiVersion": {
          "type": "string"
        }
      },
      "description": "ListOverridePoliciesRequest represents the request of list overrider policies on an instance and namespace."
    },
    "policyv1alpha1ListPropagationPoliciesRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "title": "karmada instance"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "kind": {
          "type": "string",
          "description": "The kind of service.\nIf the kind is Deployment,\nthis presents the name of the deployment."
        },
        "kindName": {
          "type": "string",
          "description": "Name of kind."
        },
        "name": {
          "type": "string",
          "description": "Name stands for service name, used for fuzzy search."
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the data list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "OrderBy determines the data list order."
        },
        "apiVersion": {
          "type": "string"
        }
      }
    },
    "policyv1alpha1PropagationPolicy": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PropagationPolicySpec",
          "description": "Spec represents the desired behavior of PropagationPolicy."
        }
      },
      "description": "PropagationPolicy represents the policy that propagates a group of resources to one or more clusters."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "resourceQuantity": {
      "type": "object",
      "properties": {
        "string": {
          "type": "string"
        }
      },
      "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
    },
    "resourcesv1alpha1DeleteResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        },
        "deletionPropagation": {
          "$ref": "#/definitions/v1alpha1DeletionPropagation"
        }
      },
      "title": "DeleteResourceRequest represents delete request to delete one\nCustomResource of namespaced scope"
    },
    "resourcesv1alpha1GetAPIResourcesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "cluster name."
        }
      }
    },
    "resourcesv1alpha1ListClusterCollectionResourcesRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "csvName": {
          "type": "string"
        },
        "csvNamespace": {
          "type": "string"
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir"
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy"
        }
      }
    },
    "resourcesv1alpha1ListCollectionResourcesRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "csvName": {
          "type": "string"
        },
        "csvNamespace": {
          "type": "string"
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir"
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy"
        }
      }
    },
    "resourcesv1alpha1ListResourcesRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResources belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResources."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResources."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResources belongs to."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "name": {
          "type": "string",
          "description": "name is used for query."
        },
        "labelSelector": {
          "type": "string",
          "title": "LabelSelector is the format after labels.FormatLabels used to filter"
        },
        "fieldSelector": {
          "type": "string",
          "title": "FieldSelector is the format after labels.FormatLabels used to filter"
        },
        "fuzzyName": {
          "type": "string",
          "description": "FuzzyName is used to fuzzy search by multiple parameters including name."
        },
        "showDetail": {
          "type": "boolean",
          "title": "ShowDetail is the presentation details, including metadata, spec, and status"
        },
        "csvName": {
          "type": "string",
          "title": "list cr created by crd in csv"
        },
        "csvNamespace": {
          "type": "string"
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir"
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy"
        }
      },
      "title": "ListResourcesRequest represents request all of CustomResources of\nnamespaced scope"
    },
    "resourcesv1alpha1ListResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiresourcesv1alpha1Resource"
          },
          "title": "Data represents the response of CustomResource"
        },
        "pages": {
          "$ref": "#/definitions/kolmioapitypesPage",
          "title": "Page is for data paging"
        }
      },
      "title": "ListResourcesResponse represents list all of the CustomResources of\nnamespaced scope in cluster"
    },
    "resourcesv1alpha1UpdateResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        },
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateCustomResourceRequest represents update request to update one\nCustomResource of namespaced scope"
    },
    "rolloutv1alpha1PodInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Pod name"
        },
        "phase": {
          "$ref": "#/definitions/rolloutv1alpha1PodPhase",
          "title": "PodPhase"
        }
      }
    },
    "rolloutv1alpha1PodPhase": {
      "type": "string",
      "enum": [
        "POD_PHASE_UNSPECIFIED",
        "POD_PHASE_PENDING",
        "POD_PHASE_RUNNING",
        "POD_PHASE_SUCCEEDED",
        "POD_PHASE_FAILED",
        "POD_PHASE_UNKNOWN"
      ],
      "default": "POD_PHASE_UNSPECIFIED"
    },
    "typesArgoCdRepoSortBy": {
      "type": "string",
      "enum": [
        "ARGOCD_REPO_SORT_BY_UNSPECIFIED",
        "ARGOCD_REPO_SORT_BY_NAME",
        "ARGOCD_REPO_SORT_BY_REPO"
      ],
      "default": "ARGOCD_REPO_SORT_BY_UNSPECIFIED",
      "description": "ArgoCdRepoSortBy determines the data list order reference of argocd's repository.\n\n - ARGOCD_REPO_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - ARGOCD_REPO_SORT_BY_NAME: Sort result by name.\n - ARGOCD_REPO_SORT_BY_REPO: Sort result by repo."
    },
    "typesClusterFieldSelector": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesClusterSelectorRequirement"
          }
        }
      },
      "description": "FieldSelector is a field filter."
    },
    "typesClusterSelectorOperator": {
      "type": "string",
      "enum": [
        "In",
        "NotIn",
        "Exists",
        "DoesNotExist",
        "Gt",
        "Lt"
      ],
      "default": "In"
    },
    "typesClusterSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/typesClusterSelectorOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesJiraIssueSortBy": {
      "type": "string",
      "enum": [
        "JIRA_ISSUE_SORT_BY_UNSPECIFIED",
        "JIRA_ISSUE_SORT_BY_TYPE",
        "JIRA_ISSUE_SORT_BY_STATUS",
        "JIRA_ISSUE_SORT_BY_PRIORITY",
        "JIRA_ISSUE_SORT_BY_CREATOR",
        "JIRA_ISSUE_SORT_BY_ASSIGNEE",
        "JIRA_ISSUE_SORT_BY_UPDATED"
      ],
      "default": "JIRA_ISSUE_SORT_BY_UNSPECIFIED"
    },
    "typesPipelineSortBy": {
      "type": "string",
      "enum": [
        "PIPELINE_SORT_BY_UNSPECIFIED",
        "PIPELINE_FIELD_NAME",
        "PIPELINE_CREATED_AT",
        "PIPELINE_LAST_RUN_TIME"
      ],
      "default": "PIPELINE_SORT_BY_UNSPECIFIED",
      "title": "- PIPELINE_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - PIPELINE_FIELD_NAME: Sort result by name.\n - PIPELINE_CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_LAST_RUN_TIME: sort result by last run time"
    },
    "v1APIResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the plural name of the resource."
        },
        "singularName": {
          "type": "string",
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely.\nThe singularName is more correct for reporting status on a single item and both singular and plural are allowed\nfrom the kubectl CLI interface."
        },
        "namespaced": {
          "type": "boolean",
          "description": "namespaced indicates if a resource is namespaced or not."
        },
        "group": {
          "type": "string",
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list.\nFor subresources, this may have a different value, for example: Scale\"."
        },
        "version": {
          "type": "string",
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list\nFor subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\"."
        },
        "kind": {
          "type": "string",
          "title": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"
        },
        "verbs": {
          "$ref": "#/definitions/v1Verbs",
          "title": "verbs is a list of supported kube verbs (this includes get, list, watch, create,\nupdate, patch, delete, deletecollection, and proxy)"
        },
        "shortNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "shortNames is a list of suggested short names of the resource."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')"
        },
        "storageVersionHash": {
          "type": "string",
          "title": "The hash value of the storage version, the version this resource is\nconverted to when written to the data store. Value must be treated\nas opaque by clients. Only equality comparison on the value is valid.\nThis is an alpha feature and may change or be removed in the future.\nThe field is populated by the apiserver only if the\nStorageVersionHash feature gate is enabled.\nThis field will remain optional even if it graduates.\n+optional"
        }
      },
      "description": "APIResource specifies the name of a resource and whether it is namespaced."
    },
    "v1APIResourceList": {
      "type": "object",
      "properties": {
        "groupVersion": {
          "type": "string",
          "description": "groupVersion is the group and version this APIResourceList is for."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1APIResource"
          },
          "description": "resources contains the name of the resources and if they are namespaced."
        }
      },
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the\nresources supported in a specific group and version, and if the resource\nis namespaced."
    },
    "v1AWSElasticBlockStoreVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "title": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        }
      },
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk\nmust also be in the same AWS zone as the kubelet. An AWS EBS disk\ncan only be mounted as read/write once. AWS EBS volumes support\nownership management and SELinux relabeling."
    },
    "v1AzureDiskVolumeSource": {
      "type": "object",
      "properties": {
        "diskName": {
          "type": "string",
          "title": "diskName is the Name of the data disk in the blob storage"
        },
        "diskURI": {
          "type": "string",
          "title": "diskURI is the URI of data disk in the blob storage"
        },
        "cachingMode": {
          "type": "string",
          "title": "cachingMode is the Host Caching mode: None, Read Only, Read Write.\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
        }
      },
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
    },
    "v1AzureFileVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "secretName is the  name of secret that contains Azure Storage Account Name and Key"
        },
        "shareName": {
          "type": "string",
          "title": "shareName is the azure share Name"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
    },
    "v1CSIVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string",
          "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.\n+optional"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.\n+optional"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.\n+optional"
        }
      },
      "title": "Represents a source location of a volume to mount, managed by an external CSI driver"
    },
    "v1CephFSVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        },
        "path": {
          "type": "string",
          "title": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional"
        },
        "user": {
          "type": "string",
          "title": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "secretFile": {
          "type": "string",
          "title": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
        }
      },
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod\nCephfs volumes do not support ownership management or SELinux relabeling."
    },
    "v1CinderVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.\n+optional"
        }
      },
      "description": "Represents a cinder volume resource in Openstack.\nA Cinder volume must exist before mounting to a container.\nThe volume must also be in the same region as the kubelet.\nCinder volumes support ownership management and SELinux relabeling."
    },
    "v1ClientIPConfig": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours).\n+optional"
        }
      },
      "description": "ClientIPConfig represents the configurations of Client IP based session affinity."
    },
    "v1ConfigMapProjection": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1KeyToPath"
          },
          "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode."
    },
    "v1ContainerPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        },
        "hostIP": {
          "type": "string",
          "title": "What host IP to bind the external port to.\n+optional"
        }
      },
      "description": "ContainerPort represents a network port in a single container."
    },
    "v1DeploymentStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.\n+optional"
        },
        "rollingUpdate": {
          "$ref": "#/definitions/v1RollingUpdateDeployment",
          "title": "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be.\n+optional"
        }
      },
      "description": "DeploymentStrategy describes how to replace existing pods with new ones."
    },
    "v1DownwardAPIProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of DownwardAPIVolume file\n+optional"
        }
      },
      "description": "Represents downward API info for projecting into a projected volume.\nNote that this is identical to a downwardAPI volume source without the default\nmode."
    },
    "v1EphemeralContainerCommon": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ephemeral container specified as a DNS_LABEL.\nThis name must be unique among all containers, init containers and ephemeral containers."
        },
        "image": {
          "type": "string",
          "title": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "workingDir": {
          "type": "string",
          "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ContainerPort"
          },
          "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1EnvFromSource"
          },
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1EnvVar"
          },
          "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "resources": {
          "$ref": "#/definitions/corev1ResourceRequirements",
          "title": "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources\nalready allocated to the pod.\n+optional"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1VolumeMount"
          },
          "title": "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1VolumeDevice"
          },
          "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional"
        },
        "livenessProbe": {
          "$ref": "#/definitions/corev1Probe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "readinessProbe": {
          "$ref": "#/definitions/corev1Probe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "startupProbe": {
          "$ref": "#/definitions/corev1Probe",
          "title": "Probes are not allowed for ephemeral containers.\n+optional"
        },
        "lifecycle": {
          "$ref": "#/definitions/corev1Lifecycle",
          "title": "Lifecycle is not allowed for ephemeral containers.\n+optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "securityContext": {
          "$ref": "#/definitions/corev1SecurityContext",
          "title": "Optional: SecurityContext defines the security options the ephemeral container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\n+optional"
        },
        "stdin": {
          "type": "boolean",
          "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
        },
        "tty": {
          "type": "boolean",
          "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
        }
      },
      "description": "EphemeralContainerCommon is a copy of all fields in Container to be inlined in\nEphemeralContainer. This separate type allows easy conversion from EphemeralContainer\nto Container and allows separate documentation for the fields of EphemeralContainer.\nWhen a new field is added to Container it must be added here as well."
    },
    "v1EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/v1PersistentVolumeClaimTemplate",
          "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil."
        }
      },
      "description": "Represents an ephemeral volume that is handled by a normal storage driver."
    },
    "v1FCVolumeSource": {
      "type": "object",
      "properties": {
        "targetWWNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "targetWWNs is Optional: FC target worldwide names (WWNs)\n+optional"
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "lun is Optional: FC target lun number\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "wwids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional"
        }
      },
      "description": "Represents a Fibre Channel volume.\nFibre Channel volumes can only be mounted as read/write once.\nFibre Channel volumes support ownership management and SELinux relabeling."
    },
    "v1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      },
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1FlexVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string",
          "description": "driver is the name of the driver to use for this volume."
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "options is Optional: this field holds extra command options if any.\n+optional"
        }
      },
      "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
    },
    "v1FlockerVolumeSource": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string",
          "title": "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated\n+optional"
        },
        "datasetUUID": {
          "type": "string",
          "title": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset\n+optional"
        }
      },
      "description": "Represents a Flocker volume mounted by the Flocker agent.\nOne and only one of datasetName and datasetUUID should be set.\nFlocker volumes do not support ownership management or SELinux relabeling."
    },
    "v1GCEPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "pdName": {
          "type": "string",
          "title": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "title": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        }
      },
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must\nalso be in the same GCE project and zone as the kubelet. A GCE PD\ncan only be mounted as read/write once or read-only many times. GCE\nPDs support ownership management and SELinux relabeling."
    },
    "v1GRPCAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535."
        },
        "service": {
          "type": "string",
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.\n+optional\n+default=\"\""
        }
      }
    },
    "v1GitRepoVolumeSource": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "title": "repository is the URL"
        },
        "revision": {
          "type": "string",
          "title": "revision is the commit hash for the specified revision.\n+optional"
        },
        "directory": {
          "type": "string",
          "title": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional"
        }
      },
      "description": "Represents a volume that is populated with the contents of a git repository.\nGit repo volumes do not support ownership management.\nGit repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
    },
    "v1GlusterfsVolumeSource": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "string",
          "title": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        },
        "path": {
          "type": "string",
          "title": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n+optional"
        }
      },
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod.\nGlusterfs volumes do not support ownership management or SELinux relabeling."
    },
    "v1GroupKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types"
    },
    "v1GroupVersionKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion\nto avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling"
    },
    "v1HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The header field name"
        },
        "value": {
          "type": "string",
          "title": "The header field value"
        }
      },
      "title": "HTTPHeader describes a custom header to be used in HTTP probes"
    },
    "v1ISCSIVolumeSource": {
      "type": "object",
      "properties": {
        "targetPortal": {
          "type": "string",
          "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
        },
        "iqn": {
          "type": "string",
          "description": "iqn is the target iSCSI Qualified Name."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "lun represents iSCSI Target Lun number."
        },
        "iscsiInterface": {
          "type": "string",
          "title": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional"
        },
        "chapAuthDiscovery": {
          "type": "boolean",
          "title": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication\n+optional"
        },
        "chapAuthSession": {
          "type": "boolean",
          "title": "chapAuthSession defines whether support iSCSI Session CHAP authentication\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "secretRef is the CHAP Secret for iSCSI target and initiator authentication\n+optional"
        },
        "initiatorName": {
          "type": "string",
          "title": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection.\n+optional"
        }
      },
      "description": "Represents an ISCSI disk.\nISCSI volumes can only be mounted as read/write once.\nISCSI volumes support ownership management and SELinux relabeling."
    },
    "v1JSON": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil."
    },
    "v1LifecycleHandler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/corev1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/corev1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/corev1TCPSocketAction",
          "title": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.\n+optional"
        }
      },
      "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle\nhook. One and only one of the fields, except TCPSocket must be specified."
    },
    "v1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/v1Time",
          "title": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/v1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      },
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
    },
    "v1NFSVolumeSource": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "path": {
          "type": "string",
          "title": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        }
      },
      "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling."
    },
    "v1PersistentVolumeClaimTemplate": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta",
          "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.\n\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/corev1PersistentVolumeClaimSpec",
          "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
        }
      },
      "description": "PersistentVolumeClaimTemplate is used to produce\nPersistentVolumeClaim objects as part of an EphemeralVolumeSource."
    },
    "v1PhotonPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "pdID": {
          "type": "string",
          "title": "pdID is the ID that identifies Photon Controller persistent disk"
        },
        "fsType": {
          "type": "string",
          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      },
      "description": "Represents a Photon Controller persistent disk resource."
    },
    "v1PodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required."
        },
        "value": {
          "type": "string",
          "title": "+optional"
        }
      },
      "description": "PodDNSConfigOption defines DNS resolver options of a pod."
    },
    "v1PodOS": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the operating system. The currently supported values are linux and windows.\nAdditional value may be defined in future and can be one of:\nhttps://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration\nClients should expect to handle additional values and treat unrecognized values in this field as os: null"
        }
      },
      "description": "PodOS defines the OS parameters of a pod."
    },
    "v1PolicyRule": {
      "type": "object",
      "properties": {
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs."
        },
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of\nthe enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.\n+optional"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Resources is a list of resources this rule applies to. '*' represents all resources.\n+optional"
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.\n+optional"
        },
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path\nSince non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.\nRules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.\n+optional"
        }
      },
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information\nabout who the rule applies to or which namespace the rule applies to."
    },
    "v1PortworxVolumeSource": {
      "type": "object",
      "properties": {
        "volumeID": {
          "type": "string",
          "title": "volumeID uniquely identifies a Portworx volume"
        },
        "fsType": {
          "type": "string",
          "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "description": "PortworxVolumeSource represents a Portworx volume resource."
    },
    "v1ProbeHandler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/corev1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/corev1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/corev1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        },
        "grpc": {
          "$ref": "#/definitions/v1GRPCAction",
          "title": "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate.\n+featureGate=GRPCContainerProbe\n+optional"
        }
      },
      "description": "ProbeHandler defines a specific action that should be taken in a probe.\nOne and only one of the fields must be specified."
    },
    "v1ProjectedVolumeSource": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1VolumeProjection"
          },
          "title": "sources is the list of volume projections\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "title": "Represents a projected volume source"
    },
    "v1QuobyteVolumeSource": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "title": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
        },
        "volume": {
          "type": "string",
          "description": "volume is a string that references an already created Quobyte volume by name."
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional"
        },
        "user": {
          "type": "string",
          "title": "user to map volume access to\nDefaults to serivceaccount user\n+optional"
        },
        "group": {
          "type": "string",
          "title": "group to map volume access to\nDefault is no group\n+optional"
        },
        "tenant": {
          "type": "string",
          "title": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin\n+optional"
        }
      },
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod.\nQuobyte volumes do not support ownership management or SELinux relabeling."
    },
    "v1RBDVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "image": {
          "type": "string",
          "title": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
        },
        "pool": {
          "type": "string",
          "title": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "user": {
          "type": "string",
          "title": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "keyring": {
          "type": "string",
          "title": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
        }
      },
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod.\nRBD volumes support ownership management and SELinux relabeling."
    },
    "v1RollingUpdateDeployment": {
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/intstrIntOrString",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.\n+optional"
        },
        "maxSurge": {
          "$ref": "#/definitions/intstrIntOrString",
          "title": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "v1Rule": {
      "type": "object",
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "APIVersions is the API versions the resources belong to. '*' is all versions.\nIf '*' is present, the length of the slice must be one.\nRequired."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Resources is a list of resources this rule applies to.\n\nFor example:\n'pods' means pods.\n'pods/log' means the log subresource of pods.\n'*' means all resources, but not subresources.\n'pods/*' means all subresources of pods.\n'*/scale' means all scale subresources.\n'*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not\noverlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed.\nRequired."
        },
        "scope": {
          "type": "string",
          "description": "scope specifies the scope of this rule.\nValid values are \"Cluster\", \"Namespaced\", and \"*\"\n\"Cluster\" means that only cluster-scoped resources will match this rule.\nNamespace API objects are cluster-scoped.\n\"Namespaced\" means that only namespaced resources will match this rule.\n\"*\" means that there are no scope restrictions.\nSubresources match the scope of their parent resource.\nDefault is \"*\".\n\n+optional"
        }
      },
      "description": "Rule is a tuple of APIGroups, APIVersion, and Resources.It is recommended\nto make sure that all the tuple expansions are valid."
    },
    "v1RuleWithOperations": {
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or *\nfor all of those operations and any future admission operations that are added.\nIf '*' is present, the length of the slice must be one.\nRequired."
        },
        "rule": {
          "$ref": "#/definitions/v1Rule",
          "description": "Rule is embedded, it describes other criteria of the rule, like\nAPIGroups, APIVersions, Resources, etc."
        }
      },
      "description": "RuleWithOperations is a tuple of Operations and Resources. It is recommended to make\nsure that all the tuple expansions are valid."
    },
    "v1ScaleIOVolumeSource": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "gateway is the host address of the ScaleIO API Gateway."
        },
        "system": {
          "type": "string",
          "description": "system is the name of the storage system as configured in ScaleIO."
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
        },
        "sslEnabled": {
          "type": "boolean",
          "title": "sslEnabled Flag enable/disable SSL communication with Gateway, default false\n+optional"
        },
        "protectionDomain": {
          "type": "string",
          "title": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.\n+optional"
        },
        "storagePool": {
          "type": "string",
          "title": "storagePool is the ScaleIO Storage Pool associated with the protection domain.\n+optional"
        },
        "storageMode": {
          "type": "string",
          "title": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional"
        },
        "volumeName": {
          "type": "string",
          "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        }
      },
      "title": "ScaleIOVolumeSource represents a persistent ScaleIO volume"
    },
    "v1SecretProjection": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "#/definitions/corev1LocalObjectReference"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1KeyToPath"
          },
          "title": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "optional": {
          "type": "boolean",
          "title": "optional field specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode."
    },
    "v1ServiceAccountTokenProjection": {
      "type": "object",
      "properties": {
        "audience": {
          "type": "string",
          "title": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional"
        },
        "expirationSeconds": {
          "type": "string",
          "format": "int64",
          "title": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional"
        },
        "path": {
          "type": "string",
          "description": "path is the path relative to the mount point of the file to project the\ntoken into."
        }
      },
      "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise)."
    },
    "v1StorageOSVolumeSource": {
      "type": "object",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
        },
        "volumeNamespace": {
          "type": "string",
          "title": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "readOnly": {
          "type": "boolean",
          "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1LocalObjectReference",
          "title": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.\n+optional"
        }
      },
      "description": "Represents a StorageOS persistent volume resource."
    },
    "v1Sysctl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of a property to set"
        },
        "value": {
          "type": "string",
          "title": "Value of a property to set"
        }
      },
      "title": "Sysctl defines a kernel parameter to be set"
    },
    "v1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1Verbs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "+protobuf.nullable=true\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "Verbs masks the value so protobuf can generate"
    },
    "v1VolumeProjection": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/v1SecretProjection",
          "title": "secret information about the secret data to project\n+optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v1DownwardAPIProjection",
          "title": "downwardAPI information about the downwardAPI data to project\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/v1ConfigMapProjection",
          "title": "configMap information about the configMap data to project\n+optional"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/v1ServiceAccountTokenProjection",
          "title": "serviceAccountToken is information about the serviceAccountToken data to project\n+optional"
        }
      },
      "title": "Projection that may be projected along with other supported volume types"
    },
    "v1VolumeSource": {
      "type": "object",
      "properties": {
        "hostPath": {
          "$ref": "#/definitions/corev1HostPathVolumeSource",
          "title": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write.\n+optional"
        },
        "emptyDir": {
          "$ref": "#/definitions/corev1EmptyDirVolumeSource",
          "title": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/v1GCEPersistentDiskVolumeSource",
          "title": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/v1AWSElasticBlockStoreVolumeSource",
          "title": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
        },
        "gitRepo": {
          "$ref": "#/definitions/v1GitRepoVolumeSource",
          "title": "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.\n+optional"
        },
        "secret": {
          "$ref": "#/definitions/corev1SecretVolumeSource",
          "title": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "nfs": {
          "$ref": "#/definitions/v1NFSVolumeSource",
          "title": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
        },
        "iscsi": {
          "$ref": "#/definitions/v1ISCSIVolumeSource",
          "title": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md\n+optional"
        },
        "glusterfs": {
          "$ref": "#/definitions/v1GlusterfsVolumeSource",
          "title": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md\n+optional"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/corev1PersistentVolumeClaimVolumeSource",
          "title": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional"
        },
        "rbd": {
          "$ref": "#/definitions/v1RBDVolumeSource",
          "title": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md\n+optional"
        },
        "flexVolume": {
          "$ref": "#/definitions/v1FlexVolumeSource",
          "title": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional"
        },
        "cinder": {
          "$ref": "#/definitions/v1CinderVolumeSource",
          "title": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
        },
        "cephfs": {
          "$ref": "#/definitions/v1CephFSVolumeSource",
          "title": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional"
        },
        "flocker": {
          "$ref": "#/definitions/v1FlockerVolumeSource",
          "title": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running\n+optional"
        },
        "downwardAPI": {
          "$ref": "#/definitions/corev1DownwardAPIVolumeSource",
          "title": "downwardAPI represents downward API about the pod that should populate this volume\n+optional"
        },
        "fc": {
          "$ref": "#/definitions/v1FCVolumeSource",
          "title": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional"
        },
        "azureFile": {
          "$ref": "#/definitions/v1AzureFileVolumeSource",
          "title": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional"
        },
        "configMap": {
          "$ref": "#/definitions/corev1ConfigMapVolumeSource",
          "title": "configMap represents a configMap that should populate this volume\n+optional"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/v1VsphereVirtualDiskVolumeSource",
          "title": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional"
        },
        "quobyte": {
          "$ref": "#/definitions/v1QuobyteVolumeSource",
          "title": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional"
        },
        "azureDisk": {
          "$ref": "#/definitions/v1AzureDiskVolumeSource",
          "title": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/v1PhotonPersistentDiskVolumeSource",
          "title": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "projected": {
          "$ref": "#/definitions/v1ProjectedVolumeSource",
          "title": "projected items for all in one resources secrets, configmaps, and downward API"
        },
        "portworxVolume": {
          "$ref": "#/definitions/v1PortworxVolumeSource",
          "title": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional"
        },
        "scaleIO": {
          "$ref": "#/definitions/v1ScaleIOVolumeSource",
          "title": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "storageos": {
          "$ref": "#/definitions/v1StorageOSVolumeSource",
          "title": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n+optional"
        },
        "csi": {
          "$ref": "#/definitions/v1CSIVolumeSource",
          "title": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).\n+optional"
        },
        "ephemeral": {
          "$ref": "#/definitions/v1EphemeralVolumeSource",
          "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.\n\n+optional"
        }
      },
      "description": "Represents the source of a volume to mount.\nOnly one of its members may be specified."
    },
    "v1VsphereVirtualDiskVolumeSource": {
      "type": "object",
      "properties": {
        "volumePath": {
          "type": "string",
          "title": "volumePath is the path that identifies vSphere volume vmdk"
        },
        "fsType": {
          "type": "string",
          "title": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
        },
        "storagePolicyName": {
          "type": "string",
          "title": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.\n+optional"
        },
        "storagePolicyID": {
          "type": "string",
          "title": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional"
        }
      },
      "description": "Represents a vSphere volume resource."
    },
    "v1alpha1APIResourceReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "description": "APIResourceReference is a reference to a Kubernetes resource type that the referrer utilizes."
    },
    "v1alpha1APIServiceDefinitions": {
      "type": "object",
      "properties": {
        "owned": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1APIServiceDescription"
          }
        },
        "required": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1APIServiceDescription"
          }
        }
      },
      "description": "APIServiceDefinitions declares all of the extension apis managed or required by an operator being ran by ClusterServiceVersion."
    },
    "v1alpha1APIServiceDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "deploymentName": {
          "type": "string"
        },
        "containerPort": {
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1APIResourceReference"
          }
        },
        "statusDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StatusDescriptor"
          }
        },
        "specDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SpecDescriptor"
          }
        },
        "actionDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ActionDescriptor"
          }
        }
      },
      "description": "APIServiceDescription provides details to OLM about apis provided via aggregation."
    },
    "v1alpha1ActionDescriptor": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "xDescriptors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "ActionDescriptor describes a declarative action that can be performed on a custom resource instance."
    },
    "v1alpha1AggregationResource": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "popagrationpolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overridepolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1AllocatedResource": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "title": "the name of the node sriov resource"
        },
        "value": {
          "type": "string",
          "title": "the maximum allocation for this resource"
        }
      }
    },
    "v1alpha1AnalysisPhase": {
      "type": "string",
      "enum": [
        "ANALYSIS_PHASE_PENDING",
        "ANALYSIS_PHASE_RUNNING",
        "ANALYSIS_PHASE_SUCCESSFUL",
        "ANALYSIS_PHASE_FAILED",
        "ANALYSIS_PHASE_ERROR",
        "ANALYSIS_PHASE_INCONCLUSIVE"
      ],
      "default": "ANALYSIS_PHASE_PENDING"
    },
    "v1alpha1AnalysisRunInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "AnalysisRun name"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "AnalysisRun reversion"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1AnalysisPhase",
          "title": "AnalysisRunPhase"
        },
        "successful": {
          "type": "integer",
          "format": "int32",
          "title": "AnalysisRun success count"
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "title": "AnalysisRun failed count"
        },
        "inconclusive": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Reference AnalysisRunInfo defined in\nhttps://github.com/argoproj/argo-rollouts/blob/94cdfd5aa4d316f1621167fef8c606befcaf78a6/pkg/apiclient/rollout/rollout.proto#L151"
    },
    "v1alpha1AppLink": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "AppLink defines a link to an application"
    },
    "v1alpha1ApplicationCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type is an application condition type"
        },
        "message": {
          "type": "string",
          "title": "Message contains human-readable message indicating details about condition"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/v1Time",
          "title": "LastTransitionTime is the time the condition was last observed"
        }
      },
      "title": "ApplicationCondition contains details about an application condition, which is usally an error or warning"
    },
    "v1alpha1ApplicationDestination": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
        },
        "name": {
          "type": "string",
          "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
        }
      },
      "title": "ApplicationDestination holds information about the application's destination"
    },
    "v1alpha1ApplicationEvent": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "firstTime": {
          "type": "string",
          "format": "int64"
        },
        "lastTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1ApplicationJson": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1ApplicationSource": {
      "type": "object",
      "properties": {
        "repoURL": {
          "type": "string",
          "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
        },
        "path": {
          "type": "string",
          "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git."
        },
        "targetRevision": {
          "type": "string",
          "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version."
        },
        "helm": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceHelm",
          "title": "Helm holds helm specific options"
        },
        "kustomize": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceKustomize",
          "title": "Kustomize holds kustomize specific options"
        },
        "directory": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceDirectory",
          "title": "Directory holds path/directory specific options"
        },
        "plugin": {
          "$ref": "#/definitions/v1alpha1ApplicationSourcePlugin",
          "title": "ConfigManagementPlugin holds config management plugin specific options"
        },
        "chart": {
          "type": "string",
          "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo."
        }
      },
      "title": "ApplicationSource contains all required information about the source of an application"
    },
    "v1alpha1ApplicationSourceDirectory": {
      "type": "object",
      "properties": {
        "recurse": {
          "type": "boolean",
          "title": "Recurse specifies whether to scan a directory recursively for manifests"
        },
        "jsonnet": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceJsonnet",
          "title": "Jsonnet holds options specific to Jsonnet"
        },
        "exclude": {
          "type": "string",
          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
        },
        "include": {
          "type": "string",
          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
        }
      },
      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet"
    },
    "v1alpha1ApplicationSourceHelm": {
      "type": "object",
      "properties": {
        "valueFiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ValuesFiles is a list of Helm value files to use when generating a template"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmParameter"
          },
          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation"
        },
        "releaseName": {
          "type": "string",
          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
        },
        "values": {
          "type": "string",
          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
        },
        "fileParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmFileParameter"
          },
          "title": "FileParameters are file parameters to the helm template"
        },
        "version": {
          "type": "string",
          "title": "Version is the Helm version to use for templating (\"3\")"
        },
        "passCredentials": {
          "type": "boolean",
          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
        },
        "ignoreMissingValueFiles": {
          "type": "boolean",
          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
        },
        "skipCrds": {
          "type": "boolean",
          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
        }
      },
      "title": "ApplicationSourceHelm holds helm specific options"
    },
    "v1alpha1ApplicationSourceJsonnet": {
      "type": "object",
      "properties": {
        "extVars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JsonnetVar"
          },
          "title": "ExtVars is a list of Jsonnet External Variables"
        },
        "tlas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JsonnetVar"
          },
          "title": "TLAS is a list of Jsonnet Top-level Arguments"
        },
        "libs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Additional library search dirs"
        }
      },
      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet"
    },
    "v1alpha1ApplicationSourceKustomize": {
      "type": "object",
      "properties": {
        "namePrefix": {
          "type": "string",
          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
        },
        "nameSuffix": {
          "type": "string",
          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Images is a list of Kustomize image override specifications"
        },
        "commonLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "CommonLabels is a list of additional labels to add to rendered manifests"
        },
        "version": {
          "type": "string",
          "title": "Version controls which version of Kustomize to use for rendering manifests"
        },
        "commonAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests"
        },
        "forceCommonLabels": {
          "type": "boolean",
          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
        },
        "forceCommonAnnotations": {
          "type": "boolean",
          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
        }
      },
      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize"
    },
    "v1alpha1ApplicationSourcePlugin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1EnvEntry"
          }
        }
      },
      "title": "ApplicationSourcePlugin holds options specific to config management plugins"
    },
    "v1alpha1ApplicationSummary": {
      "type": "object",
      "properties": {
        "externalURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExternalURLs holds all external URLs of application child resources."
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Images holds all images of application child resources."
        }
      },
      "title": "ApplicationSummary contains information about URLs and container images used by an application"
    },
    "v1alpha1Artifact": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "description": "Digest is artifact digest."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Tag"
          },
          "description": "Tags is a list of tags."
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "description": "Size of artifact. Unit: byte. 1024 GenericBinary."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "First push time."
        }
      },
      "title": "Artifact is the concept of harbor artifact"
    },
    "v1alpha1AvailableResource": {
      "type": "object",
      "properties": {
        "available": {
          "type": "string",
          "format": "int64",
          "title": "if error_message is not null, available is -1"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1alpha1Backoff": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
        },
        "factor": {
          "type": "string",
          "format": "int64",
          "title": "Factor is a factor to multiply the base duration after each failed retry"
        },
        "maxDuration": {
          "type": "string",
          "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
        }
      },
      "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs"
    },
    "v1alpha1BindToolchainResourceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ResourceType"
        }
      }
    },
    "v1alpha1BlueGreenStatus": {
      "type": "object",
      "properties": {
        "previewSelector": {
          "type": "string",
          "title": "PreviewSelector indicates which replicas set the preview service is serving traffic to\n+optional"
        },
        "activeSelector": {
          "type": "string",
          "title": "ActiveSelector indicates which replicas set the active service is serving traffic to\n+optional"
        },
        "scaleUpPreviewCheckPoint": {
          "type": "boolean",
          "title": "ScaleUpPreviewCheckPoint indicates that the Replicaset receiving traffic from the preview service is ready to be scaled up after the rollout is unpaused\n+optional"
        },
        "prePromotionAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "PrePromotionAnalysisRunStatus indicates the status of the current prepromotion analysis run"
        },
        "postPromotionAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "PostPromotionAnalysisRunStatus indicates the status of the current post promotion analysis run"
        }
      },
      "title": "BlueGreenStatus status fields that only pertain to the blueGreen rollout"
    },
    "v1alpha1BlueOceanNodeType": {
      "type": "string",
      "enum": [
        "BLUE_OCEAN_NODE_TYPE_UNSPECIFIED",
        "BLUE_OCEAN_NODE_STAGE",
        "BLUE_OCEAN_NODE_PARALLEL",
        "BLUE_OCEAN_NODE_STEP"
      ],
      "default": "BLUE_OCEAN_NODE_TYPE_UNSPECIFIED"
    },
    "v1alpha1BlueOceanResult": {
      "type": "string",
      "enum": [
        "BLUE_OCEAN_RESULT_UNSPECIFIED",
        "BLUE_OCEAN_RESULT_SUCCESS",
        "BLUE_OCEAN_RESULT_FAILURE",
        "BLUE_OCEAN_RESULT_ABORTED",
        "BLUE_OCEAN_RESULT_QUEUED",
        "BLUE_OCEAN_RESULT_RUNNING",
        "BLUE_OCEAN_RESULT_PAUSED",
        "BLUE_OCEAN_RESULT_SKIPPED",
        "BLUE_OCEAN_RESULT_NOT_BUILT"
      ],
      "default": "BLUE_OCEAN_RESULT_UNSPECIFIED"
    },
    "v1alpha1BlueOceanStepType": {
      "type": "string",
      "enum": [
        "BLUE_OCEAN_STEP_TYPE_UNSPECIFIED",
        "BLUE_OCEAN_STEP"
      ],
      "default": "BLUE_OCEAN_STEP_TYPE_UNSPECIFIED"
    },
    "v1alpha1Branch": {
      "type": "object",
      "properties": {
        "weather": {
          "$ref": "#/definitions/v1alpha1PipelineWeather",
          "description": "The weather of branch."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1PipelineRunState",
          "description": "The result of branch."
        },
        "branchName": {
          "type": "string",
          "description": "The name of branch."
        },
        "commit": {
          "type": "string",
          "description": "The last commit of this branch."
        },
        "lastMessage": {
          "type": "string",
          "description": "The last commit message of this branch."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "The update time to this branch."
        },
        "disabled": {
          "type": "boolean",
          "description": "The branch is disabled or not."
        }
      },
      "description": "Branch single branch result."
    },
    "v1alpha1BranchInfo": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The branch of multi branch pipeline."
        },
        "commitId": {
          "type": "string",
          "description": "The commit id of branch."
        },
        "commitMsg": {
          "type": "string",
          "description": "The commit message of branch."
        }
      },
      "description": "BranchInfo the info of multibranch pipeline's branch."
    },
    "v1alpha1BuildConfig": {
      "type": "object",
      "properties": {
        "disableConcurrence": {
          "type": "boolean",
          "title": "whether to disable concurrent builds. if true, \"Do not allow concurrent builds\" checkbox in the jenkins ui will be checked"
        },
        "discarderProperty": {
          "$ref": "#/definitions/v1alpha1DiscarderProperty",
          "title": "discard old builds"
        }
      },
      "title": "Build config for pipeline"
    },
    "v1alpha1BuildTrigger": {
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/v1alpha1Cron"
        },
        "scm": {
          "$ref": "#/definitions/v1alpha1Cron"
        }
      },
      "title": "The build trigger"
    },
    "v1alpha1CRDDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1APIResourceReference"
          }
        },
        "statusDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StatusDescriptor"
          }
        },
        "specDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SpecDescriptor"
          }
        },
        "actionDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ActionDescriptor"
          }
        }
      },
      "description": "CRDDescription provides details to OLM about the CRDs."
    },
    "v1alpha1CanaryStatus": {
      "type": "object",
      "properties": {
        "currentStepAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "CurrentStepAnalysisRunStatus indicates the status of the current step analysis run"
        },
        "currentBackgroundAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "CurrentBackgroundAnalysisRunStatus indicates the status of the current background analysis run"
        },
        "currentExperiment": {
          "type": "string",
          "title": "CurrentExperiment indicates the running experiment"
        },
        "weights": {
          "$ref": "#/definitions/v1alpha1TrafficWeights",
          "title": "Weights records the weights which have been set on traffic provider. Only valid when using traffic routing"
        },
        "stablePingPong": {
          "type": "string",
          "title": "StablePingPong For the ping-pong feature holds the current stable service, ping or pong"
        }
      },
      "title": "CanaryStatus status fields that only pertain to the canary rollout"
    },
    "v1alpha1CanaryType": {
      "type": "string",
      "enum": [
        "CANARY_TYPE_UNSPECIFIED",
        "CANARY_TYPE_REPLICASET",
        "CANARY_TYPE_ISTIO",
        "CANARY_TYPE_NGINX",
        "CANARY_TYPE_CONTOUR"
      ],
      "default": "CANARY_TYPE_UNSPECIFIED"
    },
    "v1alpha1CleanupSpec": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "description": "CleanupSpec represents information about the status of cleanup while a CSV is pending deletion."
    },
    "v1alpha1CleanupStatus": {
      "type": "object",
      "properties": {
        "pendingDeletion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apioperatorsv1alpha1ResourceList"
          }
        }
      },
      "description": "CleanupStatus represents information about the status of cleanup while a CSV is pending deletion."
    },
    "v1alpha1ClientIP": {
      "type": "object",
      "properties": {
        "timeoutSecond": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1CloneOptions": {
      "type": "object",
      "properties": {
        "shallowClone": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1CloudShell": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kpandaioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1CloudShellSpec",
          "description": "CloudShellSpec defines the desired state of CloudShell."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1CloudShellStatus",
          "description": "CloudShellStatus defines the observed state of CloudShell."
        }
      },
      "description": "CloudShell is the Schema for the cloudshells API."
    },
    "v1alpha1CloudShellSpec": {
      "type": "object",
      "properties": {
        "secretRef": {
          "$ref": "#/definitions/apicloudshellv1alpha1LocalSecretReference",
          "title": "SecretRef represents the secret contains mandatory credentials to access the target cluster.\nThe secret should hold credentials as follows:\n- secret.data.token\n- secret.data.caBundle\nThe field is alpha phase, please open the featuregate AllowSecretStoreKubeconfig to use it.\n+optional"
        },
        "once": {
          "type": "boolean",
          "title": "accept only one client and exit on disconnection"
        },
        "commandAction": {
          "type": "string",
          "description": "command action specified a initialized command to cloudshell server."
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "description": "ttl specified a period time that the cloudshell server pod is\nstop. if not to set, default 500s."
        },
        "cleanup": {
          "type": "boolean",
          "description": "cleanup specified whether to delete cloudshell resources when\ncorresponding job status is completed."
        }
      },
      "description": "CloudShellSpec defines the desired state of CloudShell."
    },
    "v1alpha1CloudShellStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "type": "string",
          "description": "phase specified status of cloudshell server."
        },
        "accessUrl": {
          "type": "string",
          "description": "access url is be set to expose cloudshell server."
        }
      },
      "title": "CloudShellStatus defines the observed state of CloudShell.enum"
    },
    "v1alpha1ClusterAffinity": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/kairshipioapitypesLabelSelector",
          "title": "LabelSelector is a filter to select member clusters by labels.\nIf non-nil and non-empty, only the clusters match this filter will be selected.\n+optional"
        },
        "clusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ClusterNames is the list of clusters to be selected.\n+optional"
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ExcludedClusters is the list of clusters to be ignored.\n+optional"
        },
        "fieldSelector": {
          "$ref": "#/definitions/typesClusterFieldSelector",
          "title": "FieldSelector is a filter to select member clusters by fields.\nIf non-nil and non-empty, only the clusters match this filter will be selected.\n+optional"
        }
      }
    },
    "v1alpha1ClusterAffinityTerm": {
      "type": "object",
      "properties": {
        "affinityName": {
          "type": "string"
        },
        "labelSelector": {
          "$ref": "#/definitions/kairshipioapitypesLabelSelector",
          "title": "LabelSelector is a filter to select member clusters by labels.\nIf non-nil and non-empty, only the clusters match this filter will be selected.\n+optional"
        },
        "clusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ClusterNames is the list of clusters to be selected.\n+optional"
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ExcludedClusters is the list of clusters to be ignored.\n+optional"
        },
        "fieldSelector": {
          "$ref": "#/definitions/typesClusterFieldSelector",
          "title": "FieldSelector is a filter to select member clusters by fields.\nIf non-nil and non-empty, only the clusters match this filter will be selected.\n+optional"
        }
      }
    },
    "v1alpha1ClusterLabels": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "member cluster name"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        }
      },
      "description": "ClusterLabels describe labels of member cluster."
    },
    "v1alpha1ClusterLocation": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      },
      "title": "ClusterLocation Cluster locations"
    },
    "v1alpha1ClusterPhase": {
      "type": "string",
      "enum": [
        "CLUSTER_PHASE_UNSPECIFIED",
        "UNKNOWN",
        "CREATING",
        "RUNNING",
        "UPDATING",
        "DELETING",
        "FAILED"
      ],
      "default": "CLUSTER_PHASE_UNSPECIFIED",
      "description": " - CLUSTER_PHASE_UNSPECIFIED: The cluster state is unspecified.\n - UNKNOWN: The cluster state is unknown.\n - CREATING: The cluster is being created.\n - RUNNING: The cluster is running.\n - UPDATING: The cluster is updating.\n - DELETING: The cluster is being deleted.\n - FAILED: The cluster operations failed."
    },
    "v1alpha1ClusterPreferences": {
      "type": "object",
      "properties": {
        "staticWeightList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StaticClusterWeight"
          },
          "title": "StaticWeightList defines the static cluster weight.\n+optional"
        },
        "dynamicWeight": {
          "$ref": "#/definitions/v1alpha1DynamicWeightFactor",
          "title": "DynamicWeight specifies the factor to generates dynamic weight list.\nIf specified, StaticWeightList will be ignored.\n+kubebuilder:validation:Enum=AvailableReplicas\n+optional"
        }
      }
    },
    "v1alpha1ClusterProvider": {
      "type": "string",
      "enum": [
        "GENERIC",
        "DAOCLOUD_KUBESPRAY",
        "DAOCLOUD_CLUSTER_API",
        "DAOCLOUD_DCE4",
        "REDHAT_OPENSHIFT4",
        "SUSE_RANCHER",
        "VMWARE_TANZU",
        "AWS_EKS",
        "ALIYUN_ACK",
        "TENCENT_TKE",
        "HUAWEI_CCE",
        "MICROSOFT_AZURE"
      ],
      "default": "GENERIC",
      "description": " - GENERIC: Generic\nGENERIC indicates other providers\n - DAOCLOUD_KUBESPRAY: DaoCloud\nDAOCLOUD_KUBESPRAY indicates a provider of DaoCloud's KubeSpray Engine\n - DAOCLOUD_CLUSTER_API: DAOCLOUD_CLUSTER_API indicates a provider of DaoCloud's Cluster API Engine\n - DAOCLOUD_DCE4: DAOCLOUD_DCE4 indicates a provider of DaoCloud's DCE4 Engine\n - REDHAT_OPENSHIFT4: OverSea Distribtion\nREDHAT_OPENSHIFT4 indicates a provider of RedHat Openshift4\n - SUSE_RANCHER: SUSE_RANCHER indicates a provider of SUSE Rancher\n - VMWARE_TANZU: VMWARE_TANZU indicates a provider of VMware Tanzu\n - AWS_EKS: Public Cloud\nAWS_EKS indicates a provider of AWS EKS\n - ALIYUN_ACK: ALIYUN_ACK indicates a provider of Aliyun ACK\n - TENCENT_TKE: TENCENT_TKE indicates a provider of Tencent TKE.\n - HUAWEI_CCE: TENCENT_TKE indicates a provider of Huawei CCE.\n - MICROSOFT_AZURE: MICROSOFT_AZURE=11; indicates a provider of Microsoft Azure."
    },
    "v1alpha1ClusterProviderSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name represents the cluster's name"
        },
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "title": "provider represents the cluster's provider"
        },
        "applied": {
          "type": "boolean",
          "title": "Applied represents if the resource referencing by ResourceBinding or ClusterResourceBinding\nis successfully applied on the cluster.\n+optional"
        }
      }
    },
    "v1alpha1ClusterResourceSummary": {
      "type": "object",
      "properties": {
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Allocatable represents the resources of a cluster that are available for scheduling.\nTotal amount of allocatable resources on all nodes.\n+optional"
        },
        "allocated": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Allocated represents the resources of a cluster that have been scheduled.\nTotal amount of required resources of all Pods that have been scheduled to nodes.\n+optional"
        }
      }
    },
    "v1alpha1ClusterServiceVersion": {
      "type": "object",
      "properties": {
        "typeMeta": {
          "$ref": "#/definitions/metav1TypeMeta"
        },
        "metadata": {
          "$ref": "#/definitions/kolmioapitypesObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ClusterServiceVersionSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ClusterServiceVersionStatus"
        }
      }
    },
    "v1alpha1ClusterServiceVersionCondition": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterServiceVersionPhase"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/v1alpha1ConditionReason"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/metav1Timestamp"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/metav1Timestamp"
        }
      },
      "description": "ClusterServiceVersionCondition represents information about the condition of a ClusterServiceVersion at the current time."
    },
    "v1alpha1ClusterServiceVersionCustomResource": {
      "type": "object",
      "properties": {
        "typeMeta": {
          "$ref": "#/definitions/metav1TypeMeta"
        },
        "metadata": {
          "$ref": "#/definitions/kolmioapitypesObjectMeta"
        }
      }
    },
    "v1alpha1ClusterServiceVersionPhase": {
      "type": "string",
      "enum": [
        "CSV_PHASE_UNSPECIFIED",
        "CSV_PHASE_NONE",
        "CSV_PHASE_PENDING",
        "CSV_PHASE_INSTALL_READY",
        "CSV_PHASE_INSTALLING",
        "CSV_PHASE_SUCCEEDED",
        "CSV_PHASE_FAILED",
        "CSV_PHASE_UNKNOWN",
        "CSV_PHASE_REPLACING",
        "CSV_PHASE_DELETING",
        "CSV_PHASE_ANY"
      ],
      "default": "CSV_PHASE_UNSPECIFIED",
      "description": "ClusterServiceVersionPhase is a label for the condition of a ClusterServiceVersion at the current time."
    },
    "v1alpha1ClusterServiceVersionSpec": {
      "type": "object",
      "properties": {
        "install": {
          "$ref": "#/definitions/v1alpha1NamedInstallStrategy"
        },
        "version": {
          "$ref": "#/definitions/v1alpha1OperatorVersion"
        },
        "maturity": {
          "type": "string"
        },
        "customResourceDefinitions": {
          "$ref": "#/definitions/v1alpha1CustomResourceDefinitions"
        },
        "apiservicedefinitions": {
          "$ref": "#/definitions/v1alpha1APIServiceDefinitions"
        },
        "webhookDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WebhookDescription"
          }
        },
        "nativeApis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupVersionKind"
          }
        },
        "minKubeVersion": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maintainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Maintainer"
          }
        },
        "provider": {
          "$ref": "#/definitions/v1alpha1AppLink"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppLink"
          }
        },
        "icon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Icon"
          }
        },
        "installModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1InstallMode"
          }
        },
        "replaces": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "selector": {
          "$ref": "#/definitions/metav1LabelSelector"
        },
        "cleanup": {
          "$ref": "#/definitions/v1alpha1CleanupSpec"
        },
        "skips": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "relatedImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RelatedImage"
          }
        }
      },
      "description": "ClusterServiceVersionSpec declarations tell OLM how to install an operator that can manage apps for a given version."
    },
    "v1alpha1ClusterServiceVersionStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterServiceVersionPhase"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/v1alpha1ConditionReason"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/metav1Timestamp"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/metav1Timestamp"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterServiceVersionCondition"
          }
        },
        "requirementStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RequirementStatus"
          }
        },
        "certsLastUpdated": {
          "$ref": "#/definitions/metav1Timestamp"
        },
        "certsRotateAt": {
          "$ref": "#/definitions/metav1Timestamp"
        },
        "cleanup": {
          "$ref": "#/definitions/v1alpha1CleanupStatus"
        }
      },
      "description": "ClusterServiceVersionStatus represents information about the status of a CSV."
    },
    "v1alpha1ClusterSpec": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "apiEndpoint": {
          "type": "string",
          "description": "The API endpoint of the member cluster. This can be a hostname,\nhostname:port, IP or IP:port."
        },
        "region": {
          "type": "string",
          "description": "Region represents the region of the member cluster locate in."
        },
        "zone": {
          "type": "string",
          "description": "Zone represents the zone of the member cluster locate in."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Roles represents the roles of cluster."
        },
        "managedBy": {
          "type": "string",
          "description": "ManagedBy is used for worker cluster to show\ncluster is controlled by."
        },
        "aliasName": {
          "type": "string",
          "description": "AliasName represents the alias of the cluster."
        },
        "secretRef": {
          "$ref": "#/definitions/apiclusterv1alpha1LocalSecretReference",
          "description": "SecretRef represents the secret contains mandatory credentials to access the member cluster."
        },
        "taints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apitypesTaint"
          },
          "title": "Taints attached to the member cluster.\nTaints on the cluster have the \"effect\" on\nany resource that does not tolerate the Taint.\n+optional"
        }
      }
    },
    "v1alpha1CodeAnalyzeStatus": {
      "type": "string",
      "enum": [
        "CODE_ANALYZE_STATUS_UNSPECIFIED",
        "CODE_ANALYZE_STATUS_OK",
        "CODE_ANALYZE_STATUS_WARN",
        "CODE_ANALYZE_STATUS_ERROR",
        "CODE_ANALYZE_STATUS_NONE"
      ],
      "default": "CODE_ANALYZE_STATUS_UNSPECIFIED"
    },
    "v1alpha1CommandArgsOverrider": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "The name of container\n+required"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1OverriderOperator",
          "title": "Operator represents the operator which will apply on the command/args.\n+kubebuilder:validation:Enum=add;remove\n+required"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Value to be applied to command/args.\nItems in Value which will be appended after command/args when Operator is 'add'.\nItems in Value which match in command/args will be deleted when Operator is 'remove'.\nIf Value is empty, then the command/args will remain the same.\n+optional"
        }
      }
    },
    "v1alpha1ComparedTo": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the application's source used for comparison"
        },
        "destination": {
          "$ref": "#/definitions/v1alpha1ApplicationDestination",
          "title": "Destination is a reference to the application's destination used for comparison"
        }
      },
      "title": "ComparedTo contains application source and target which was used for resources comparison"
    },
    "v1alpha1ConditionReason": {
      "type": "string",
      "enum": [
        "CSV_REASON_UNSPECIFIED",
        "CSV_REASON_REQUIREMENTS_UNKNOWN",
        "CSV_REASON_REQUIREMENTS_NOT_MET",
        "CSV_REASON_REQUIREMENTS_MET",
        "CSV_REASON_OWNER_CONFLICT",
        "CSV_REASON_COMPONENT_FAILED",
        "CSV_REASON_COMPONENT_FAILED_NO_RETRY",
        "CSV_REASON_INVALID_STRATEGY",
        "CSV_REASON_WAITING",
        "CSV_REASON_INSTALL_SUCCESSFUL",
        "CSV_REASON_INSTALL_CHECK_FAILED",
        "CSV_REASON_COMPONENT_UNHEALTHY",
        "CSV_REASON_BEING_REPLACED",
        "CSV_REASON_REPLACED",
        "CSV_REASON_NEEDS_REINSTALL",
        "CSV_REASON_NEEDS_CERT_ROTATION",
        "CSV_REASON_APISERVICE_RESOURCE_ISSUE",
        "CSV_REASON_APISERVICE_RESOURCES_NEED_REINSTALL",
        "CSV_REASON_APISERVICE_INSTALL_FAILED",
        "CSV_REASON_COPIED",
        "CSV_REASON_INVALID_INSTALL_MODES",
        "CSV_REASON_NO_TARGET_NAMESPACES",
        "CSV_REASON_UNSUPPORTED_OPERATOR_GROUP",
        "CSV_REASON_NO_OPERATOR_GROUP",
        "CSV_REASON_TOO_MANY_OPERATOR_GROUPS",
        "CSV_REASON_INTER_OPERATOR_GROUP_OWNER_CONFLICT",
        "CSV_REASON_CANNOT_MODIFY_STATIC_OPERATOR_GROUP_PROVIDED_APIS",
        "CSV_REASON_DETECTED_CLUSTER_CHANGE",
        "CSV_REASON_INVALID_WEBHOOK_DESCRIPTION",
        "CSV_REASON_OPERATOR_CONDITION_NOT_UPGRADEABLE",
        "CSV_REASON_WAITING_FOR_CLEANUP_TO_COMPLETE"
      ],
      "default": "CSV_REASON_UNSPECIFIED",
      "description": "ConditionReason is a camelcased reason for the state transition."
    },
    "v1alpha1ContainerSpec": {
      "type": "object",
      "properties": {
        "lifeCycle": {
          "$ref": "#/definitions/v1alpha1LifeCycle"
        },
        "healthInspect": {
          "$ref": "#/definitions/v1alpha1HealthInspection"
        },
        "environmentVariables": {
          "$ref": "#/definitions/v1alpha1EnvironmentVariable"
        },
        "dataStorage": {
          "$ref": "#/definitions/v1alpha1DataStorage"
        },
        "networkConfig": {
          "$ref": "#/definitions/v1alpha1NetworkCardConfiguration"
        },
        "dnsOptions": {
          "$ref": "#/definitions/v1alpha1DNSOptions"
        },
        "upgradeStrategy": {
          "$ref": "#/definitions/v1alpha1UpgradeStrategy"
        },
        "scheduleStrategy": {
          "$ref": "#/definitions/v1alpha1SchedulingStrategy"
        },
        "labelsAndAnnotations": {
          "$ref": "#/definitions/v1alpha1LabelsAndAnnotations"
        }
      }
    },
    "v1alpha1CreateClusterResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateClusterResourceRequest represents create request to create one\nCustomResource of cluster scope"
    },
    "v1alpha1CreateClusterResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateClusterResourceResponse represents response of creating one\nCustomResource of cluster scope"
    },
    "v1alpha1CreateControlNamespaceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateGlobalTemplateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "spec": {
          "type": "string",
          "title": "spec describes the parameter definitions and jenkinsfile in yaml"
        }
      }
    },
    "v1alpha1CreatePipelinePluginRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateCustomResourceRequest represents create request to create one\nCustomResource of namespaced scope"
    },
    "v1alpha1CreateResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateCustomResourceResponse represents response of creating one\nCustomResource of namespaced scope"
    },
    "v1alpha1CreateToolchainRequest": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1InstanceType"
        },
        "jiraConfig": {
          "$ref": "#/definitions/v1alpha1JiraConfig"
        },
        "gitlabConfig": {
          "$ref": "#/definitions/v1alpha1GitLabConfig"
        },
        "jenkinsConfig": {
          "$ref": "#/definitions/v1alpha1JenkinsConfig"
        },
        "sonarqubeConfig": {
          "$ref": "#/definitions/v1alpha1SonarqubeConfig"
        },
        "testlinkConfig": {
          "$ref": "#/definitions/v1alpha1TestlinkConfig"
        },
        "nexusConfig": {
          "$ref": "#/definitions/v1alpha1NexusConfig"
        }
      }
    },
    "v1alpha1Cron": {
      "type": "object",
      "properties": {
        "cron": {
          "type": "string"
        }
      },
      "title": "The cron in trigger"
    },
    "v1alpha1CustomResourceDefinitions": {
      "type": "object",
      "properties": {
        "owned": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CRDDescription"
          }
        },
        "required": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CRDDescription"
          }
        }
      },
      "description": "CustomResourceDefinitions declares all of the CRDs managed or required by an operator being ran by ClusterServiceVersion."
    },
    "v1alpha1CustomRoute": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        }
      }
    },
    "v1alpha1DNSOptions": {
      "type": "object",
      "properties": {
        "dnsStrategy": {
          "$ref": "#/definitions/DNSOptionsStrategy"
        },
        "domainServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchDomain": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hostAlias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1DNSOptionsHostAlias"
          }
        }
      }
    },
    "v1alpha1DNSOptionsHostAlias": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1DataStorage": {
      "type": "object",
      "properties": {
        "dataVolume": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataStorageDataVolume"
          }
        },
        "nodePathMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataStorageNodePathMapping"
          }
        }
      }
    },
    "v1alpha1DeleteClusterResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        },
        "deletionPropagation": {
          "$ref": "#/definitions/v1alpha1DeletionPropagation"
        }
      },
      "title": "DeleteClusterResourceRequest represents delete request to delete one\nCustomResource of cluster scope"
    },
    "v1alpha1DeletionPropagation": {
      "type": "string",
      "enum": [
        "DELETION_PROPAGATION_UNSPECIFIED",
        "DELETION_PROPAGATION_ORPHAN",
        "DELETION_PROPAGATION_BACKGROUND",
        "DELETION_PROPAGATION_FOREGROUND"
      ],
      "default": "DELETION_PROPAGATION_UNSPECIFIED",
      "description": " - DELETION_PROPAGATION_ORPHAN: Orphans the dependents.\n - DELETION_PROPAGATION_BACKGROUND: Deletes the object from the key-value store, the garbage collector will\ndelete the dependents in the background.\n - DELETION_PROPAGATION_FOREGROUND: The object exists in the key-value store until the garbage collector\ndeletes all the dependents whose ownerReference.blockOwnerDeletion=true\nfrom the key-value store.  API sever will put the \"foregroundDeletion\"\nfinalizer on the object, and sets its deletionTimestamp.  This policy is\ncascading, i.e., the dependents will be deleted with Foreground."
    },
    "v1alpha1DependentStatus": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1StatusReason"
        },
        "uuid": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "description": "DependentStatus is the status for a dependent requirement."
    },
    "v1alpha1DiscarderProperty": {
      "type": "object",
      "properties": {
        "daysToRetain": {
          "type": "integer",
          "format": "int32",
          "title": "Days to keep builds\n+optional"
        },
        "numToRetain": {
          "type": "integer",
          "format": "int32",
          "title": "Max of builds to keep\n+optional"
        }
      },
      "title": "The strategy of discard old builds"
    },
    "v1alpha1DynamicWeightFactor": {
      "type": "string",
      "enum": [
        "DYNAMIC_WEIGHT_FACTOR_UNSPECIFIED",
        "AvailableReplicas"
      ],
      "default": "DYNAMIC_WEIGHT_FACTOR_UNSPECIFIED",
      "description": "DynamicWeightByAvailableReplicas represents the cluster weight list should be generated according to\navailable resource (available replicas)."
    },
    "v1alpha1Endpoint": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/v1alpha1MetricsProtocol"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "v1alpha1EnvironmentVariable": {
      "type": "object",
      "properties": {
        "keyValuePair": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableReference"
          }
        },
        "configMapReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableReference"
          }
        },
        "secretReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableReference"
          }
        },
        "podField": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configMapImport": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretImport": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ExternalTrafficPolicy": {
      "type": "string",
      "enum": [
        "ServiceExternalTrafficPolicyUnspecified",
        "ServiceExternalTrafficPolicyLocal",
        "ServiceExternalTrafficPolicyCluster"
      ],
      "default": "ServiceExternalTrafficPolicyUnspecified"
    },
    "v1alpha1FailurePolicyType": {
      "type": "string",
      "enum": [
        "FAILURE_POLICY_TYPE_UNSPECIFIED",
        "FAILURE_POLICY_TYPE_IGNORE",
        "FAILURE_POLICY_TYPE_FAIL"
      ],
      "default": "FAILURE_POLICY_TYPE_UNSPECIFIED",
      "description": "FailurePolicyType specifies a failure policy that defines how unrecognized errors from the admission endpoint are handled.\n\n - FAILURE_POLICY_TYPE_IGNORE: Ignore means that an error calling the webhook is ignored.\n - FAILURE_POLICY_TYPE_FAIL: Fail means that an error calling the webhook causes the admission to fail."
    },
    "v1alpha1FeatureGate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一标志符"
        },
        "name": {
          "type": "string",
          "title": "名字"
        },
        "description": {
          "type": "string",
          "title": "关于此 FeatureGate 的描述"
        },
        "enabled": {
          "type": "boolean",
          "title": "是否启用"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1alpha1Framework": {
      "type": "string",
      "enum": [
        "FRAMEWORK_UNSPECIFIED",
        "FRAMEWORK_SPRING_CLOUD",
        "FRAMEWORK_DUBBO"
      ],
      "default": "FRAMEWORK_UNSPECIFIED"
    },
    "v1alpha1GPUResourceSetting": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "gpu workload type resources key"
        },
        "alias": {
          "type": "string",
          "title": "gpu workload type resources alias"
        },
        "isAllocatable": {
          "type": "boolean",
          "title": "Resource quota can be allocated"
        },
        "description": {
          "type": "string",
          "title": "gpu workload type resources description"
        },
        "aliasZh": {
          "type": "string",
          "title": "gpu workload type resources zh alias"
        },
        "range": {
          "$ref": "#/definitions/v1alpha1ResourceRange",
          "title": "gpu resource range"
        },
        "available": {
          "$ref": "#/definitions/v1alpha1AvailableResource",
          "title": "available gpu resource number\nif we don't need it\nwill return nil"
        }
      }
    },
    "v1alpha1GPUSetting": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type is gpu card type"
        },
        "alias": {
          "type": "string",
          "title": "alias is gpu card alias"
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUResourceSetting"
          },
          "title": "gpu card resource setting"
        }
      }
    },
    "v1alpha1GPUSummary": {
      "type": "object",
      "properties": {
        "node": {
          "type": "string",
          "description": "node defines the cluster node name."
        },
        "vgpuTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "vgpu_types defines a array restore vGPU types of the node."
        }
      }
    },
    "v1alpha1GVR": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResources."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResources."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition."
        }
      }
    },
    "v1alpha1Gateway": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha1GatewayAPI": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1GenericWebhookTrigger": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "triggerFilter": {
          "$ref": "#/definitions/v1alpha1TriggerFilter"
        },
        "scmConfiguration": {
          "$ref": "#/definitions/v1alpha1SCMConfiguration"
        },
        "apiUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetAPIResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1APIResourceList"
          }
        }
      }
    },
    "v1alpha1GetApplicationRevisionMetadataResponse": {
      "type": "object",
      "properties": {
        "signatureInfo": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "author": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetApplicationStatusResponse": {
      "type": "object",
      "properties": {
        "healthStatusHealthy": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusProgressing": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusDegraded": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusSuspended": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusMissing": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusUnknown": {
          "type": "string",
          "format": "int64"
        },
        "syncStatusSynced": {
          "type": "string",
          "format": "int64"
        },
        "syncStatusOutOfSync": {
          "type": "string",
          "format": "int64"
        },
        "syncStatusUnknown": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1GetBranchResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the pipeline created."
        },
        "name": {
          "type": "string",
          "description": "The name of the branch."
        },
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Branch"
          },
          "description": "The list of branch result."
        }
      },
      "description": "GetBranchResponse return the result of scanning multi branch."
    },
    "v1alpha1GetBuildParameterResponse": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ParameterDefinition"
          },
          "title": "The build parameters for a specific pipeline"
        }
      },
      "description": "Response build parameter for the `GetBuildParameter` method."
    },
    "v1alpha1GetClusterResourceJSONRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        }
      },
      "title": "GetClusterResourceJSONRequest represents get request to get one\nCustomResource of cluster scope"
    },
    "v1alpha1GetClusterResourceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the CustomResource YAML details"
        }
      },
      "title": "GetClusterResourceJSONResponse represents response of get one\nCustomResource json of cluster scope"
    },
    "v1alpha1GetCodeAnalyzeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1CodeAnalyzeStatus"
        },
        "sonarqubeProjectUrl": {
          "type": "string"
        },
        "codeBugs": {
          "type": "string"
        },
        "codeVulnerabilities": {
          "type": "string"
        },
        "codeHotspotsReviewedPercentage": {
          "type": "string"
        },
        "codeSmells": {
          "type": "string"
        },
        "codeDuplicationsPercentage": {
          "type": "string"
        },
        "codeCoveragePercentage": {
          "type": "string"
        },
        "codeLines": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetControlPlaneNamespaceResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetDashboardUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetDeploymentJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the Deployment YAML details"
        }
      },
      "description": "Deployment data information in json format."
    },
    "v1alpha1GetGatewayResponse": {
      "type": "object",
      "properties": {
        "gateway": {
          "$ref": "#/definitions/v1alpha1Gateway"
        }
      }
    },
    "v1alpha1GetGitlabCredentialNameResponse": {
      "type": "object",
      "properties": {
        "credentialName": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetHelmChartValuesResponse": {
      "type": "object",
      "properties": {
        "readme": {
          "type": "string",
          "title": "The readme represents for the helm charts readme file contents"
        },
        "appReadme": {
          "type": "string",
          "title": "The app_readme represents for the helm charts app_readme file contents"
        },
        "values": {
          "type": "string",
          "title": "The values represents for the helm charts values file contents"
        },
        "questions": {
          "type": "string",
          "title": "The questions represents for the helm charts questions file contents"
        },
        "chart": {
          "type": "string",
          "title": "The chart represents for the helm charts chart file contents"
        },
        "schemaJson": {
          "type": "string",
          "title": "The schema_json represents for the helm charts schema_json file contents"
        }
      }
    },
    "v1alpha1GetHelmChartsResponseItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1GetImageInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/v1alpha1ImageInfo"
        },
        "origin": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetJenkinsJSONResponse": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "description": "The json content."
        }
      },
      "title": "GetJenkinsJSONRequest the response for get jenkinsjson"
    },
    "v1alpha1GetJunitReportResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JunitResultItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1GetJunitSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1JunitSummary"
        }
      }
    },
    "v1alpha1GetNamespaceQuotaResponse": {
      "type": "object",
      "properties": {
        "resourceQuota": {
          "$ref": "#/definitions/corev1alpha1ResourceQuota",
          "description": "resource quota of the namespace."
        }
      }
    },
    "v1alpha1GetOverridePolicyResponse": {
      "type": "object",
      "properties": {
        "overridePolicy": {
          "$ref": "#/definitions/v1alpha1OverridePolicy",
          "description": "The new state of the OverridePolicy."
        }
      },
      "title": "Get OverridePolicy represents the response of get one override policy"
    },
    "v1alpha1GetPipelineArtifactsDownloadTokenResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetPipelineArtifactsResponse": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineArtifact"
          }
        }
      }
    },
    "v1alpha1GetPipelineMetricsDashboardResponse": {
      "type": "object",
      "properties": {
        "dashboard": {
          "$ref": "#/definitions/v1alpha1PipelineMetricsDashboard"
        }
      }
    },
    "v1alpha1GetPipelineRunLogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "The log where the pipeline run returned."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "the size of all logs."
        },
        "delivered": {
          "type": "integer",
          "format": "int32",
          "description": "the size included in this request."
        }
      },
      "description": "GetPipelineRunLogRequest build parameter for the `GetPipelineRunLogs` method."
    },
    "v1alpha1GetPipelineRunNodesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRunNode"
          }
        }
      },
      "description": "GetPipelineRunNodesResponse build parameter for the `ListPipelineRunNodes` method."
    },
    "v1alpha1GetPipelineRunStepLogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "The log where the specific pipeline run step log returned."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "size refers to the overall size of the current log"
        },
        "delivered": {
          "type": "integer",
          "format": "int32",
          "title": "delivered refers to the length of the response log"
        }
      },
      "description": "GetPipelineRunLogsRequest build parameter for the `GetPipelineRunLogs` method."
    },
    "v1alpha1GetPipelineRunStepsResponse": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRunStep"
          }
        }
      },
      "description": "GetPipelineRunStepsResponse is the result for the `GetPipelineRunSteps` method."
    },
    "v1alpha1GetPluginInstallationInformationResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      }
    },
    "v1alpha1GetPropagationPolicyJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the PropagationPolicy YAML details"
        }
      },
      "description": "PropagationPolicy data information in json format."
    },
    "v1alpha1GetPropagationPolicyResponse": {
      "type": "object",
      "properties": {
        "propagationPolicy": {
          "$ref": "#/definitions/policyv1alpha1PropagationPolicy",
          "description": "The new state of the propagationPolicy."
        }
      },
      "title": "Get PropagationPolicy represents the response of get one propagation policy"
    },
    "v1alpha1GetResourceJSONRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        }
      },
      "title": "GetResourceJSONRequest represents get request to get one CustomResource\nof namespaced scope"
    },
    "v1alpha1GetResourceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the CustomResource YAML details"
        }
      },
      "title": "GetResourceJSONResponse represents response of get one\nCustomResource'json of namespaced scope"
    },
    "v1alpha1GetRolloutJsonResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetScanlogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "The log content."
        }
      },
      "title": "GetScanlogResponse the response of scanlog"
    },
    "v1alpha1GetSonarqubeCredentialNameResponse": {
      "type": "object",
      "properties": {
        "credentialName": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetWorkspaceQuotaResponse": {
      "type": "object",
      "properties": {
        "quota": {
          "$ref": "#/definitions/corev1alpha1ResourceQuota"
        }
      }
    },
    "v1alpha1GitLabConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Deprecated, username and password will remove in the future."
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "accessible address of instance"
        },
        "token": {
          "type": "string",
          "description": "the token of gitlab."
        }
      }
    },
    "v1alpha1GitLabProjectField": {
      "type": "object",
      "properties": {
        "visibility": {
          "$ref": "#/definitions/v1alpha1Visibility"
        }
      }
    },
    "v1alpha1GitLabProjectInfo": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "repoUrl": {
          "$ref": "#/definitions/v1alpha1RepoUrl"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainStatus": {
          "type": "boolean"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1Source"
        },
        "lastActiveAt": {
          "type": "string",
          "format": "int64"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1GitSource": {
      "type": "object",
      "properties": {
        "gitRepository": {
          "$ref": "#/definitions/apipipelinev1alpha1GitRepository"
        },
        "credentialId": {
          "type": "string"
        },
        "discoverBranches": {
          "type": "boolean"
        },
        "regexFilter": {
          "type": "string"
        },
        "cloneOptions": {
          "$ref": "#/definitions/v1alpha1CloneOptions"
        }
      }
    },
    "v1alpha1GitlabBranch": {
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/v1alpha1GitlabCommit"
        },
        "name": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        },
        "diffUrl": {
          "type": "string"
        },
        "mergeUrl": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "protected": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1GitlabCommit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1GitlabProjectDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "branches": {
          "type": "integer",
          "format": "int32"
        },
        "commits": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "integer",
          "format": "int32"
        },
        "files": {
          "type": "string"
        },
        "storage": {
          "type": "string"
        },
        "releases": {
          "type": "integer",
          "format": "int32"
        },
        "sshUrlToRepo": {
          "type": "string"
        },
        "httpUrlToRepo": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        },
        "defaultBranch": {
          "type": "string"
        }
      }
    },
    "v1alpha1GitlabTag": {
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/v1alpha1GitlabCommit"
        },
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        },
        "protected": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1HTTPRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/v1alpha1NetworkProtocol"
        }
      }
    },
    "v1alpha1HeaderRoutingMatch": {
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string",
          "title": "HeaderName the name of the request header"
        },
        "headerValue": {
          "$ref": "#/definitions/v1alpha1StringMatch",
          "title": "HeaderValue the value of the header"
        }
      }
    },
    "v1alpha1HealthInspection": {
      "type": "object",
      "properties": {
        "containerLivenessCheck": {
          "$ref": "#/definitions/HealthInspectionPublicInspectionBody"
        },
        "containerReadinessCheck": {
          "$ref": "#/definitions/HealthInspectionPublicInspectionBody"
        },
        "containerStartupCheck": {
          "$ref": "#/definitions/HealthInspectionPublicInspectionBody"
        }
      }
    },
    "v1alpha1HelmChart": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1HelmChartMetadata"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removed": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1HelmChartDependency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the name of the dependency.\nThis must mach the name in the dependency's Chart.yaml."
        },
        "version": {
          "type": "string",
          "description": "version is the version (range) of this chart.\nA lock file will always produce a single version, while a dependency\nmay contain a semantic version range."
        },
        "repository": {
          "type": "string",
          "description": "The URL to the repository.\nAppending `index.yaml` to this string should result in a URL that can be\nused to fetch the repository index."
        },
        "condition": {
          "type": "string",
          "title": "A yaml path that resolves to a boolean, used for enabling/disabling charts (e.g. subchart1.enabled )"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "tags can be used to group charts for enabling/disabling together"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled bool determines if chart should be loaded"
        },
        "importValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "import_values holds the mapping of source values to parent key to be imported. Each item can be a\nstring or pair of child/parent sublist items."
        },
        "alias": {
          "type": "string",
          "title": "alias usable alias to be used for the chart"
        }
      },
      "description": "Dependencies can be used to express developer intent, or to capture the state\nof a chart."
    },
    "v1alpha1HelmChartMaintainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is a user name or organization name"
        },
        "email": {
          "type": "string",
          "title": "email is an optional email address to contact the named maintainer"
        },
        "url": {
          "type": "string",
          "title": "url is an optional URL to an address for the named maintainer"
        }
      },
      "description": "Maintainer describes a Chart maintainer."
    },
    "v1alpha1HelmChartMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the chart. Required."
        },
        "home": {
          "type": "string",
          "title": "The URL to a relevant project page, git repo, or contact person"
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Source is the URL to the source code of this chart"
        },
        "version": {
          "type": "string",
          "description": "A SemVer 2 conformant version string of the chart. Required."
        },
        "description": {
          "type": "string",
          "title": "A one-sentence description of the chart"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of string keywords"
        },
        "maintainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChartMaintainer"
          },
          "title": "A list of name and URL/email address combinations for the maintainer(s)"
        },
        "icon": {
          "type": "string",
          "description": "The URL to an icon file."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API Version of this chart. Required."
        },
        "condition": {
          "type": "string",
          "title": "The condition to check to enable chart"
        },
        "tags": {
          "type": "string",
          "title": "The tags to check to enable chart"
        },
        "appVersion": {
          "type": "string",
          "description": "The version of the application enclosed inside of this chart."
        },
        "deprecated": {
          "type": "boolean",
          "title": "Whether or not this chart is deprecated"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations are additional mappings uninterpreted by Helm,\nmade available for inspection by other applications."
        },
        "kubeVersion": {
          "type": "string",
          "description": "KubeVersion is a SemVer constraint specifying the version of Kubernetes required."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChartDependency"
          },
          "description": "Dependencies are a list of dependencies for a chart."
        },
        "type": {
          "type": "string",
          "title": "Specifies the chart type: application or library"
        },
        "repo": {
          "type": "string",
          "description": "The repo name which the charts belongs to."
        }
      },
      "description": "Metadata for a Chart file. This models the structure of a Chart.yaml file."
    },
    "v1alpha1HelmChartVersions": {
      "type": "object",
      "properties": {
        "chartVersion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChart"
          }
        }
      }
    },
    "v1alpha1HelmCharts": {
      "type": "object",
      "properties": {
        "entries": {
          "$ref": "#/definitions/v1alpha1HelmChartVersions"
        }
      }
    },
    "v1alpha1HelmFileParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the Helm parameter"
        },
        "path": {
          "type": "string",
          "title": "Path is the path to the file containing the values for the Helm parameter"
        }
      },
      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation"
    },
    "v1alpha1HelmParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the Helm parameter"
        },
        "value": {
          "type": "string",
          "title": "Value is the value for the Helm parameter"
        },
        "forceString": {
          "type": "boolean",
          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
        }
      },
      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation"
    },
    "v1alpha1HelmRelease": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1HelmReleaseMetadata"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ReleaseSpec",
          "description": "ReleaseSpec describes how the release execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleaseStatus",
          "description": "ReleaseStatus contains the release status."
        }
      }
    },
    "v1alpha1HelmReleaseMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cluster": {
          "type": "string"
        },
        "workspaceAlias": {
          "type": "string"
        }
      }
    },
    "v1alpha1HelmRepo": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1HelmRepoMetadata"
        },
        "spec": {
          "$ref": "#/definitions/HelmRepoSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1HelmRepoStatus"
        }
      }
    },
    "v1alpha1HelmRepoMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cluster": {
          "type": "string"
        },
        "workspaceAlias": {
          "type": "string"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HelmRepoMetadataOwnerReference"
          }
        }
      }
    },
    "v1alpha1HelmRepoStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/StatusRepoPhase"
        },
        "indexConfigmapName": {
          "type": "string"
        },
        "indexConfigmapNamespace": {
          "type": "string"
        },
        "downloadTime": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1HttpApiItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of http api"
        },
        "method": {
          "$ref": "#/definitions/v1alpha1HttpMethod",
          "title": "The method of http api"
        },
        "url": {
          "type": "string",
          "title": "The url of http api"
        },
        "desc": {
          "type": "string",
          "title": "The description of http api"
        }
      },
      "title": "HttpApiItem represents each http api"
    },
    "v1alpha1HttpApiResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HttpApiItem"
          }
        }
      },
      "title": "HttpApiResponse the response for get http api in pipeline"
    },
    "v1alpha1HttpMethod": {
      "type": "string",
      "enum": [
        "HTTP_METHOD_UNSPECIFIED",
        "HTTP_METHOD_GET",
        "HTTP_METHOD_POST",
        "HTTP_METHOD_UPDATE",
        "HTTP_METHOD_DELETE",
        "HTTP_METHOD_PUT",
        "HTTP_METHOD_PATCH"
      ],
      "default": "HTTP_METHOD_UNSPECIFIED",
      "title": "HttpMethod the main http method"
    },
    "v1alpha1Icon": {
      "type": "object",
      "properties": {
        "base64Data": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        }
      },
      "title": "Icon defines a base64 encoded icon and media type"
    },
    "v1alpha1ImageComponent": {
      "type": "string",
      "enum": [
        "Registry",
        "Repository",
        "Tag"
      ],
      "default": "Registry",
      "description": "ImageComponent indicates the components for image.\n\n - Registry: Registry is the registry component of an image with format '[registry/]repository[:tag]'.\n - Repository: Repository is the repository component of an image with format '[registry/]repository[:tag]'.\n - Tag: Tag is the tag component of an image with format '[registry/]repository[:tag]'."
    },
    "v1alpha1ImageInfo": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "global": {
          "type": "boolean",
          "title": "registry global or private"
        }
      }
    },
    "v1alpha1ImageOverrider": {
      "type": "object",
      "properties": {
        "predicate": {
          "$ref": "#/definitions/v1alpha1ImagePredicate",
          "title": "Predicate filters images before applying the rule.\nDefaults to nil, in that case, the system will automatically detect image fields if the resource type is\n+optional"
        },
        "component": {
          "$ref": "#/definitions/v1alpha1ImageComponent",
          "description": "+kubebuilder:validation:Enum=Registry;Repository;Tag\n+required",
          "title": "Component is part of image name.\nBasically we presume an image can be made of '[registry/]repository[:tag]'.\nThe registry could be:\n- k8s.gcr.io\n- fictional.registry.example:10443\nThe repository could be:\n- kube-apiserver\n- fictional/nginx\nThe tag cloud be:\n- latest\n- v1.19.1\n- @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1OverriderOperator",
          "title": "Operator represents the operator which will apply on the image.\n+kubebuilder:validation:Enum=add;remove;replace\n+required"
        },
        "value": {
          "type": "string",
          "title": "Value to be applied to image.\nMust not be empty when operator is 'add' or 'replace'.\nDefaults to empty and ignored when operator is 'remove'.\n+optional"
        }
      }
    },
    "v1alpha1ImagePredicate": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path indicates the path of target field\n+required"
        }
      },
      "description": "ImagePredicate describes images filter."
    },
    "v1alpha1ImageSelector": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "title": "kangaroo instance name"
        },
        "project": {
          "type": "string",
          "title": "kangaroo project name"
        },
        "image": {
          "type": "string",
          "title": "image name in taget project"
        },
        "tag": {
          "type": "string",
          "title": "image tag"
        },
        "host": {
          "type": "string",
          "title": "instance address"
        }
      }
    },
    "v1alpha1IngressClassSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of ingress class"
        },
        "isDefaultClass": {
          "type": "boolean",
          "description": "IsDefaultClass is used to indicate that an IngressClass should be considered default."
        },
        "kind": {
          "type": "string",
          "description": "Kind field is an implementation identifier of ingress, e.g. k8s.io/ingress-nginx."
        }
      }
    },
    "v1alpha1Input": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ok": {
          "type": "string"
        },
        "submitter": {
          "type": "string"
        }
      },
      "title": "Input the input in pipeline"
    },
    "v1alpha1InstallMode": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1InstallModeType"
        },
        "supported": {
          "type": "boolean"
        }
      },
      "description": "InstallMode associates an InstallModeType with a flag representing if the CSV supports it."
    },
    "v1alpha1InstallModeType": {
      "type": "string",
      "enum": [
        "INSTALL_MODE_TYPE_UNSPECIFIED",
        "INSTALL_MODE_TYPE_OWN_NAMESPACE",
        "INSTALL_MODE_TYPE_SINGLE_NAMESPACE",
        "INSTALL_MODE_TYPE_MULTI_NAMESPACE",
        "INSTALL_MODE_TYPE_ALL_NAMESPACES"
      ],
      "default": "INSTALL_MODE_TYPE_UNSPECIFIED"
    },
    "v1alpha1InstanceType": {
      "type": "string",
      "enum": [
        "INSTANCE_TYPE_UNSPECIFIED",
        "INSTANCE_TYPE_JIRA",
        "INSTANCE_TYPE_GITLAB",
        "INSTANCE_TYPE_JENKINS",
        "INSTANCE_TYPE_SONARQUBE",
        "INSTANCE_TYPE_TESTLINK",
        "INSTANCE_TYPE_NEXUS"
      ],
      "default": "INSTANCE_TYPE_UNSPECIFIED"
    },
    "v1alpha1IntegrationType": {
      "type": "string",
      "enum": [
        "INTEGRATION_TYPE_UNSPECIFIED",
        "INTEGRATION_TYPE_USER",
        "INTEGRATION_TYPE_ADMIN"
      ],
      "default": "INTEGRATION_TYPE_UNSPECIFIED"
    },
    "v1alpha1JSONToJenkinsFileResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1JVMMonitorSpec": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1JavaOptsEnv": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1JenkinsConfig": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "tlsConfig": {
          "$ref": "#/definitions/v1alpha1TlsConfig"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha1JenkinsFileToJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1JenkinsPipelineInfo": {
      "type": "object",
      "properties": {
        "workspace": {
          "type": "string",
          "title": "the workspace of pipeline in jenkins"
        },
        "name": {
          "type": "string",
          "title": "the name of pipeline in jenkins"
        }
      }
    },
    "v1alpha1JiraConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "accessible address of instance"
        }
      }
    },
    "v1alpha1JiraIssue": {
      "type": "object",
      "properties": {
        "expand": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "reporter": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1JiraIssueType"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "$ref": "#/definitions/v1alpha1JiraPriority"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1JiraIssueStatus"
        },
        "names": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1JiraIssueStatus": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1alpha1JiraIssueType": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subTask": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1JiraPriority": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "statusColor": {
          "type": "string"
        }
      }
    },
    "v1alpha1JiraProjectInfo": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainName": {
          "type": "string"
        }
      }
    },
    "v1alpha1JsonnetVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "code": {
          "type": "boolean"
        }
      },
      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation"
    },
    "v1alpha1JunitResult": {
      "type": "string",
      "enum": [
        "JUNIT_RESULT_UNSPECIFIED",
        "JUNIT_RESULT_PASSED",
        "JUNIT_RESULT_SKIPPED",
        "JUNIT_RESULT_FAILED",
        "JUNIT_RESULT_FIXED",
        "JUNIT_RESULT_REGRESSION",
        "JUNIT_RESULT_EXISTING_FAILED"
      ],
      "default": "JUNIT_RESULT_UNSPECIFIED"
    },
    "v1alpha1JunitResultItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "duration": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1alpha1JunitSummary": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "skipped": {
          "type": "integer",
          "format": "int32"
        },
        "passed": {
          "type": "integer",
          "format": "int32"
        },
        "fixed": {
          "type": "integer",
          "format": "int32"
        },
        "regression": {
          "type": "integer",
          "format": "int32"
        },
        "existingFailed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1KeyWords": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1LabelAnnotationOverrider": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/v1alpha1OverriderOperator",
          "title": "Operator represents the operator which will apply on the workload.\n+kubebuilder:validation:Enum=add;remove;replace\n+required"
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Value to be applied to annotations/labels of workload.\nItems in Value which will be appended after annotations/labels when Operator is 'add'.\nItems in Value which match in annotations/labels will be deleted when Operator is 'remove'.\nItems in Value which match in annotations/labels will be replaced when Operator is 'replace'.\n+required"
        }
      },
      "title": "LabelAnnotationOverrider represents the rules dedicated to handling workload labels/annotations"
    },
    "v1alpha1LabelContainers": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1LabelsAndAnnotations": {
      "type": "object",
      "properties": {
        "containerLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "containerAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workloadLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workloadAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1LifeCycle": {
      "type": "object",
      "properties": {
        "startCommand": {
          "$ref": "#/definitions/LifeCycleStartCommand"
        },
        "postStartCommand": {
          "$ref": "#/definitions/LifeCyclePreAndPostStartCommand"
        },
        "preStopCommand": {
          "$ref": "#/definitions/LifeCyclePreAndPostStartCommand"
        }
      }
    },
    "v1alpha1ListAllStorageClassesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StorageClass"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/kpandaioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListPersistentVolumeClaimsRequest represents the response of list storage class"
    },
    "v1alpha1ListApplicationEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ApplicationEvent"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListApprovalPermissionUserResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Member"
          }
        }
      }
    },
    "v1alpha1ListArtifactsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Items is a list of tag names."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListArtifactsResponse returns a list of tags of specified image"
    },
    "v1alpha1ListBindedSonarqubeResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SonarqubeInfo"
          }
        }
      }
    },
    "v1alpha1ListBoundClusterResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1Cluster"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListBoundNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/amambaioapicorev1alpha1Namespace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListClusterClusterServiceVersionCustomResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterServiceVersionCustomResource"
          }
        },
        "pages": {
          "$ref": "#/definitions/kolmioapitypesPage",
          "title": "Pagination is for data paging"
        }
      }
    },
    "v1alpha1ListClusterClusterServiceVersionsRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "workspace": {
          "type": "integer",
          "format": "int32"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListClusterClusterServiceVersionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterServiceVersion"
          }
        }
      }
    },
    "v1alpha1ListClusterGPUSummaryResponse": {
      "type": "object",
      "properties": {
        "gpuSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUSummary"
          },
          "description": "summary defines a array restore GUP type summary of all nodes."
        }
      }
    },
    "v1alpha1ListClusterNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListClusterNamespaceNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListClusterNamespaceSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kpandaioapicorev1alpha1NamespaceSummary"
          },
          "title": "Data is the returned namespace summary list"
        },
        "accessScope": {
          "$ref": "#/definitions/v1alpha1ListClusterNamespaceSummaryResponseScope",
          "description": "AccessScope indicates whether the user has the cluster right."
        }
      }
    },
    "v1alpha1ListClusterNamespaceSummaryResponseScope": {
      "type": "string",
      "enum": [
        "SCOPE_UNSPECIFIED",
        "Cluster",
        "Namespaced"
      ],
      "default": "SCOPE_UNSPECIFIED",
      "description": "Scope is an enum defining the different scopes available to the namespaces.\nAllowed values are `Cluster` and `Namespaced`."
    },
    "v1alpha1ListClusterResourcesRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResources belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResources."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResources."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "name": {
          "type": "string",
          "description": "name is used for query."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "fuzzyName": {
          "type": "string",
          "description": "FuzzyName is used to fuzzy search by multiple parameters including name."
        },
        "showDetail": {
          "type": "boolean",
          "title": "ShowDetail is the presentation details, including metadata, spec, and status"
        },
        "csvName": {
          "type": "string",
          "title": "list cr created by crd in csv"
        },
        "csvNamespace": {
          "type": "string"
        },
        "sortDir": {
          "$ref": "#/definitions/kolmioapitypesSortDir"
        },
        "sortBy": {
          "$ref": "#/definitions/kolmioapitypesSortBy"
        }
      },
      "title": "ListClusterResourcesRequest requests all CustomResources of cluster scope"
    },
    "v1alpha1ListClusterResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiresourcesv1alpha1Resource"
          },
          "title": "Data represents the response of CustomResource"
        },
        "pages": {
          "$ref": "#/definitions/kolmioapitypesPage",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListClusterResourcesResponse represents list all CustomResources of\ncluster scope in cluster"
    },
    "v1alpha1ListClusterServiceVersionCustomResourceDefinitionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListClusterServiceVersionCustomResourceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterServiceVersionCustomResource"
          }
        },
        "pages": {
          "$ref": "#/definitions/kolmioapitypesPage",
          "title": "Pagination is for data paging"
        }
      }
    },
    "v1alpha1ListClusterServiceVersionResourceExamplesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1ListClusterServiceVersionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterServiceVersion"
          }
        }
      }
    },
    "v1alpha1ListClusterSriovAllocatedResourcesResponse": {
      "type": "object",
      "properties": {
        "allocatedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AllocatedResource"
          }
        }
      },
      "title": "ListClusterSriovAllocatedResourcesResponse is a response for node sriov-related resources"
    },
    "v1alpha1ListClustersLabelsResponse": {
      "type": "object",
      "properties": {
        "clusterLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterLabels"
          },
          "description": "ClustersLabels describe labels of member cluster."
        }
      },
      "description": "ListClustersLabelsResponse returns all member cluster labels of Karmada instance."
    },
    "v1alpha1ListClustersLocationsSummaryResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterLocation"
          },
          "title": "total clusters locations list"
        }
      },
      "description": "ListClustersLocationsSummaryResponse return all kpanda-cluster's zones and regions."
    },
    "v1alpha1ListClustersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiclusterv1alpha1Cluster"
          },
          "title": "data The data field is the YAML details"
        },
        "pagination": {
          "$ref": "#/definitions/kairshipioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Clusters information List."
    },
    "v1alpha1ListCollectionResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListConfigMapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1ConfigMap"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/kairshipioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/appsv1alpha1Deployment"
          },
          "title": "Data represents the kairship's workload types of inclusion"
        },
        "pagination": {
          "$ref": "#/definitions/kairshipioapitypesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "description": "Response message for the `ListDeployments` method."
    },
    "v1alpha1ListFeatureGatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1FeatureGate"
          }
        }
      }
    },
    "v1alpha1ListGPUSettingResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUSetting"
          },
          "description": "The plugins in the specific cluster."
        }
      }
    },
    "v1alpha1ListGatewayAPIResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GatewayAPI"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListGitlabAllBranchesAndTagsResponse": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GitlabBranch"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GitlabTag"
          }
        }
      }
    },
    "v1alpha1ListGitlabProjectBranchesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GitlabBranch"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListGitlabProjectTagsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GitlabTag"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Group"
          }
        }
      }
    },
    "v1alpha1ListHelmChartsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChart"
          }
        },
        "categories": {
          "$ref": "#/definitions/ListHelmChartsResponseCategoryItem"
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmReleaseResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRelease"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmRepoResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRepo"
          }
        }
      }
    },
    "v1alpha1ListIngressClassSummaryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1IngressClassSummary"
          }
        }
      }
    },
    "v1alpha1ListJiraProjectIssuesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JiraIssue"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListJiraSearchKeywordResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "priorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "creators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        }
      }
    },
    "v1alpha1ListMetallbIPPoolResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1MetallbIPPool"
          },
          "description": "List of  MetallbIPPool."
        },
        "pagination": {
          "$ref": "#/definitions/kpandaioapitypesPagination",
          "description": "Page defines the pagination detail be return."
        }
      }
    },
    "v1alpha1ListNamespaceSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kairshipioapicorev1alpha1NamespaceSummary"
          },
          "title": "Data is the returned namespace summary list"
        },
        "accessScope": {
          "$ref": "#/definitions/v1alpha1ListNamespaceSummaryResponseScope",
          "description": "AccessScope indicates whether the user has the cluster right."
        }
      }
    },
    "v1alpha1ListNamespaceSummaryResponseScope": {
      "type": "string",
      "enum": [
        "SCOPE_UNSPECIFIED",
        "Instance",
        "Namespace"
      ],
      "default": "SCOPE_UNSPECIFIED",
      "description": "Scope is an enum defining the different scopes available to the namespaces.\nAllowed values are `Instance` and `Namespace`."
    },
    "v1alpha1ListNodeLabelResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LabelContainers"
          }
        }
      }
    },
    "v1alpha1ListNodesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1Node"
          },
          "description": "Node name."
        },
        "pagination": {
          "$ref": "#/definitions/kpandaioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Nodes information."
    },
    "v1alpha1ListOverridePoliciesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1OverridePolicy"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/kairshipioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of OverridePolicy information."
    },
    "v1alpha1ListPipelinePluginResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelinePlugin"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListPipelineRunsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRun"
          },
          "title": "Array of pipeline run"
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Response message for the `ListPipelineRuns` method."
    },
    "v1alpha1ListPipelinesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Pipeline"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Response message for the `ListPipelines` method."
    },
    "v1alpha1ListPlatformRolePermissionsForCurrentUserResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items is a list of project names."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListProjectsResponse returns a list of projects of a registry"
    },
    "v1alpha1ListPropagationPoliciesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/policyv1alpha1PropagationPolicy"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/kairshipioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of PropagationPolicy information."
    },
    "v1alpha1ListRegistriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListRegistriesResponse returns a list of registries"
    },
    "v1alpha1ListRolePermissionsByWorkspaceForCurrentUserResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListRolloutContainersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1ContainerStatus"
          }
        }
      }
    },
    "v1alpha1ListRolloutsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1Rollout"
          },
          "description": "List of rollouts found in a given cluster and namespace."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListSecretsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1Secret"
          },
          "description": "Secret name."
        },
        "pagination": {
          "$ref": "#/definitions/kairshipioapitypesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Secrets data details."
    },
    "v1alpha1ListSonarqubeBindWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SonarqubeInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Template"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListToolchainResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ToolchainResource"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListToolchainResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ToolChainInstance"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListWorkloadsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Workload"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListWorkspaceBindGitLabProjectListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GitLabProjectInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListWorkspaceBindJiraProjectListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JiraProjectInfo"
          }
        }
      }
    },
    "v1alpha1ListWorkspacePipelinePluginResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelinePlugin"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1ListWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Workspace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha1Maintainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "Maintainer represents information about the maintainer of the operator."
    },
    "v1alpha1ManualWebhookTrigger": {
      "type": "object",
      "properties": {
        "webhookTrigger": {
          "type": "boolean"
        },
        "webhookUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1MatchPolicyType": {
      "type": "string",
      "enum": [
        "MATCH_POLICY_TYPE_UNSPECIFIED",
        "MATCH_POLICY_TYPE_EXACT",
        "MATCH_POLICY_TYPE_EQUIVALENT"
      ],
      "default": "MATCH_POLICY_TYPE_UNSPECIFIED",
      "description": "MatchPolicyType specifies the type of match policy.\n\n - MATCH_POLICY_TYPE_EXACT: Exact means requests should only be sent to the webhook if they exactly match a given rule.\n - MATCH_POLICY_TYPE_EQUIVALENT: Equivalent means requests should be sent to the webhook if they modify a resource listed in rules via another API group or version."
    },
    "v1alpha1Member": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1alpha1MetallbIPPool": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kpandaioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1MetallbIPPoolSpec",
          "description": "Spec is the desired state of the SpiderIPPool."
        }
      },
      "description": "Ingress is a collection of rules that allow inbound connections to reach the\nendpoints defined by a backend. An Ingress can be configured to give services\nexternally-reachable urls, load balance traffic, terminate SSL, offer name\nbased virtual hosting etc."
    },
    "v1alpha1MetallbIPPoolSpec": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IP address ranges over which MetalLB has authority.\nYou can list multiple ranges in a single pool, they will all share the\nsame settings. Each range can be either a CIDR prefix, or an explicit\nstart-end range of IPs."
        },
        "autoAssign": {
          "type": "boolean",
          "title": "AutoAssign flag used to prevent MetallB from automatic allocation\nfor a pool.\n+optional\n+kubebuilder:default:=true"
        },
        "avoidBuggyIPs": {
          "type": "boolean",
          "title": "AvoidBuggyIPs prevents addresses ending with .0 and .255\nto be used by a pool.\n+optional\n+kubebuilder:default:=false"
        }
      }
    },
    "v1alpha1MetricsProtocol": {
      "type": "string",
      "enum": [
        "METRICS_PROTOCOL_UNSPECIFIED",
        "METRICS_PROTOCOL_HTTP",
        "METRICS_PROTOCOL_HTTPS"
      ],
      "default": "METRICS_PROTOCOL_UNSPECIFIED"
    },
    "v1alpha1MicroServiceArch": {
      "type": "string",
      "enum": [
        "MICRO_SERVICE_ARCH_UNSPECIFIED",
        "MICRO_SERVICE_ARCH_TRADITIONAL",
        "MICRO_SERVICE_ARCH_SERVICE_MESH"
      ],
      "default": "MICRO_SERVICE_ARCH_UNSPECIFIED"
    },
    "v1alpha1MicroServiceSpec": {
      "type": "object",
      "properties": {
        "arch": {
          "$ref": "#/definitions/v1alpha1MicroServiceArch",
          "title": "Deprecated\nMicroServiceArch could be traditional or service_mesh"
        },
        "traditional": {
          "$ref": "#/definitions/v1alpha1MicroServiceTraditional",
          "title": "traditional microservice"
        },
        "serviceMesh": {
          "$ref": "#/definitions/v1alpha1ServiceMesh",
          "title": "service mesh microservice"
        }
      }
    },
    "v1alpha1MicroServiceTraditional": {
      "type": "object",
      "properties": {
        "framework": {
          "$ref": "#/definitions/v1alpha1Framework",
          "title": "SDK name, could be SPRING_CLOUD, DUBBO, SPIDER_MESH, use SPRING_CLOUD by default"
        },
        "nacosName": {
          "type": "string"
        },
        "registrationNamespaceId": {
          "type": "string"
        },
        "registrationGroup": {
          "type": "string"
        },
        "registrationInstanceGroup": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "enableSentinel": {
          "type": "boolean"
        },
        "existsInSkoala": {
          "type": "boolean",
          "title": "Whether it can be queried in skoala"
        },
        "nacosNamespace": {
          "type": "string",
          "title": "the nacos belong to which cluster"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled traditional microservice"
        },
        "serviceMonitor": {
          "$ref": "#/definitions/v1alpha1ServiceMonitor"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JavaOptsEnv"
          },
          "title": "user defined env"
        }
      }
    },
    "v1alpha1NamedInstallStrategy": {
      "type": "object",
      "properties": {
        "strategyName": {
          "type": "string"
        },
        "strategySpec": {
          "$ref": "#/definitions/v1alpha1StrategyDetailsDeployment"
        }
      },
      "description": "NamedInstallStrategy represents the block of a ClusterServiceVersion resource where the install strategy is specified."
    },
    "v1alpha1NetworkCard": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ipv4Subnet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1NetworkCardConfiguration": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/v1alpha1NetworkCard"
        },
        "others": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkCard"
          }
        },
        "stableIpPool": {
          "type": "boolean"
        },
        "elasticIp": {
          "type": "boolean"
        },
        "defaultIpPool": {
          "type": "boolean"
        },
        "ipNums": {
          "type": "integer",
          "format": "int32"
        },
        "customRoute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CustomRoute"
          }
        }
      }
    },
    "v1alpha1NetworkProtocol": {
      "type": "string",
      "enum": [
        "NETWORK_PROTOCOL_UNSPECIFIED",
        "NETWORK_PROTOCOL_HTTP",
        "NETWORK_PROTOCOL_HTTPS"
      ],
      "default": "NETWORK_PROTOCOL_UNSPECIFIED"
    },
    "v1alpha1NexusConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "v1alpha1NexusRepositoryField": {
      "type": "object",
      "properties": {
        "linkUrl": {
          "type": "string"
        },
        "copyUrl": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "v1alpha1NodePhase": {
      "type": "string",
      "enum": [
        "NODE_PHASE_UNSPECIFIED",
        "Ready",
        "Not_Ready",
        "Unknown"
      ],
      "default": "NODE_PHASE_UNSPECIFIED",
      "description": "Phase includes Ready, NotReady, and Unknown.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown."
    },
    "v1alpha1NodeStatusRole": {
      "type": "string",
      "enum": [
        "NODE_ROLE_UNSPECIFIED",
        "CONTROL_PLANE",
        "WORKER"
      ],
      "default": "NODE_ROLE_UNSPECIFIED",
      "description": "Role includes control-plane and worker.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload."
    },
    "v1alpha1NodeStatusStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1NodePhase"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1NodeCondition"
          },
          "description": "NodeCondition contains condition information for a node."
        }
      },
      "description": "Status is the current observed node condition."
    },
    "v1alpha1ObservabilitySpec": {
      "type": "object",
      "properties": {
        "serviceMonitor": {
          "$ref": "#/definitions/v1alpha1ServiceMonitor"
        },
        "trace": {
          "$ref": "#/definitions/v1alpha1TraceSpec"
        },
        "jvmMonitor": {
          "$ref": "#/definitions/v1alpha1JVMMonitorSpec"
        }
      }
    },
    "v1alpha1OperationInitiator": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username contains the name of a user who started operation"
        },
        "automated": {
          "type": "boolean",
          "description": "Automated is set to true if operation was initiated automatically by the application controller."
        }
      },
      "title": "OperationInitiator contains information about the initiator of an operation"
    },
    "v1alpha1OperationState": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/applicationv1alpha1Operation",
          "title": "Operation is the original requested operation"
        },
        "phase": {
          "type": "string",
          "title": "Phase is the current phase of the operation"
        },
        "message": {
          "type": "string",
          "description": "Message holds any pertinent messages when attempting to perform operation (typically errors)."
        },
        "syncResult": {
          "$ref": "#/definitions/v1alpha1SyncOperationResult",
          "title": "SyncResult is the result of a Sync operation"
        },
        "startedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "StartedAt contains time of operation start"
        },
        "finishedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "FinishedAt contains time of operation completion"
        },
        "retryCount": {
          "type": "string",
          "format": "int64",
          "title": "RetryCount contains time of operation retries"
        }
      },
      "title": "OperationState contains information about state of a running operation"
    },
    "v1alpha1OperatorVersion": {
      "type": "object",
      "properties": {
        "major": {
          "type": "string",
          "format": "uint64"
        },
        "minor": {
          "type": "string",
          "format": "uint64"
        },
        "patch": {
          "type": "string",
          "format": "uint64"
        },
        "prVersion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PRVersion"
          }
        },
        "build": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1OrphanedItemStrategy": {
      "type": "object",
      "properties": {
        "daysToKeepOldItems": {
          "type": "integer",
          "format": "int32",
          "title": "Days to keep old items"
        },
        "maxOfOldItemsToKeep": {
          "type": "integer",
          "format": "int32",
          "title": "Max of old items to keep"
        }
      }
    },
    "v1alpha1OverridePolicy": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1OverridePolicySpec",
          "description": "Spec represents the desired behavior of OverridePolicy."
        }
      },
      "description": "OverridePolicy represents the policy that overrides a group of resources to one or more clusters."
    },
    "v1alpha1OverridePolicySpec": {
      "type": "object",
      "properties": {
        "resourceSelectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceSelector"
          },
          "title": "ResourceSelectors used to select resources.\n+optional"
        },
        "overrideRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RuleWithCluster"
          },
          "title": "OverrideRules defines a collection of override rules on target clusters.\n+optional"
        }
      }
    },
    "v1alpha1OverriderOperator": {
      "type": "string",
      "enum": [
        "add",
        "remove",
        "replace"
      ],
      "default": "add"
    },
    "v1alpha1Overriders": {
      "type": "object",
      "properties": {
        "plaintext": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PlaintextOverrider"
          },
          "title": "Plaintext represents override rules defined with plaintext overriders.\n+optional"
        },
        "imageOverrider": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ImageOverrider"
          },
          "title": "ImageOverrider represents the rules dedicated to handling image overrides.\n+optional"
        },
        "commandOverrider": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          },
          "title": "CommandOverrider represents the rules dedicated to handling container command\n+optional"
        },
        "argsOverrider": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CommandArgsOverrider"
          },
          "title": "ArgsOverrider represents the rules dedicated to handling container args\n+optional"
        },
        "labelsOverrider": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LabelAnnotationOverrider"
          },
          "title": "LabelsOverrider represents the rules dedicated to handling workload labels\n+optional"
        },
        "annotationsOverrider": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LabelAnnotationOverrider"
          },
          "title": "AnnotationsOverrider represents the rules dedicated to handling workload annotations\n+optional"
        }
      }
    },
    "v1alpha1PRVersion": {
      "type": "object",
      "properties": {
        "versionStr": {
          "type": "string"
        },
        "versionNum": {
          "type": "string"
        },
        "isNum": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1ParamValidate": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "requiredMessage": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "patternMessage": {
          "type": "string"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "immutable": {
          "type": "boolean"
        },
        "default": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ValidateOption"
          }
        },
        "min": {
          "type": "number",
          "format": "float"
        },
        "max": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1alpha1ParameterDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of parameter"
        },
        "defaultValue": {
          "type": "string",
          "title": "The default value of parameter\n+optional"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ParameterType",
          "title": "The type of parameter"
        },
        "description": {
          "type": "string",
          "title": "The description of this parameter\n+optional"
        }
      }
    },
    "v1alpha1ParameterType": {
      "type": "string",
      "enum": [
        "PARAMETER_TYPE_UNSPECIFIED",
        "PARAMETER_TYPE_TEXT",
        "PARAMETER_TYPE_STRING",
        "PARAMETER_TYPE_BOOLEAN",
        "PARAMETER_TYPE_CHOICE",
        "PARAMETER_TYPE_PASSWORD",
        "PARAMETER_TYPE_STASHED_FILE"
      ],
      "default": "PARAMETER_TYPE_UNSPECIFIED",
      "title": "The type of jenkins build parameters,supported type: text, string, boolean, choice, password"
    },
    "v1alpha1Pipeline": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the pipeline will be created."
        },
        "name": {
          "type": "string",
          "description": "The name of the pipeline."
        },
        "description": {
          "type": "string",
          "title": "The description of the pipeline.\n+optional"
        },
        "jenkinsfile": {
          "type": "string",
          "title": "The jenksinfile defines how pipeline runs, such as nodes, steps and agent.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PipelineStatus",
          "description": "The status describes the information of runs for the pipeline."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ParameterDefinition"
          },
          "title": "The parameters when create a pipeline\n+optional"
        },
        "lastPipelineRunState": {
          "$ref": "#/definitions/v1alpha1PipelineRunState",
          "description": "The status of the pipeline last build."
        },
        "totalRunTimes": {
          "type": "string",
          "format": "int64",
          "description": "The last run status of the pipeline."
        },
        "lastRunTime": {
          "type": "string",
          "format": "int64",
          "description": "The last run time of the pipeline."
        },
        "totalSuccessTimes": {
          "type": "string",
          "format": "int64",
          "description": "The total run times of the pipeline successfully."
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "weather": {
          "$ref": "#/definitions/v1alpha1PipelineWeather",
          "description": "The pipeline weather."
        },
        "buildConfig": {
          "$ref": "#/definitions/v1alpha1BuildConfig",
          "title": "The build config of pipeline"
        },
        "triggers": {
          "$ref": "#/definitions/v1alpha1BuildTrigger",
          "title": "The build triggers for pipeline"
        },
        "pipelineScm": {
          "$ref": "#/definitions/v1alpha1PipelineScm",
          "title": "Configuration to create a pipeline based on a codebase"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1PipelineType",
          "title": "The type of pipeline"
        },
        "pipelineMultiBranch": {
          "$ref": "#/definitions/v1alpha1PipelineMultiBranch",
          "title": "The multi branch pipeline"
        },
        "genericWebhookTrigger": {
          "$ref": "#/definitions/v1alpha1GenericWebhookTrigger",
          "title": "The webhook"
        },
        "manualWebhookTrigger": {
          "$ref": "#/definitions/v1alpha1ManualWebhookTrigger"
        },
        "group": {
          "$ref": "#/definitions/v1alpha1Group"
        }
      },
      "description": "Response message for the `CreatePipeline`, `GetPipeline`, `UpdatePipeline` and `UpdatePipelineJenkinsfile` method."
    },
    "v1alpha1PipelineArtifact": {
      "type": "object",
      "properties": {
        "downloadable": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/PipelineArtifactLinks"
        }
      }
    },
    "v1alpha1PipelineMetricsDashboard": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1PipelineMultiBranch": {
      "type": "object",
      "properties": {
        "gitSource": {
          "$ref": "#/definitions/v1alpha1GitSource"
        },
        "scriptPath": {
          "type": "string"
        },
        "interval": {
          "type": "string",
          "format": "int64",
          "title": "Interval to scan repo branches, in unit milliseconds"
        },
        "orphanedItemStrategy": {
          "$ref": "#/definitions/v1alpha1OrphanedItemStrategy"
        }
      }
    },
    "v1alpha1PipelinePlugin": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1PluginMetadata"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PluginSpec"
        },
        "raw": {
          "type": "string"
        }
      }
    },
    "v1alpha1PipelineRun": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the pipeline will be created."
        },
        "name": {
          "type": "string",
          "description": "The name of the pipeline."
        },
        "runId": {
          "type": "string",
          "format": "int64",
          "description": "The id of the build."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1PipelineRunState",
          "description": "The PipelineRunState of the build."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "The update_at is pipeline run status update time"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "The update_at is pipeline run status update time"
        },
        "duration": {
          "type": "string",
          "format": "int64",
          "title": "This uptime is a continuous event for pipeline status"
        },
        "triggerType": {
          "$ref": "#/definitions/v1alpha1TriggerBuildType",
          "title": "This trigger_type is pipeline trigger build type"
        },
        "branchInfo": {
          "$ref": "#/definitions/v1alpha1BranchInfo",
          "title": "This branch_info is the info of branch"
        },
        "startAt": {
          "type": "string",
          "format": "int64",
          "description": "The pipeline run start time."
        }
      },
      "description": "Response message for the `CreatePipelineRun`, `GetPipelineRun`, `ReplayPipelineRun` and \n`CancelPipelineRun` method."
    },
    "v1alpha1PipelineRunEdge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of edge"
        },
        "type": {
          "type": "string",
          "title": "The type of edge"
        }
      },
      "title": "PipelineRunEdge the edge of pipeline run node"
    },
    "v1alpha1PipelineRunNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/v1alpha1BlueOceanResult"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1BlueOceanNodeType"
        },
        "firstParent": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRunEdge"
          }
        },
        "restartable": {
          "type": "boolean"
        },
        "durationInMillis": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "PipelineRunNode the node of pipeline run"
    },
    "v1alpha1PipelineRunState": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "QUEUE",
        "RUNNING",
        "SUCCESS",
        "FAILED",
        "CANCELED",
        "ERROR",
        "NOT_BUILT",
        "PAUSED",
        "SKIPPED"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "The status of the pipeline."
    },
    "v1alpha1PipelineRunStep": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "durationInMillis": {
          "type": "string",
          "format": "int64"
        },
        "displayDescription": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/v1alpha1BlueOceanResult"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1BlueOceanStepType"
        },
        "input": {
          "$ref": "#/definitions/v1alpha1Input"
        }
      },
      "title": "PipelineRunStep the single step for pipeline run"
    },
    "v1alpha1PipelineScm": {
      "type": "object",
      "properties": {
        "gitRepository": {
          "$ref": "#/definitions/apipipelinev1alpha1GitRepository",
          "title": "Code repository address"
        },
        "credentialId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "jenkinsFilePath": {
          "type": "string"
        },
        "scmType": {
          "$ref": "#/definitions/v1alpha1ScmType"
        }
      }
    },
    "v1alpha1PipelineStatus": {
      "type": "object",
      "properties": {
        "healthScore": {
          "type": "integer",
          "format": "int32",
          "title": "The healthy score state of the latest N pipelineruns. 0-100, e.x.: mapping to Jenkins healthReport.score"
        }
      }
    },
    "v1alpha1PipelineType": {
      "type": "string",
      "enum": [
        "PIPELINE_TYPE_UNSPECIFIED",
        "PIPELINE_TYPE_CUSTOM",
        "PIPELINE_TYPE_SCM",
        "PIPELINE_TYPE_TEMPLATE",
        "PIPELINE_TYPE_MULTI_BRANCH"
      ],
      "default": "PIPELINE_TYPE_UNSPECIFIED",
      "title": "The type of pipeline: scm or custom"
    },
    "v1alpha1PipelineWeather": {
      "type": "string",
      "enum": [
        "PIPELINE_WEATHER_UNSPECIFIED",
        "PIPELINE_WEATHER_SUNNY",
        "PIPELINE_WEATHER_PARTIALLY",
        "PIPELINE_WEATHER_CLOUDY",
        "PIPELINE_WEATHER_RAINING",
        "PIPELINE_WEATHER_STORM"
      ],
      "default": "PIPELINE_WEATHER_UNSPECIFIED",
      "description": "The weather of the pipeline.\n\n - PIPELINE_WEATHER_SUNNY: No recent builds failed.\n - PIPELINE_WEATHER_PARTIALLY: 80% of recent builds success.\n - PIPELINE_WEATHER_CLOUDY: 60% of recent builds success.\n - PIPELINE_WEATHER_RAINING: 40% of recent builds success.\n - PIPELINE_WEATHER_STORM: All recent builds failed."
    },
    "v1alpha1Placement": {
      "type": "object",
      "properties": {
        "clusterAffinity": {
          "$ref": "#/definitions/v1alpha1ClusterAffinity",
          "title": "ClusterAffinity represents scheduling restrictions to a certain set of clusters.\nIf not set, any cluster can be scheduling candidate.\n+optional"
        },
        "clusterTolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apipolicyv1alpha1Toleration"
          },
          "title": "ClusterTolerations represents the tolerations.\n+optional"
        },
        "spreadConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SpreadConstraint"
          },
          "title": "SpreadConstraints represents a list of the scheduling constraints.\n+optional"
        },
        "replicaScheduling": {
          "$ref": "#/definitions/v1alpha1ReplicaSchedulingStrategy",
          "description": "ReplicaScheduling represents the scheduling policy on dealing with the number of replicas\nwhen propagating resources that have replicas in spec (e.g. deployments, statefulsets) to member clusters."
        },
        "clusterAffinities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterAffinityTerm"
          },
          "description": "ClusterAffinities represents scheduling restrictions to multiple cluster\ngroups that indicated by ClusterAffinityTerm."
        }
      }
    },
    "v1alpha1PlaintextOverrider": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path indicates the path of target field"
        },
        "operator": {
          "type": "string",
          "title": "Operator indicates the operation on target field.\nAvailable operators are: add, update and remove.\n+kubebuilder:validation:Enum=add;remove;replace"
        },
        "value": {
          "$ref": "#/definitions/v1JSON",
          "title": "Value to be applied to target field.\nMust be empty when operator is Remove.\n+optional"
        }
      }
    },
    "v1alpha1Plugin": {
      "type": "object",
      "properties": {
        "contour": {
          "$ref": "#/definitions/v1alpha1PluginContour"
        }
      }
    },
    "v1alpha1PluginCategory": {
      "type": "string",
      "enum": [
        "PluginCategory_UNSPECIFIED",
        "PluginCategory_Others",
        "PluginCategory_Build",
        "PluginCategory_Test",
        "PluginCategory_Security",
        "PluginCategory_Release",
        "PluginCategory_Deploy",
        "PluginCategory_Command",
        "PluginCategory_General",
        "PluginCategory_Repository",
        "PluginCategory_Quality"
      ],
      "default": "PluginCategory_UNSPECIFIED"
    },
    "v1alpha1PluginContour": {
      "type": "object",
      "properties": {
        "httpProxies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateway": {
          "type": "string",
          "title": "read only, used for display. when CanaryType is CONTOUR, this field is the name of the gateway"
        }
      }
    },
    "v1alpha1PluginMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1PluginParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sort": {
          "type": "string",
          "format": "int64"
        },
        "uiType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "uiConfig": {
          "$ref": "#/definitions/v1alpha1PluginUIConfig"
        },
        "validateConfig": {
          "$ref": "#/definitions/v1alpha1ParamValidate"
        },
        "env": {
          "type": "string"
        },
        "dependProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1PluginSource": {
      "type": "string",
      "enum": [
        "PluginSource_UNSPECIFIED",
        "PluginSource_BUILTIN",
        "PluginSource_CUSTOM"
      ],
      "default": "PluginSource_UNSPECIFIED"
    },
    "v1alpha1PluginSpec": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "shell": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "entrypoint": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PluginParameter"
          }
        }
      }
    },
    "v1alpha1PluginStatus": {
      "type": "string",
      "enum": [
        "PluginStatus_UNSPECIFIED",
        "PluginStatus_Enable",
        "PluginStatus_Disable"
      ],
      "default": "PluginStatus_UNSPECIFIED"
    },
    "v1alpha1PluginUIConfig": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "tips": {
          "type": "string"
        },
        "helper": {
          "type": "string"
        }
      }
    },
    "v1alpha1PropagationPolicySpec": {
      "type": "object",
      "properties": {
        "resourceSelectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceSelector"
          },
          "description": "ResourceSelectors used to select resources."
        },
        "placement": {
          "$ref": "#/definitions/v1alpha1Placement",
          "description": "Placement represents the rule for select clusters to propagate resources."
        },
        "propagateDeps": {
          "type": "boolean",
          "description": "PropagateDeps tells if relevant resources should be propagated automatically.\nTake 'Deployment' which referencing 'ConfigMap' and 'Secret' as an example, when 'propagateDeps' is 'true',\nthe referencing resources could be omitted(for saving config effort) from 'resourceSelectors' as they will be\npropagated along with the Deployment. In addition to the propagating process, the referencing resources will be\nmigrated along with the Deployment in the fail-over scenario."
        },
        "dependentOverrides": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "DependentOverrides represents the list of propagations(PropagationPolicy)\nwhich must present before the current PropagationPolicy takes effect.\n\nIt used to explicitly specify propagations which current PropagationPolicy rely on.\nA typical scenario is the users create PropagationPolicy(ies) and resources at the same time,\nthey want to ensure the new-created policies would be adopted.\n\nNote: For the propagations, PropagationPolicy(ies) in current namespace and ClusterPropagationPolicy(ies),\nwhich not present in this list will still be applied if they matches the resources.\n+optional"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "Priority indicates the importance of a policy(PropagationPolicy or ClusterPropagationPolicy).\nA policy will be applied for the matched resource templates if there is\nno other policies with higher priority at the point of the resource\ntemplate be processed.\nOnce a resource template has been claimed by a policy, by default it will\nnot be preempted by following policies even with a higher priority.\n+kubebuilder:default=0"
        }
      }
    },
    "v1alpha1PrunePropagationPolicy": {
      "type": "string",
      "enum": [
        "Foreground",
        "Background",
        "Orphan"
      ],
      "default": "Foreground",
      "description": " - Foreground: Foreground means that the object will be deleted in the foreground.\nSet `foreground` by default.\n - Background: Background means that the object will be deleted in\nthe background.\n - Orphan: Orphan means that the object will be orphaned."
    },
    "v1alpha1Redirect": {
      "type": "object",
      "properties": {
        "redirectKpandaUrl": {
          "type": "string",
          "title": "the url redirect to kpanda ui"
        },
        "redirectMspiderUrl": {
          "type": "string",
          "title": "the url redirect to mspider ui"
        },
        "redirectPipelineUrl": {
          "type": "string",
          "title": "the url redirect to pipeline"
        },
        "redirectSkoalaUrl": {
          "type": "string",
          "title": "the url redirect to skoala service ui"
        }
      }
    },
    "v1alpha1RefreshType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "NORMAL",
        "HARD"
      ],
      "default": "UNSPECIFIED"
    },
    "v1alpha1Registry": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Alias is an alias for the registry, showed in list."
        },
        "host": {
          "type": "string",
          "description": "Host is registry host."
        },
        "name": {
          "type": "string",
          "description": "Name is registry name, use to query project lists."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RegistryType"
        }
      },
      "title": "Registry contains necessary info"
    },
    "v1alpha1RegistryType": {
      "type": "string",
      "enum": [
        "REGISTRY_TYPE_UNSPECIFIED",
        "REGISTRY_TYPE_HARBOR",
        "REGISTRY_TYPE_DOCKER",
        "REGISTRY_TYPE_JFROG"
      ],
      "default": "REGISTRY_TYPE_UNSPECIFIED"
    },
    "v1alpha1ReinvocationPolicyType": {
      "type": "string",
      "enum": [
        "REINVOCATION_POLICY_TYPE_UNSPECIFIED",
        "REINVOCATION_POLICY_TYPE_NeverReinvocationPolicy",
        "REINVOCATION_POLICY_TYPE_IfNeededReinvocationPolicy"
      ],
      "default": "REINVOCATION_POLICY_TYPE_UNSPECIFIED",
      "description": "ReinvocationPolicyType specifies what type of policy the admission hook uses.\n\n - REINVOCATION_POLICY_TYPE_NeverReinvocationPolicy: NeverReinvocationPolicy indicates that the webhook must not be called more than once in a\nsingle admission evaluation.\n - REINVOCATION_POLICY_TYPE_IfNeededReinvocationPolicy: IfNeededReinvocationPolicy indicates that the webhook may be called at least one\nadditional time as part of the admission evaluation if the object being admitted is\nmodified by other admission plugins after the initial webhook call."
    },
    "v1alpha1RelatedImage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "description": "RelatedImage represents a related container image that the operator requires."
    },
    "v1alpha1ReleaseInfo": {
      "type": "object",
      "properties": {
        "firstDeployed": {
          "type": "string",
          "format": "int64",
          "description": "FirstDeployed is when the release was first deployed."
        },
        "lastDeployed": {
          "type": "string",
          "format": "int64",
          "description": "LastDeployed is when the release was last deployed."
        },
        "deleted": {
          "type": "string",
          "format": "int64",
          "description": "Deleted tracks when this object was deleted."
        },
        "description": {
          "type": "string",
          "description": "Description is human-friendly \"log entry\" about this release."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleasePhase",
          "title": "Status is the current state of the release"
        },
        "notes": {
          "type": "string",
          "title": "Contains the rendered templates/NOTES.txt if available"
        },
        "readme": {
          "type": "string"
        }
      }
    },
    "v1alpha1ReleasePhase": {
      "type": "string",
      "enum": [
        "RELEASE_PHASE_UNSPECIFIED",
        "unknown",
        "deployed",
        "uninstalled",
        "superseded",
        "failed",
        "uninstalling",
        "pending_install",
        "pending_upgrade",
        "pending_rollback"
      ],
      "default": "RELEASE_PHASE_UNSPECIFIED",
      "description": " - RELEASE_PHASE_UNSPECIFIED: The release state is unspecified.\n - unknown: unknown indicates that a release is in an uncertain state.\n - deployed: deployed indicates that the release has been pushed to Kubernetes.\n - uninstalled: uninstalled indicates that a release has been uninstalled from Kubernetes.\n - superseded: superseded indicates that this release object is outdated and a newer one exists.\n - failed: failed indicates that the release was not successfully deployed.\n - uninstalling: uninstalling indicates that a uninstall operation is underway.\n - pending_install: pending_install indicates that an install operation is underway.\n - pending_upgrade: pending_upgrade indicates that an upgrade operation is underway.\n - pending_rollback: pending_rollback indicates that an rollback operation is underway."
    },
    "v1alpha1ReleaseResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion of the resource."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the resource."
        }
      },
      "title": "ReleaseResource belongs to ReleaseSpec"
    },
    "v1alpha1ReleaseSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the release"
        },
        "info": {
          "$ref": "#/definitions/v1alpha1ReleaseInfo",
          "title": "Info provides information about a release"
        },
        "chart": {
          "$ref": "#/definitions/v1alpha1HelmChart",
          "description": "HelmChart is the chart that was released."
        },
        "values": {
          "type": "string",
          "description": "Config is the set of extra Values added to the chart.\nThese values override the default values inside of the chart."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReleaseResource"
          },
          "description": "Manifest is the string representation of the rendered template."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version is an int which represents the version of the release."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the kubernetes namespace of the release."
        },
        "helmMajorVersion": {
          "type": "integer",
          "format": "int32",
          "title": "HelmMajorVersion is the helm major version"
        }
      }
    },
    "v1alpha1ReleaseStatus": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/v1alpha1Summary"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Resource"
          },
          "description": "Resources contain resource phase info."
        }
      }
    },
    "v1alpha1ReplicaDivisionPreference": {
      "type": "string",
      "enum": [
        "REPLICA_DIVISION_PREFERENCE_UNSPECIFIED",
        "Aggregated",
        "Weighted"
      ],
      "default": "REPLICA_DIVISION_PREFERENCE_UNSPECIFIED",
      "description": " - Aggregated: Aggregated divides replicas into clusters as few as possible,\nwhile respecting clusters' resource availabilities during the division.\n - Weighted: Weighted divides replicas by weight according to WeightPreference."
    },
    "v1alpha1ReplicaSchedulingStrategy": {
      "type": "object",
      "properties": {
        "replicaSchedulingType": {
          "$ref": "#/definitions/v1alpha1ReplicaSchedulingType",
          "title": "ReplicaSchedulingType determines how the replicas is scheduled when karmada propagating\na resource. Valid options are Duplicated and Divided.\n\"Duplicated\" duplicates the same replicas to each candidate member cluster from resource.\n\"Divided\" divides replicas into parts according to number of valid candidate member\nclusters, and exact replicas for each cluster are determined by ReplicaDivisionPreference.\n+optional"
        },
        "replicaDivisionPreference": {
          "$ref": "#/definitions/v1alpha1ReplicaDivisionPreference",
          "title": "ReplicaDivisionPreference determines how the replicas is divided\nwhen ReplicaSchedulingType is \"Divided\". Valid options are Aggregated and Weighted.\n\"Aggregated\" divides replicas into clusters as few as possible,\nwhile respecting clusters' resource availabilities during the division.\n\"Weighted\" divides replicas by weight according to WeightPreference.\n+optional"
        },
        "weightPreference": {
          "$ref": "#/definitions/v1alpha1ClusterPreferences",
          "title": "WeightPreference describes weight for each cluster or for each group of cluster\nIf ReplicaDivisionPreference is set to \"Weighted\", and WeightPreference is not set, scheduler will weight all clusters the same.\n+optiona"
        }
      },
      "description": "ReplicaSchedulingStrategy represents the assignment strategy of replicas."
    },
    "v1alpha1ReplicaSchedulingType": {
      "type": "string",
      "enum": [
        "REPLICA_SCHEDULING_TYPE_UNSPECIFIED",
        "Duplicated",
        "Divided"
      ],
      "default": "REPLICA_SCHEDULING_TYPE_UNSPECIFIED",
      "description": " - Duplicated: Duplicated means when propagating a resource,\neach candidate member cluster will directly apply the original replicas.\n - Divided: Divided means when propagating a resource,\neach candidate member cluster will get only a part of original replicas."
    },
    "v1alpha1ReplicaSetHealthStatus": {
      "type": "string",
      "enum": [
        "REPLICA_SET_HEALTH_STATUS_UNSPECIFIED",
        "REPLICA_SET_HEALTH_STATUS_REPLICA_FAILURE",
        "REPLICA_SET_HEALTH_STATUS_PROGRESSING",
        "REPLICA_SET_HEALTH_STATUS_SCALED_DOWN",
        "REPLICA_SET_HEALTH_STATUS_HEALTHY"
      ],
      "default": "REPLICA_SET_HEALTH_STATUS_UNSPECIFIED"
    },
    "v1alpha1ReplicaSetInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "ReplicaSet name"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReplicaSetHealthStatus",
          "title": "replicaset health status"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "Rollout revision"
        },
        "stable": {
          "type": "boolean",
          "title": "Is it a stable version"
        },
        "canary": {
          "type": "boolean",
          "title": "Is it a canary version"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "scaleDownDeadline": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutv1alpha1PodInfo"
          },
          "title": "pod information created by replicaSets"
        },
        "active": {
          "type": "boolean",
          "title": "it is active version"
        },
        "preview": {
          "type": "boolean",
          "title": "it is preview version"
        }
      },
      "title": "Reference ReplicaSetInfo defined in\nhttps://github.com/argoproj/argo-rollouts/blob/94cdfd5aa4d316f1621167fef8c606befcaf78a6/pkg/apiclient/rollout/rollout.proto#L111"
    },
    "v1alpha1Repo": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1RepoType": {
      "type": "string",
      "enum": [
        "Git",
        "Helm"
      ],
      "default": "Git"
    },
    "v1alpha1RepoUrl": {
      "type": "object",
      "properties": {
        "https": {
          "type": "string"
        },
        "ssh": {
          "type": "string"
        }
      }
    },
    "v1alpha1RequirementStatus": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1StatusReason"
        },
        "message": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "dependents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1DependentStatus"
          }
        }
      },
      "description": "RequirementStatus represents the status of a requirement."
    },
    "v1alpha1ResourceIgnoreDifferences": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "jsonPointers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jqPathExpressions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedFieldsManagers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs"
        }
      },
      "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state."
    },
    "v1alpha1ResourceInstance": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "description": "ResourceInstance represents a single instance of a resource."
    },
    "v1alpha1ResourcePhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "InProgress",
        "Failed",
        "Current",
        "Terminating",
        "NotFound",
        "Unknown"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": "The set of status conditions which can be assigned to resources.\n\n - PHASE_UNSPECIFIED: Phase unspecified.\n - InProgress: Resource in progress.\n - Failed: Resource failed.\n - Current: Resource current.\n - Terminating: Resource Terminating.\n - NotFound: Resource NotFound.\n - Unknown: Resource Unknown."
    },
    "v1alpha1ResourceRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "title": "resource min value"
        },
        "minDesc": {
          "type": "string",
          "title": "min resource description"
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "title": "resource max value"
        },
        "maxDesc": {
          "type": "string",
          "title": "max resource description"
        }
      }
    },
    "v1alpha1ResourceResult": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "Group specifies the API group of the resource"
        },
        "version": {
          "type": "string",
          "title": "Version specifies the API version of the resource"
        },
        "kind": {
          "type": "string",
          "title": "Kind specifies the API kind of the resource"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace of the resource"
        },
        "name": {
          "type": "string",
          "title": "Name specifies the name of the resource"
        },
        "status": {
          "type": "string",
          "title": "Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks"
        },
        "message": {
          "type": "string",
          "title": "Message contains an informational or error message for the last sync OR operation"
        },
        "hookType": {
          "type": "string",
          "title": "HookType specifies the type of the hook. Empty for non-hook resources"
        },
        "hookPhase": {
          "type": "string",
          "description": "HookPhase contains the state of any operation associated with this resource OR hook\nThis can also contain values for non-hook resources."
        },
        "syncPhase": {
          "type": "string",
          "title": "SyncPhase indicates the particular phase of the sync that this result was acquired in"
        }
      },
      "title": "ResourceResult holds the operation result details of a specific resource"
    },
    "v1alpha1ResourceSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "APIVersion represents the API version of the target resources.\n+required"
        },
        "kind": {
          "type": "string",
          "title": "Kind represents the Kind of the target resources.\n+required"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the target resource.\nDefault is empty, which means inherit from the parent object scope.\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the target resource.\nDefault is empty, which means selecting all resources.\n+optional"
        },
        "labelSelector": {
          "$ref": "#/definitions/kairshipioapitypesLabelSelector",
          "title": "A label query over a set of resources.\nIf name is not empty, labelSelector will be ignored.\n+optional"
        }
      }
    },
    "v1alpha1ResourceStatus": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "health": {
          "$ref": "#/definitions/apisapplicationv1alpha1HealthStatus"
        },
        "hook": {
          "type": "boolean"
        },
        "requiresPruning": {
          "type": "boolean"
        }
      },
      "title": "ResourceStatus holds the current sync and health status of a resource\nTODO: describe members of this type"
    },
    "v1alpha1ResourceType": {
      "type": "string",
      "enum": [
        "RESOURCE_TYPE_UNSPECIFIED",
        "RESOURCE_TYPE_JIRA_PROJECT",
        "RESOURCE_TYPE_GITLAB_PROJECT",
        "RESOURCE_TYPE_SONARQUBE",
        "RESOURCE_TYPE_TESTLINK_PROJECT",
        "RESOURCE_TYPE_NEXUS_REPOSITORY"
      ],
      "default": "RESOURCE_TYPE_UNSPECIFIED"
    },
    "v1alpha1RestartPipelineNodeResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha1RetryStrategy": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed."
        },
        "backoff": {
          "$ref": "#/definitions/v1alpha1Backoff",
          "title": "Backoff controls how to backoff on subsequent retries of failed syncs"
        }
      },
      "title": "RetryStrategy contains information about the strategy to apply when a sync failed"
    },
    "v1alpha1RevisionHistory": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "title": "Revision holds the revision the sync was performed against"
        },
        "deployedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "DeployedAt holds the time the sync operation completed"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID is an auto incrementing identifier of the RevisionHistory"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the application source used for the sync operation"
        },
        "deployStartedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "DeployStartedAt holds the time the sync operation started"
        }
      },
      "title": "RevisionHistory contains history information about a previous sync"
    },
    "v1alpha1RolloutAnalysisRunStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha1RolloutInfo": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access."
        },
        "name": {
          "type": "string",
          "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace."
        },
        "deployTarget": {
          "$ref": "#/definitions/applicationv1alpha1DeployTarget",
          "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1RolloutPhase",
          "title": "Rollout Phase"
        },
        "message": {
          "type": "string",
          "title": "Rollout message"
        },
        "workloadRef": {
          "$ref": "#/definitions/v1alpha1WorkloadRef",
          "title": "Rollout refer object name"
        },
        "strategy": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
          "title": "Rollout Strategy, it may be canary or blue_green"
        },
        "currentStep": {
          "type": "integer",
          "format": "int32",
          "title": "current step"
        },
        "setWeight": {
          "type": "string",
          "title": "expected weight"
        },
        "actualWeight": {
          "type": "string",
          "title": "actual weight"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "title": "ready pods number"
        },
        "current": {
          "type": "integer",
          "format": "int32",
          "title": "current pods number"
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "title": "expected pods number"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "title": "/ updated pods number"
        },
        "available": {
          "type": "integer",
          "format": "int32",
          "title": "available pods number"
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReplicaSetInfo"
          },
          "title": "Rollout controlled ReplicaSet information"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "The create time of the rollout."
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1CanaryStep"
          },
          "title": "canary strategy steps"
        },
        "analysisRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AnalysisRunInfo"
          }
        }
      },
      "title": "Reference RolloutInfo defined in\nhttps://github.com/argoproj/argo-rollouts/blob/94cdfd5aa4d316f1621167fef8c606befcaf78a6/pkg/apiclient/rollout/rollout.proto#L73"
    },
    "v1alpha1RolloutPhase": {
      "type": "string",
      "enum": [
        "ROLLOUT_PHASE_UNSPECIFIED",
        "ROLLOUT_PHASE_HEALTHY",
        "ROLLOUT_PHASE_DEGRADED",
        "ROLLOUT_PHASE_PROCESSING",
        "ROLLOUT_PHASE_PAUSED",
        "ROLLOUT_PHASE_SCALEDDOWN"
      ],
      "default": "ROLLOUT_PHASE_UNSPECIFIED"
    },
    "v1alpha1RuleWithCluster": {
      "type": "object",
      "properties": {
        "targetCluster": {
          "$ref": "#/definitions/v1alpha1ClusterAffinity",
          "title": "TargetCluster defines restrictions on this override policy\nthat only applies to resources propagated to the matching clusters.\nnil means matching all clusters.\n+optional"
        },
        "overriders": {
          "$ref": "#/definitions/v1alpha1Overriders",
          "title": "Overriders represents the override rules that would apply on resources\n+required"
        }
      }
    },
    "v1alpha1SCMConfiguration": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1SSHKeyCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "privateKey": {
          "type": "string",
          "description": "The private key of the credential."
        },
        "passphrase": {
          "type": "string",
          "description": "The user password when generate ssh credential."
        }
      }
    },
    "v1alpha1ScanResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1ScanStatus",
          "description": "The log content."
        }
      },
      "title": "GetScanlogResponse the response of scanlog"
    },
    "v1alpha1ScanStatus": {
      "type": "string",
      "enum": [
        "SCAN_STATUS_UNSPECIFIED",
        "SCAN_STATUS_SUCC",
        "SCAN_STATUS_FAILED"
      ],
      "default": "SCAN_STATUS_UNSPECIFIED"
    },
    "v1alpha1SchedulingStrategy": {
      "type": "object",
      "properties": {
        "toleranceTime": {
          "type": "string",
          "format": "int64"
        },
        "nodeAffinities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1NodeAffinity"
          }
        },
        "podAffinity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Affinity"
          }
        },
        "podAntiAffinity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Affinity"
          }
        }
      }
    },
    "v1alpha1SchedulingStrategyCondition": {
      "type": "string",
      "enum": [
        "MUST",
        "PROBABILITY"
      ],
      "default": "MUST"
    },
    "v1alpha1SchedulingStrategyOperators": {
      "type": "string",
      "enum": [
        "IN",
        "NOT_IN",
        "EXISTS",
        "DOES_NOT_EXISTS",
        "LT",
        "GT"
      ],
      "default": "IN",
      "title": "- LT: can only be used for node affinity\n - GT: can only be used for node affinity"
    },
    "v1alpha1SchedulingStrategySelector": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/v1alpha1SchedulingStrategyOperators"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ScmType": {
      "type": "string",
      "enum": [
        "SCM_TYPE_UNSPECIFIED",
        "SCM_TYPE_GIT",
        "SCM_TYPE_CVS",
        "SCM_TYPE_CVS_PROJECT_SET",
        "SCM_TYPE_MERCURIAL",
        "SCM_TYPE_SUBVERSION"
      ],
      "default": "SCM_TYPE_UNSPECIFIED"
    },
    "v1alpha1ServiceMesh": {
      "type": "object",
      "properties": {
        "meshId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1SidecarInjectionStatus",
          "title": "the injection status of workload in service mesh"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled service mesh"
        }
      }
    },
    "v1alpha1ServiceMonitor": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/v1alpha1ServiceMonitorSpec"
        }
      }
    },
    "v1alpha1ServiceMonitorSpec": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Endpoint"
          }
        }
      }
    },
    "v1alpha1SessionAffinity": {
      "type": "string",
      "enum": [
        "ServiceAffinityUnspecified",
        "ServiceAffinityClientIP",
        "ServiceAffinityNone"
      ],
      "default": "ServiceAffinityUnspecified"
    },
    "v1alpha1SetCanaryScale": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "title": "Weight sets the percentage of replicas the newRS should have\n+optional"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Replicas sets the number of replicas the newRS should have\n+optional"
        },
        "matchTrafficWeight": {
          "type": "boolean",
          "title": "MatchTrafficWeight cancels out previously set Replicas or Weight, effectively activating SetWeight\n+optional"
        }
      },
      "title": "SetCanaryScale defines how to scale the newRS without changing traffic weight"
    },
    "v1alpha1SetHeaderRoute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name this is the name of the route to use for the mirroring of traffic this also needs\nto be included in the `spec.strategy.canary.trafficRouting.managedRoutes` field"
        },
        "match": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HeaderRoutingMatch"
          }
        }
      },
      "title": "SetHeaderRoute defines the route with specified header name to send 100% of traffic to the canary service"
    },
    "v1alpha1SideEffectClass": {
      "type": "string",
      "enum": [
        "SIDE_EFFECT_CLASS_UNSPECIFIED",
        "SIDE_EFFECT_CLASS_UNKNOWN",
        "SIDE_EFFECT_CLASS_NONE",
        "SIDE_EFFECT_CLASS_SOME",
        "SIDE_EFFECT_CLASS_NONE_ON_DRY_RUN"
      ],
      "default": "SIDE_EFFECT_CLASS_UNSPECIFIED",
      "description": "SideEffectClass specifies the types of side effects a webhook may have.\n\n - SIDE_EFFECT_CLASS_UNKNOWN: SideEffectClassUnknown means that no information is known about the side effects of calling the webhook.\nIf a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.\n - SIDE_EFFECT_CLASS_NONE: SideEffectClassNone means that calling the webhook will have no side effects.\n - SIDE_EFFECT_CLASS_SOME: SideEffectClassSome means that calling the webhook will possibly have side effects.\nIf a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.\n - SIDE_EFFECT_CLASS_NONE_ON_DRY_RUN: SideEffectClassNoneOnDryRun means that calling the webhook will possibly have side effects, but if the\nrequest being reviewed has the dry-run attribute, the side effects will be suppressed."
    },
    "v1alpha1SidecarInjectionStatus": {
      "type": "string",
      "enum": [
        "SIDECAR_INJECTION_STATUS_UNSPECIFIED",
        "SIDECAR_INJECTION_STATUS_INJECTED",
        "SIDECAR_INJECTION_STATUS_UN_INJECTED",
        "SIDECAR_INJECTION_STATUS_NEED_RESTART"
      ],
      "default": "SIDECAR_INJECTION_STATUS_UNSPECIFIED"
    },
    "v1alpha1SonarqubeConfig": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1alpha1SonarqubeInfo": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "workspaceId": {
          "type": "string"
        },
        "nameInJenkins": {
          "type": "string"
        }
      }
    },
    "v1alpha1Source": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "WORKSPACE",
        "ADMINISTRATOR"
      ],
      "default": "UNSPECIFIED"
    },
    "v1alpha1SpecDescriptor": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "displayAme": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "xDescriptors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "SpecDescriptor describes a field in a spec block of a CRD so that OLM can consume it."
    },
    "v1alpha1SpreadConstraint": {
      "type": "object",
      "properties": {
        "spreadByField": {
          "$ref": "#/definitions/v1alpha1SpreadFieldValue",
          "title": "SpreadByField represents the fields on Karmada cluster API used for\ndynamically grouping member clusters into different groups.\nResources will be spread among different cluster groups.\nAvailable fields for spreading are: cluster, region, zone, and provider.\nSpreadByField should not co-exist with SpreadByLabel.\nIf both SpreadByField and SpreadByLabel are empty, SpreadByField will be set to \"cluster\" by system.\n+optional"
        },
        "spreadByLabel": {
          "type": "string",
          "title": "SpreadByLabel represents the label key used for\ngrouping member clusters into different groups.\nResources will be spread among different cluster groups.\nSpreadByLabel should not co-exist with SpreadByField.\n+optional"
        },
        "maxGroups": {
          "type": "string",
          "format": "int64",
          "description": "MaxGroups restricts the maximum number of cluster groups to be selected."
        },
        "minGroups": {
          "type": "string",
          "format": "int64",
          "description": "MinGroups restricts the minimum number of cluster groups to be selected."
        }
      }
    },
    "v1alpha1SpreadFieldValue": {
      "type": "string",
      "enum": [
        "SPREAD_FIELD_VALUE_UNSPECIFIED",
        "cluster",
        "region",
        "zone",
        "provider"
      ],
      "default": "SPREAD_FIELD_VALUE_UNSPECIFIED",
      "description": "Available fields for spreading are: cluster, region, zone, and provider."
    },
    "v1alpha1StaticClusterWeight": {
      "type": "object",
      "properties": {
        "targetCluster": {
          "$ref": "#/definitions/v1alpha1ClusterAffinity",
          "description": "TargetCluster describes the filter to select clusters."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight expressing the preference to the cluster(s) specified by 'TargetCluster'."
        }
      },
      "description": "StaticClusterWeight defines the static cluster weight."
    },
    "v1alpha1StatusDescriptor": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "xDescriptors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "StatusDescriptor describes a field in a status block of a CRD so that OLM can consume it."
    },
    "v1alpha1StatusReason": {
      "type": "string",
      "enum": [
        "STATUS_REASON_UNSPECIFIED",
        "STATUS_REASON_PRESENT",
        "STATUS_REASON_NOT_PRESENT",
        "STATUS_REASON_PRESENT_NOT_SATISFIED",
        "STATUS_REASON_NOT_AVAILABLE",
        "STATUS_REASON_DEPENDENT_SATISFIED",
        "STATUS_REASON_DEPENDENT_NOT_SATISFIED"
      ],
      "default": "STATUS_REASON_UNSPECIFIED",
      "description": "StatusReason is a camelcased reason for the state transition."
    },
    "v1alpha1StorageClass": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kpandaioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner indicates the type of the provisioner."
        },
        "reclaimPolicy": {
          "$ref": "#/definitions/StorageClassReclaimPolicy",
          "title": "persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim.\nValid options are Retain (default for manually created PersistentVolumes), Delete (default\nfor dynamically provisioned PersistentVolumes), and Recycle (deprecated).\nRecycle must be supported by the volume plugin underlying this PersistentVolume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value\nmeans that this volume does not belong to any StorageClass.\n+optional"
        },
        "volumeBindingMode": {
          "$ref": "#/definitions/StorageClassVolumeBindingMode",
          "title": "VolumeBindingMode indicates how PersistentVolumeClaims should be\nprovisioned and bound.  When unset, VolumeBindingImmediate is used.\nThis field is only honored by servers that enable the VolumeScheduling feature.\n+optional"
        },
        "mountOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Dynamically provisioned PersistentVolumes of this storage class are\ncreated with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated -\nmount of the PVs will simply fail if one is invalid.\n+optional"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Parameters holds the parameters for the provisioner that should\ncreate volumes of this storage class.\n+optional"
        },
        "allowVolumeExpansion": {
          "type": "boolean",
          "title": "AllowVolumeExpansion shows whether the storage class allow volume expand\n+optional"
        }
      },
      "description": "StorageClass describes the parameters for a class of storage for\nwhich PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class\naccording to etcd is in ObjectMeta.Name."
    },
    "v1alpha1StrategyDeploymentPermissions": {
      "type": "object",
      "properties": {
        "serviceAccountName": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PolicyRule"
          }
        }
      },
      "description": "StrategyDeploymentPermissions describe the rbac rules and service account needed by the install strategy."
    },
    "v1alpha1StrategyDeploymentSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/appsv1DeploymentSpec"
        },
        "label": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "StrategyDeploymentSpec contains the name, spec and labels for the deployment ALM should create."
    },
    "v1alpha1StrategyDetailsDeployment": {
      "type": "object",
      "properties": {
        "deploymentSpecs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StrategyDeploymentSpec"
          }
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StrategyDeploymentPermissions"
          }
        },
        "clusterPermissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StrategyDeploymentPermissions"
          }
        }
      },
      "description": "StrategyDetailsDeployment represents the parsed details of a Deployment InstallStrategy."
    },
    "v1alpha1StringMatch": {
      "type": "object",
      "properties": {
        "exact": {
          "type": "string",
          "title": "Exact The string must match exactly"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix The string will be prefixed matched"
        },
        "regex": {
          "type": "string",
          "title": "Regex The string will be regular expression matched"
        }
      },
      "title": "StringMatch Used to define what type of matching we will use exact, prefix, or regular expression"
    },
    "v1alpha1SubmitInputResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      },
      "title": "SubmitInputResponse the response for approval/abort input"
    },
    "v1alpha1Summary": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/v1alpha1ReleasePhase"
        },
        "transitioning": {
          "type": "boolean"
        },
        "error": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1SyncOperation": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec."
        },
        "prune": {
          "type": "boolean",
          "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
        },
        "dryRun": {
          "type": "boolean",
          "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
        },
        "syncStrategy": {
          "$ref": "#/definitions/v1alpha1SyncStrategy",
          "title": "SyncStrategy describes how to perform the sync"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncOperationResource"
          },
          "title": "Resources describes which resources shall be part of the sync"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source overrides the source definition set in the application.\nThis is typically set in a Rollback operation and is nil during a Sync operation"
        },
        "manifests": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Manifests is an optional field that overrides sync source with a local directory for development"
        },
        "syncOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false"
        }
      },
      "description": "SyncOperation contains details about a sync operation."
    },
    "v1alpha1SyncOperationResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "description": "SyncOperationResource contains resources to sync."
    },
    "v1alpha1SyncOperationResult": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceResult"
          },
          "title": "Resources contains a list of sync result items for each individual resource in a sync operation"
        },
        "revision": {
          "type": "string",
          "title": "Revision holds the revision this sync operation was performed to"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source records the application source information of the sync, used for comparing auto-sync"
        }
      },
      "title": "SyncOperationResult represent result of sync operation"
    },
    "v1alpha1SyncOptions": {
      "type": "object",
      "properties": {
        "skipSchemaValidate": {
          "type": "boolean",
          "description": "Following options are false by default."
        },
        "pruneLast": {
          "type": "boolean"
        },
        "applyOutOfSyncOnly": {
          "type": "boolean"
        },
        "respectIgnoreDifferences": {
          "type": "boolean"
        },
        "serverSideApply": {
          "type": "boolean"
        },
        "replace": {
          "type": "boolean"
        },
        "prunePropagationPolicy": {
          "$ref": "#/definitions/v1alpha1PrunePropagationPolicy"
        }
      }
    },
    "v1alpha1SyncPipelineResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "v1alpha1SyncPolicyAutomated": {
      "type": "object",
      "properties": {
        "prune": {
          "type": "boolean",
          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
        },
        "selfHeal": {
          "type": "boolean",
          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
        },
        "allowEmpty": {
          "type": "boolean",
          "title": "AllowEmpty allows apps have zero live resources (default: false)"
        }
      },
      "title": "SyncPolicyAutomated controls the behavior of an automated sync"
    },
    "v1alpha1SyncStrategy": {
      "type": "object",
      "properties": {
        "apply": {
          "$ref": "#/definitions/v1alpha1SyncStrategyApply",
          "description": "Apply will perform a `kubectl apply` to perform the sync."
        },
        "hook": {
          "$ref": "#/definitions/v1alpha1SyncStrategyHook",
          "title": "Hook will submit any referenced resources to perform the sync. This is the default strategy"
        }
      },
      "title": "SyncStrategy controls the manner in which a sync is performed"
    },
    "v1alpha1SyncStrategyApply": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times."
        }
      },
      "title": "SyncStrategyApply uses `kubectl apply` to perform the apply"
    },
    "v1alpha1SyncStrategyHook": {
      "type": "object",
      "properties": {
        "syncStrategyApply": {
          "$ref": "#/definitions/v1alpha1SyncStrategyApply",
          "title": "Embed SyncStrategyApply type to inherit any `apply` options\n+optional"
        }
      },
      "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`."
    },
    "v1alpha1Template": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1TemplateType"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1TemplateParameterDefinition"
          }
        },
        "jenkinsfile": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "raw": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "global": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1TemplateParameterDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of parameter"
        },
        "displayName": {
          "type": "string",
          "title": "Text to display in the form"
        },
        "defaultValue": {
          "type": "string",
          "title": "The default value of parameter, the parameter is required if defaultValue was nil"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1TemplateParameterType",
          "title": "The type of parameter"
        },
        "description": {
          "type": "string",
          "title": "The description of this parameter"
        }
      }
    },
    "v1alpha1TemplateParameterType": {
      "type": "string",
      "enum": [
        "TEMPLATE_PARAMETER_TYPE_UNSPECIFIED",
        "TEMPLATE_PARAMETER_TYPE_TEXT",
        "TEMPLATE_PARAMETER_TYPE_STRING",
        "TEMPLATE_PARAMETER_TYPE_BOOLEAN",
        "TEMPLATE_PARAMETER_TYPE_CHOICE",
        "TEMPLATE_PARAMETER_TYPE_PASSWORD",
        "TEMPLATE_PARAMETER_TYPE_CREDENTIAL",
        "TEMPLATE_PARAMETER_TYPE_TARGET"
      ],
      "default": "TEMPLATE_PARAMETER_TYPE_UNSPECIFIED"
    },
    "v1alpha1TemplateRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the template to reference"
        },
        "parameters": {
          "type": "string",
          "title": "JSON of template parameters to render, as the format of {\"param1\": \"value1\", \"param2\": \"value2\"}"
        },
        "global": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1TemplateType": {
      "type": "string",
      "enum": [
        "TEMPLATE_TYPE_UNSPECIFIED",
        "TEMPLATE_TYPE_BUILTIN",
        "TEMPLATE_TYPE_CUSTOM"
      ],
      "default": "TEMPLATE_TYPE_UNSPECIFIED"
    },
    "v1alpha1TestlinkConfig": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "accessible address of instance"
        },
        "token": {
          "type": "string",
          "description": "the token of testlink."
        }
      }
    },
    "v1alpha1TestlinkProjectField": {
      "type": "object",
      "properties": {
        "public": {
          "type": "boolean"
        },
        "linkUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1TlsConfig": {
      "type": "object",
      "properties": {
        "skipVerify": {
          "type": "boolean"
        },
        "caData": {
          "type": "string"
        }
      }
    },
    "v1alpha1ToolChainInstance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "config": {
          "type": "string",
          "title": "config configuration information of any instance"
        },
        "connectStatus": {
          "type": "boolean",
          "description": "connection status."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1InstanceType",
          "description": "instance type."
        },
        "name": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1IntegrationType"
        },
        "address": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        }
      }
    },
    "v1alpha1ToolchainResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ResourceType"
        },
        "gitlabField": {
          "$ref": "#/definitions/v1alpha1GitLabProjectField"
        },
        "nexusField": {
          "$ref": "#/definitions/v1alpha1NexusRepositoryField"
        },
        "testlinkField": {
          "$ref": "#/definitions/v1alpha1TestlinkProjectField"
        }
      }
    },
    "v1alpha1TraceRuntime": {
      "type": "string",
      "enum": [
        "TRACE_RUNTIME_UNSPECIFIED",
        "TRACE_RUNTIME_DOTNET",
        "TRACE_RUNTIME_NODEJS",
        "TRACE_RUNTIME_JAVA",
        "TRACE_RUNTIME_PYTHON"
      ],
      "default": "TRACE_RUNTIME_UNSPECIFIED"
    },
    "v1alpha1TraceSpec": {
      "type": "object",
      "properties": {
        "runtime": {
          "$ref": "#/definitions/v1alpha1TraceRuntime"
        }
      }
    },
    "v1alpha1TrafficWeights": {
      "type": "object",
      "properties": {
        "canary": {
          "$ref": "#/definitions/v1alpha1WeightDestination",
          "title": "Canary is the current traffic weight split to canary ReplicaSet"
        },
        "stable": {
          "$ref": "#/definitions/v1alpha1WeightDestination",
          "title": "Stable is the current traffic weight split to stable ReplicaSet"
        },
        "additional": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WeightDestination"
          },
          "title": "Additional holds the weights split to additional ReplicaSets such as experiment ReplicaSets"
        },
        "verified": {
          "type": "boolean",
          "title": "Verified is an optional indicator that the weight has been verified to have taken effect.\nThis is currently only applicable to ALB traffic router"
        }
      },
      "title": "TrafficWeights describes the current status of how traffic has been split"
    },
    "v1alpha1TriggerBuildType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "MANUAL",
        "SCHEDULE",
        "SCMCHANGE",
        "WEBHOOK",
        "BRANCH_INDEX"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1alpha1TriggerFilter": {
      "type": "object",
      "properties": {
        "branchFilter": {
          "type": "string"
        },
        "tagFilter": {
          "type": "string"
        },
        "prTriggerEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1UnbindToolchainResourceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ResourceType"
        }
      }
    },
    "v1alpha1UpdateClusterResourceRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the CustomResource belongs to."
        },
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResource."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResource."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        },
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateClusterResourceRequest represents update request to update one\nCustomResource of cluster scope"
    },
    "v1alpha1UpdateJenkinsJSONResponse": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "description": "The json content."
        }
      },
      "title": "UpdateJenkinsJSONResponse the response for update jenkinsjson"
    },
    "v1alpha1UpdateRolloutJsonResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1UpdateWorkloadReplicasResponse": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1UpgradeStrategy": {
      "type": "object",
      "properties": {
        "upgradeType": {
          "$ref": "#/definitions/UpgradeStrategyUpgradeType"
        },
        "maxUnavailable": {
          "type": "string",
          "title": "Maximum number of invalid pods allowed during rolling upgrade (minimum number of available pods = expected number of pods - maximum number of invalid pods)"
        },
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods allowed to exceed the required specifications during each rolling upgrade"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "minReadySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "The minimum time for a pod to be ready, only pods that exceed this time will be considered available"
        },
        "progressDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "The minimum duration of waiting for deployment to proceed before marking deployment as failed"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "The execution window of the command before the workload stops, default to 30 seconds"
        }
      }
    },
    "v1alpha1ValidateOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1ViewType": {
      "type": "string",
      "enum": [
        "VIEW_TYPE_UNSPECIFIED",
        "VIEW_TYPE_TREE",
        "VIEW_TYPE_PODS",
        "VIEW_TYPE_NETWORK",
        "VIEW_TYPE_LIST"
      ],
      "default": "VIEW_TYPE_UNSPECIFIED"
    },
    "v1alpha1Visibility": {
      "type": "string",
      "enum": [
        "VISIBILITY_UNSPECIFIED",
        "VISIBILITY_INTERNAL",
        "VISIBILITY_PRIVATE",
        "VISIBILITY_PUBLIC"
      ],
      "default": "VISIBILITY_UNSPECIFIED"
    },
    "v1alpha1WebhookAdmissionType": {
      "type": "string",
      "enum": [
        "WEBHOOK_ADMISSION_TYPE_UNSPECIFIED",
        "WEBHOOK_ADMISSION_TYPE_VALIDATING_ADMISSION_WEBHOOK",
        "WEBHOOK_ADMISSION_TYPE_MUTATING_ADMISSION_WEBHOOK",
        "WEBHOOK_ADMISSION_TYPE_CONVERSION_WEBHOOK"
      ],
      "default": "WEBHOOK_ADMISSION_TYPE_UNSPECIFIED",
      "description": "WebhookAdmissionType is the type of admission webhooks supported by OLM."
    },
    "v1alpha1WebhookDescription": {
      "type": "object",
      "properties": {
        "generateName": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1WebhookAdmissionType"
        },
        "deploymentName": {
          "type": "string"
        },
        "containerPort": {
          "type": "integer",
          "format": "int32"
        },
        "targetPort": {
          "type": "integer",
          "format": "int32"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RuleWithOperations"
          }
        },
        "failurePolicy": {
          "$ref": "#/definitions/v1alpha1FailurePolicyType"
        },
        "matchPolicy": {
          "$ref": "#/definitions/v1alpha1MatchPolicyType"
        },
        "objectSelector": {
          "$ref": "#/definitions/metav1LabelSelector"
        },
        "sideEffects": {
          "$ref": "#/definitions/v1alpha1SideEffectClass"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "admissionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reinvocationPolicy": {
          "$ref": "#/definitions/v1alpha1ReinvocationPolicyType"
        },
        "webhookPath": {
          "type": "string"
        },
        "conversionCrds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "WebhookDescription provides details to OLM about required webhooks."
    },
    "v1alpha1WeightDestination": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "title": "Weight is an percentage of traffic being sent to this destination"
        },
        "serviceName": {
          "type": "string",
          "title": "ServiceName is the Kubernetes service name traffic is being sent to"
        },
        "podTemplateHash": {
          "type": "string",
          "title": "PodTemplateHash is the pod template hash label for this destination"
        }
      }
    },
    "v1alpha1WorkloadRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Deployment name in the target cluster and namespace."
        }
      }
    },
    "v1alpha1WorkloadResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1WorkloadResourceRef": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WorkloadResource"
          }
        },
        "pipelineName": {
          "type": "string"
        }
      }
    },
    "v1alpha1Workspace": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of the workspace."
        },
        "alias": {
          "type": "string",
          "description": "The alias name of the workspace."
        }
      }
    },
    "v1alpha2ApplicationRevision": {
      "type": "object",
      "properties": {
        "revisionHash": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha2ApplicationStatusPhase": {
      "type": "string",
      "enum": [
        "APPLICATION_PHASE_UNSPECIFIED",
        "READY",
        "PROGRESSING",
        "UNKNOWN",
        "MISSING"
      ],
      "default": "APPLICATION_PHASE_UNSPECIFIED"
    },
    "v1alpha2ApplicationTopology": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Application metadata information."
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Node"
          },
          "description": "Node represents a resource in the application."
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Edge"
          },
          "description": "Edge represents a relationship between two resources."
        }
      }
    },
    "v1alpha2AppliedResources": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha2Component": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta",
          "title": "resource gvk"
        },
        "meta": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Resource metadata."
        },
        "data": {
          "type": "string",
          "description": "Resource instance."
        }
      }
    },
    "v1alpha2Components": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2ConfigMapInfo": {
      "type": "object"
    },
    "v1alpha2CreateApplicationManagerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2DaemonSetInfo": {
      "type": "object",
      "properties": {
        "desiredNumberScheduled": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of daemons."
        },
        "numberReady": {
          "type": "integer",
          "format": "int32",
          "description": "NumberReady is the number of nodes that should be running the daemon pod and have one\nor more of the daemon pod running with a Ready Condition."
        },
        "strategyType": {
          "$ref": "#/definitions/v1alpha2DaemonSetInfoUpdateStrategyType"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus"
        }
      }
    },
    "v1alpha2DaemonSetInfoUpdateStrategyType": {
      "type": "string",
      "enum": [
        "UPDATE_STRATEGY_UNSPECIFIED",
        "ON_DELETE",
        "ROLLING_UPDATE"
      ],
      "default": "UPDATE_STRATEGY_UNSPECIFIED",
      "description": "Daemonset Update strategy.\n\n - UPDATE_STRATEGY_UNSPECIFIED: The field was not set\n - ON_DELETE: OnDelete: Replace the old daemons only when it's killed\n - ROLLING_UPDATE: RollingUpdate: Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other."
    },
    "v1alpha2DeploymentInfo": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Desired replicas."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pods targeted by this Deployment with a Ready Condition."
        },
        "strategyType": {
          "$ref": "#/definitions/v1alpha2DeploymentInfoUpdateStrategyType"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus"
        }
      }
    },
    "v1alpha2DeploymentInfoUpdateStrategyType": {
      "type": "string",
      "enum": [
        "UPDATE_STRATEGY_UNSPECIFIED",
        "RECREATE",
        "ROLLING_UPDATE"
      ],
      "default": "UPDATE_STRATEGY_UNSPECIFIED",
      "description": "Deployment rollout strategy.\n\n - UPDATE_STRATEGY_UNSPECIFIED: The field was not set\n - RECREATE: Recreate\n - ROLLING_UPDATE: RollingUpdate"
    },
    "v1alpha2Descriptor": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1alpha2Edge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "title": "Source Node ID"
        },
        "target": {
          "type": "string",
          "title": "Target Node ID"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Properties for the edge."
        }
      }
    },
    "v1alpha2GetApplicationComponentLogResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "title": "the total of log"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetApplicationComponentLogResponseData"
          },
          "title": "the data of los"
        }
      }
    },
    "v1alpha2GetApplicationTemplatesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2GetApplicationYAMLResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetMeshIDResponse": {
      "type": "object",
      "properties": {
        "meshId": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetOAMApplicationJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetSentinelAddrResponse": {
      "type": "object",
      "properties": {
        "sentinelAddr": {
          "type": "string"
        }
      }
    },
    "v1alpha2IngressClassScope": {
      "type": "string",
      "enum": [
        "SCOPE_CLUSTER",
        "SCOPE_NAMESPACE"
      ],
      "default": "SCOPE_CLUSTER"
    },
    "v1alpha2IngressInfo": {
      "type": "object"
    },
    "v1alpha2ListApplicationComponentPodContainersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2PodContainers"
          }
        }
      }
    },
    "v1alpha2ListApplicationRevisionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ApplicationRevision"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListApplicationWorkloadsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Workload"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListComponentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Component"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage"
        }
      }
    },
    "v1alpha2ListMutilCloudDeployTargetResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2DeploymentTarget"
          }
        }
      }
    },
    "v1alpha2ListNamespacedResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Resource"
          },
          "description": "Resources list."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Page information."
        }
      }
    },
    "v1alpha2ListOAMApplicationResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2OAMApplication"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListRevisionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Revision"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListSchemaDefinitionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2SchemaDefinition"
          }
        },
        "pagination": {
          "$ref": "#/definitions/amambaioapitypesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2OAMApplication": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "title": "oam application metadata"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha2OAMApplicationSpec",
          "description": "application spec, hold all the components ,traits and deploy targets."
        },
        "status": {
          "$ref": "#/definitions/v1alpha2OAMApplicationStatus",
          "description": "application status, contains the application phase, conditions, applied resources and services."
        }
      }
    },
    "v1alpha2OAMApplicationPhase": {
      "type": "string",
      "enum": [
        "OAM_APPLICATION_PHASE_UNSPECIFIED",
        "OAM_APPLICATION_PHASE_STARTING",
        "OAM_APPLICATION_PHASE_RENDERING",
        "OAM_APPLICATION_PHASE_POLICY_GENERATING",
        "OAM_APPLICATION_PHASE_RUNNING_WORKFLOW",
        "OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING",
        "OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED",
        "OAM_APPLICATION_PHASE_WORKFLOW_FAILED",
        "OAM_APPLICATION_PHASE_RUNNING",
        "OAM_APPLICATION_PHASE_UNHEALTHY",
        "OAM_APPLICATION_PHASE_DELETING"
      ],
      "default": "OAM_APPLICATION_PHASE_UNSPECIFIED",
      "title": "- OAM_APPLICATION_PHASE_STARTING: ApplicationStarting means the app is preparing for reconcile\n - OAM_APPLICATION_PHASE_RENDERING: ApplicationRendering means the app is rendering\n - OAM_APPLICATION_PHASE_POLICY_GENERATING: ApplicationPolicyGenerating means the app is generating policies\n - OAM_APPLICATION_PHASE_RUNNING_WORKFLOW: ApplicationRunningWorkflow means the app is running workflow\n - OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING: ApplicationWorkflowSuspending means the app's workflow is suspending\n - OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED: ApplicationWorkflowTerminated means the app's workflow is terminated\n - OAM_APPLICATION_PHASE_WORKFLOW_FAILED: ApplicationWorkflowFailed means the app's workflow is failed\n - OAM_APPLICATION_PHASE_RUNNING: ApplicationRunning means the app finished rendering and applied result to the cluster\n - OAM_APPLICATION_PHASE_UNHEALTHY: ApplicationUnhealthy means the app finished rendering and applied result to the cluster, but still unhealthy\n - OAM_APPLICATION_PHASE_DELETING: ApplicationDeleting means application is being deleted"
    },
    "v1alpha2OAMApplicationService": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "healthy": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "traits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ServiceTrait"
          }
        },
        "workloadDefinition": {
          "$ref": "#/definitions/v1alpha2WorkloadDefinition"
        }
      }
    },
    "v1alpha2OAMApplicationSpec": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2OAMComponent"
          }
        },
        "deployTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2DeployTarget"
          },
          "title": "where to deploy the application"
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1alpha2OAMApplicationStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha2OAMApplicationPhase",
          "title": "application phase"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1ObjectReference"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Condition"
          }
        },
        "appliedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2AppliedResources"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2OAMApplicationService"
          }
        },
        "workflow": {
          "$ref": "#/definitions/v1alpha2Workflow"
        }
      }
    },
    "v1alpha2OAMComponent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "component name"
        },
        "type": {
          "type": "string",
          "description": "component type, eg: webservice, crontask, etc."
        },
        "properties": {
          "type": "string",
          "description": "component properties, it's must a json string."
        },
        "traits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Trait"
          },
          "title": "component traits"
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2ObjectStatus": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1alpha2PatchResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2PersistentVolumeClaimInfo": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersistentVolumeClaimInfoAccessMode"
          }
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "capacity represents the actual resources of the underlying volume."
        },
        "storageClassName": {
          "type": "string",
          "description": "storageClassName is the name of the StorageClass required by the claim."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2PersistentVolumeClaimInfoPhase"
        }
      }
    },
    "v1alpha2PersistentVolumeClaimInfoPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNKNOWN",
        "PENDING",
        "BOUND",
        "LOST"
      ],
      "default": "PHASE_UNKNOWN",
      "description": "phase represents the current phase of PersistentVolumeClaim.\n\n - PENDING: Pending means that PersistentVolumeClaim has been accepted by the system, but the \nunderlying PersistentVolume has not been created yet.\n - BOUND: Bound means that PersistentVolumeClaim has been bound to a PersistentVolume.\n - LOST: Lost means that PersistentVolumeClaim can no longer be bound to a volume and has \nbeen deleted by the system. PersistentVolumeClaim will be deleted automatically \nwhen reclaimPolicy is Retain."
    },
    "v1alpha2PodContainers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2PodInfoPodPhase": {
      "type": "string",
      "enum": [
        "POD_PHASE_UNSPECIFIED",
        "PENDING",
        "RUNNING",
        "SUCCEEDED",
        "FAILED",
        "UNKNOWN"
      ],
      "default": "POD_PHASE_UNSPECIFIED",
      "description": "Pending: The pod has been accepted by the Kubernetes system, but one or more of the\ncontainer images has not been created. This includes time before being scheduled as\nwell as time spent downloading images over the network, which could take a while.\nRunning: The pod has been bound to a node, and all of the containers have been created.\nAt least one container is still running, or is in the process of starting or restarting.\nSucceeded: All containers in the pod have terminated in success, and will not be restarted.\nFailed: All containers in the pod have terminated, and at least one container has\nterminated in failure. The container either exited with non-zero status or was terminated\nby the system.\nUnknown: For some reason the state of the pod could not be obtained, typically due to an\nerror in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase\n+optional",
      "title": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle.\nThe conditions array, the reason and message fields, and the individual container status\narrays contain more detail about the pod's status.\nThere are five possible phase values:"
    },
    "v1alpha2Revision": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta"
        },
        "revisionNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2RollbackAppRevisionResponse": {
      "type": "object",
      "properties": {
        "created": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2RollbackRevisionResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha2SchemaDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "string"
        },
        "uiSchema": {
          "type": "string"
        }
      }
    },
    "v1alpha2SecretInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha2SecretInfoType"
        }
      }
    },
    "v1alpha2SecretInfoType": {
      "type": "string",
      "enum": [
        "TYPE_UNKNOWN",
        "OPAQUE",
        "SERVICE_ACCOUNT_TOKEN",
        "DOCKER_CONFIG",
        "BASIC_AUTH",
        "SSH_AUTH",
        "TLS",
        "BOOTSTRAP_TOKEN"
      ],
      "default": "TYPE_UNKNOWN"
    },
    "v1alpha2ServiceInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha2ServiceInfoType"
        }
      }
    },
    "v1alpha2ServiceInfoType": {
      "type": "string",
      "enum": [
        "TYPE_UNKNOWN",
        "TYPE_CLUSTER_IP",
        "TYPE_NODE_PORT",
        "TYPE_LOAD_BALANCER",
        "TYPE_EXTERNAL_NAME"
      ],
      "default": "TYPE_UNKNOWN"
    },
    "v1alpha2ServiceTrait": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha2StatefulSetInfo": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Desired replicas."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pods targeted by this Deployment with a Ready Condition."
        },
        "strategyType": {
          "$ref": "#/definitions/v1alpha2StatefulSetInfoUpdateStrategyType"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus"
        }
      }
    },
    "v1alpha2StatefulSetInfoUpdateStrategyType": {
      "type": "string",
      "enum": [
        "UPDATE_STRATEGY_UNSPECIFIED",
        "ON_DELETE",
        "ROLLING_UPDATE"
      ],
      "default": "UPDATE_STRATEGY_UNSPECIFIED",
      "description": "StatefulSet Update strategy.\n\n - UPDATE_STRATEGY_UNSPECIFIED: The field was not set\n - ON_DELETE: OnDelete: Replace the old daemons only when it's killed\n - ROLLING_UPDATE: RollingUpdate: Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other."
    },
    "v1alpha2Step": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2WorkflowStepPhase"
        },
        "reason": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1alpha2Trait": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "trait type, eg: ingress, autoscale, etc.\nshould unique in the component."
        },
        "properties": {
          "type": "string",
          "description": "trait properties, it must a json string."
        }
      }
    },
    "v1alpha2UpdateApplicationYAMLResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2UpdateOAMApplicationJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2Workflow": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha2WorkflowRunPhase"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Step"
          }
        }
      }
    },
    "v1alpha2WorkflowRunPhase": {
      "type": "string",
      "enum": [
        "WORKFLOW_STATUS_UNSPECIFIED",
        "WORKFLOW_STATUS_INITIALIZING",
        "WORKFLOW_STATUS_EXECUTING",
        "WORKFLOW_STATUS_SUSPENDING",
        "WORKFLOW_STATUS_TERMINATED",
        "WORKFLOW_STATUS_FAILED",
        "WORKFLOW_STATUS_SUCCEEDED",
        "WORKFLOW_STATUS_SKIPPED"
      ],
      "default": "WORKFLOW_STATUS_UNSPECIFIED",
      "title": "- WORKFLOW_STATUS_INITIALIZING: WorkflowStateInitializing means the workflow run is initializing\n - WORKFLOW_STATUS_EXECUTING: WorkflowStateExecuting means the workflow run is executing\n - WORKFLOW_STATUS_SUSPENDING: WorkflowStateSuspending means the workflow run is suspending\n - WORKFLOW_STATUS_TERMINATED: WorkflowStateTerminated means the workflow run is terminated\n - WORKFLOW_STATUS_FAILED: WorkflowStateFailed means the workflow run is failed\n - WORKFLOW_STATUS_SUCCEEDED: WorkflowStateSucceeded means the workflow run is succeeded\n - WORKFLOW_STATUS_SKIPPED: WorkflowStateSkipped means the workflow run is skipped"
    },
    "v1alpha2WorkflowStepPhase": {
      "type": "string",
      "enum": [
        "WORKFLOW_STEP_PHASE_UNSPECIFIED",
        "WORKFLOW_STEP_PHASE_Succeeded",
        "WORKFLOW_STEP_PHASE_Failed",
        "WORKFLOW_STEP_PHASE_Skipped",
        "WORKFLOW_STEP_PHASE_Running",
        "WORKFLOW_STEP_PHASE_Pending",
        "WORKFLOW_STEP_PHASE_Suspending"
      ],
      "default": "WORKFLOW_STEP_PHASE_UNSPECIFIED",
      "description": " - WORKFLOW_STEP_PHASE_Succeeded: WorkflowStepPhaseSucceeded will make the controller run the next step.\n - WORKFLOW_STEP_PHASE_Failed: WorkflowStepPhaseFailed will report error in `message`.\n - WORKFLOW_STEP_PHASE_Skipped: WorkflowStepPhaseSkipped will make the controller skip the step.\n - WORKFLOW_STEP_PHASE_Running: WorkflowStepPhaseRunning will make the controller continue the workflow.\n - WORKFLOW_STEP_PHASE_Pending: WorkflowStepPhasePending will make the controller wait for the step to run.\n - WORKFLOW_STEP_PHASE_Suspending: WorkflowStepPhaseSuspending will make the controller suspend the workflow."
    },
    "v1alpha2WorkloadDefinition": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
