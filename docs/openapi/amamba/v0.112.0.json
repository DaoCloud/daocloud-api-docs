{
  "swagger": "2.0",
  "info": {
    "title": "应用工作台",
    "version": "v0.112.0"
  },
  "tags": [
    {
      "name": "Workloads"
    },
    {
      "name": "Image"
    },
    {
      "name": "ApplicationService"
    },
    {
      "name": "KubeService"
    },
    {
      "name": "OAMService"
    },
    {
      "name": "MutilCloudApplication"
    },
    {
      "name": "Aggregation"
    },
    {
      "name": "Cluster"
    },
    {
      "name": "Core"
    },
    {
      "name": "Apps"
    },
    {
      "name": "OLMService"
    },
    {
      "name": "Core"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "GitOps"
    },
    {
      "name": "Pipelines"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "Toolchain"
    },
    {
      "name": "Jira"
    },
    {
      "name": "GitLab"
    },
    {
      "name": "Sonarqube"
    },
    {
      "name": "Rollouts"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/amamba.io/v1alpha1/permissions": {
      "get": {
        "operationId": "Core_ListPlatformRolePermissionsForCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPlatformRolePermissionsForCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces": {
      "get": {
        "summary": "List the workspaces that have been bound to the account.",
        "operationId": "Core_ListVisibleWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "workspace name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters": {
      "get": {
        "summary": "List the clusters that have been bound to the workspace.",
        "operationId": "Core_ListBoundClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBoundClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces": {
      "post": {
        "summary": "Create a namespace in the specified workspace and cluster.",
        "operationId": "Core_CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/corev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the name of the namespace."
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "the labels of the namespace."
                },
                "resourceQuota": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "resource quota of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}": {
      "delete": {
        "summary": "Delete a namespace in the specified workspace and cluster.",
        "operationId": "Core_DeleteNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateNamespace a namespace in the specified workspace and cluster.",
        "operationId": "Core_UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/corev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "the labels of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/quota": {
      "get": {
        "operationId": "Core_GetNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNamespaceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Core_CreateNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/corev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "resource quota of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Core_UpdateNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/corev1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "the name of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "resource quota of the namespace."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/quota": {
      "get": {
        "operationId": "Core_GetWorkspaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetWorkspaceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/control-plane/namespaces": {
      "get": {
        "operationId": "Core_GetControlPlaneNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetControlPlaneNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Core_CreateControlPlaneNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateControlNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "namespace name"
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/namespaces": {
      "get": {
        "summary": "List the namespaces that have been bound to the workspace.",
        "operationId": "Core_ListBoundNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBoundNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Which workspace  does it belong to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Which cluster  does it belong to",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "name",
            "description": "fuzzy search for namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/amamba.io/v1alpha1/workspaces/{workspaceId}/permissions": {
      "get": {
        "summary": "Obtain the Perms of the current user Ctx needs to include JwtToken (GProduct sensitive)",
        "operationId": "Core_ListRolePermissionsByWorkspaceForCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolePermissionsByWorkspaceForCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/appgroups": {
      "get": {
        "operationId": "Workloads_ListAppGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAppGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmcharts": {
      "get": {
        "operationId": "Workloads_ListHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "OTHERS",
              "STORAGE",
              "NETWORKING",
              "MONITORING",
              "DATABASE"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrepos": {
      "get": {
        "operationId": "Workloads_ListHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmRepoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}": {
      "get": {
        "operationId": "Workloads_GetHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1GetHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}/versions/{version}": {
      "get": {
        "operationId": "Workloads_GetHelmChartValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version represents for the resource version.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nacos": {
      "get": {
        "operationId": "Workloads_ListNacosRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nacos/{nacosName}/namespaces": {
      "get": {
        "operationId": "Workloads_ListNacosRegistryNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistryNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosNamespace",
            "description": "the nacos belong to which cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/nacos/{nacosName}/plugin/{pluginType}:enabled": {
      "get": {
        "operationId": "Workloads_EnabledPlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EnabledPluginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pluginType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "PLUGIN_TYPE_UNSPECIFIED",
              "PLUGIN_TYPE_SENTINEL",
              "PLUGIN_TYPE_MESH"
            ]
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/configmap": {
      "get": {
        "operationId": "Workloads_ListConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListConfigmapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/events": {
      "get": {
        "operationId": "Workloads_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "kind",
            "description": "Kind represents what type of event is needed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RESOURCE_KIND_UNSPECIFIED",
              "RESOURCE_KIND_DEPLOYMENT",
              "RESOURCE_KIND_STATEFULSET",
              "RESOURCE_KIND_DAEMONSET",
              "RESOURCE_KIND_POD",
              "RESOURCE_KIND_SERVICE",
              "RESOURCE_KIND_INGRESS",
              "RESOURCE_KIND_JOB",
              "RESOURCE_KIND_CRONJOB",
              "RESOURCE_KIND_HORIZONTAL_POD_AUTOSCALER",
              "RESOURCE_KIND_REPLICASET",
              "RESOURCE_KIND_CRON_HPA"
            ],
            "default": "RESOURCE_KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is DEPLOYMENT,\nthis presents the name of deployments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventKinds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_KIND_UNSPECIFIED",
                "EVENT_KIND_NORMAL",
                "EVENT_KIND_WARNING"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/helmrelease": {
      "get": {
        "operationId": "Workloads_ListHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/ingressclassnames": {
      "get": {
        "operationId": "Workloads_ListIngressClassNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListIngressClassNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/ingressnames": {
      "get": {
        "operationId": "Workloads_ListIngressNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListIngressNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims": {
      "get": {
        "operationId": "Workloads_ListPersistentVolumeClaims",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPersistentVolumeClaimsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/secrets": {
      "get": {
        "operationId": "Workloads_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/services": {
      "get": {
        "operationId": "Workloads_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/clusters/{cluster}/pluginsinfo": {
      "get": {
        "operationId": "Workloads_GetPluginInstallationInformation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPluginInstallationInformationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/create_workload_by_git": {
      "post": {
        "operationId": "Workloads_CreateAppFromGit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType",
                  "title": "The kind of resource will be created in the cluster"
                },
                "appgroup": {
                  "type": "string",
                  "title": "The group resource belongs to"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "image": {
                  "type": "string",
                  "description": "Image registry and name to use to push.\nimage: can only contain lowercase letters, numbers, hyphens (-), periods (.), slashes (/), and colons (:),\nand start and end with lowercase letters or numbers."
                },
                "imageTag": {
                  "type": "string",
                  "description": "Tag for the image to build.\nimage_tag: can only contain lowercase and uppercase letters, numbers, underscores (_), hyphens\n(-), period (.). Labels cannot start with a period or hyphen and can contain up to 128 characters."
                },
                "imagePullSecret": {
                  "type": "string",
                  "description": "Name of the secret in the same namespace as `DeployTarget` specified to\npull image. If the image registry is public, no image pull secret is\nneeded."
                },
                "serviceSpec": {
                  "$ref": "#/definitions/applicationv1alpha1ServiceSpec",
                  "title": "A service with same name will be created as the workload"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Replicas of deployment, statefulset, daemonset, etc. Default 1."
                },
                "microService": {
                  "$ref": "#/definitions/v1alpha1MicroServiceSpec"
                },
                "resources": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
                  "title": "Resource limit&request spec"
                },
                "buildArgs": {
                  "type": "string"
                },
                "gitRepository": {
                  "$ref": "#/definitions/apiapplicationv1alpha1GitRepository"
                },
                "repositoryCredential": {
                  "type": "string"
                },
                "repositoryBranch": {
                  "type": "string"
                },
                "dockerfilePath": {
                  "type": "string"
                },
                "contextPath": {
                  "type": "string"
                },
                "optionalFeatures": {
                  "$ref": "#/definitions/v1alpha1ContainerSpec"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "observability": {
                  "$ref": "#/definitions/v1alpha1ObservabilitySpec"
                },
                "application": {
                  "type": "string"
                },
                "imageSelector": {
                  "$ref": "#/definitions/v1alpha1ImageSelector"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/create_workload_by_image": {
      "post": {
        "summary": "CreateAppByImage create workload given an image name",
        "operationId": "Workloads_CreateAppByImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType",
                  "title": "The kind of resource will be created in the cluster"
                },
                "appgroup": {
                  "type": "string",
                  "title": "The group resource belongs to"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "image": {
                  "type": "string",
                  "description": "Image to use for the workload, consists of the image name and tag."
                },
                "imagePullSecret": {
                  "type": "string",
                  "description": "Name of the secret in the same namespace as `DeployTarget` specified to\npull image. If the image registry is public, no image pull secret is\nneeded."
                },
                "serviceSpec": {
                  "$ref": "#/definitions/applicationv1alpha1ServiceSpec",
                  "title": "A service with same name will be created as the workload"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Replicas of deployment, statefulset, daemonset, etc. Default 1."
                },
                "microService": {
                  "$ref": "#/definitions/v1alpha1MicroServiceSpec",
                  "title": "MicroService configuration"
                },
                "resources": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
                  "title": "Resource limit&request spec"
                },
                "optionalFeatures": {
                  "$ref": "#/definitions/v1alpha1ContainerSpec"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "observability": {
                  "$ref": "#/definitions/v1alpha1ObservabilitySpec"
                },
                "application": {
                  "type": "string"
                },
                "imageSelector": {
                  "$ref": "#/definitions/v1alpha1ImageSelector"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/create_workload_by_jar": {
      "post": {
        "operationId": "Workloads_CreateAppFromJar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha1Workload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType",
                  "title": "The kind of resource will be created in the cluster"
                },
                "appgroup": {
                  "type": "string",
                  "title": "The group resource belongs to"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "image": {
                  "type": "string",
                  "description": "Image registry and name to use to push.\nimage: can only contain lowercase letters, numbers, hyphens (—), periods (.), slashes (/), and colons (:),\nand start and end with lowercase letters or numbers."
                },
                "imageTag": {
                  "type": "string",
                  "description": "Tag for the image to build.\nimage_tag: can only contain lowercase and uppercase letters, numbers, underscores (_), hyphens\n(-), period (.). Labels cannot start with a period or hyphen and can contain up to 128 characters."
                },
                "imagePullSecret": {
                  "type": "string",
                  "description": "Name of the secret in the same namespace as `DeployTarget` specified to\npull image. If the image registry is public, no image pull secret is\nneeded."
                },
                "serviceSpec": {
                  "$ref": "#/definitions/applicationv1alpha1ServiceSpec",
                  "title": "A service with same name will be created as the workload"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Replicas of deployment, statefulset, daemonset, etc. Default 1."
                },
                "microService": {
                  "$ref": "#/definitions/v1alpha1MicroServiceSpec"
                },
                "resources": {
                  "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
                  "title": "Resource limit&request spec"
                },
                "buildArgs": {
                  "type": "string"
                },
                "javaOpts": {
                  "type": "string"
                },
                "optionalFeatures": {
                  "$ref": "#/definitions/v1alpha1ContainerSpec"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "observability": {
                  "$ref": "#/definitions/v1alpha1ObservabilitySpec"
                },
                "application": {
                  "type": "string"
                },
                "imageSelector": {
                  "$ref": "#/definitions/v1alpha1ImageSelector"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/deploytargets": {
      "get": {
        "operationId": "Workloads_ListDeployTargets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDeployTargetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/gvr/{group}/{version}/{resource}/{name}/json": {
      "get": {
        "operationId": "Workloads_GetCustomResourceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCustomResourceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/helmrelease": {
      "post": {
        "summary": "CreateAppByHelm create workload given an image name",
        "operationId": "Workloads_CreateAppByHelm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRelease"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "target workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "title": "The cluster and namespace where to create at"
                },
                "repo": {
                  "type": "string",
                  "title": "helm repo name"
                },
                "charts": {
                  "$ref": "#/definitions/CreateWorkloadByHelmRequestCharts"
                },
                "wait": {
                  "type": "boolean",
                  "description": "If set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout."
                },
                "atomic": {
                  "type": "boolean",
                  "title": "If set, the installation process deletes the installation on failure. The --wait flag will be set automatically if --atomic is used"
                },
                "debug": {
                  "type": "boolean",
                  "title": "Enable verbose output"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries": {
      "get": {
        "summary": "ListRegistries returns a list of registries",
        "operationId": "Image_ListRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "global",
            "description": "Global is to list all global registries.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects": {
      "get": {
        "summary": "ListProjects returns a list of projects of specified registry",
        "operationId": "Image_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "public",
            "description": "Public is distinguish public projects and private projects.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyBind",
            "description": "if true only return bound data.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "all",
            "description": "if true the public field will become invalid.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects/{project}/repositories": {
      "get": {
        "summary": "ListRepositories returns a list of image names of specified project",
        "operationId": "Image_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiapplicationv1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request, \"/\" is a possible value.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "showArtifacts",
            "description": "ShowArtifacts is to list artifacts of per image, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts returns a list of tags of specified image",
        "operationId": "Image_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "Repository is image name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/secretreferences": {
      "get": {
        "summary": "ListSecretReferences list secrets' reference in a given namespace",
        "operationId": "Workloads_ListSecretReferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretReferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads": {
      "get": {
        "summary": "ListWorkloads list workloads in a given workspace",
        "operationId": "Workloads_ListWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the workload created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace which the workload is deployed at.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workloadType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_TYPE_UNSPECIFIED",
              "WORKLOAD_TYPE_DEPLOYMENT",
              "WORKLOAD_TYPE_STATEFUL_SET",
              "WORKLOAD_TYPE_DAEMON_SET",
              "WORKLOAD_TYPE_JOB",
              "WORKLOAD_TYPE_CRONJOB"
            ],
            "default": "WORKLOAD_TYPE_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}": {
      "delete": {
        "summary": "DeleteWorkload delete a workload in a given workspace",
        "operationId": "Workloads_DeleteWorkload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "The cluster which the namespace belongs to."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace where the secret lives in."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType"
                },
                "pipelineName": {
                  "type": "string",
                  "description": "Whether to cascade delete pipeline and pipelinerun."
                },
                "serviceName": {
                  "type": "string",
                  "description": "Whether to cascade delete service."
                },
                "rolloutNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/appgroup": {
      "put": {
        "operationId": "Workloads_UpdateWorkloadAppGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateAppGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "The cluster which the namespace belongs to."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace where the secret lives in."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType"
                },
                "appGroup": {
                  "type": "string",
                  "title": "new appGroup"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/json": {
      "get": {
        "summary": "GetWorkloadJSON get workload json",
        "operationId": "Workloads_GetWorkloadJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadsJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workloadType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_TYPE_UNSPECIFIED",
              "WORKLOAD_TYPE_DEPLOYMENT",
              "WORKLOAD_TYPE_STATEFUL_SET",
              "WORKLOAD_TYPE_DAEMON_SET",
              "WORKLOAD_TYPE_JOB",
              "WORKLOAD_TYPE_CRONJOB"
            ],
            "default": "WORKLOAD_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateWorkloadByJSON update workload by json",
        "operationId": "Workloads_UpdateWorkloadByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadsJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "The cluster which the namespace belongs to."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace where the secret lives in."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType"
                },
                "data": {
                  "type": "string",
                  "title": "data The data field is the Workload YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/micro-service": {
      "put": {
        "operationId": "Workloads_UpdateMicroService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateMicroServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget"
                },
                "config": {
                  "$ref": "#/definitions/v1alpha1MicroServiceTraditional"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha1/workspaces/{workspaceId}/workloads/{workloadName}/replicas": {
      "put": {
        "operationId": "Workloads_UpdateWorkloadReplicas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateWorkloadReplicasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadName",
            "description": "workload name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "The cluster which the namespace belongs to."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace where the secret lives in."
                },
                "workloadType": {
                  "$ref": "#/definitions/v1alpha1WorkloadType"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Workloads"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/components_definition": {
      "get": {
        "summary": "list system buildin components.",
        "operationId": "OAMService_ListComponentDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListSchemaDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/components_definition/{name}": {
      "get": {
        "summary": "get component properties schema json.",
        "operationId": "OAMService_GetComponentProperties",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2SchemaDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/traits_definition": {
      "get": {
        "summary": "list system buildin traits.",
        "operationId": "OAMService_ListTraitDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListSchemaDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "componentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/traits_definition/{traitType}": {
      "get": {
        "summary": "get trait properties json schema.",
        "operationId": "OAMService_GetTraitProperties",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2SchemaDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "traitType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications": {
      "get": {
        "operationId": "ApplicationService_ListApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2ListApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "WorkspaceID restricts the cluster and namespace must be in the workspace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster restricts the list to only those in the cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace restricts the list to only those in the namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName restricts the list to only those whose name match the fuzzy name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "description": "MetadataOnly restricts the result only return metadata.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "ApplicationService_CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "name": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "components": {
                  "$ref": "#/definitions/v1alpha2Components"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}": {
      "get": {
        "operationId": "ApplicationService_GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "ApplicationService_DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "propagationPolicy": {
                  "$ref": "#/definitions/v1alpha2PropagationPolicy",
                  "description": "PropagationPolicy specifies the gc policy for resource deletion.\nDefault is orphan, which means children will not be gc-ed.\nBackground means children will be removed in background."
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "ApplicationService_UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "descriptor": {
                  "$ref": "#/definitions/v1alpha2Descriptor"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/components": {
      "get": {
        "operationId": "ApplicationService_ListApplicationComponents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListApplicationComponentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "ApplicationService_AddApplicationComponents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "components": {
                  "$ref": "#/definitions/v1alpha2Components"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/topology": {
      "get": {
        "operationId": "ApplicationService_GetApplicationTopology",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ApplicationTopology"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/workloads": {
      "get": {
        "operationId": "ApplicationService_ListApplicationWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListApplicationWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/applications/{name}/yaml": {
      "get": {
        "operationId": "ApplicationService_GetApplicationYAML",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetApplicationYAMLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "ApplicationService_UpdateApplicationYAML",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2UpdateApplicationYANLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/mesh_id": {
      "get": {
        "operationId": "ApplicationService_GetMeshID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetMeshIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators": {
      "get": {
        "operationId": "OLMService_ListOperators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListOperatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/applications": {
      "get": {
        "operationId": "OLMService_ListOperatorApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListOperatorApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "description": "not support yet",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "OLMService_CreateOperatorApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2CreateOperatorApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "resource": {
                  "type": "string"
                },
                "scope": {
                  "type": "boolean"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/applications/{name}": {
      "get": {
        "operationId": "OLMService_GetOperatorApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetOperatorApplicationJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "OLMService_DeleteOperatorApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "resource": {
                  "type": "string"
                },
                "scope": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/customresourcedefinitions": {
      "get": {
        "operationId": "OLMService_ListOperatorCustomResourceDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListOperatorCustomResourceDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/operators/{operator}/examples": {
      "get": {
        "operationId": "OLMService_GetOperatorApplicationExamples",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetOperatorApplicationExamplesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OLMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/resources": {
      "get": {
        "operationId": "KubeService_ListResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "Selector (label query) to filter on, supports '=', '==', and '!='.(e.g.  key1=value1,key2=value2). Matching\nobjects must satisfy all of the specified label constraints.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metadataOnly",
            "description": "metadata_only indicates whether to return only metadata of the resources.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the resources list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the resources list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/namespaces/{namespace}/resources/{name}": {
      "get": {
        "operationId": "KubeService_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationv1alpha2Resource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupKind",
            "description": "GroupKind specifies the resource group and kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "KubeService_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupKind": {
                  "type": "string",
                  "title": "GroupKind specifies the resource group and kind"
                }
              }
            }
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "KubeService_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2UpdateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupKind": {
                  "type": "string",
                  "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group."
                },
                "data": {
                  "type": "string",
                  "title": "data The data field is the Workload YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "patch": {
        "operationId": "KubeService_PatchResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2PatchResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace bind to the following cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace where the secret lives in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupKind": {
                  "type": "string",
                  "description": "GroupKind indicates the group and kind of the resource in a\nformat of `Kind.group` or `Kind` for core group."
                },
                "data": {
                  "type": "string",
                  "title": "The applincation patch data"
                }
              }
            }
          }
        ],
        "tags": [
          "KubeService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/clusters/{cluster}/sentinel_address": {
      "get": {
        "operationId": "ApplicationService_GetSentinelAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetSentinelAddrResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The cluster which the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nacosName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nacosNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/clusters": {
      "get": {
        "summary": "ListJoinedCluster Get the list of clusters that have been added to karmada",
        "operationId": "Cluster_ListJoinedClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.role",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "payload.kubernetesVersion",
            "description": "KUBERNETESVERSION cluster k8s version use to support search sub cluster at\nListClusters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.phase",
            "description": "Phases is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.managedBy",
            "description": "ManagedBy represents who manages the cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.name",
            "description": "Name of cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.region",
            "description": "Region represents the region of the member cluster locate in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.provider",
            "description": "Provider represents the cloud provider name of the member cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.zone",
            "description": "Zone represents the zone of the member cluster locate in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used  to filter the clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.clusterSelector",
            "description": "A cluster selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.allCluster",
            "description": "list all kpanda clusters",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/clusters-labels": {
      "get": {
        "operationId": "Cluster_ListClustersLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "karmada instance",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/clusters-locations": {
      "get": {
        "operationId": "Cluster_ListClustersLocationSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersLocationsSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/kairship_namespaces/{payload.namespace}/aggregationresource": {
      "post": {
        "operationId": "Aggregation_CreateAggregationResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AggregationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance the specified propagation policy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/v1alpha1AggregationResource"
                    },
                    "gvr": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/v1alpha1GVR"
                      },
                      "description": "GVR represents the resource gvr of CustomResources."
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Aggregation"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/kairship_namespaces/{payload.namespace}/configmaps": {
      "get": {
        "summary": "ListConfigMaps lists configmaps in the specified instance and namespace.",
        "operationId": "Core_ListConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListConfigMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/kairship_namespaces/{payload.namespace}/deployments": {
      "get": {
        "summary": "ListDeployments lists deployments",
        "operationId": "Apps_ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.phase",
            "description": "Phase represents the phase of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/kairship_namespaces/{payload.namespace}/deployments/{payload.name}": {
      "delete": {
        "summary": "DeleteDeployment deletes a deployment under the namespaces of a specific\ninstance",
        "operationId": "Apps_DeleteDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/kairship_namespaces/{payload.namespace}/deployments/{payload.name}/json": {
      "get": {
        "operationId": "Apps_GetDeploymentJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetDeploymentJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which instance the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced Deployment.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/kairship/{payload.instance}/kairship_namespaces/{payload.namespace}/secrets": {
      "get": {
        "operationId": "Core_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.instance",
            "description": "Instance represents which karmada instance the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload.page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payload.name",
            "description": "The name use to search specific secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "payload.sortDir",
            "description": "SortDir determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "payload.labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payload.fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/mutil-cloud-deploytargets": {
      "get": {
        "operationId": "MutilCloudApplication_ListMutilCloudDeployTarget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListMutilCloudDeployTargetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MutilCloudApplication"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam": {
      "get": {
        "operationId": "OAMService_ListOAMApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListOAMApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": " - OAM_APPLICATION_PHASE_STARTING: ApplicationStarting means the app is preparing for reconcile\n - OAM_APPLICATION_PHASE_RENDERING: ApplicationRendering means the app is rendering\n - OAM_APPLICATION_PHASE_POLICY_GENERATING: ApplicationPolicyGenerating means the app is generating policies\n - OAM_APPLICATION_PHASE_RUNNING_WORKFLOW: ApplicationRunningWorkflow means the app is running workflow\n - OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING: ApplicationWorkflowSuspending means the app's workflow is suspending\n - OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED: ApplicationWorkflowTerminated means the app's workflow is terminated\n - OAM_APPLICATION_PHASE_WORKFLOW_FAILED: ApplicationWorkflowFailed means the app's workflow is failed\n - OAM_APPLICATION_PHASE_RUNNING: ApplicationRunning means the app finished rendering and applied result to the cluster\n - OAM_APPLICATION_PHASE_UNHEALTHY: ApplicationUnhealthy means the app finished rendering and applied result to the cluster, but still unhealthy\n - OAM_APPLICATION_PHASE_DELETING: ApplicationDeleting means application is being deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OAM_APPLICATION_PHASE_UNSPECIFIED",
              "OAM_APPLICATION_PHASE_STARTING",
              "OAM_APPLICATION_PHASE_RENDERING",
              "OAM_APPLICATION_PHASE_POLICY_GENERATING",
              "OAM_APPLICATION_PHASE_RUNNING_WORKFLOW",
              "OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING",
              "OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED",
              "OAM_APPLICATION_PHASE_WORKFLOW_FAILED",
              "OAM_APPLICATION_PHASE_RUNNING",
              "OAM_APPLICATION_PHASE_UNHEALTHY",
              "OAM_APPLICATION_PHASE_DELETING"
            ],
            "default": "OAM_APPLICATION_PHASE_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "OAMService_CreateOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "deployTargets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/applicationv1alpha2DeployTarget"
                  },
                  "title": "where to deploy the application"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha2OAMComponent"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}": {
      "get": {
        "operationId": "OAMService_GetOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "OAMService_DeleteOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "update app alias and description.",
        "operationId": "OAMService_UpdateOAMApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components": {
      "post": {
        "operationId": "OAMService_AddOAMComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "component": {
                  "$ref": "#/definitions/v1alpha2OAMComponent"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components/{componentName}": {
      "delete": {
        "operationId": "OAMService_DeleteOAMComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "OAMService_UpdateOAMComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "component": {
                  "$ref": "#/definitions/v1alpha2OAMComponent"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components/{componentName}/traits": {
      "put": {
        "summary": "batch update traits.",
        "operationId": "OAMService_BatchUpdateOAMTraits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2OAMApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "traits": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha2Trait"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/components/{componentName}/traits/{traitType}": {
      "delete": {
        "operationId": "OAMService_DeleteOAMTrait",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "traitType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/json": {
      "get": {
        "operationId": "OAMService_GetOAMApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2GetOAMApplicationJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "OAMService_UpdateOAMApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2UpdateOAMApplicationJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/revisions": {
      "get": {
        "operationId": "OAMService_ListApplicationRevisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2ListApplicationRevisionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "application name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/application.amamba.io/v1alpha2/workspaces/{workspaceId}/oam/{name}/revisions/{revisionHash}:rollback": {
      "post": {
        "operationId": "OAMService_RollbackApplicationRevision",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha2RollbackRevisionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionHash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "OAMService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/credential.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials": {
      "get": {
        "operationId": "Credentials_ListCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1ListCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "name",
            "description": "The filter of the credential, fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Credentials_CreateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace id of the credential.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credentialName": {
                  "type": "string",
                  "description": "The credential_name of the credential."
                },
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apicredentialv1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1BasicCredential"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                }
              }
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/credential.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials/{credentialName}": {
      "get": {
        "operationId": "Credentials_GetCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Credentials_DeleteCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Credentials_UpdateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apicredentialv1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apicredentialv1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1BasicCredential",
                  "title": "+optional"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apicredentialv1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                }
              },
              "description": "The request for the update credential."
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications": {
      "get": {
        "operationId": "GitOps_ListApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gitopsv1alpha1ListApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "syncStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SYNC_STATUS_UNSPECIFIED",
              "SYNC_STATUS_UNKNOWN",
              "SYNC_STATUS_SYNCED",
              "SYNC_STATUS_OUT_OF_SYNC"
            ],
            "default": "SYNC_STATUS_UNSPECIFIED"
          },
          {
            "name": "healthStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HEALTH_STATUS_UNSPECIFIED",
              "HEALTH_STATUS_MISSING",
              "HEALTH_STATUS_DEGRADED",
              "HEALTH_STATUS_HEALTHY",
              "HEALTH_STATUS_UNKNOWN",
              "HEALTH_STATUS_SUSPENDED",
              "HEALTH_STATUS_PROGRESSING"
            ],
            "default": "HEALTH_STATUS_UNSPECIFIED"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new application",
        "operationId": "GitOps_CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which\neach name must be unique."
                },
                "setDeletionFinalizers": {
                  "type": "boolean"
                },
                "source": {
                  "$ref": "#/definitions/v1alpha1ApplicationSource"
                },
                "syncPolicy": {
                  "$ref": "#/definitions/apigitopsv1alpha1SyncPolicy"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/status": {
      "get": {
        "operationId": "GitOps_GetApplicationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetApplicationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}": {
      "get": {
        "operationId": "GitOps_GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "GitOps_DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "GitOps_UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which\neach name must be unique."
                },
                "source": {
                  "$ref": "#/definitions/v1alpha1ApplicationSource"
                },
                "syncPolicy": {
                  "$ref": "#/definitions/apigitopsv1alpha1SyncPolicy"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}/json": {
      "get": {
        "operationId": "GitOps_GetApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationJson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "GitOps_UpdateApplicationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationJson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/applications/{name}:sync": {
      "post": {
        "operationId": "GitOps_SyncApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "string"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "prune": {
                  "type": "boolean"
                },
                "applyOnly": {
                  "type": "boolean"
                },
                "force": {
                  "type": "boolean"
                },
                "syncPolicy": {
                  "$ref": "#/definitions/apigitopsv1alpha1SyncPolicy"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1SyncOperationResource"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/helmcharts": {
      "get": {
        "operationId": "GitOps_GetHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1GetHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "the url of helm chart repo,like: https://release-ci.daocloud.io/chartrepo/demo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/repositories": {
      "get": {
        "operationId": "GitOps_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - ARGOCD_REPO_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - ARGOCD_REPO_SORT_BY_NAME: Sort result by name.\n - ARGOCD_REPO_SORT_BY_REPO: Sort result by repo.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ARGOCD_REPO_SORT_BY_UNSPECIFIED",
              "ARGOCD_REPO_SORT_BY_NAME",
              "ARGOCD_REPO_SORT_BY_REPO"
            ],
            "default": "ARGOCD_REPO_SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "GitOps_CreateRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apigitopsv1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1RepoType"
                },
                "repo": {
                  "$ref": "#/definitions/v1alpha1Repo",
                  "title": "The URL to the repo"
                },
                "username": {
                  "type": "string",
                  "title": "Username for accessing repo"
                },
                "password": {
                  "type": "string",
                  "title": "Password for accessing repo"
                },
                "sshPrivateKey": {
                  "type": "string",
                  "title": "Private key data for accessing SSH repository"
                }
              }
            }
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/gitops.amamba.io/v1alpha1/workspaces/{workspaceId}/repositories/{name}": {
      "delete": {
        "operationId": "GitOps_DeleteRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitOps"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/httpapis": {
      "get": {
        "operationId": "Pipelines_CollectionOfHTTPAPI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HttpApiResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/sonarqube/{toolchainId}/bind_workspace": {
      "get": {
        "operationId": "Sonarqube_ListSonarqubeBindWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSonarqubeBindWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "description": "toolchain id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Sonarqube"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains": {
      "get": {
        "operationId": "Toolchain_AdminListInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "types",
            "description": "types that need to be queried,if empty all types,",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSTANCE_TYPE_UNSPECIFIED",
                "INSTANCE_TYPE_JIRA",
                "INSTANCE_TYPE_GITLAB",
                "INSTANCE_TYPE_JENKINS",
                "INSTANCE_TYPE_SONARQUBE"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Toolchain_AdminCreateToolchainInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateToolchainRequest"
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}": {
      "get": {
        "operationId": "Toolchain_AdminGetInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "INSTANCE_TYPE_UNSPECIFIED",
              "INSTANCE_TYPE_JIRA",
              "INSTANCE_TYPE_GITLAB",
              "INSTANCE_TYPE_JENKINS",
              "INSTANCE_TYPE_SONARQUBE"
            ],
            "default": "INSTANCE_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Toolchain_AdminDeleteInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string",
                  "description": "If it is an administrator operation, it does not need to be filled in."
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}/resources": {
      "get": {
        "operationId": "Toolchain_AdminListToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "used for fuzzy query based on project name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RESOURCE_TYPE_UNSPECIFIED",
              "RESOURCE_TYPE_JIRA_PROJECT",
              "RESOURCE_TYPE_GITLAB_PROJECT",
              "RESOURCE_TYPE_SONARQUBE"
            ],
            "default": "RESOURCE_TYPE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}/resources/{resourceId}:bind": {
      "post": {
        "operationId": "Toolchain_AdminBindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}/resources/{resourceId}:unbind": {
      "post": {
        "operationId": "Toolchain_AdminUnbindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnbindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/toolchains/{toolchainId}:sync": {
      "post": {
        "operationId": "Toolchain_AdminSyncToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "string",
                  "description": "If it is an administrator operation, it does not need to be filled in."
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials": {
      "get": {
        "operationId": "Credentials_ListCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1ListCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "name",
            "description": "The filter of the credential, fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Credentials_CreateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The workspace id of the credential.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credentialName": {
                  "type": "string",
                  "description": "The credential_name of the credential."
                },
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apipipelinev1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1BasicCredential"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                }
              }
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/credentials/{credentialName}": {
      "get": {
        "operationId": "Credentials_GetCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Credentials_DeleteCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Credentials_UpdateCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apipipelinev1alpha1Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The description of the credential.\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/apipipelinev1alpha1CredentialType",
                  "description": "The types of the credential."
                },
                "basicCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1BasicCredential",
                  "title": "+optional"
                },
                "kubeconfigCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1KubeconfigCredential",
                  "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
                },
                "secretTextCredential": {
                  "$ref": "#/definitions/apipipelinev1alpha1SecretTextCredential",
                  "title": "The SecretTextCredential is SecretText type of credential basic info"
                }
              },
              "description": "The request for the update credential."
            }
          }
        ],
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/all_projects": {
      "get": {
        "operationId": "GitLab_ListWorkspaceBindGitLabProjectList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceBindGitLabProjectListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/gitlab/{toolchainId}/credential": {
      "get": {
        "operationId": "GitLab_GetGitlabCredentialName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetGitlabCredentialNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/jira/all_projects": {
      "get": {
        "operationId": "Jira_ListWorkspaceBindJiraProjectList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceBindJiraProjectListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Jira"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/jira/{jiraId}/projects/{projectId}/issues": {
      "get": {
        "operationId": "Jira_ListJiraProjectIssues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJiraProjectIssuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jiraId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "type filter used to eliminate issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "creator",
            "description": "creator used to filter the issues created by this person",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assignee",
            "description": "assignee of issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "description": "priority of issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status of issue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "JIRA_ISSUE_SORT_BY_UNSPECIFIED",
              "JIRA_ISSUE_SORT_BY_TYPE",
              "JIRA_ISSUE_SORT_BY_STATUS",
              "JIRA_ISSUE_SORT_BY_PRIORITY",
              "JIRA_ISSUE_SORT_BY_CREATOR",
              "JIRA_ISSUE_SORT_BY_ASSIGNEE",
              "JIRA_ISSUE_SORT_BY_UPDATED"
            ],
            "default": "JIRA_ISSUE_SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Jira"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/jira/{jiraId}/projects/{projectId}/keywords": {
      "get": {
        "operationId": "Jira_ListJiraProjectsSearchKeywords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJiraSearchKeywordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jiraId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Jira"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines": {
      "get": {
        "operationId": "Pipelines_ListPipelines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPipelinesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the pipeline list order reference.\n\n - PIPELINE_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - PIPELINE_FIELD_NAME: Sort result by name.\n - PIPELINE_CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_LAST_RUN_TIME: sort result by last run time",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_SORT_BY_UNSPECIFIED",
              "PIPELINE_FIELD_NAME",
              "PIPELINE_CREATED_AT",
              "PIPELINE_LAST_RUN_TIME"
            ],
            "default": "PIPELINE_SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "searchName",
            "description": "search is used to obfuscate the names in the query pipeline.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchBuildType",
            "description": "Search the build type in the query pipeline.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_TYPE_UNSPECIFIED",
              "PIPELINE_TYPE_CUSTOM",
              "PIPELINE_TYPE_SCM",
              "PIPELINE_TYPE_TEMPLATE",
              "PIPELINE_TYPE_MULTI_BRANCH"
            ],
            "default": "PIPELINE_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Pipelines_CreatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the pipeline."
                },
                "description": {
                  "type": "string",
                  "title": "The description of the pipeline.\n+optional"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1ParameterDefinition"
                  },
                  "title": "The parameters defines pipeline parameters when build, you can override the default value\nIt can be left empty and filled later.\n+optional"
                },
                "buildConfig": {
                  "$ref": "#/definitions/v1alpha1BuildConfig",
                  "title": "The build config for pipeline\n+optional"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1PipelineType",
                  "title": "The type of pipeline"
                },
                "triggers": {
                  "$ref": "#/definitions/v1alpha1BuildTrigger",
                  "title": "The build triggers for pipeline"
                },
                "pipelineScm": {
                  "$ref": "#/definitions/v1alpha1PipelineScm",
                  "title": "Configuration to create a pipeline based on a codebase"
                },
                "template": {
                  "$ref": "#/definitions/v1alpha1TemplateRef"
                },
                "pipelineMultiBranch": {
                  "$ref": "#/definitions/v1alpha1PipelineMultiBranch",
                  "title": "PipelineMultiBranch the definition of multi branch pipeline"
                },
                "force": {
                  "type": "boolean",
                  "title": "whether forced to sync a pipeline, used for this case: a pipeline already exists in jenkins, force updates it"
                },
                "genericWebhookTrigger": {
                  "$ref": "#/definitions/v1alpha1GenericWebhookTrigger",
                  "title": "The Generic Webhook Trigger"
                }
              },
              "description": "Request message for the `CreatePipeline` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}": {
      "get": {
        "operationId": "Pipelines_GetPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The description of the pipeline.\n+optional"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1ParameterDefinition"
                  },
                  "title": "The build parameters\n+optional"
                },
                "buildConfig": {
                  "$ref": "#/definitions/v1alpha1BuildConfig",
                  "title": "build config for pipeline\n+optional"
                },
                "triggers": {
                  "$ref": "#/definitions/v1alpha1BuildTrigger",
                  "title": "The build triggers for pipeline"
                },
                "pipelineScm": {
                  "$ref": "#/definitions/v1alpha1PipelineScm",
                  "title": "Configuration to create a pipeline based on a codebase"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1PipelineType",
                  "title": "The type of pipeline"
                },
                "pipelineMultiBranch": {
                  "$ref": "#/definitions/v1alpha1PipelineMultiBranch",
                  "title": "The multi branch pipeline"
                },
                "genericWebhookTrigger": {
                  "$ref": "#/definitions/v1alpha1GenericWebhookTrigger",
                  "title": "The Generic Webhook Trigger"
                }
              },
              "description": "Request message for the `UpdatePipeline` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/branches": {
      "get": {
        "operationId": "Pipelines_GetBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetBranchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/code_analyze_result": {
      "get": {
        "operationId": "Pipelines_GetCodeAnalyzeResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCodeAnalyzeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/jenkinsfile": {
      "put": {
        "operationId": "Pipelines_UpdatePipelineJenkinsfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "jenkinsfile": {
                  "type": "string",
                  "title": "The jenksinfile defines how pipeline runs, such as nodes, steps and agent.\n+optional"
                }
              },
              "description": "Request message for the `UpdatePipelineJenkinsfile` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/jenkinsjson": {
      "get": {
        "operationId": "Pipelines_GetJenkinsJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetJenkinsJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdateJenkinsJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateJenkinsJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "json": {
                  "type": "string",
                  "title": "The json content"
                }
              },
              "title": "UpdateJenkinsJSONRequest the request parameter for update jenkinsjson"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/name": {
      "put": {
        "operationId": "Pipelines_UpdatePipelineName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newName": {
                  "type": "string",
                  "description": "The newly updated name of the pipeline, no changes made if left blank."
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/parameters": {
      "get": {
        "operationId": "Pipelines_GetBuildParameter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetBuildParameterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs": {
      "get": {
        "operationId": "Pipelines_ListPipelineRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPipelineRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_RUN_ID: Sort result by pipelineRunID.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "CREATED_AT",
              "PIPELINE_RUN_ID"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "searchRunId",
            "description": "search is used to accurately query the id of the pipeline running record.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}": {
      "get": {
        "operationId": "Pipelines_GetPipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelineRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeletePipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/artifacts": {
      "get": {
        "operationId": "Pipelines_GetPipelineArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/junit_report": {
      "get": {
        "operationId": "Pipelines_GetJunitReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetJunitReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "result",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "JUNIT_RESULT_UNSPECIFIED",
              "JUNIT_RESULT_PASSED",
              "JUNIT_RESULT_SKIPPED",
              "JUNIT_RESULT_FAILED",
              "JUNIT_RESULT_FIXED",
              "JUNIT_RESULT_REGRESSION",
              "JUNIT_RESULT_EXISTING_FAILED"
            ],
            "default": "JUNIT_RESULT_UNSPECIFIED"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/junit_summary": {
      "get": {
        "operationId": "Pipelines_GetJunitReportSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetJunitSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/log": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunSteps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunStepsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps/{stepId}/log": {
      "get": {
        "operationId": "Pipelines_GetPipelineRunStepLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineRunStepLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stepId",
            "description": "The step of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "start",
            "description": "The start location of log",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps/{stepId}:abort": {
      "post": {
        "operationId": "Pipelines_SubmitInputToAbort",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SubmitInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stepId",
            "description": "The step of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputId": {
                  "type": "string",
                  "title": "The id of input"
                }
              },
              "title": "SubmitInputRequest the quest parameter for approval/abort input"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}/nodes/{nodeId}/steps/{stepId}:process": {
      "post": {
        "operationId": "Pipelines_SubmitInputToProceed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SubmitInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "description": "The node of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stepId",
            "description": "The step of pipeline run",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputId": {
                  "type": "string",
                  "title": "The id of input"
                }
              },
              "title": "SubmitInputRequest the quest parameter for approval/abort input"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}:cancel": {
      "post": {
        "operationId": "Pipelines_CancelPipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelineRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the `CancelPipelineRun` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/runs/{runId}:replay": {
      "post": {
        "operationId": "Pipelines_ReplayPipelineRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PipelineRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "description": "The id of the build.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the `ReplayPipelineRun` method."
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/scan": {
      "post": {
        "operationId": "Pipelines_ScanMultiBranchPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ScanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}/scanlog": {
      "get": {
        "operationId": "Pipelines_GetScanlogOfMultiBranchPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetScanlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{name}:sync": {
      "post": {
        "summary": "sync pipeline from database to jenkins.\n if a pipeline is not existed in jenkins, create it. if exist, update it.",
        "operationId": "Pipelines_SyncPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SyncPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the pipeline.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines/{pipeline}/token": {
      "get": {
        "operationId": "Pipelines_GetPipelineArtifactsDownloadToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPipelineArtifactsDownloadTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/pipelines:replicate": {
      "post": {
        "operationId": "Pipelines_ReplicatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "The scope where the pipeline will be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourcePipelineName": {
                  "type": "string",
                  "description": "The source pipeline name."
                },
                "destPipelineName": {
                  "type": "string",
                  "description": "The destination pipeline name."
                }
              },
              "title": "ReplicatePipelineRequest the request parameter for copy job"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/sonarqube/all_projects": {
      "get": {
        "operationId": "Sonarqube_ListBindedSonarqube",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListBindedSonarqubeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sonarqube"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/sonarqube/{toolchainId}/credential": {
      "get": {
        "operationId": "Sonarqube_GetSonarqubeCredentialName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetSonarqubeCredentialNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Sonarqube"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/templates": {
      "get": {
        "operationId": "Pipelines_ListTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "type",
            "description": "Type filters the type of response templates.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TEMPLATE_TYPE_UNSPECIFIED",
              "TEMPLATE_TYPE_BUILTIN",
              "TEMPLATE_TYPE_CUSTOM"
            ],
            "default": "TEMPLATE_TYPE_UNSPECIFIED"
          },
          {
            "name": "metadataOnly",
            "description": "MetadataOnly indicates whether to return parameter definitions and jenkinsfile.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "template name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Pipelines_CreateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "spec": {
                  "type": "string",
                  "title": "spec describes the parameter definitions and jenkinsfile in yaml"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/templates/{name}": {
      "get": {
        "operationId": "Pipelines_GetTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Pipelines_DeleteTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Pipelines_UpdateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "spec": {
                  "type": "string",
                  "title": "spec describes the parameter definitions and jenkinsfile in yaml"
                }
              }
            }
          }
        ],
        "tags": [
          "Pipelines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains": {
      "get": {
        "operationId": "Toolchain_ListInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "types",
            "description": "types that need to be queried,if empty all types,",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSTANCE_TYPE_UNSPECIFIED",
                "INSTANCE_TYPE_JIRA",
                "INSTANCE_TYPE_GITLAB",
                "INSTANCE_TYPE_JENKINS",
                "INSTANCE_TYPE_SONARQUBE"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Public interface",
        "operationId": "Toolchain_CreateToolchainInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                },
                "jiraConfig": {
                  "$ref": "#/definitions/v1alpha1JiraConfig"
                },
                "gitlabConfig": {
                  "$ref": "#/definitions/v1alpha1GitLabConfig"
                },
                "jenkinsConfig": {
                  "$ref": "#/definitions/v1alpha1JenkinsConfig"
                },
                "sonarqubeConfig": {
                  "$ref": "#/definitions/v1alpha1SonarqubeConfig"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}": {
      "get": {
        "operationId": "Toolchain_GetInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ToolChainInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "INSTANCE_TYPE_UNSPECIFIED",
              "INSTANCE_TYPE_JIRA",
              "INSTANCE_TYPE_GITLAB",
              "INSTANCE_TYPE_JENKINS",
              "INSTANCE_TYPE_SONARQUBE"
            ],
            "default": "INSTANCE_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Toolchain_DeleteInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}/resources": {
      "get": {
        "summary": "Gitlab related interfaces",
        "operationId": "Toolchain_ListToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListToolchainResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "used for fuzzy query based on project name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RESOURCE_TYPE_UNSPECIFIED",
              "RESOURCE_TYPE_JIRA_PROJECT",
              "RESOURCE_TYPE_GITLAB_PROJECT",
              "RESOURCE_TYPE_SONARQUBE"
            ],
            "default": "RESOURCE_TYPE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}/resources/{resourceId}:bind": {
      "post": {
        "operationId": "Toolchain_BindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}/resources/{resourceId}:unbind": {
      "post": {
        "operationId": "Toolchain_UnbindToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnbindToolchainResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1ResourceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/pipeline.amamba.io/v1alpha1/workspaces/{workspaceId}/toolchains/{toolchainId}:sync": {
      "post": {
        "operationId": "Toolchain_SyncToolchainResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "If it is an administrator operation, it does not need to be filled in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toolchainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Toolchain"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rolloutinfo/{name}": {
      "get": {
        "summary": "GetRolloutInfo returns the information for a rollout and pod/RS/analysisRun which the rollout manages.",
        "operationId": "Rollouts_GetRolloutInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RolloutInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts": {
      "get": {
        "summary": "ListRollouts lists all argo rollouts in a given namespace.",
        "operationId": "Rollouts_ListRollouts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolloutsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Name of cluster in which the namespace lives, declared when created from kpanda api.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of namespace in which the resource Rollout lives.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "FIELD_NAME",
              "CREATED_AT",
              "CLUSTER",
              "NAMESPACE"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "fuzzyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rolloutPhase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ROLLOUT_PHASE_UNSPECIFIED",
              "ROLLOUT_PHASE_HEALTHY",
              "ROLLOUT_PHASE_DEGRADED",
              "ROLLOUT_PHASE_PROCESSING",
              "ROLLOUT_PHASE_PAUSED",
              "ROLLOUT_PHASE_SCALEDDOWN"
            ],
            "default": "ROLLOUT_PHASE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "CreateRollout creates a argo rollout for a given workload.",
        "operationId": "Rollouts_CreateRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace."
                },
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "workloadRef": {
                  "$ref": "#/definitions/v1alpha1WorkloadRef",
                  "description": "WorkloadRef holds a references to a workload that provides Pod template."
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of desired pods. Note this field is for Rollout not workload."
                },
                "strategy": {
                  "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
                  "description": "The deployment strategy to use to replace existing pods with new ones."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}": {
      "get": {
        "summary": "GetRollout gets the argo rollouts with a given name and namespace.",
        "operationId": "Rollouts_GetRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Name of cluster in which the namespace lives, declared when created from kpanda api.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of namespace in which the resource Rollout lives.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "DeleteRollout deletes a rollout in the namespace with a given name.",
        "operationId": "Rollouts_DeleteRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateRollout updates the spec of a argo rollout.",
        "operationId": "Rollouts_UpdateRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of desired pods. Note this field is for Rollout not workload. Leave it empty if want to keep\nthe old value. We use google warppers to fix grpc-gateway-ts does not support keyword optional"
                },
                "strategy": {
                  "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
                  "description": "The deployment strategy to use to replace existing pods with new ones."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}/containters": {
      "get": {
        "operationId": "Rollouts_ListRolloutContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolloutContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}/json": {
      "get": {
        "operationId": "Rollouts_GetRolloutJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetRolloutJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Rollouts_UpdateRolloutJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateRolloutJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}/revisions/{revision}:undo": {
      "post": {
        "summary": "UndoRollout rollbacks the workload to a previous rollout.",
        "operationId": "Rollouts_UndoRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "description": "The revision to rollback to. Default to 0 (last revision).",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                }
              },
              "description": "Rollback to a given revision."
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}:abort": {
      "post": {
        "summary": "AbortRollout stops progressing the current rollout and reverts all steps. The previous ReplicaSet will be active.",
        "operationId": "Rollouts_AbortRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}:promote": {
      "post": {
        "summary": "PromoteRollout promotes a rollout to the next step, or to end of all steps",
        "operationId": "Rollouts_PromoteRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "full": {
                  "type": "boolean",
                  "description": "Perform a full promotion, skipping analysis, pauses, and steps."
                }
              }
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/rollout.amamba.io/v1alpha1/workspaces/{workspaceId}/rollouts/{name}:upgrade": {
      "post": {
        "summary": "UpgradeRollout sets a new image to a container of the workload referenced.",
        "operationId": "Rollouts_UpgradeRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirolloutv1alpha1Rollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deployTarget": {
                  "$ref": "#/definitions/applicationv1alpha1DeployTarget",
                  "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
                },
                "container": {
                  "type": "string",
                  "description": "Name of container of which image will be update."
                },
                "image": {
                  "type": "string",
                  "description": "New image name to set for the container, keep it unchanged if left it empty."
                }
              },
              "description": "Set rollout images."
            }
          }
        ],
        "tags": [
          "Rollouts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "CanaryStrategyAnalysis": {
      "type": "object",
      "properties": {
        "templateNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Name of templates to be used in AnalysisRuns."
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1Argument"
          },
          "description": "Args the arguments that will be added to the AnalysisRuns."
        }
      }
    },
    "CreateWorkloadByHelmRequestCharts": {
      "type": "object",
      "properties": {
        "chartName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "values": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DataStorageDataVolume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "subPath": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "DataStorageNodePathMapping": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DataStorageNodePathMappingType"
        },
        "key": {
          "type": "string",
          "title": "if mode is MODE_EMPTY_DIR: key is \"\"\nif mode is MODE_HOST_PATH: key is  host path\nif mode is MODE_SECRET: key is secret name\nif mode is MODE_CONFIG_MAP: key is configmap name"
        },
        "mountPath": {
          "type": "string"
        },
        "subPath": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "DataStorageNodePathMappingType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_EMPTY_DIR",
        "TYPE_HOST_PATH",
        "TYPE_SECRET",
        "TYPE_CONFIG_MAP"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "EnvironmentVariableReference": {
      "type": "object",
      "properties": {
        "variableName": {
          "type": "string",
          "title": "name of variable"
        },
        "name": {
          "type": "string",
          "title": "name like container_name/configmap_name/secret_name"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "HealthInspectionPublicInspectionBody": {
      "type": "object",
      "properties": {
        "inspectionMethod": {
          "$ref": "#/definitions/PublicInspectionBodyInspectionMethod"
        },
        "httpCheck": {
          "$ref": "#/definitions/v1alpha1HTTPRequest",
          "title": "There is only one about http_check,tcp_check,command_check\ntheir presence strict correspondence inspection method"
        },
        "tcpCheck": {
          "$ref": "#/definitions/PublicInspectionBodyTCPCheck"
        },
        "commandCheck": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "advancedSetting": {
          "$ref": "#/definitions/PublicInspectionBodyAdvancedSetting"
        }
      }
    },
    "HelmRepoMetadataOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "controller": {
          "type": "boolean"
        }
      }
    },
    "HelmRepoSpec": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "clientSecret": {
          "$ref": "#/definitions/HelmRepoSpecSecretReference"
        }
      }
    },
    "HelmRepoSpecSecretReference": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "LifeCycleCommandLineScript": {
      "type": "object",
      "properties": {
        "runCommand": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LifeCycleCommandProcessingType": {
      "type": "string",
      "enum": [
        "COMMAND_PROCESSING_TYPE_UNSPECIFIED",
        "COMMAND_PROCESSING_TYPE_SCRIPT",
        "COMMAND_PROCESSING_TYPE_HTTP"
      ],
      "default": "COMMAND_PROCESSING_TYPE_UNSPECIFIED"
    },
    "LifeCyclePreAndPostStartCommand": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/LifeCycleCommandProcessingType"
        },
        "script": {
          "$ref": "#/definitions/LifeCycleCommandLineScript"
        },
        "httpRequest": {
          "$ref": "#/definitions/v1alpha1HTTPRequest"
        }
      }
    },
    "LifeCycleStartCommand": {
      "type": "object",
      "properties": {
        "runCommand": {
          "type": "string"
        },
        "operatingParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListHelmChartsRequestCategory": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "OTHERS",
        "STORAGE",
        "NETWORKING",
        "MONITORING",
        "DATABASE"
      ],
      "default": "UNSPECIFIED"
    },
    "ListHelmChartsResponseCategoryItem": {
      "type": "object",
      "properties": {
        "othersNums": {
          "type": "integer",
          "format": "int32"
        },
        "storageNums": {
          "type": "integer",
          "format": "int32"
        },
        "networkNums": {
          "type": "integer",
          "format": "int32"
        },
        "monitorNums": {
          "type": "integer",
          "format": "int32"
        },
        "databaseNums": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListPipelineRunsRequestPipelineRunSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "CREATED_AT",
        "PIPELINE_RUN_ID"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_RUN_ID: Sort result by pipelineRunID."
    },
    "PersistentVolumeClaimSpecVolumeMode": {
      "type": "string",
      "enum": [
        "VOLUME_MODE_UNSPECIFIED",
        "Block",
        "Filesystem"
      ],
      "default": "VOLUME_MODE_UNSPECIFIED",
      "description": " - Block: PersistentVolumeBlock means the volume will not be formatted with a filesystem and will remain a raw block device.\n - Filesystem: PersistentVolumeFilesystem means the volume will be or is formatted with a filesystem."
    },
    "PipelineArtifactLinks": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "class": {
          "type": "string"
        }
      }
    },
    "PublicInspectionBodyAdvancedSetting": {
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "requestHeader": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PublicInspectionBodyInspectionMethod": {
      "type": "string",
      "enum": [
        "INSPECTION_METHOD_UNSPECIFIED",
        "INSPECTION_METHOD_HTTP",
        "INSPECTION_METHOD_TCP",
        "INSPECTION_METHOD_COMMAND"
      ],
      "default": "INSPECTION_METHOD_UNSPECIFIED"
    },
    "PublicInspectionBodyTCPCheck": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "StatusRepoPhase": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "UNKNOWN",
        "ACTIVE"
      ],
      "default": "UNSPECIFIED"
    },
    "aggregationv1alpha1CreateAggregationResourceRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance the specified propagation policy belongs to."
        },
        "namespace": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1alpha1AggregationResource"
        },
        "gvr": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GVR"
          },
          "description": "GVR represents the resource gvr of CustomResources."
        }
      }
    },
    "amambaioapitypesObjectMeta": {
      "type": "object",
      "properties": {
        "workspace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "deletedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "amambaioapitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "FIELD_NAME",
        "CREATED_AT",
        "CLUSTER",
        "NAMESPACE"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - FIELD_NAME: Sort result by name.\n - CREATED_AT: Sort result by creationTimestamp.\n - CLUSTER: sort result by cluster.\n - NAMESPACE: sort result by namespace."
    },
    "amambaioapitypesSortDir": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC",
      "description": "OrderBy determines the data list order.\n\n - DESC: Desc stands for descending order.\n - ASC: Asc stands for ascending order."
    },
    "apiapplicationv1alpha1ClusterStatus": {
      "type": "string",
      "enum": [
        "CLUSTER_STATUS_UNSPECIFIED",
        "CLUSTER_STATUS_RUNNING",
        "CLUSTER_STATUS_NOT_RUNNING",
        "CLUSTER_STATUS_UNKNOWN"
      ],
      "default": "CLUSTER_STATUS_UNSPECIFIED"
    },
    "apiapplicationv1alpha1ConfigMap": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta"
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the configuration data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nValues with non-UTF-8 byte sequences must use the BinaryData field.\nThe keys stored in Data must not overlap with the keys in\nthe BinaryData field, this is enforced during validation process.\n+optional"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "BinaryData contains the binary data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range.\nThe keys stored in BinaryData must not overlap with the ones in\nthe Data field, this is enforced during validation process.\nUsing this field will require 1.10+ apiserver and\nkubelet.\n+optional"
        }
      }
    },
    "apiapplicationv1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
        },
        "image": {
          "type": "string",
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "resources": {
          "$ref": "#/definitions/apiapplicationv1alpha1ResourceRequirements",
          "description": "Resource requirements for the container, including CPU/Memory limits and requests."
        }
      }
    },
    "apiapplicationv1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Container"
          },
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Container"
          },
          "description": "List of initialization containers belonging to the pod."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Condition"
          }
        },
        "selector": {
          "$ref": "#/definitions/applicationv1alpha1Selector"
        }
      }
    },
    "apiapplicationv1alpha1GetHelmChartsResponse": {
      "type": "object",
      "properties": {
        "chart": {
          "$ref": "#/definitions/v1alpha1HelmCharts"
        }
      }
    },
    "apiapplicationv1alpha1GitRepository": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "apiapplicationv1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ioapiapplicationv1alpha1Repository"
          },
          "description": "Items is a list of repositories."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListRepositoriesResponse returns a list of projects of a registry"
    },
    "apiapplicationv1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "cpuRequest": {
          "type": "number",
          "format": "double",
          "title": "CPU request in unit cores"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double",
          "title": "CPU limit in unit cores"
        },
        "memoryRequest": {
          "type": "number",
          "format": "double",
          "title": "Memory request in unit MB"
        },
        "memoryLimit": {
          "type": "number",
          "format": "double",
          "title": "Memory limit in unit MB"
        }
      }
    },
    "apiapplicationv1alpha1Secret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta"
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the secret cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the secret data. Each key must consist of alphanumeric\ncharacters, '-', '_' or '.'. The serialized form of the secret data is a\nbase64 encoded string, representing the arbitrary (possibly non-string)\ndata value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n+optional"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only input field for convenience.\nAll keys and values are merged into the data field on write, overwriting any existing values.\nThe stringData field is never output when reading from the API.\n+k8s:conversion-gen=false\n+optional"
        },
        "secretType": {
          "type": "string"
        }
      }
    },
    "apiappsv1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/corev1alpha1PodTemplateSpec",
          "title": "Template describes the data a pod should have when created from a template"
        },
        "strategy": {
          "$ref": "#/definitions/typesUpdateStrategy",
          "description": "Strategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the deployment is paused."
        }
      },
      "description": "DeploymentSpec specifies the state of a Deployment."
    },
    "apiclusterv1alpha1Cluster": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ClusterSpec",
          "description": "ClusterSpec describes how the cluster execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/apiclusterv1alpha1ClusterStatus",
          "description": "ClusterStatus contains the cluster status."
        }
      }
    },
    "apiclusterv1alpha1ClusterStatus": {
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "KubernetesVersion represents version of the member cluster."
        },
        "kubeSystemID": {
          "type": "string",
          "description": "KubeSystemId represents the uuid of sub cluster kube-system namespace."
        },
        "serviceCIDR": {
          "type": "string",
          "description": "ServiceCIDR represents the service network CIDR."
        },
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod network CIDR."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase",
          "description": "Condition represents the status of the member cluster."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "The cpu usage of the member cluster."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "The memory usage of the member cluster."
        },
        "proxyMode": {
          "type": "string",
          "description": "ProxyMode represents the kube-proxy mode of the member cluster."
        },
        "resourceSummary": {
          "$ref": "#/definitions/v1alpha1ClusterResourceSummary",
          "description": "ResourceSummary represents the resource of the member cluster."
        }
      }
    },
    "apiclusterv1alpha1LocalSecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace for the resource being referenced."
        },
        "resourceVersion": {
          "type": "string",
          "description": "ResourceVersion is the version of resource being referenced."
        }
      },
      "title": "SecretRef represents the secret contains mandatory credentials to access the member cluster.\nThe secret should hold credentials as follows:\n- secret.data.token\n- secret.data.caBundle\n+optional"
    },
    "apicorev1alpha1Cluster": {
      "type": "object",
      "properties": {
        "kubeSystemId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "cluster name"
        },
        "aliasName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "cluster creation time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "cluster labels"
        },
        "status": {
          "$ref": "#/definitions/apiapplicationv1alpha1ClusterStatus",
          "title": "cluster status"
        }
      }
    },
    "apicorev1alpha1ConfigMap": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the configuration data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nValues with non-UTF-8 byte sequences must use the BinaryData field.\nThe keys stored in Data must not overlap with the keys in\nthe BinaryData field, this is enforced during validation process.\n+optional"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "BinaryData contains the binary data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range.\nThe keys stored in BinaryData must not overlap with the ones in\nthe Data field, this is enforced during validation process.\nUsing this field will require 1.10+ apiserver and\nkubelet.\n+optional"
        }
      },
      "description": "ConfigMap holds configuration data for pods to consume."
    },
    "apicorev1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Container."
        },
        "image": {
          "type": "string",
          "description": "The used image of Container."
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The container command."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workingDir": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Ports"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1EnvFromSource"
          },
          "title": "EnvFromSource represents the source of a set of ConfigMaps"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1EnvVar"
          },
          "description": "EnvVar represents an environment variable present in a Container."
        },
        "resources": {
          "$ref": "#/definitions/apicorev1alpha1ResourceRequirements",
          "description": "Source represents a source for the value of an EnvVar."
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1VolumeMount"
          },
          "description": "VolumeMount describes a mounting of a Volume within a container."
        },
        "livenessProbe": {
          "$ref": "#/definitions/corev1alpha1Probe",
          "description": "Liveness probe is aimed to help in situarions where fluentd\nsilently hangs for no apparent reasons until manual restart.\nThe idea of this probe is that if fluentd is not queueing or\nflushing chunks for 5 minutes, something is not right. If\nyou want to change the fluentd configuration, reducing amount of\nlogs fluentd collects, consider changing the threshold or turning\nliveness probe off completely."
        },
        "readinessProbe": {
          "$ref": "#/definitions/corev1alpha1Probe",
          "description": "Readiness updates the cached pod status with the given readiness, and\ntriggers a status update."
        },
        "startupProbe": {
          "$ref": "#/definitions/corev1alpha1Probe",
          "description": "Startup updates the cached container status with the given startup, and\ntriggers a status update."
        },
        "lifecycle": {
          "$ref": "#/definitions/corev1alpha1Lifecycle",
          "description": "The life cycle of a Container."
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Pull image policy."
        },
        "securityContext": {
          "$ref": "#/definitions/corev1alpha1SecurityContext",
          "description": "SecurityContext holds security attributes."
        }
      }
    },
    "apicorev1alpha1ListConfigMapsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the configmap belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "OrderBy determines the list order."
        },
        "name": {
          "type": "string",
          "title": "name is used for query.\n+optional"
        },
        "labelSelector": {
          "type": "string",
          "title": "LabelSelector is the format after labels.FormatLabels used to filter"
        },
        "fieldSelector": {
          "type": "string",
          "title": "FieldSelector is the format after labels.FormatLabels used to filter"
        }
      },
      "description": "It returns the list of Cluster ConfigMaps information."
    },
    "apicorev1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value. More\ninfo:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "apicorev1alpha1Secret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the Secret cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the secret data. Each key must consist of alphanumeric\ncharacters, '-', '_' or '.'. The serialized form of the secret data is a\nbase64 encoded string, representing the arbitrary (possibly non-string)\ndata value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n+optional"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only input field for convenience.\nAll keys and values are merged into the data field on write, overwriting any existing values.\nThe stringData field is never output when reading from the API.\n+k8s:conversion-gen=false\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Used to facilitate programmatic handling of secret data.\n+optional"
        }
      }
    },
    "apicredentialv1alpha1BasicCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the credential."
        },
        "password": {
          "type": "string",
          "description": "The password of the credential."
        }
      }
    },
    "apicredentialv1alpha1Credential": {
      "type": "object",
      "properties": {
        "baseInfo": {
          "$ref": "#/definitions/apicredentialv1alpha1CredentialBaseInfo",
          "description": "The base info of the credential."
        },
        "basicCredential": {
          "$ref": "#/definitions/apicredentialv1alpha1BasicCredential",
          "title": "+optional"
        },
        "kubeconfigCredential": {
          "$ref": "#/definitions/apicredentialv1alpha1KubeconfigCredential",
          "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
        },
        "secretTextCredential": {
          "$ref": "#/definitions/apicredentialv1alpha1SecretTextCredential",
          "title": "The SecretTextCredential is SecretText type of credential basic info"
        }
      }
    },
    "apicredentialv1alpha1CredentialBaseInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apicredentialv1alpha1CredentialType",
          "description": "The type of the credential."
        },
        "name": {
          "type": "string",
          "description": "The name of the credential."
        },
        "description": {
          "type": "string",
          "title": "The description of the credential.\n+optional"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "The create time of the credential."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "The update time of the credential."
        },
        "workspaceId": {
          "type": "string",
          "description": "The workspace id of the credential."
        }
      }
    },
    "apicredentialv1alpha1CredentialType": {
      "type": "string",
      "enum": [
        "CREDENTIAL_TYPE_UNSPECIFIED",
        "USERNAME_PASSWORD",
        "SSH_KEY",
        "KUBECONFIG",
        "SECRET_TEXT"
      ],
      "default": "CREDENTIAL_TYPE_UNSPECIFIED"
    },
    "apicredentialv1alpha1KubeconfigCredential": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "apicredentialv1alpha1ListCredentialsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicredentialv1alpha1Credential"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "title": "Pagination is for data paging"
        }
      },
      "description": "The response message for the list credentials."
    },
    "apicredentialv1alpha1SecretTextCredential": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        }
      }
    },
    "apigitopsv1alpha1Application": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/apisapplicationv1alpha1Application"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "operationStartedAt": {
          "type": "string",
          "format": "int64"
        },
        "operationFinishedAt": {
          "type": "string",
          "format": "int64"
        },
        "deletedAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "TODO: convert createTimeStamp to int64"
    },
    "apigitopsv1alpha1ConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "attemptedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apigitopsv1alpha1GetHelmChartsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GetHelmChartsResponseItem"
          }
        }
      }
    },
    "apigitopsv1alpha1HealthStatus": {
      "type": "string",
      "enum": [
        "HEALTH_STATUS_UNSPECIFIED",
        "HEALTH_STATUS_MISSING",
        "HEALTH_STATUS_DEGRADED",
        "HEALTH_STATUS_HEALTHY",
        "HEALTH_STATUS_UNKNOWN",
        "HEALTH_STATUS_SUSPENDED",
        "HEALTH_STATUS_PROGRESSING"
      ],
      "default": "HEALTH_STATUS_UNSPECIFIED"
    },
    "apigitopsv1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apigitopsv1alpha1Repository"
          }
        },
        "page": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "apigitopsv1alpha1Repository": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RepoType"
        },
        "repo": {
          "type": "string"
        },
        "connectionState": {
          "$ref": "#/definitions/apigitopsv1alpha1ConnectionState"
        }
      }
    },
    "apigitopsv1alpha1SyncPolicy": {
      "type": "object",
      "properties": {
        "automated": {
          "$ref": "#/definitions/v1alpha1SyncPolicyAutomated"
        },
        "options": {
          "$ref": "#/definitions/v1alpha1SyncOptions"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy"
        }
      }
    },
    "apigitopsv1alpha1SyncStatus": {
      "type": "string",
      "enum": [
        "SYNC_STATUS_UNSPECIFIED",
        "SYNC_STATUS_UNKNOWN",
        "SYNC_STATUS_SYNCED",
        "SYNC_STATUS_OUT_OF_SYNC"
      ],
      "default": "SYNC_STATUS_UNSPECIFIED"
    },
    "apipipelinev1alpha1BasicCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the credential."
        },
        "password": {
          "type": "string",
          "description": "The password of the credential."
        }
      }
    },
    "apipipelinev1alpha1Credential": {
      "type": "object",
      "properties": {
        "baseInfo": {
          "$ref": "#/definitions/apipipelinev1alpha1CredentialBaseInfo",
          "description": "The base info of the credential."
        },
        "basicCredential": {
          "$ref": "#/definitions/apipipelinev1alpha1BasicCredential",
          "title": "+optional"
        },
        "kubeconfigCredential": {
          "$ref": "#/definitions/apipipelinev1alpha1KubeconfigCredential",
          "title": "The KubeconfigCredential is kubeconfig type of credential basic info"
        },
        "secretTextCredential": {
          "$ref": "#/definitions/apipipelinev1alpha1SecretTextCredential",
          "title": "The SecretTextCredential is SecretText type of credential basic info"
        }
      }
    },
    "apipipelinev1alpha1CredentialBaseInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apipipelinev1alpha1CredentialType",
          "description": "The type of the credential."
        },
        "name": {
          "type": "string",
          "description": "The name of the credential."
        },
        "description": {
          "type": "string",
          "title": "The description of the credential.\n+optional"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "The create time of the credential."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "The update time of the credential."
        },
        "workspaceId": {
          "type": "string",
          "description": "The workspace id of the credential."
        }
      }
    },
    "apipipelinev1alpha1CredentialType": {
      "type": "string",
      "enum": [
        "CREDENTIAL_TYPE_UNSPECIFIED",
        "USERNAME_PASSWORD",
        "SSH_KEY",
        "KUBECONFIG",
        "SECRET_TEXT"
      ],
      "default": "CREDENTIAL_TYPE_UNSPECIFIED"
    },
    "apipipelinev1alpha1GitRepository": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "apipipelinev1alpha1KubeconfigCredential": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "apipipelinev1alpha1ListCredentialsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apipipelinev1alpha1Credential"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "title": "Pagination is for data paging"
        }
      },
      "description": "The response message for the list credentials."
    },
    "apipipelinev1alpha1SecretTextCredential": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        }
      }
    },
    "apirolloutv1alpha1Argument": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name argument name."
        },
        "value": {
          "type": "string",
          "description": "Value a hardcoded value for the argument."
        }
      },
      "description": "Argument describes the name and value for AnalysisRuns."
    },
    "apirolloutv1alpha1BlueGreenStrategy": {
      "type": "object",
      "properties": {
        "activeService": {
          "type": "string"
        }
      },
      "title": "Placeholder for Blue-Green Strategy"
    },
    "apirolloutv1alpha1CanaryStep": {
      "type": "object",
      "properties": {
        "setWeight": {
          "type": "integer",
          "format": "int32",
          "title": "SetWeight sets what percentage of the newRS should receive\n+optional"
        },
        "pauseDuration": {
          "type": "integer",
          "format": "int32",
          "title": "Minutes to wait, forever if set to zero"
        },
        "setHeaderRoute": {
          "$ref": "#/definitions/v1alpha1SetHeaderRoute",
          "title": "SetHeaderRoute defines the route with specified header name to send 100% of traffic to the canary service\n+optional"
        }
      },
      "description": "CanaryStep defines a step of a canary deployment."
    },
    "apirolloutv1alpha1CanaryStrategy": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1CanaryStep"
          },
          "description": "Steps define the order of phases to execute the canary deployment."
        },
        "analysis": {
          "$ref": "#/definitions/CanaryStrategyAnalysis",
          "description": "Leave it empty if no analysis specified."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1CanaryType"
        },
        "stableService": {
          "type": "string",
          "title": "StableService holds the name of a service which selects pods with stable version and don't select any pods with canary version.\n+optional"
        },
        "stableIngress": {
          "type": "string"
        }
      }
    },
    "apirolloutv1alpha1ContainerStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Each container in a pod must have a unique name.\nCannot be updated."
        },
        "image": {
          "type": "string",
          "title": "The image the container is running.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        }
      },
      "description": "ContainerStatus represents the container status."
    },
    "apirolloutv1alpha1Rollout": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access."
        },
        "name": {
          "type": "string",
          "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace."
        },
        "deployTarget": {
          "$ref": "#/definitions/applicationv1alpha1DeployTarget",
          "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
        },
        "workloadRef": {
          "$ref": "#/definitions/v1alpha1WorkloadRef",
          "description": "WorkloadRef holds a references to a workload that provides Pod template."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of desired pods. Note this field is for Rollout not workload."
        },
        "strategy": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
          "description": "The deployment strategy to use to replace existing pods with new ones."
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "created_at is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC."
        },
        "status": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutStatus",
          "description": "Status describes the conditions for a resource Rollout."
        }
      }
    },
    "apirolloutv1alpha1RolloutStatus": {
      "type": "object",
      "properties": {
        "abort": {
          "type": "boolean",
          "title": "Abort cancel the current rollout progression"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of non-terminated pods targeted by this rollout (their labels match the selector)."
        },
        "updatedReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of non-terminated pods targeted by this rollout that have the desired template spec."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of ready pods targeted by this rollout."
        },
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this rollout."
        },
        "canary": {
          "$ref": "#/definitions/v1alpha1CanaryStatus",
          "title": "Canary describes the state of the canary rollout"
        },
        "blueGreen": {
          "$ref": "#/definitions/v1alpha1BlueGreenStatus",
          "title": "BlueGreen describes the state of the bluegreen rollout"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1RolloutPhase",
          "title": "Phase is the rollout phase. Clients should only rely on the value if status.observedGeneration equals metadata.generation"
        },
        "message": {
          "type": "string",
          "title": "Message provides details on why the rollout is in its current phase"
        }
      }
    },
    "apirolloutv1alpha1RolloutStrategy": {
      "type": "object",
      "properties": {
        "canary": {
          "$ref": "#/definitions/apirolloutv1alpha1CanaryStrategy"
        },
        "blueGreen": {
          "$ref": "#/definitions/apirolloutv1alpha1BlueGreenStrategy"
        }
      }
    },
    "apisapplicationv1alpha1Application": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/applicationv1alpha1ApplicationSpec"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha1ApplicationStatus"
        },
        "operation": {
          "$ref": "#/definitions/applicationv1alpha1Operation"
        }
      },
      "title": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10"
    },
    "apisapplicationv1alpha1HealthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status holds the status code of the application or resource"
        },
        "message": {
          "type": "string",
          "title": "Message is a human-readable informational message describing the health status"
        }
      },
      "title": "HealthStatus contains information about the currently observed health state of an application or resource"
    },
    "apisapplicationv1alpha1SyncPolicy": {
      "type": "object",
      "properties": {
        "automated": {
          "$ref": "#/definitions/v1alpha1SyncPolicyAutomated",
          "title": "Automated will keep an application synced to the target revision"
        },
        "syncOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Options allow you to specify whole app sync-options"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy",
          "title": "Retry controls failed sync retry behavior"
        }
      },
      "title": "SyncPolicy controls when a sync will be performed in response to updates in git"
    },
    "apisapplicationv1alpha1SyncStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status is the sync state of the comparison"
        },
        "comparedTo": {
          "$ref": "#/definitions/v1alpha1ComparedTo",
          "title": "ComparedTo contains information about what has been compared"
        },
        "revision": {
          "type": "string",
          "title": "Revision contains information about the revision the comparison has been performed to"
        }
      },
      "title": "SyncStatus contains information about the currently observed live and desired states of an application"
    },
    "apitypesCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string",
          "title": "Last time the condition transitioned from one status to another.\n+optional"
        },
        "lastUpdateTime": {
          "type": "string",
          "title": "Last time we got an update on a given condition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "type": {
          "type": "string",
          "description": "Type of condition."
        }
      },
      "description": "Condition describes the state of a referent at a certain point."
    },
    "apitypesLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the\nmatchLabels map is equivalent to an element of matchExpressions, whose key\nfield is \"key\", the operator is \"In\", and the values array contains only\n\"value\". The requirements are ANDed. +optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apitypesLabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements\nare ANDed. +optional"
        }
      },
      "description": "A label selector is a label query over a set of resources. The result of\nmatchLabels and matchExpressions are ANDed. An empty label selector matches\nall objects. A null label selector matches no objects."
    },
    "apitypesLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. This array is replaced during\na strategic merge patch. +optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and\nan operator that relates the key and values."
    },
    "apitypesOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "apitypesTaint": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The taint key to be applied to a node."
        },
        "value": {
          "type": "string",
          "description": "The taint value corresponding to the taint key."
        },
        "effect": {
          "$ref": "#/definitions/typesTaintEffect",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        }
      }
    },
    "apitypesTypeMeta": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1AccessMode": {
      "type": "string",
      "enum": [
        "ACCESS_MODE_UNSPECIFIED",
        "ReadWriteOnce",
        "ReadOnlyMany",
        "ReadWriteMany",
        "ReadWriteOncePod"
      ],
      "default": "ACCESS_MODE_UNSPECIFIED",
      "title": "- ReadWriteOnce: can be mounted read/write mode to exactly 1 host\n - ReadOnlyMany: can be mounted in read-only mode to many hosts\n - ReadWriteMany: can be mounted in read/write mode to many hosts\n - ReadWriteOncePod: can be mounted read/write mode to exactly 1 pod\ncannot be used in combination with other access modes"
    },
    "applicationv1alpha1ApplicationSpec": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the location of the application's manifests or chart"
        },
        "destination": {
          "$ref": "#/definitions/v1alpha1ApplicationDestination",
          "title": "Destination is a reference to the target Kubernetes server and namespace"
        },
        "project": {
          "type": "string",
          "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project."
        },
        "syncPolicy": {
          "$ref": "#/definitions/apisapplicationv1alpha1SyncPolicy",
          "title": "SyncPolicy controls when and how a sync will be performed"
        },
        "ignoreDifferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceIgnoreDifferences"
          },
          "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Info"
          },
          "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application"
        },
        "revisionHistoryLimit": {
          "type": "string",
          "format": "int64",
          "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10."
        }
      },
      "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision."
    },
    "applicationv1alpha1ApplicationStatus": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceStatus"
          },
          "title": "Resources is a list of Kubernetes resources managed by this application"
        },
        "sync": {
          "$ref": "#/definitions/apisapplicationv1alpha1SyncStatus",
          "title": "Sync contains information about the application's current sync status"
        },
        "health": {
          "$ref": "#/definitions/apisapplicationv1alpha1HealthStatus",
          "title": "Health contains information about the application's current health status"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RevisionHistory"
          },
          "title": "History contains information about the application's sync history"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ApplicationCondition"
          },
          "title": "Conditions is a list of currently observed application conditions"
        },
        "reconciledAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ReconciledAt indicates when the application state was reconciled using the latest git version"
        },
        "operationState": {
          "$ref": "#/definitions/v1alpha1OperationState",
          "title": "OperationState contains information about any ongoing operations, such as a sync"
        },
        "observedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ObservedAt indicates when the application state was updated without querying latest git state\nDeprecated: controller no longer updates ObservedAt field"
        },
        "sourceType": {
          "type": "string",
          "title": "SourceType specifies the type of this application"
        },
        "summary": {
          "$ref": "#/definitions/v1alpha1ApplicationSummary",
          "title": "Summary contains a list of URLs and container images used by this application"
        }
      },
      "title": "ApplicationStatus contains status information for the application"
    },
    "applicationv1alpha1Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1DeployTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "The cluster of the namespace where the workload is deployed.\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace where the workload is deployed."
        }
      }
    },
    "applicationv1alpha1DeploymentTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/apiapplicationv1alpha1ClusterStatus"
        }
      }
    },
    "applicationv1alpha1EnvEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the variable, usually expressed in uppercase"
        },
        "value": {
          "type": "string",
          "title": "Value is the value of the variable"
        }
      },
      "title": "EnvEntry represents an entry in the application's environment"
    },
    "applicationv1alpha1Event": {
      "type": "object",
      "properties": {
        "involvedObject": {
          "$ref": "#/definitions/v1ObjectReference"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "lastTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "$ref": "#/definitions/v1alpha1EventKind"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1EventEventSource"
        }
      }
    },
    "applicationv1alpha1Info": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha1Operation": {
      "type": "object",
      "properties": {
        "sync": {
          "$ref": "#/definitions/v1alpha1SyncOperation",
          "title": "Sync contains parameters for the operation"
        },
        "initiatedBy": {
          "$ref": "#/definitions/v1alpha1OperationInitiator",
          "title": "InitiatedBy contains information about who initiated the operations"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Info"
          },
          "title": "Info is a list of informational items for this operation"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy",
          "title": "Retry controls the strategy to apply if a sync fails"
        }
      },
      "title": "Operation contains information about a requested or running operation"
    },
    "applicationv1alpha1PersistentVolumeClaim": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/applicationv1alpha1PersistentVolumeClaimSpec",
          "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha1PersistentVolumeClaimStatus",
          "title": "PersistentVolumeClaimStatus represents the status of PV claim"
        }
      },
      "description": "PersistentVolumeClaim represents a reference to a PersistentVolume in the same namespace."
    },
    "applicationv1alpha1PersistentVolumeClaimCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of this PersistentVolumeClaimCondition."
        },
        "status": {
          "type": "string",
          "description": "Status is the current status of PersistentVolumeClaim."
        },
        "lastProbeTime": {
          "type": "string",
          "format": "int64",
          "description": "Last time we probed the condition."
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "description": "Last time the condition transitioned from one status to another."
        },
        "reason": {
          "type": "string",
          "description": "The reason of PersistentVolumeClaimCondition."
        },
        "message": {
          "type": "string",
          "description": "The message of PersistentVolumeClaimCondition."
        }
      },
      "description": "PersistentVolumeClaimConditionType defines the condition of PV claim."
    },
    "applicationv1alpha1PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1AccessMode"
          },
          "title": "Contains the types of access modes required\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/metav1LabelSelector",
          "title": "A label query over volumes to consider for binding. This selector is\nignored when VolumeName is set\n+optional"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimResource",
          "title": "Resources represents the minimum resources required\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\n+optional"
        },
        "volumeName": {
          "type": "string",
          "title": "VolumeName is the binding reference to the PersistentVolume backing this\nclaim. When set to non-empty value Selector is not evaluated\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1\n+optional"
        },
        "volumeMode": {
          "$ref": "#/definitions/PersistentVolumeClaimSpecVolumeMode",
          "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
        },
        "dataSource": {
          "$ref": "#/definitions/applicationv1alpha1TypedLocalObjectReference",
          "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace."
        },
        "dataSourceRef": {
          "$ref": "#/definitions/applicationv1alpha1TypedLocalObjectReference",
          "description": "The TypedLocalObject select from."
        },
        "supportExpansion": {
          "type": "boolean",
          "title": "The support expansion  represents this pvc weather support  expansion"
        },
        "supportSnapshot": {
          "type": "boolean",
          "title": "The support snapshot represents this pvc weather support snapshot"
        }
      },
      "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
    },
    "applicationv1alpha1PersistentVolumeClaimStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimStatusPhase",
          "title": "Phase represents the current phase of PersistentVolumeClaim\n+optional"
        },
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1AccessMode"
          },
          "title": "AccessModes contains all ways the volume backing the PVC can be mounted\n+optional"
        },
        "capacity": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimQuantity",
          "title": "Represents the actual resources of the underlying volume\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1PersistentVolumeClaimCondition"
          },
          "title": "+optional"
        },
        "podName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "PodName represents the pod to which the PVC belongs"
        },
        "snapshotCount": {
          "type": "integer",
          "format": "int32",
          "title": "snapshotCount represents how many snapshot the PVC has"
        }
      },
      "title": "PersistentVolumeClaimStatus represents the status of PV claim"
    },
    "applicationv1alpha1Resource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion of the resource."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the resource."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ResourcePhase",
          "description": "Phase stands for the resource phase."
        }
      },
      "title": "Resource belongs to ReleaseStatus"
    },
    "applicationv1alpha1Selector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
        }
      }
    },
    "applicationv1alpha1ServicePort": {
      "type": "object",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/v1alpha1Protocol",
          "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP."
        },
        "name": {
          "type": "string",
          "description": "The name of this port within the service. This must be a DNS_LABEL. All\nports within a ServiceSpec must have unique names. When considering the\nendpoints for a Service, this must match the 'name' field in the\nEndpointPort. Optional if only one ServicePort is defined on this service."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "The port that will be exposed by this service"
        },
        "targetPort": {
          "type": "string",
          "description": "Number or name of the port to access on the pods targeted by the service.\ncorev1.ServicePort.TargetPort could be number or string. Number must be\nin the range 1 to 65535. Name must be an IANA_SVC_NAME."
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "title": "The port on each node on which this service is exposed when type is\nNodePort or LoadBalancer. Usually assigned by the system. If a value is\nspecified, in-range, and not in use it will be used, otherwise the\noperation will fail. If not specified, a port will be allocated if this\nService requires one. If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped when\nupdating a Service to no longer need it (e.g. changing type from NodePort\nto ClusterIP). More info:\nhttps://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
        }
      }
    },
    "applicationv1alpha1ServiceSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1ServiceType",
          "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1ServicePort"
          },
          "description": "The list of ports that are exposed by this service."
        },
        "loadBalancerIp": {
          "type": "string",
          "description": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system."
        },
        "externalTrafficPolicy": {
          "$ref": "#/definitions/v1alpha1ExternalTrafficPolicy",
          "description": "externalTrafficPolicy denotes if this Service desires to route external\ntraffic to node-local or cluster-wide endpoints. \"Local\" preserves the\nclient source IP and avoids a second hop for LoadBalancer and Nodeport\ntype services, but risks potentially imbalanced traffic spreading.\n\"Cluster\" obscures the client source IP and may cause a second hop to\nanother node, but should have good overall load-spreading."
        },
        "sessionAffinity": {
          "$ref": "#/definitions/v1alpha1SessionAffinity",
          "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None."
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/applicationv1alpha1SessionAffinityConfig",
          "description": "sessionAffinityConfig contains the configurations of session affinity."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "applicationv1alpha1SessionAffinityConfig": {
      "type": "object",
      "properties": {
        "clientIp": {
          "$ref": "#/definitions/v1alpha1ClientIP"
        }
      }
    },
    "applicationv1alpha1Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "Tag push time."
        }
      },
      "description": "Tag of an image."
    },
    "applicationv1alpha1TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced."
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        }
      },
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace."
    },
    "applicationv1alpha1Workload": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the workload belongs to."
        },
        "name": {
          "type": "string",
          "description": "The name of the workload, usually it is identical to the name of\nthe resource, for example: deployment, statefulset, daemonset, etc."
        },
        "appGroup": {
          "type": "string",
          "description": "App group is a label indicates the common attributes in workloads."
        },
        "deployTarget": {
          "$ref": "#/definitions/applicationv1alpha1DeployTarget",
          "description": "Target namespace where the workload to deploy, in a multi-cluster\nenvironment, cluster is required."
        },
        "deploymentSpec": {
          "$ref": "#/definitions/apiapplicationv1alpha1DeploymentSpec",
          "title": "WorkloadType defines the"
        },
        "serviceSpec": {
          "$ref": "#/definitions/applicationv1alpha1ServiceSpec",
          "title": "Service definition"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha1WorkloadStatus",
          "title": "workload status"
        },
        "workloadType": {
          "$ref": "#/definitions/v1alpha1WorkloadType"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "microService": {
          "$ref": "#/definitions/v1alpha1MicroServiceSpec"
        },
        "createBy": {
          "type": "string"
        },
        "redirect": {
          "$ref": "#/definitions/v1alpha1Redirect"
        },
        "jenkinsPipelineInfo": {
          "$ref": "#/definitions/v1alpha1JenkinsPipelineInfo"
        },
        "workloadResourceRef": {
          "$ref": "#/definitions/v1alpha1WorkloadResourceRef"
        },
        "previews": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "observability": {
          "$ref": "#/definitions/v1alpha1ObservabilitySpec"
        }
      }
    },
    "applicationv1alpha1WorkloadStatus": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATUS_UNSPECIFIED",
        "WORKLOAD_STATUS_RUNNING",
        "WORKLOAD_STATUS_DELETING",
        "WORKLOAD_STATUS_NOT_READY",
        "WORKLOAD_STATUS_STOPPED",
        "WORKLOAD_STATUS_WAITING",
        "WORKLOAD_STATUS_COMPLETED",
        "WORKLOAD_STATUS_FAILED",
        "WORKLOAD_STATUS_ACTIVATED"
      ],
      "default": "WORKLOAD_STATUS_UNSPECIFIED",
      "title": "- WORKLOAD_STATUS_UNSPECIFIED: status of the workload: deployment, statefulset, daemonset\n - WORKLOAD_STATUS_COMPLETED: status of the workload: job, cronjob"
    },
    "applicationv1alpha2Application": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/applicationv1alpha2ApplicationSpec"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2ApplicationStatus"
        }
      }
    },
    "applicationv1alpha2ApplicationSpec": {
      "type": "object",
      "properties": {
        "componentKinds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          }
        },
        "descriptor": {
          "$ref": "#/definitions/v1alpha2Descriptor"
        },
        "selector": {
          "$ref": "#/definitions/metav1LabelSelector"
        },
        "addOwnerRef": {
          "type": "boolean"
        }
      }
    },
    "applicationv1alpha2ApplicationStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Condition"
          }
        },
        "componentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ObjectStatus"
          }
        },
        "componentsReady": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2ApplicationStatusPhase"
        },
        "error": {
          "type": "string",
          "description": "Error provides a detailed message why current phase is not ready."
        }
      }
    },
    "applicationv1alpha2Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "int64"
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "applicationv1alpha2DeployTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "applicationv1alpha2DeploymentTarget": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "applicationv1alpha2ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Application"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "applicationv1alpha2Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identity represent the node across graph."
        },
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta"
        },
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta"
        },
        "ingress": {
          "$ref": "#/definitions/v1alpha2IngressInfo",
          "description": "Following fields are only valid when `type` indicates the Kind was using."
        },
        "service": {
          "$ref": "#/definitions/v1alpha2ServiceInfo"
        },
        "deployment": {
          "$ref": "#/definitions/v1alpha2DeploymentInfo"
        },
        "daemonSet": {
          "$ref": "#/definitions/v1alpha2DaemonSetInfo"
        },
        "statefulSet": {
          "$ref": "#/definitions/v1alpha2StatefulSetInfo"
        },
        "pod": {
          "$ref": "#/definitions/applicationv1alpha2PodInfo"
        },
        "secret": {
          "$ref": "#/definitions/v1alpha2SecretInfo"
        },
        "configMap": {
          "$ref": "#/definitions/v1alpha2ConfigMapInfo"
        },
        "pvc": {
          "$ref": "#/definitions/v1alpha2PersistentVolumeClaimInfo"
        }
      }
    },
    "applicationv1alpha2PodInfo": {
      "type": "object",
      "properties": {
        "resources": {
          "$ref": "#/definitions/applicationv1alpha2ResourceRequirements",
          "description": "Resource requirements of the pod, sum of all containers."
        },
        "podIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must\nmatch the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list\nis empty if no IPs have been allocated yet."
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2PodInfoPodPhase"
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about why the pod is in this condition."
        }
      }
    },
    "applicationv1alpha2Resource": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta"
        },
        "meta": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Resource metadata."
        },
        "data": {
          "type": "string",
          "description": "Resource instance."
        }
      }
    },
    "applicationv1alpha2ResourceRequirements": {
      "type": "object",
      "properties": {
        "cpuRequest": {
          "type": "number",
          "format": "double",
          "title": "CPU request in unit cores"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double",
          "title": "CPU limit in unit cores"
        },
        "memoryRequest": {
          "type": "number",
          "format": "double",
          "title": "Memory request in unit MB"
        },
        "memoryLimit": {
          "type": "number",
          "format": "double",
          "title": "Memory limit in unit MB"
        }
      }
    },
    "applicationv1alpha2Workload": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apitypesTypeMeta"
        },
        "meta": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Resource metadata."
        },
        "data": {
          "type": "string",
          "description": "Resource instance."
        }
      }
    },
    "applicationv1alpha2WorkloadStatus": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATUS_UNKNOWN",
        "WORKLOAD_STATUS_RUNNING",
        "WORKLOAD_STATUS_DELETING",
        "WORKLOAD_STATUS_NOT_READY",
        "WORKLOAD_STATUS_STOPPED",
        "WORKLOAD_STATUS_WAITING"
      ],
      "default": "WORKLOAD_STATUS_UNKNOWN"
    },
    "appsv1alpha1DeleteDeploymentRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the deployment belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the deployment belongs to."
        },
        "name": {
          "type": "string",
          "title": "Name represents the name of deployment"
        }
      },
      "title": "DeleteDeploymentRequest represents delete request to delete one Deployment"
    },
    "appsv1alpha1GetDeploymentJSONRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which instance the configmap belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced Deployment.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "name represents for the resource name"
        }
      },
      "description": "Get Deployment data information in json format."
    },
    "appsv1alpha1ListDeploymentsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the deployment belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the deployment belongs to."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "name": {
          "type": "string",
          "title": "Name represents the name of workloads to search"
        },
        "phase": {
          "type": "string",
          "title": "Phase represents the phase of workloads to search"
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the data list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "SortDir determines the data list order."
        }
      },
      "description": "ListDeploymentsRequest represents the request of list deployment."
    },
    "clusterv1alpha1ListClustersLabelsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "title": "karmada instance"
        }
      },
      "description": "ListClustersLabelsRequest describe request params."
    },
    "clusterv1alpha1ListClustersLocationsSummaryRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string"
        }
      },
      "description": "ListClustersLocationsSummaryRequest get all kpanda-cluster's zones and regions."
    },
    "clusterv1alpha1ListClustersRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "role": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kubernetesVersion": {
          "type": "string",
          "title": "KUBERNETESVERSION cluster k8s version use to support search sub cluster at\nListClusters"
        },
        "phase": {
          "type": "string",
          "description": "Phases is used for filter."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are key/value pairs that are attached to objects."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to attach arbitrary metadata to objects."
        },
        "managedBy": {
          "type": "string",
          "title": "ManagedBy represents who manages the cluster"
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the cluster list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "OrderBy determines the cluster list order."
        },
        "name": {
          "type": "string",
          "description": "Name of cluster."
        },
        "region": {
          "type": "string",
          "description": "Region represents the region of the member cluster locate in."
        },
        "provider": {
          "type": "string",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "zone": {
          "type": "string",
          "description": "Zone represents the zone of the member cluster locate in."
        },
        "labelSelector": {
          "type": "string",
          "description": "LabelSelector is the format after labels.FormatLabels used to filter clusters."
        },
        "fieldSelector": {
          "type": "string",
          "description": "FieldSelector is the format after labels.FormatLabels used  to filter the clusters."
        },
        "clusterSelector": {
          "type": "string",
          "description": "A cluster selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
        },
        "allCluster": {
          "type": "boolean",
          "title": "list all kpanda clusters"
        }
      },
      "description": "Get Clusters information List."
    },
    "corev1ServicePort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. When considering\nthe endpoints for a Service, this must match the 'name' field in the\nEndpointPort.\nOptional if only one ServicePort is defined on this service.\n+optional"
        },
        "protocol": {
          "type": "string",
          "title": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP.\n+default=\"TCP\"\n+optional"
        },
        "appProtocol": {
          "type": "string",
          "title": "The application protocol for this port.\nThis field follows standard Kubernetes label syntax.\nUn-prefixed names are reserved for IANA standard service names (as per\nRFC-6335 and https://www.iana.org/assignments/service-names).\nNon-standard protocols should use prefixed names such as\nmycompany.com/my-custom-protocol.\n+optional"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port that will be exposed by this service."
        },
        "targetPort": {
          "$ref": "#/definitions/intstrIntOrString",
          "title": "Number or name of the port to access on the pods targeted by the service.\nNumber must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\nIf this is a string, it will be looked up as a named port in the\ntarget Pod's container ports. If this is not specified, the value\nof the 'port' field is used (an identity map).\nThis field is ignored for services with clusterIP=None, and should be\nomitted or set equal to the 'port' field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\n+optional"
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "title": "The port on each node on which this service is exposed when type is\nNodePort or LoadBalancer.  Usually assigned by the system. If a value is\nspecified, in-range, and not in use it will be used, otherwise the\noperation will fail.  If not specified, a port will be allocated if this\nService requires one.  If this field is specified when creating a\nService which does not need it, creation will fail. This field will be\nwiped when updating a Service to no longer need it (e.g. changing type\nfrom NodePort to ClusterIP).\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n+optional"
        }
      },
      "description": "ServicePort contains information on service's port."
    },
    "corev1ServiceSpec": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1ServicePort"
          },
          "title": "The list of ports that are exposed by this service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+patchMergeKey=port\n+patchStrategy=merge\n+listType=map\n+listMapKey=port\n+listMapKey=protocol"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Route service traffic to pods with label keys and values matching this\nselector. If empty or not present, the service is assumed to have an\nexternal process managing its endpoints, which Kubernetes will not\nmodify. Only applies to types ClusterIP, NodePort, and LoadBalancer.\nIgnored if type is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/\n+optional\n+mapType=atomic"
        },
        "clusterIP": {
          "type": "string",
          "title": "clusterIP is the IP address of the service and is usually assigned\nrandomly. If an address is specified manually, is in-range (as per\nsystem configuration), and is not in use, it will be allocated to the\nservice; otherwise creation of the service will fail. This field may not\nbe changed through updates unless the type field is also being changed\nto ExternalName (which requires this field to be blank) or the type\nfield is being changed from ExternalName (in which case this field may\noptionally be specified, as describe above).  Valid values are \"None\",\nempty string (\"\"), or a valid IP address. Setting this to \"None\" makes a\n\"headless service\" (no virtual IP), which is useful when direct endpoint\nconnections are preferred and proxying is not required.  Only applies to\ntypes ClusterIP, NodePort, and LoadBalancer. If this field is specified\nwhen creating a Service of type ExternalName, creation will fail. This\nfield will be wiped when updating a Service to type ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional"
        },
        "clusterIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.  If an address is specified manually, is\nin-range (as per system configuration), and is not in use, it will be\nallocated to the service; otherwise creation of the service will fail.\nThis field may not be changed through updates unless the type field is\nalso being changed to ExternalName (which requires this field to be\nempty) or the type field is being changed from ExternalName (in which\ncase this field may optionally be specified, as describe above).  Valid\nvalues are \"None\", empty string (\"\"), or a valid IP address.  Setting\nthis to \"None\" makes a \"headless service\" (no virtual IP), which is\nuseful when direct endpoint connections are preferred and proxying is\nnot required.  Only applies to types ClusterIP, NodePort, and\nLoadBalancer. If this field is specified when creating a Service of type\nExternalName, creation will fail. This field will be wiped when updating\na Service to type ExternalName.  If this field is not specified, it will\nbe initialized from the clusterIP field.  If this field is specified,\nclients must ensure that clusterIPs[0] and clusterIP have the same\nvalue.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order).\nThese IPs must correspond to the values of the ipFamilies field. Both\nclusterIPs and ipFamilies are governed by the ipFamilyPolicy field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+listType=atomic\n+optional"
        },
        "type": {
          "type": "string",
          "title": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n+optional"
        },
        "externalIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system.\n+optional"
        },
        "sessionAffinity": {
          "type": "string",
          "title": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional"
        },
        "loadBalancerIP": {
          "type": "string",
          "title": "Only applies to Service Type: LoadBalancer.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.\nDeprecated: This field was under-specified and its meaning varies across implementations,\nand it cannot support dual-stack.\nAs of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available.\nThis field may be removed in a future API version.\n+optional"
        },
        "loadBalancerSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/\n+optional"
        },
        "externalName": {
          "type": "string",
          "title": "externalName is the external reference that discovery mechanisms will\nreturn as an alias for this service (e.g. a DNS CNAME record). No\nproxying will be involved.  Must be a lowercase RFC-1123 hostname\n(https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\".\n+optional"
        },
        "externalTrafficPolicy": {
          "type": "string",
          "title": "externalTrafficPolicy denotes if this Service desires to route external\ntraffic to node-local or cluster-wide endpoints. \"Local\" preserves the\nclient source IP and avoids a second hop for LoadBalancer and Nodeport\ntype services, but risks potentially imbalanced traffic spreading.\n\"Cluster\" obscures the client source IP and may cause a second hop to\nanother node, but should have good overall load-spreading.\n+optional"
        },
        "healthCheckNodePort": {
          "type": "integer",
          "format": "int32",
          "title": "healthCheckNodePort specifies the healthcheck nodePort for the service.\nThis only applies when type is set to LoadBalancer and\nexternalTrafficPolicy is set to Local. If a value is specified, is\nin-range, and is not in use, it will be used.  If not specified, a value\nwill be automatically allocated.  External systems (e.g. load-balancers)\ncan use this port to determine if a given node holds endpoints for this\nservice or not.  If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped\nwhen updating a Service to no longer need it (e.g. changing type).\n+optional"
        },
        "publishNotReadyAddresses": {
          "type": "boolean",
          "title": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this\nService should disregard any indications of ready/not-ready.\nThe primary use case for setting this field is for a StatefulSet's Headless Service to\npropagate SRV DNS records for its Pods for the purpose of peer discovery.\nThe Kubernetes controllers that generate Endpoints and EndpointSlice resources for\nServices interpret this to mean that all endpoints are considered \"ready\" even if the\nPods themselves are not. Agents which consume only Kubernetes generated endpoints\nthrough the Endpoints or EndpointSlice resources can safely assume this behavior.\n+optional"
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/corev1SessionAffinityConfig",
          "title": "sessionAffinityConfig contains the configurations of session affinity.\n+optional"
        },
        "ipFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice. This field is usually assigned automatically based on cluster\nconfiguration and the ipFamilyPolicy field. If this field is specified\nmanually, the requested family is available in the cluster,\nand ipFamilyPolicy allows it, it will be used; otherwise creation of\nthe service will fail. This field is conditionally mutable: it allows\nfor adding or removing a secondary IP family, but it does not allow\nchanging the primary IP family of the Service. Valid values are \"IPv4\"\nand \"IPv6\".  This field only applies to Services of types ClusterIP,\nNodePort, and LoadBalancer, and does apply to \"headless\" services.\nThis field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in\neither order).  These families must correspond to the values of the\nclusterIPs field, if specified. Both clusterIPs and ipFamilies are\ngoverned by the ipFamilyPolicy field.\n+listType=atomic\n+optional"
        },
        "ipFamilyPolicy": {
          "type": "string",
          "title": "IPFamilyPolicy represents the dual-stack-ness requested or required by\nthis Service. If there is no value provided, then this field will be set\nto SingleStack. Services can be \"SingleStack\" (a single IP family),\n\"PreferDualStack\" (two IP families on dual-stack configured clusters or\na single IP family on single-stack clusters), or \"RequireDualStack\"\n(two IP families on dual-stack configured clusters, otherwise fail). The\nipFamilies and clusterIPs fields depend on the value of this field. This\nfield will be wiped when updating a service to type ExternalName.\n+optional"
        },
        "allocateLoadBalancerNodePorts": {
          "type": "boolean",
          "title": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically\nallocated for services with type LoadBalancer.  Default is \"true\". It\nmay be set to \"false\" if the cluster load-balancer does not rely on\nNodePorts.  If the caller requests specific NodePorts (by specifying a\nvalue), those requests will be respected, regardless of this field.\nThis field may only be set for services with type LoadBalancer and will\nbe cleared if the type is changed to any other type.\n+optional"
        },
        "loadBalancerClass": {
          "type": "string",
          "title": "loadBalancerClass is the class of the load balancer implementation this Service belongs to.\nIf specified, the value of this field must be a label-style identifier, with an optional prefix,\ne.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users.\nThis field can only be set when the Service type is 'LoadBalancer'. If not set, the default load\nbalancer implementation is used, today this is typically done through the cloud provider integration,\nbut should apply for any default implementation. If set, it is assumed that a load balancer\nimplementation is watching for Services with a matching class. Any default load balancer\nimplementation (e.g. cloud providers) should ignore Services that set this field.\nThis field can only be set when creating or updating a Service to type 'LoadBalancer'.\nOnce set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.\n+featureGate=LoadBalancerClass\n+optional"
        },
        "internalTrafficPolicy": {
          "type": "string",
          "title": "InternalTrafficPolicy specifies if the cluster internal traffic\nshould be routed to all endpoints or node-local endpoints only.\n\"Cluster\" routes internal traffic to a Service to all endpoints.\n\"Local\" routes traffic to node-local endpoints only, traffic is\ndropped if no node-local endpoints are ready.\nThe default value is \"Cluster\".\n+featureGate=ServiceInternalTrafficPolicy\n+optional"
        }
      },
      "description": "ServiceSpec describes the attributes that a user creates on a service."
    },
    "corev1SessionAffinityConfig": {
      "type": "object",
      "properties": {
        "clientIP": {
          "$ref": "#/definitions/v1ClientIPConfig",
          "title": "clientIP contains the configurations of Client IP based session affinity.\n+optional"
        }
      },
      "description": "SessionAffinityConfig represents the configurations of session affinity."
    },
    "corev1alpha1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/corev1alpha1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/corev1alpha1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the\nsame node, zone, etc. as some other pod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/corev1alpha1PodAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod\nin the same node, zone, etc. as some other pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "corev1alpha1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "corev1alpha1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "description": "ConfigMapKeySelector selects a key from a ConfigMap."
    },
    "corev1alpha1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "corev1alpha1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must\nnot be absolute or contain the '..' path. Must be utf-8 encoded. The first\nitem of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/corev1alpha1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and\nnamespace are supported. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/corev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently\nsupported. +optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal\nvalue between 0000 and 0777 or a decimal value between 0 and 511. YAML\naccepts both octal and decimal values, JSON requires decimal values for\nmode bits. If not specified, the volume defaultMode will be used. This\nmight be in conflict with other options that affect the file mode, like\nfsGroup, and the result can be other mode bits set. +optional"
        }
      },
      "description": "DownwardAPIVolumeFile represents information to create the file containing\nthe pod field."
    },
    "corev1alpha1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "DefaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "corev1alpha1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value\nbetween the SizeLimit specified here and the sum of memory limits of all\ncontainers in a pod. The default is nil which means that the limit is\nundefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "corev1alpha1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/corev1alpha1ConfigMapEnvSource",
          "title": "The ConfigMap to select from.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/corev1alpha1SecretEnvSource",
          "title": "The Secret to select from.\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "corev1alpha1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of EnvVar."
        },
        "value": {
          "type": "string",
          "description": "The value of EnvVar."
        },
        "valueFrom": {
          "$ref": "#/definitions/corev1alpha1EnvVarSource",
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key\nexists in multiple sources, the value associated with the last source will\ntake precedence. Values defined by an Env with a duplicate key will take\nprecedence. Cannot be updated.\","
        }
      },
      "description": "Environment variable information."
    },
    "corev1alpha1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/corev1alpha1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace,\n`metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName,\nspec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/corev1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,\nrequests.memory and requests.ephemeral-storage) are currently supported.\n+optional"
        },
        "ConfigMapKeyRef": {
          "$ref": "#/definitions/corev1alpha1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/corev1alpha1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar.\nOnly one of its fields may be set."
    },
    "corev1alpha1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "corev1alpha1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "string",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "corev1alpha1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path."
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\n+optional"
        }
      },
      "description": "HostPathVolumeSource Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "corev1alpha1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on this file, should be a value between 0\nand 0777. If not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "KeyToPath maps a string key to a path within a volume."
    },
    "corev1alpha1Lifecycle": {
      "type": "object",
      "properties": {
        "PostStart": {
          "$ref": "#/definitions/v1alpha1Handler",
          "title": "PostStart is called immediately after a container is created. If the\nhandler fails, the container is terminated and restarted according to its\nrestart policy. Other management of the container blocks until the hook\ncompletes. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/v1alpha1Handler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown\nbegins before the PreStop hook is executed. Regardless of the outcome of\nthe handler, the container will eventually terminate within the Pod's\ntermination grace period (unless delayed by finalizers). Other management\nof the container blocks until the hook completes or until the termination\ngrace period is reached. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in\nresponse to container lifecycle events. For the PostStart and PreStop\nlifecycle handlers, management of the container blocks until the action is\ncomplete, unless the container process fails, in which case the handler is\naborted."
    },
    "corev1alpha1ListSecretsRequest": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance represents which karmada instance the secret belongs to."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page requested."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size per page requested."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases."
        },
        "name": {
          "type": "string",
          "title": "The name use to search specific secret"
        },
        "sortBy": {
          "$ref": "#/definitions/kairshipioapitypesSortBy",
          "description": "SortBy determines the list order reference."
        },
        "sortDir": {
          "$ref": "#/definitions/kairshipioapitypesSortDir",
          "description": "SortDir determines the list order."
        },
        "labelSelector": {
          "type": "string",
          "title": "LabelSelector is the format after labels.FormatLabels used to filter"
        },
        "fieldSelector": {
          "type": "string",
          "title": "FieldSelector is the format after labels.FormatLabels used to filter"
        }
      },
      "description": "Get list of Secrets data details."
    },
    "corev1alpha1Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the namespace."
        },
        "cluster": {
          "type": "string",
          "title": "Which cluster does it belong to"
        },
        "workspaceId": {
          "type": "string",
          "title": "Which workspace  does it belong to"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "the created timestamp of the namespace."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the labels of the namespace."
        },
        "resourceQuota": {
          "$ref": "#/definitions/corev1alpha1ResourceQuota",
          "description": "resource quota of the namespace."
        }
      }
    },
    "corev1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/corev1alpha1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions;\nthe node(s) with the highest sum are the most preferred. +optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "corev1alpha1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1NodeSelectorTerm"
          }
        }
      },
      "title": "A node selector represents the union of the results of one or more label\nqueries over a set of nodes; that is, it represents the OR of the selectors\nrepresented by the node selector terms. +structType=atomic"
    },
    "corev1alpha1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. If the operator is Gt or Lt,\nthe values array must have a single element, which will be interpreted as\nan integer. This array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an\noperator that relates the key and values."
    },
    "corev1alpha1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "corev1alpha1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to\n\"v1\". +optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "description": "ObjectFieldSelector selects an APIVersioned field of an object."
    },
    "corev1alpha1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as\nthe pod using this volume. More info:\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same\nnamespace. This volume finds the bound PV and mounts that volume for the pod.\nA PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "corev1alpha1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding\npodAffinityTerm; the node(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "corev1alpha1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/apitypesLabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies\nto. The term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's\nnamespace\" +optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity)\nwith the pods matching the labelSelector in the specified namespaces, where\nco-located is defined as running on a node whose value of the label with\nkey topologyKey matches that of any node on which any of the selected pods\nis running. Empty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/apitypesLabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's\nnamespace\". An empty selector ({}) matches all namespaces. This field is\nbeta-level and is only honored when PodAffinityNamespaceSelector feature is\nenabled. +optional"
        }
      },
      "title": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
    },
    "corev1alpha1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1Volume"
          }
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1Container"
          },
          "title": "init containers"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1Container"
          },
          "description": "Containers name."
        },
        "restartPolicy": {
          "type": "string",
          "title": "repeated Container ephemeralContainers = 4;"
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node.\nIf it is non-empty, the scheduler simply schedules this pod onto that node,\nassuming that it fits resource requirements."
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "affinity": {
          "$ref": "#/definitions/corev1alpha1Affinity",
          "title": "bool hostPID = 15;\nbool hostIPC = 16;\nbool shareProcessNamespace = 17;\nPodSecurityContext SecurityContext = 18;\nrepeated LocalObjectReference imagePullSecrets = 19;\nstring hostname = 20;\nstring subdomain = 21;"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1Toleration"
          },
          "title": "string schedulerName = 23;"
        }
      },
      "description": "PodSpec describes the attributes that a pod is created with."
    },
    "corev1alpha1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/corev1alpha1PodSpec",
          "description": "Spec describes the attributes that a pod is created with."
        }
      },
      "description": "template is the object that describes the pod that will be created if\ninsufficient replicas are detected. Each pod stamped out by the StatefulSet\nwill fulfill this Template, but have a unique identity from the rest\nof the StatefulSet."
    },
    "corev1alpha1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the\nrange 1-100."
        },
        "preference": {
          "$ref": "#/definitions/corev1alpha1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects\n(i.e. is also a no-op)."
    },
    "corev1alpha1Probe": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after\nhaving succeeded. Defaults to 3. Minimum value is 1. +optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful\nafter having failed. Defaults to 1. Must be 1 for liveness and startup.\nMinimum value is 1. +optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes\nare initiated. More info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon\nprobe failure. The grace period is the duration in seconds after the\nprocesses running in the pod are sent a termination signal and the time\nwhen the processes are forcibly halted with a kill signal. Set this value\nlonger than the expected cleanup time for your process. If this value is\nnil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop\nimmediately via the kill signal (no opportunity to shut down). This is a\nbeta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/corev1alpha1HTTPGetAction",
          "title": "handler\nHTTPGet specifies the http request to perform.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/corev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/corev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
    },
    "corev1alpha1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes,\nfor env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their\noutput format"
    },
    "corev1alpha1ResourceQuota": {
      "type": "object",
      "properties": {
        "setting": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "namespace quota total value."
        },
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "namespace quota remaining allocatable value."
        },
        "used": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "namespace quota used value."
        }
      }
    },
    "corev1alpha1SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of SecretEnvSource."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "corev1alpha1SecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Secret."
        },
        "key": {
          "type": "string",
          "description": "Required. The secret key to be applied to a pod."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "SecretKeySelector selects a key of a Secret."
    },
    "corev1alpha1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
    },
    "corev1alpha1SecurityContext": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "title": "Capabilities capabilities = 1;"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "SELinuxOptions seLinuxOptions = 3;\nWindowsSecurityContextOptions WindowsOptions = 4;"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "corev1alpha1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "description": "TCPSocketAction describes an action based on opening a socket."
    },
    "corev1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values."
        },
        "value": {
          "type": "string",
          "description": "An array of string values."
        },
        "effect": {
          "type": "string",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Taint tolerations to static pods,\nso they are not evicted when there are node problems."
    },
    "corev1alpha1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hostPath": {
          "$ref": "#/definitions/corev1alpha1HostPathVolumeSource",
          "description": "HostPathVolumeSource represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux\nrelabeling."
        },
        "emptyDir": {
          "$ref": "#/definitions/corev1alpha1EmptyDirVolumeSource",
          "description": "EmptyDirVolumeSource represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux\nrelabeling."
        },
        "secret": {
          "$ref": "#/definitions/corev1alpha1SecretVolumeSource",
          "description": "SecretVolumeSource adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names. Secret\nvolumes support ownership management and SELinux relabeling."
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/corev1alpha1PersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace"
        },
        "downwardAPI": {
          "$ref": "#/definitions/corev1alpha1DownwardAPIVolumeSource",
          "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
        },
        "configMap": {
          "$ref": "#/definitions/corev1alpha1ConfigMapVolumeSource",
          "description": "ConfigMapVolumeSource adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
        }
      },
      "description": "Volume represents a named volume in a pod that may be accessed by any\ncontainer in the pod."
    },
    "corev1alpha1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Full path to the mount volume path."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be\nmounted. Behaves similarly to SubPath but environment variable references\n$(VAR_NAME) are expanded using the container's environment. Defaults to \"\"\n(volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount for this container."
    },
    "corev1alpha1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/corev1alpha1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added\nper-node to find the most preferred node(s)"
    },
    "gitopsv1alpha1ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apigitopsv1alpha1Application"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "intstrIntOrString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "int64"
        },
        "intVal": {
          "type": "integer",
          "format": "int32"
        },
        "strVal": {
          "type": "string"
        }
      },
      "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
      "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
    },
    "ioapiapplicationv1alpha1Repository": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of repository."
        },
        "public": {
          "type": "boolean"
        },
        "tagCount": {
          "type": "string",
          "format": "int64"
        },
        "pullCount": {
          "type": "string",
          "format": "int64"
        },
        "updateTime": {
          "type": "string",
          "format": "int64"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Artifacts of repository."
        }
      },
      "title": "Repository concept from Harbor"
    },
    "kairshipioapitypesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apitypesOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request."
        },
        "workspaceAlias": {
          "type": "string",
          "description": "The name of the workspace which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent workspaces. This field is not set anywhere right now and\napiserver is going to ignore it if set in create or update request."
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "kairshipioapitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "state",
        "workspace",
        "cluster",
        "namespace",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp."
    },
    "kairshipioapitypesSortDir": {
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "default": "desc",
      "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order."
    },
    "metav1Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n+kubebuilder:validation:MaxLength=316"
        },
        "status": {
          "type": "string",
          "title": "status of the condition, one of True, False, Unknown.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:Enum=True;False;Unknown"
        },
        "observedGeneration": {
          "type": "string",
          "format": "int64",
          "title": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.\n+optional\n+kubebuilder:validation:Minimum=0"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/v1Time",
          "title": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:Type=string\n+kubebuilder:validation:Format=date-time"
        },
        "reason": {
          "type": "string",
          "title": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:MaxLength=1024\n+kubebuilder:validation:MinLength=1\n+kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`"
        },
        "message": {
          "type": "string",
          "title": "message is a human readable message indicating details about the transition.\nThis may be an empty string.\n+required\n+kubebuilder:validation:Required\n+kubebuilder:validation:MaxLength=32768"
        }
      },
      "description": "// other fields\n}",
      "title": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\ntype FooStatus struct{\n    // Represents the observations of a foo's current state.\n    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n    // +patchMergeKey=type\n    // +patchStrategy=merge\n    // +listType=map\n    // +listMapKey=type\n    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`"
    },
    "metav1LabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1LabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      },
      "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
    },
    "metav1LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
    },
    "metav1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "clusterName": {
          "type": "string",
          "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
    },
    "metav1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      },
      "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rolloutv1alpha1PodInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Pod name"
        },
        "phase": {
          "$ref": "#/definitions/rolloutv1alpha1PodPhase",
          "title": "PodPhase"
        }
      }
    },
    "rolloutv1alpha1PodPhase": {
      "type": "string",
      "enum": [
        "POD_PHASE_UNSPECIFIED",
        "POD_PHASE_PENDING",
        "POD_PHASE_RUNNING",
        "POD_PHASE_SUCCEEDED",
        "POD_PHASE_FAILED",
        "POD_PHASE_UNKNOWN"
      ],
      "default": "POD_PHASE_UNSPECIFIED"
    },
    "typesArgoCdRepoSortBy": {
      "type": "string",
      "enum": [
        "ARGOCD_REPO_SORT_BY_UNSPECIFIED",
        "ARGOCD_REPO_SORT_BY_NAME",
        "ARGOCD_REPO_SORT_BY_REPO"
      ],
      "default": "ARGOCD_REPO_SORT_BY_UNSPECIFIED",
      "description": "ArgoCdRepoSortBy determines the data list order reference of argocd's repository.\n\n - ARGOCD_REPO_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - ARGOCD_REPO_SORT_BY_NAME: Sort result by name.\n - ARGOCD_REPO_SORT_BY_REPO: Sort result by repo."
    },
    "typesJiraIssueSortBy": {
      "type": "string",
      "enum": [
        "JIRA_ISSUE_SORT_BY_UNSPECIFIED",
        "JIRA_ISSUE_SORT_BY_TYPE",
        "JIRA_ISSUE_SORT_BY_STATUS",
        "JIRA_ISSUE_SORT_BY_PRIORITY",
        "JIRA_ISSUE_SORT_BY_CREATOR",
        "JIRA_ISSUE_SORT_BY_ASSIGNEE",
        "JIRA_ISSUE_SORT_BY_UPDATED"
      ],
      "default": "JIRA_ISSUE_SORT_BY_UNSPECIFIED"
    },
    "typesPage": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Size is the data number shown per page."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Page is for data paging."
    },
    "typesPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "typesPipelineSortBy": {
      "type": "string",
      "enum": [
        "PIPELINE_SORT_BY_UNSPECIFIED",
        "PIPELINE_FIELD_NAME",
        "PIPELINE_CREATED_AT",
        "PIPELINE_LAST_RUN_TIME"
      ],
      "default": "PIPELINE_SORT_BY_UNSPECIFIED",
      "title": "- PIPELINE_SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - PIPELINE_FIELD_NAME: Sort result by name.\n - PIPELINE_CREATED_AT: Sort result by creationTimestamp.\n - PIPELINE_LAST_RUN_TIME: sort result by last run time"
    },
    "typesRollingUpdate": {
      "type": "object",
      "properties": {
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods that can be scheduled above the desired number\nof pods. Value can be an absolute number (ex: 5) or a percentage of desired\npods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number\nis calculated from percentage by rounding up. Defaults to 25%. Example:\nwhen this is set to 30%, the new ReplicaSet can be scaled up immediately\nwhen the rolling update starts, such that the total number of old and new\npods do not exceed 130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods\nrunning at any time during the update is at most 130% of desired pods.\n+optional"
        },
        "maxUnavailable": {
          "type": "string",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods\n(ex: 10%). Absolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to\n70% of desired pods immediately when the rolling update starts. Once new\npods are ready, old ReplicaSet can be scaled down further, followed by\nscaling up the new ReplicaSet, ensuring that the total number of pods\navailable at all times during the update is at least 70% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "typesTaintEffect": {
      "type": "string",
      "enum": [
        "TAINT_EFFECT_UNSPECIFIED",
        "NoSchedule",
        "PreferNoSchedule",
        "NoExecute"
      ],
      "default": "TAINT_EFFECT_UNSPECIFIED",
      "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute.\n\n - TAINT_EFFECT_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NoSchedule: NoSchedule tries to avoid scheduling pods to nodes where they can't\ntolerate taints.\n - PreferNoSchedule: This is not mandatory tries to avoid scheduling pods to nodes.\n - NoExecute: NoExecute is not assign pod  to or evicted pod from the node."
    },
    "typesUpdateStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/typesRollingUpdate",
          "title": "RollingUpdate is used to communicate parameters when Type is\nRollingUpdateType. +optional"
        },
        "type": {
          "type": "string",
          "title": "Type indicates the type of the UpdateStrategy.\n+optional"
        }
      },
      "description": "UpdateStrategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
    },
    "typesWorkloadState": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATE_UNSPECIFIED",
        "WORKLOAD_STATE_RUNNING",
        "WORKLOAD_STATE_DELETING",
        "WORKLOAD_STATE_NOT_READY",
        "WORKLOAD_STATE_STOPPED",
        "WORKLOAD_STATE_WAITING"
      ],
      "default": "WORKLOAD_STATE_UNSPECIFIED",
      "description": "- WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - WORKLOAD_STATE_RUNNING: Running shows the referent is available.\n - WORKLOAD_STATE_DELETING: Deleting is when the referent will be deleted.\n - WORKLOAD_STATE_NOT_READY: NotReady shows the referent is unavailable.\n - WORKLOAD_STATE_STOPPED: Stopped indicates that the referent has 0 ready pods.\n - WORKLOAD_STATE_WAITING: Waiting indicates that the referent is paused.",
      "title": "WorkloadState describes the state of\nworkload(deployments/daemonsets/statefulsets)"
    },
    "v1ClientIPConfig": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours).\n+optional"
        }
      },
      "description": "ClientIPConfig represents the configurations of Client IP based session affinity."
    },
    "v1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      },
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1GroupKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types"
    },
    "v1LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "title": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)\n+optional"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PortStatus"
          },
          "title": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it\n+listType=atomic\n+optional"
        }
      },
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point."
    },
    "v1LoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1LoadBalancerIngress"
          },
          "title": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points.\n+optional"
        }
      },
      "description": "LoadBalancerStatus represents the status of a load-balancer."
    },
    "v1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/v1Time",
          "title": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/v1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      },
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
    },
    "v1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "title": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional"
        }
      },
      "title": "ObjectReference contains enough information to let you inspect or modify the referred object.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.\n 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity\n    during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple\n    and the version of the actual struct is irrelevant.\n 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+structType=atomic"
    },
    "v1PortStatus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Port is the port number of the service port of which status is recorded here"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
        },
        "error": {
          "type": "string",
          "title": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n- built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.\n---\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+optional\n+kubebuilder:validation:Required\n+kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n+kubebuilder:validation:MaxLength=316"
        }
      }
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metav1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/corev1ServiceSpec",
          "title": "Spec defines the behavior of a service.\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1ServiceStatus",
          "title": "Most recently observed status of the service.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      },
      "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port\n(for example 3306) that the proxy listens on, and the selector that determines which pods\nwill answer requests sent through the proxy."
    },
    "v1ServiceStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/v1LoadBalancerStatus",
          "title": "LoadBalancer contains the current status of the load-balancer,\nif one is present.\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metav1Condition"
          },
          "title": "Current service state\n+optional\n+patchMergeKey=type\n+patchStrategy=merge\n+listType=map\n+listMapKey=type"
        }
      },
      "description": "ServiceStatus represents the current status of a service."
    },
    "v1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1alpha1AggregationResource": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "popagrationpolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overridepolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1AnalysisPhase": {
      "type": "string",
      "enum": [
        "ANALYSIS_PHASE_PENDING",
        "ANALYSIS_PHASE_RUNNING",
        "ANALYSIS_PHASE_SUCCESSFUL",
        "ANALYSIS_PHASE_FAILED",
        "ANALYSIS_PHASE_ERROR",
        "ANALYSIS_PHASE_INCONCLUSIVE"
      ],
      "default": "ANALYSIS_PHASE_PENDING"
    },
    "v1alpha1AnalysisRunInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "AnalysisRun name"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "AnalysisRun reversion"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1AnalysisPhase",
          "title": "AnalysisRunPhase"
        },
        "successful": {
          "type": "integer",
          "format": "int32",
          "title": "AnalysisRun success count"
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "title": "AnalysisRun failed count"
        },
        "inconclusive": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Reference AnalysisRunInfo defined in\nhttps://github.com/argoproj/argo-rollouts/blob/94cdfd5aa4d316f1621167fef8c606befcaf78a6/pkg/apiclient/rollout/rollout.proto#L151"
    },
    "v1alpha1ApplicationCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type is an application condition type"
        },
        "message": {
          "type": "string",
          "title": "Message contains human-readable message indicating details about condition"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/v1Time",
          "title": "LastTransitionTime is the time the condition was last observed"
        }
      },
      "title": "ApplicationCondition contains details about an application condition, which is usally an error or warning"
    },
    "v1alpha1ApplicationDestination": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
        },
        "name": {
          "type": "string",
          "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
        }
      },
      "title": "ApplicationDestination holds information about the application's destination"
    },
    "v1alpha1ApplicationJson": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1ApplicationSource": {
      "type": "object",
      "properties": {
        "repoURL": {
          "type": "string",
          "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
        },
        "path": {
          "type": "string",
          "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git."
        },
        "targetRevision": {
          "type": "string",
          "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version."
        },
        "helm": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceHelm",
          "title": "Helm holds helm specific options"
        },
        "kustomize": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceKustomize",
          "title": "Kustomize holds kustomize specific options"
        },
        "directory": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceDirectory",
          "title": "Directory holds path/directory specific options"
        },
        "plugin": {
          "$ref": "#/definitions/v1alpha1ApplicationSourcePlugin",
          "title": "ConfigManagementPlugin holds config management plugin specific options"
        },
        "chart": {
          "type": "string",
          "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo."
        }
      },
      "title": "ApplicationSource contains all required information about the source of an application"
    },
    "v1alpha1ApplicationSourceDirectory": {
      "type": "object",
      "properties": {
        "recurse": {
          "type": "boolean",
          "title": "Recurse specifies whether to scan a directory recursively for manifests"
        },
        "jsonnet": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceJsonnet",
          "title": "Jsonnet holds options specific to Jsonnet"
        },
        "exclude": {
          "type": "string",
          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
        },
        "include": {
          "type": "string",
          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
        }
      },
      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet"
    },
    "v1alpha1ApplicationSourceHelm": {
      "type": "object",
      "properties": {
        "valueFiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ValuesFiles is a list of Helm value files to use when generating a template"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmParameter"
          },
          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation"
        },
        "releaseName": {
          "type": "string",
          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
        },
        "values": {
          "type": "string",
          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
        },
        "fileParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmFileParameter"
          },
          "title": "FileParameters are file parameters to the helm template"
        },
        "version": {
          "type": "string",
          "title": "Version is the Helm version to use for templating (\"3\")"
        },
        "passCredentials": {
          "type": "boolean",
          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
        },
        "ignoreMissingValueFiles": {
          "type": "boolean",
          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
        },
        "skipCrds": {
          "type": "boolean",
          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
        }
      },
      "title": "ApplicationSourceHelm holds helm specific options"
    },
    "v1alpha1ApplicationSourceJsonnet": {
      "type": "object",
      "properties": {
        "extVars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JsonnetVar"
          },
          "title": "ExtVars is a list of Jsonnet External Variables"
        },
        "tlas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JsonnetVar"
          },
          "title": "TLAS is a list of Jsonnet Top-level Arguments"
        },
        "libs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Additional library search dirs"
        }
      },
      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet"
    },
    "v1alpha1ApplicationSourceKustomize": {
      "type": "object",
      "properties": {
        "namePrefix": {
          "type": "string",
          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
        },
        "nameSuffix": {
          "type": "string",
          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Images is a list of Kustomize image override specifications"
        },
        "commonLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "CommonLabels is a list of additional labels to add to rendered manifests"
        },
        "version": {
          "type": "string",
          "title": "Version controls which version of Kustomize to use for rendering manifests"
        },
        "commonAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests"
        },
        "forceCommonLabels": {
          "type": "boolean",
          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
        },
        "forceCommonAnnotations": {
          "type": "boolean",
          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
        }
      },
      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize"
    },
    "v1alpha1ApplicationSourcePlugin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1EnvEntry"
          }
        }
      },
      "title": "ApplicationSourcePlugin holds options specific to config management plugins"
    },
    "v1alpha1ApplicationSummary": {
      "type": "object",
      "properties": {
        "externalURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExternalURLs holds all external URLs of application child resources."
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Images holds all images of application child resources."
        }
      },
      "title": "ApplicationSummary contains information about URLs and container images used by an application"
    },
    "v1alpha1Artifact": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "description": "Digest is artifact digest."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Tag"
          },
          "description": "Tags is a list of tags."
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "description": "Size of artifact. Unit: byte. 1024 GenericBinary."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "First push time."
        }
      },
      "title": "Artifact is the concept of harbor artifact"
    },
    "v1alpha1Backoff": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
        },
        "factor": {
          "type": "string",
          "format": "int64",
          "title": "Factor is a factor to multiply the base duration after each failed retry"
        },
        "maxDuration": {
          "type": "string",
          "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
        }
      },
      "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs"
    },
    "v1alpha1BindToolchainResourceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ResourceType"
        }
      }
    },
    "v1alpha1BlueGreenStatus": {
      "type": "object",
      "properties": {
        "previewSelector": {
          "type": "string",
          "title": "PreviewSelector indicates which replicas set the preview service is serving traffic to\n+optional"
        },
        "activeSelector": {
          "type": "string",
          "title": "ActiveSelector indicates which replicas set the active service is serving traffic to\n+optional"
        },
        "scaleUpPreviewCheckPoint": {
          "type": "boolean",
          "title": "ScaleUpPreviewCheckPoint indicates that the Replicaset receiving traffic from the preview service is ready to be scaled up after the rollout is unpaused\n+optional"
        },
        "prePromotionAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "PrePromotionAnalysisRunStatus indicates the status of the current prepromotion analysis run"
        },
        "postPromotionAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "PostPromotionAnalysisRunStatus indicates the status of the current post promotion analysis run"
        }
      },
      "title": "BlueGreenStatus status fields that only pertain to the blueGreen rollout"
    },
    "v1alpha1BlueOceanNodeType": {
      "type": "string",
      "enum": [
        "BLUE_OCEAN_NODE_TYPE_UNSPECIFIED",
        "BLUE_OCEAN_NODE_STAGE",
        "BLUE_OCEAN_NODE_PARALLEL",
        "BLUE_OCEAN_NODE_STEP"
      ],
      "default": "BLUE_OCEAN_NODE_TYPE_UNSPECIFIED"
    },
    "v1alpha1BlueOceanResult": {
      "type": "string",
      "enum": [
        "BLUE_OCEAN_RESULT_UNSPECIFIED",
        "BLUE_OCEAN_RESULT_SUCCESS",
        "BLUE_OCEAN_RESULT_FAILURE",
        "BLUE_OCEAN_RESULT_ABORTED",
        "BLUE_OCEAN_RESULT_QUEUED",
        "BLUE_OCEAN_RESULT_RUNNING",
        "BLUE_OCEAN_RESULT_PAUSED",
        "BLUE_OCEAN_RESULT_SKIPPED",
        "BLUE_OCEAN_RESULT_NOT_BUILT"
      ],
      "default": "BLUE_OCEAN_RESULT_UNSPECIFIED"
    },
    "v1alpha1BlueOceanStepType": {
      "type": "string",
      "enum": [
        "BLUE_OCEAN_STEP_TYPE_UNSPECIFIED",
        "BLUE_OCEAN_STEP"
      ],
      "default": "BLUE_OCEAN_STEP_TYPE_UNSPECIFIED"
    },
    "v1alpha1Branch": {
      "type": "object",
      "properties": {
        "weather": {
          "$ref": "#/definitions/v1alpha1PipelineWeather",
          "description": "The weather of branch."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1PipelineRunState",
          "description": "The result of branch."
        },
        "branchName": {
          "type": "string",
          "description": "The name of branch."
        },
        "commit": {
          "type": "string",
          "description": "The last commit of this branch."
        },
        "lastMessage": {
          "type": "string",
          "description": "The last commit message of this branch."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "The update time to this branch."
        },
        "disabled": {
          "type": "boolean",
          "description": "The branch is disabled or not."
        }
      },
      "description": "Branch single branch result."
    },
    "v1alpha1BranchInfo": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The branch of multi branch pipeline."
        },
        "commitId": {
          "type": "string",
          "description": "The commit id of branch."
        },
        "commitMsg": {
          "type": "string",
          "description": "The commit message of branch."
        }
      },
      "description": "BranchInfo the info of multibranch pipeline's branch."
    },
    "v1alpha1BuildConfig": {
      "type": "object",
      "properties": {
        "disableConcurrence": {
          "type": "boolean",
          "title": "whether to disable concurrent builds. if true, \"Do not allow concurrent builds\" checkbox in the jenkins ui will be checked"
        },
        "discarderProperty": {
          "$ref": "#/definitions/v1alpha1DiscarderProperty",
          "title": "discard old builds"
        }
      },
      "title": "Build config for pipeline"
    },
    "v1alpha1BuildTrigger": {
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/v1alpha1Cron"
        },
        "scm": {
          "$ref": "#/definitions/v1alpha1Cron"
        }
      },
      "title": "The build trigger"
    },
    "v1alpha1CanaryStatus": {
      "type": "object",
      "properties": {
        "currentStepAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "CurrentStepAnalysisRunStatus indicates the status of the current step analysis run"
        },
        "currentBackgroundAnalysisRunStatus": {
          "$ref": "#/definitions/v1alpha1RolloutAnalysisRunStatus",
          "title": "CurrentBackgroundAnalysisRunStatus indicates the status of the current background analysis run"
        },
        "currentExperiment": {
          "type": "string",
          "title": "CurrentExperiment indicates the running experiment"
        },
        "weights": {
          "$ref": "#/definitions/v1alpha1TrafficWeights",
          "title": "Weights records the weights which have been set on traffic provider. Only valid when using traffic routing"
        },
        "stablePingPong": {
          "type": "string",
          "title": "StablePingPong For the ping-pong feature holds the current stable service, ping or pong"
        }
      },
      "title": "CanaryStatus status fields that only pertain to the canary rollout"
    },
    "v1alpha1CanaryType": {
      "type": "string",
      "enum": [
        "CANARY_TYPE_UNSPECIFIED",
        "CANARY_TYPE_REPLICASET",
        "CANARY_TYPE_ISTIO",
        "CANARY_TYPE_NGINX"
      ],
      "default": "CANARY_TYPE_UNSPECIFIED"
    },
    "v1alpha1ClientIP": {
      "type": "object",
      "properties": {
        "timeoutSecond": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1CloneOptions": {
      "type": "object",
      "properties": {
        "shallowClone": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1ClusterLabels": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "member cluster name"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        }
      },
      "description": "ClusterLabels describe labels of member cluster."
    },
    "v1alpha1ClusterLocation": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      },
      "title": "ClusterLocation Cluster locations"
    },
    "v1alpha1ClusterPhase": {
      "type": "string",
      "enum": [
        "CLUSTER_PHASE_UNSPECIFIED",
        "UNKNOWN",
        "CREATING",
        "RUNNING",
        "UPDATING",
        "DELETING",
        "FAILED"
      ],
      "default": "CLUSTER_PHASE_UNSPECIFIED",
      "description": " - CLUSTER_PHASE_UNSPECIFIED: The cluster state is unspecified.\n - UNKNOWN: The cluster state is unknown.\n - CREATING: The cluster is being created.\n - RUNNING: The cluster is running.\n - UPDATING: The cluster is updating.\n - DELETING: The cluster is being deleted.\n - FAILED: The cluster operations failed."
    },
    "v1alpha1ClusterProvider": {
      "type": "string",
      "enum": [
        "GENERIC",
        "DAOCLOUD_KUBESPRAY",
        "DAOCLOUD_CLUSTER_API",
        "DAOCLOUD_DCE4",
        "REDHAT_OPENSHIFT4",
        "SUSE_RANCHER",
        "VMWARE_TANZU",
        "AWS_EKS",
        "ALIYUN_ACK",
        "TENCENT_TKE",
        "HUAWEI_CCE",
        "MICROSOFT_AZURE"
      ],
      "default": "GENERIC",
      "description": " - GENERIC: Generic\nGENERIC indicates other providers\n - DAOCLOUD_KUBESPRAY: DaoCloud\nDAOCLOUD_KUBESPRAY indicates a provider of DaoCloud's KubeSpray Engine\n - DAOCLOUD_CLUSTER_API: DAOCLOUD_CLUSTER_API indicates a provider of DaoCloud's Cluster API Engine\n - DAOCLOUD_DCE4: DAOCLOUD_DCE4 indicates a provider of DaoCloud's DCE4 Engine\n - REDHAT_OPENSHIFT4: OverSea Distribtion\nREDHAT_OPENSHIFT4 indicates a provider of RedHat Openshift4\n - SUSE_RANCHER: SUSE_RANCHER indicates a provider of SUSE Rancher\n - VMWARE_TANZU: VMWARE_TANZU indicates a provider of VMware Tanzu\n - AWS_EKS: Public Cloud\nAWS_EKS indicates a provider of AWS EKS\n - ALIYUN_ACK: ALIYUN_ACK indicates a provider of Aliyun ACK\n - TENCENT_TKE: TENCENT_TKE indicates a provider of Tencent TKE.\n - HUAWEI_CCE: TENCENT_TKE indicates a provider of Huawei CCE.\n - MICROSOFT_AZURE: MICROSOFT_AZURE=11; indicates a provider of Microsoft Azure."
    },
    "v1alpha1ClusterProviderSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name represents the cluster's name"
        },
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "title": "provider represents the cluster's provider"
        },
        "applied": {
          "type": "boolean",
          "title": "Applied represents if the resource referencing by ResourceBinding or ClusterResourceBinding\nis successfully applied on the cluster.\n+optional"
        }
      }
    },
    "v1alpha1ClusterResourceSummary": {
      "type": "object",
      "properties": {
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Allocatable represents the resources of a cluster that are available for scheduling.\nTotal amount of allocatable resources on all nodes.\n+optional"
        },
        "allocated": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Allocated represents the resources of a cluster that have been scheduled.\nTotal amount of required resources of all Pods that have been scheduled to nodes.\n+optional"
        }
      }
    },
    "v1alpha1ClusterSpec": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "apiEndpoint": {
          "type": "string",
          "description": "The API endpoint of the member cluster. This can be a hostname,\nhostname:port, IP or IP:port."
        },
        "region": {
          "type": "string",
          "description": "Region represents the region of the member cluster locate in."
        },
        "zone": {
          "type": "string",
          "description": "Zone represents the zone of the member cluster locate in."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Roles represents the roles of cluster."
        },
        "managedBy": {
          "type": "string",
          "description": "ManagedBy is used for worker cluster to show\ncluster is controlled by."
        },
        "aliasName": {
          "type": "string",
          "description": "AliasName represents the alias of the cluster."
        },
        "secretRef": {
          "$ref": "#/definitions/apiclusterv1alpha1LocalSecretReference",
          "description": "SecretRef represents the secret contains mandatory credentials to access the member cluster."
        },
        "taints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apitypesTaint"
          },
          "title": "Taints attached to the member cluster.\nTaints on the cluster have the \"effect\" on\nany resource that does not tolerate the Taint.\n+optional"
        }
      }
    },
    "v1alpha1CodeAnalyzeStatus": {
      "type": "string",
      "enum": [
        "CODE_ANALYZE_STATUS_UNSPECIFIED",
        "CODE_ANALYZE_STATUS_OK",
        "CODE_ANALYZE_STATUS_WARN",
        "CODE_ANALYZE_STATUS_ERROR",
        "CODE_ANALYZE_STATUS_NONE"
      ],
      "default": "CODE_ANALYZE_STATUS_UNSPECIFIED"
    },
    "v1alpha1ComparedTo": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the application's source used for comparison"
        },
        "destination": {
          "$ref": "#/definitions/v1alpha1ApplicationDestination",
          "title": "Destination is a reference to the application's destination used for comparison"
        }
      },
      "title": "ComparedTo contains application source and target which was used for resources comparison"
    },
    "v1alpha1ContainerSpec": {
      "type": "object",
      "properties": {
        "lifeCycle": {
          "$ref": "#/definitions/v1alpha1LifeCycle"
        },
        "healthInspect": {
          "$ref": "#/definitions/v1alpha1HealthInspection"
        },
        "environmentVariables": {
          "$ref": "#/definitions/v1alpha1EnvironmentVariable"
        },
        "dataStorage": {
          "$ref": "#/definitions/v1alpha1DataStorage"
        }
      }
    },
    "v1alpha1CreateControlNamespaceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateToolchainRequest": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1InstanceType"
        },
        "jiraConfig": {
          "$ref": "#/definitions/v1alpha1JiraConfig"
        },
        "gitlabConfig": {
          "$ref": "#/definitions/v1alpha1GitLabConfig"
        },
        "jenkinsConfig": {
          "$ref": "#/definitions/v1alpha1JenkinsConfig"
        },
        "sonarqubeConfig": {
          "$ref": "#/definitions/v1alpha1SonarqubeConfig"
        }
      }
    },
    "v1alpha1Cron": {
      "type": "object",
      "properties": {
        "cron": {
          "type": "string"
        }
      },
      "title": "The cron in trigger"
    },
    "v1alpha1DataStorage": {
      "type": "object",
      "properties": {
        "dataVolume": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataStorageDataVolume"
          }
        },
        "nodePathMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataStorageNodePathMapping"
          }
        }
      }
    },
    "v1alpha1Deployment": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/kairshipioapitypesObjectMeta",
          "description": "Metadata is that all persisted resources must have, which includes all objects\nusers must create."
        },
        "spec": {
          "$ref": "#/definitions/apiappsv1alpha1DeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1DeploymentStatus",
          "title": "Most recently observed status of the Deployment.\n+optional"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      },
      "description": "Deployment provides declarative updates for Pods and ReplicaSets."
    },
    "v1alpha1DeploymentStatus": {
      "type": "object",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of ready pods targeted by this deployment.\n+optional"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional"
        },
        "state": {
          "$ref": "#/definitions/typesWorkloadState",
          "title": "state describes the state of deployments"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apitypesCondition"
          },
          "description": "Current service state of deployments."
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterProviderSummary"
          },
          "title": "Clusters represents target member clusters where the resource to be deployed"
        }
      },
      "description": "DeploymentStatus holds information about the observed status of a deployment."
    },
    "v1alpha1DiscarderProperty": {
      "type": "object",
      "properties": {
        "daysToRetain": {
          "type": "integer",
          "format": "int32",
          "title": "Days to keep builds\n+optional"
        },
        "numToRetain": {
          "type": "integer",
          "format": "int32",
          "title": "Max of builds to keep\n+optional"
        }
      },
      "title": "The strategy of discard old builds"
    },
    "v1alpha1EnabledPluginResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1Endpoint": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/v1alpha1MetricsProtocol"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "v1alpha1EnvironmentVariable": {
      "type": "object",
      "properties": {
        "keyValuePair": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableReference"
          }
        },
        "configMapReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableReference"
          }
        },
        "secretReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableReference"
          }
        },
        "podField": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configMapImport": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretImport": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1EventEventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "v1alpha1EventKind": {
      "type": "string",
      "enum": [
        "EVENT_KIND_UNSPECIFIED",
        "EVENT_KIND_NORMAL",
        "EVENT_KIND_WARNING"
      ],
      "default": "EVENT_KIND_UNSPECIFIED"
    },
    "v1alpha1ExternalTrafficPolicy": {
      "type": "string",
      "enum": [
        "ServiceExternalTrafficPolicyUnspecified",
        "ServiceExternalTrafficPolicyLocal",
        "ServiceExternalTrafficPolicyCluster"
      ],
      "default": "ServiceExternalTrafficPolicyUnspecified"
    },
    "v1alpha1Framework": {
      "type": "string",
      "enum": [
        "FRAMEWORK_UNSPECIFIED",
        "FRAMEWORK_SPRING_CLOUD",
        "FRAMEWORK_DUBBO"
      ],
      "default": "FRAMEWORK_UNSPECIFIED"
    },
    "v1alpha1GVR": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "description": "Group represents the resource group of CustomResources."
        },
        "version": {
          "type": "string",
          "description": "Version represents the resource version of CustomResources."
        },
        "resource": {
          "type": "string",
          "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition."
        }
      }
    },
    "v1alpha1GenericWebhookTrigger": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "triggerFilter": {
          "$ref": "#/definitions/v1alpha1TriggerFilter"
        },
        "scmConfiguration": {
          "$ref": "#/definitions/v1alpha1SCMConfiguration"
        },
        "apiUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetApplicationStatusResponse": {
      "type": "object",
      "properties": {
        "healthStatusHealthy": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusProgressing": {
          "type": "string",
          "format": "int64"
        },
        "healthStatusDegraded": {
          "type": "string",
          "format": "int64"
        },
        "syncStatusSynced": {
          "type": "string",
          "format": "int64"
        },
        "syncStatusOutOfSync": {
          "type": "string",
          "format": "int64"
        },
        "syncStatusUnknown": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1GetBranchResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the pipeline created."
        },
        "name": {
          "type": "string",
          "description": "The name of the branch."
        },
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Branch"
          },
          "description": "The list of branch result."
        }
      },
      "description": "GetBranchResponse return the result of scanning multi branch."
    },
    "v1alpha1GetBuildParameterResponse": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ParameterDefinition"
          },
          "title": "The build parameters for a specific pipeline"
        }
      },
      "description": "Response build parameter for the `GetBuildParameter` method."
    },
    "v1alpha1GetCodeAnalyzeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1CodeAnalyzeStatus"
        },
        "sonarqubeProjectUrl": {
          "type": "string"
        },
        "codeBugs": {
          "type": "string"
        },
        "codeVulnerabilities": {
          "type": "string"
        },
        "codeHotspotsReviewedPercentage": {
          "type": "string"
        },
        "codeSmells": {
          "type": "string"
        },
        "codeDuplicationsPercentage": {
          "type": "string"
        },
        "codeCoveragePercentage": {
          "type": "string"
        },
        "codeLines": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetControlPlaneNamespaceResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetCustomResourceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetDeploymentJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the Deployment YAML details"
        }
      },
      "description": "Deployment data information in json format."
    },
    "v1alpha1GetGitlabCredentialNameResponse": {
      "type": "object",
      "properties": {
        "credentialName": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetHelmChartValuesResponse": {
      "type": "object",
      "properties": {
        "readme": {
          "type": "string",
          "title": "The readme represents for the helm charts readme file contents"
        },
        "appReadme": {
          "type": "string",
          "title": "The app_readme represents for the helm charts app_readme file contents"
        },
        "values": {
          "type": "string",
          "title": "The values represents for the helm charts values file contents"
        },
        "questions": {
          "type": "string",
          "title": "The questions represents for the helm charts questions file contents"
        },
        "chart": {
          "type": "string",
          "title": "The chart represents for the helm charts chart file contents"
        },
        "schemaJson": {
          "type": "string",
          "title": "The schema_json represents for the helm charts schema_json file contents"
        }
      }
    },
    "v1alpha1GetHelmChartsResponseItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1GetJenkinsJSONResponse": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "description": "The json content."
        }
      },
      "title": "GetJenkinsJSONRequest the response for get jenkinsjson"
    },
    "v1alpha1GetJunitReportResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JunitResultItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1GetJunitSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1JunitSummary"
        }
      }
    },
    "v1alpha1GetNamespaceQuotaResponse": {
      "type": "object",
      "properties": {
        "resourceQuota": {
          "$ref": "#/definitions/corev1alpha1ResourceQuota",
          "description": "resource quota of the namespace."
        }
      }
    },
    "v1alpha1GetPipelineArtifactsDownloadTokenResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetPipelineArtifactsResponse": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineArtifact"
          }
        }
      }
    },
    "v1alpha1GetPipelineRunLogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "The log where the pipeline run returned."
        }
      },
      "description": "GetPipelineRunLogRequest build parameter for the `GetPipelineRunLogs` method."
    },
    "v1alpha1GetPipelineRunNodesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRunNode"
          }
        }
      },
      "description": "GetPipelineRunNodesResponse build parameter for the `ListPipelineRunNodes` method."
    },
    "v1alpha1GetPipelineRunStepLogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "The log where the specific pipeline run step log returned."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "size refers to the overall size of the current log"
        },
        "delivered": {
          "type": "integer",
          "format": "int32",
          "title": "delivered refers to the length of the response log"
        }
      },
      "description": "GetPipelineRunLogsRequest build parameter for the `GetPipelineRunLogs` method."
    },
    "v1alpha1GetPipelineRunStepsResponse": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRunStep"
          }
        }
      },
      "description": "GetPipelineRunStepsResponse is the result for the `GetPipelineRunSteps` method."
    },
    "v1alpha1GetPluginInstallationInformationResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      }
    },
    "v1alpha1GetRolloutJsonResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetScanlogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "The log content."
        }
      },
      "title": "GetScanlogResponse the response of scanlog"
    },
    "v1alpha1GetSonarqubeCredentialNameResponse": {
      "type": "object",
      "properties": {
        "credentialName": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetWorkspaceQuotaResponse": {
      "type": "object",
      "properties": {
        "quota": {
          "$ref": "#/definitions/corev1alpha1ResourceQuota"
        }
      }
    },
    "v1alpha1GitLabConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Deprecated, username and password will remove in the future."
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "accessible address of instance"
        },
        "token": {
          "type": "string",
          "description": "the token of gitlab."
        }
      }
    },
    "v1alpha1GitLabProjectInfo": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "repoUrl": {
          "$ref": "#/definitions/v1alpha1RepoUrl"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1GitSource": {
      "type": "object",
      "properties": {
        "gitRepository": {
          "$ref": "#/definitions/apipipelinev1alpha1GitRepository"
        },
        "credentialId": {
          "type": "string"
        },
        "discoverBranches": {
          "type": "boolean"
        },
        "regexFilter": {
          "type": "string"
        },
        "cloneOptions": {
          "$ref": "#/definitions/v1alpha1CloneOptions"
        }
      }
    },
    "v1alpha1HTTPRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/v1alpha1NetworkProtocol"
        }
      }
    },
    "v1alpha1Handler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/corev1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/corev1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "TCPSocket": {
          "$ref": "#/definitions/corev1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      }
    },
    "v1alpha1HeaderRoutingMatch": {
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string",
          "title": "HeaderName the name of the request header"
        },
        "headerValue": {
          "$ref": "#/definitions/v1alpha1StringMatch",
          "title": "HeaderValue the value of the header"
        }
      }
    },
    "v1alpha1HealthInspection": {
      "type": "object",
      "properties": {
        "containerLivenessCheck": {
          "$ref": "#/definitions/HealthInspectionPublicInspectionBody"
        },
        "containerReadinessCheck": {
          "$ref": "#/definitions/HealthInspectionPublicInspectionBody"
        },
        "containerStartupCheck": {
          "$ref": "#/definitions/HealthInspectionPublicInspectionBody"
        }
      }
    },
    "v1alpha1HelmChart": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1HelmChartMetadata"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removed": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1HelmChartDependency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the name of the dependency.\nThis must mach the name in the dependency's Chart.yaml."
        },
        "version": {
          "type": "string",
          "description": "version is the version (range) of this chart.\nA lock file will always produce a single version, while a dependency\nmay contain a semantic version range."
        },
        "repository": {
          "type": "string",
          "description": "The URL to the repository.\nAppending `index.yaml` to this string should result in a URL that can be\nused to fetch the repository index."
        },
        "condition": {
          "type": "string",
          "title": "A yaml path that resolves to a boolean, used for enabling/disabling charts (e.g. subchart1.enabled )"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "tags can be used to group charts for enabling/disabling together"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled bool determines if chart should be loaded"
        },
        "importValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "import_values holds the mapping of source values to parent key to be imported. Each item can be a\nstring or pair of child/parent sublist items."
        },
        "alias": {
          "type": "string",
          "title": "alias usable alias to be used for the chart"
        }
      },
      "description": "Dependencies can be used to express developer intent, or to capture the state\nof a chart."
    },
    "v1alpha1HelmChartMaintainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is a user name or organization name"
        },
        "email": {
          "type": "string",
          "title": "email is an optional email address to contact the named maintainer"
        },
        "url": {
          "type": "string",
          "title": "url is an optional URL to an address for the named maintainer"
        }
      },
      "description": "Maintainer describes a Chart maintainer."
    },
    "v1alpha1HelmChartMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the chart. Required."
        },
        "home": {
          "type": "string",
          "title": "The URL to a relevant project page, git repo, or contact person"
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Source is the URL to the source code of this chart"
        },
        "version": {
          "type": "string",
          "description": "A SemVer 2 conformant version string of the chart. Required."
        },
        "description": {
          "type": "string",
          "title": "A one-sentence description of the chart"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of string keywords"
        },
        "maintainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChartMaintainer"
          },
          "title": "A list of name and URL/email address combinations for the maintainer(s)"
        },
        "icon": {
          "type": "string",
          "description": "The URL to an icon file."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API Version of this chart. Required."
        },
        "condition": {
          "type": "string",
          "title": "The condition to check to enable chart"
        },
        "tags": {
          "type": "string",
          "title": "The tags to check to enable chart"
        },
        "appVersion": {
          "type": "string",
          "description": "The version of the application enclosed inside of this chart."
        },
        "deprecated": {
          "type": "boolean",
          "title": "Whether or not this chart is deprecated"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations are additional mappings uninterpreted by Helm,\nmade available for inspection by other applications."
        },
        "kubeVersion": {
          "type": "string",
          "description": "KubeVersion is a SemVer constraint specifying the version of Kubernetes required."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChartDependency"
          },
          "description": "Dependencies are a list of dependencies for a chart."
        },
        "type": {
          "type": "string",
          "title": "Specifies the chart type: application or library"
        },
        "repo": {
          "type": "string",
          "description": "The repo name which the charts belongs to."
        }
      },
      "description": "Metadata for a Chart file. This models the structure of a Chart.yaml file."
    },
    "v1alpha1HelmChartVersions": {
      "type": "object",
      "properties": {
        "chartVersion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChart"
          }
        }
      }
    },
    "v1alpha1HelmCharts": {
      "type": "object",
      "properties": {
        "entries": {
          "$ref": "#/definitions/v1alpha1HelmChartVersions"
        }
      }
    },
    "v1alpha1HelmFileParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the Helm parameter"
        },
        "path": {
          "type": "string",
          "title": "Path is the path to the file containing the values for the Helm parameter"
        }
      },
      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation"
    },
    "v1alpha1HelmParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the Helm parameter"
        },
        "value": {
          "type": "string",
          "title": "Value is the value for the Helm parameter"
        },
        "forceString": {
          "type": "boolean",
          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
        }
      },
      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation"
    },
    "v1alpha1HelmRelease": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1HelmReleaseMetadata"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ReleaseSpec",
          "description": "ReleaseSpec describes how the release execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleaseStatus",
          "description": "ReleaseStatus contains the release status."
        }
      }
    },
    "v1alpha1HelmReleaseMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cluster": {
          "type": "string"
        },
        "workspaceAlias": {
          "type": "string"
        }
      }
    },
    "v1alpha1HelmRepo": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1HelmRepoMetadata"
        },
        "spec": {
          "$ref": "#/definitions/HelmRepoSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1HelmRepoStatus"
        }
      }
    },
    "v1alpha1HelmRepoMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cluster": {
          "type": "string"
        },
        "workspaceAlias": {
          "type": "string"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HelmRepoMetadataOwnerReference"
          }
        }
      }
    },
    "v1alpha1HelmRepoStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/StatusRepoPhase"
        },
        "indexConfigmapName": {
          "type": "string"
        },
        "indexConfigmapNamespace": {
          "type": "string"
        },
        "downloadTime": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1HttpApiItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of http api"
        },
        "method": {
          "$ref": "#/definitions/v1alpha1HttpMethod",
          "title": "The method of http api"
        },
        "url": {
          "type": "string",
          "title": "The url of http api"
        },
        "desc": {
          "type": "string",
          "title": "The description of http api"
        }
      },
      "title": "HttpApiItem represents each http api"
    },
    "v1alpha1HttpApiResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HttpApiItem"
          }
        }
      },
      "title": "HttpApiResponse the response for get http api in pipeline"
    },
    "v1alpha1HttpMethod": {
      "type": "string",
      "enum": [
        "HTTP_METHOD_UNSPECIFIED",
        "HTTP_METHOD_GET",
        "HTTP_METHOD_POST",
        "HTTP_METHOD_UPDATE",
        "HTTP_METHOD_DELETE",
        "HTTP_METHOD_PUT",
        "HTTP_METHOD_PATCH"
      ],
      "default": "HTTP_METHOD_UNSPECIFIED",
      "title": "HttpMethod the main http method"
    },
    "v1alpha1ImageSelector": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "string",
          "title": "kangaroo instance name"
        },
        "project": {
          "type": "string",
          "title": "kangaroo project name"
        },
        "image": {
          "type": "string",
          "title": "image name in taget project"
        },
        "tag": {
          "type": "string",
          "title": "image tag"
        },
        "host": {
          "type": "string",
          "title": "instance address"
        }
      }
    },
    "v1alpha1Input": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ok": {
          "type": "string"
        },
        "submitter": {
          "type": "string"
        }
      },
      "title": "Input the input in pipeline"
    },
    "v1alpha1InstanceType": {
      "type": "string",
      "enum": [
        "INSTANCE_TYPE_UNSPECIFIED",
        "INSTANCE_TYPE_JIRA",
        "INSTANCE_TYPE_GITLAB",
        "INSTANCE_TYPE_JENKINS",
        "INSTANCE_TYPE_SONARQUBE"
      ],
      "default": "INSTANCE_TYPE_UNSPECIFIED"
    },
    "v1alpha1IntegrationType": {
      "type": "string",
      "enum": [
        "INTEGRATION_TYPE_UNSPECIFIED",
        "INTEGRATION_TYPE_USER",
        "INTEGRATION_TYPE_ADMIN"
      ],
      "default": "INTEGRATION_TYPE_UNSPECIFIED"
    },
    "v1alpha1JVMMonitorSpec": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1JavaOptsEnv": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1JenkinsConfig": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "tlsConfig": {
          "$ref": "#/definitions/v1alpha1TlsConfig"
        }
      }
    },
    "v1alpha1JenkinsPipelineInfo": {
      "type": "object",
      "properties": {
        "workspace": {
          "type": "string",
          "title": "the workspace of pipeline in jenkins"
        },
        "name": {
          "type": "string",
          "title": "the name of pipeline in jenkins"
        }
      }
    },
    "v1alpha1JiraConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "accessible address of instance"
        }
      }
    },
    "v1alpha1JiraIssue": {
      "type": "object",
      "properties": {
        "expand": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "reporter": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1JiraIssueType"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "$ref": "#/definitions/v1alpha1JiraPriority"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1JiraIssueStatus"
        },
        "names": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1JiraIssueStatus": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1alpha1JiraIssueType": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subTask": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1JiraPriority": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "statusColor": {
          "type": "string"
        }
      }
    },
    "v1alpha1JiraProjectInfo": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainName": {
          "type": "string"
        }
      }
    },
    "v1alpha1JsonnetVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "code": {
          "type": "boolean"
        }
      },
      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation"
    },
    "v1alpha1JunitResult": {
      "type": "string",
      "enum": [
        "JUNIT_RESULT_UNSPECIFIED",
        "JUNIT_RESULT_PASSED",
        "JUNIT_RESULT_SKIPPED",
        "JUNIT_RESULT_FAILED",
        "JUNIT_RESULT_FIXED",
        "JUNIT_RESULT_REGRESSION",
        "JUNIT_RESULT_EXISTING_FAILED"
      ],
      "default": "JUNIT_RESULT_UNSPECIFIED"
    },
    "v1alpha1JunitResultItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "duration": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1alpha1JunitSummary": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "skipped": {
          "type": "integer",
          "format": "int32"
        },
        "passed": {
          "type": "integer",
          "format": "int32"
        },
        "fixed": {
          "type": "integer",
          "format": "int32"
        },
        "regression": {
          "type": "integer",
          "format": "int32"
        },
        "existingFailed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1KeyWords": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1LifeCycle": {
      "type": "object",
      "properties": {
        "startCommand": {
          "$ref": "#/definitions/LifeCycleStartCommand"
        },
        "postStartCommand": {
          "$ref": "#/definitions/LifeCyclePreAndPostStartCommand"
        },
        "preStopCommand": {
          "$ref": "#/definitions/LifeCyclePreAndPostStartCommand"
        }
      }
    },
    "v1alpha1ListAppGroupResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1ListArtifactsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Items is a list of tag names."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListArtifactsResponse returns a list of tags of specified image"
    },
    "v1alpha1ListBindedSonarqubeResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SonarqubeInfo"
          }
        }
      }
    },
    "v1alpha1ListBoundClusterResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1Cluster"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1ListBoundNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/corev1alpha1Namespace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1ListClustersLabelsResponse": {
      "type": "object",
      "properties": {
        "clusterLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterLabels"
          },
          "description": "ClustersLabels describe labels of member cluster."
        }
      },
      "description": "ListClustersLabelsResponse returns all member cluster labels of Karmada instance."
    },
    "v1alpha1ListClustersLocationsSummaryResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterLocation"
          },
          "title": "total clusters locations list"
        }
      },
      "description": "ListClustersLocationsSummaryResponse return all kpanda-cluster's zones and regions."
    },
    "v1alpha1ListClustersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiclusterv1alpha1Cluster"
          },
          "title": "data The data field is the YAML details"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Clusters information List."
    },
    "v1alpha1ListConfigMapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1ConfigMap"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListConfigmapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1ConfigMap"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListDeployTargetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1DeploymentTarget"
          }
        }
      }
    },
    "v1alpha1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Deployment"
          },
          "title": "Data represents the kairship's workload types of inclusion"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "description": "Response message for the `ListDeployments` method."
    },
    "v1alpha1ListEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Event"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmChartsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChart"
          }
        },
        "categories": {
          "$ref": "#/definitions/ListHelmChartsResponseCategoryItem"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmReleaseResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRelease"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmRepoResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRepo"
          }
        }
      }
    },
    "v1alpha1ListIngressClassNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListIngressNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListJiraProjectIssuesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JiraIssue"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListJiraSearchKeywordResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "priorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "creators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyWords"
          }
        }
      }
    },
    "v1alpha1ListPersistentVolumeClaimsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1PersistentVolumeClaim"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListPipelineRunsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRun"
          },
          "title": "Array of pipeline run"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Response message for the `ListPipelineRuns` method."
    },
    "v1alpha1ListPipelinesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Pipeline"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Response message for the `ListPipelines` method."
    },
    "v1alpha1ListPlatformRolePermissionsForCurrentUserResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items is a list of project names."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListProjectsResponse returns a list of projects of a registry"
    },
    "v1alpha1ListRegistriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListRegistriesResponse returns a list of registries"
    },
    "v1alpha1ListRegistryNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RegistryNamespace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1ListRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Nacos"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1ListRolePermissionsByWorkspaceForCurrentUserResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListRolloutContainersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1ContainerStatus"
          }
        }
      }
    },
    "v1alpha1ListRolloutsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1Rollout"
          },
          "description": "List of rollouts found in a given cluster and namespace."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListSecretReferencesResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The workspace bind to the following cluster and namespace."
        },
        "cluster": {
          "type": "string",
          "description": "The cluster which the namespace belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace where the secret lives in."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SecretReferences"
          },
          "description": "Secrets name in a given namespace."
        }
      },
      "description": "Response to list references to all secrets in a given namespace."
    },
    "v1alpha1ListSecretResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiapplicationv1alpha1Secret"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListSecretsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1Secret"
          },
          "description": "Secret name."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Secrets data details."
    },
    "v1alpha1ListServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Service"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListSonarqubeBindWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SonarqubeInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Template"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1ListToolchainResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ToolchainResource"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListToolchainResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ToolChainInstance"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListWorkloadsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Workload"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListWorkspaceBindGitLabProjectListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GitLabProjectInfo"
          }
        }
      }
    },
    "v1alpha1ListWorkspaceBindJiraProjectListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JiraProjectInfo"
          }
        }
      }
    },
    "v1alpha1ListWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Workspace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1MetricsProtocol": {
      "type": "string",
      "enum": [
        "METRICS_PROTOCOL_UNSPECIFIED",
        "METRICS_PROTOCOL_HTTP",
        "METRICS_PROTOCOL_HTTPS"
      ],
      "default": "METRICS_PROTOCOL_UNSPECIFIED"
    },
    "v1alpha1MicroServiceArch": {
      "type": "string",
      "enum": [
        "MICRO_SERVICE_ARCH_UNSPECIFIED",
        "MICRO_SERVICE_ARCH_TRADITIONAL",
        "MICRO_SERVICE_ARCH_SERVICE_MESH"
      ],
      "default": "MICRO_SERVICE_ARCH_UNSPECIFIED"
    },
    "v1alpha1MicroServiceSpec": {
      "type": "object",
      "properties": {
        "arch": {
          "$ref": "#/definitions/v1alpha1MicroServiceArch",
          "title": "Deprecated\nMicroServiceArch could be traditional or service_mesh"
        },
        "traditional": {
          "$ref": "#/definitions/v1alpha1MicroServiceTraditional",
          "title": "traditional microservice"
        },
        "serviceMesh": {
          "$ref": "#/definitions/v1alpha1ServiceMesh",
          "title": "service mesh microservice"
        }
      }
    },
    "v1alpha1MicroServiceTraditional": {
      "type": "object",
      "properties": {
        "framework": {
          "$ref": "#/definitions/v1alpha1Framework",
          "title": "SDK name, could be SPRING_CLOUD, DUBBO, SPIDER_MESH, use SPRING_CLOUD by default"
        },
        "nacosName": {
          "type": "string"
        },
        "registrationNamespaceId": {
          "type": "string"
        },
        "registrationGroup": {
          "type": "string"
        },
        "registrationInstanceGroup": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "enableSentinel": {
          "type": "boolean"
        },
        "existsInSkoala": {
          "type": "boolean",
          "title": "Whether it can be queried in skoala"
        },
        "nacosNamespace": {
          "type": "string",
          "title": "the nacos belong to which cluster"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled traditional microservice"
        },
        "serviceMonitor": {
          "$ref": "#/definitions/v1alpha1ServiceMonitor"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JavaOptsEnv"
          },
          "title": "user defined env"
        }
      }
    },
    "v1alpha1Nacos": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        },
        "certificationEnabled": {
          "type": "boolean",
          "title": "whether a username and password are required"
        }
      }
    },
    "v1alpha1NetworkProtocol": {
      "type": "string",
      "enum": [
        "NETWORK_PROTOCOL_UNSPECIFIED",
        "NETWORK_PROTOCOL_HTTP",
        "NETWORK_PROTOCOL_HTTPS"
      ],
      "default": "NETWORK_PROTOCOL_UNSPECIFIED"
    },
    "v1alpha1ObservabilitySpec": {
      "type": "object",
      "properties": {
        "serviceMonitor": {
          "$ref": "#/definitions/v1alpha1ServiceMonitor"
        },
        "trace": {
          "$ref": "#/definitions/v1alpha1TraceSpec"
        },
        "jvmMonitor": {
          "$ref": "#/definitions/v1alpha1JVMMonitorSpec"
        }
      }
    },
    "v1alpha1OperationInitiator": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username contains the name of a user who started operation"
        },
        "automated": {
          "type": "boolean",
          "description": "Automated is set to true if operation was initiated automatically by the application controller."
        }
      },
      "title": "OperationInitiator contains information about the initiator of an operation"
    },
    "v1alpha1OperationState": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/applicationv1alpha1Operation",
          "title": "Operation is the original requested operation"
        },
        "phase": {
          "type": "string",
          "title": "Phase is the current phase of the operation"
        },
        "message": {
          "type": "string",
          "description": "Message holds any pertinent messages when attempting to perform operation (typically errors)."
        },
        "syncResult": {
          "$ref": "#/definitions/v1alpha1SyncOperationResult",
          "title": "SyncResult is the result of a Sync operation"
        },
        "startedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "StartedAt contains time of operation start"
        },
        "finishedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "FinishedAt contains time of operation completion"
        },
        "retryCount": {
          "type": "string",
          "format": "int64",
          "title": "RetryCount contains time of operation retries"
        }
      },
      "title": "OperationState contains information about state of a running operation"
    },
    "v1alpha1OrphanedItemStrategy": {
      "type": "object",
      "properties": {
        "daysToKeepOldItems": {
          "type": "integer",
          "format": "int32",
          "title": "Days to keep old items"
        },
        "maxOfOldItemsToKeep": {
          "type": "integer",
          "format": "int32",
          "title": "Max of old items to keep"
        }
      }
    },
    "v1alpha1ParameterDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of parameter"
        },
        "defaultValue": {
          "type": "string",
          "title": "The default value of parameter\n+optional"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ParameterType",
          "title": "The type of parameter"
        },
        "description": {
          "type": "string",
          "title": "The description of this parameter\n+optional"
        }
      }
    },
    "v1alpha1ParameterType": {
      "type": "string",
      "enum": [
        "PARAMETER_TYPE_UNSPECIFIED",
        "PARAMETER_TYPE_TEXT",
        "PARAMETER_TYPE_STRING",
        "PARAMETER_TYPE_BOOLEAN",
        "PARAMETER_TYPE_CHOICE",
        "PARAMETER_TYPE_PASSWORD",
        "PARAMETER_TYPE_STASHED_FILE"
      ],
      "default": "PARAMETER_TYPE_UNSPECIFIED",
      "title": "The type of jenkins build parameters,supported type: text, string, boolean, choice, password"
    },
    "v1alpha1PersistentVolumeClaimQuantity": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        },
        "storage": {
          "type": "string"
        }
      }
    },
    "v1alpha1PersistentVolumeClaimResource": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimQuantity"
        },
        "requests": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimQuantity"
        }
      }
    },
    "v1alpha1PersistentVolumeClaimStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Pending",
        "Bound",
        "Lost"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": " - Pending: used for PersistentVolumeClaims that are not yet bound\n - Bound: used for PersistentVolumeClaims that are bound\n - Lost: used for PersistentVolumeClaims that lost their underlying\nPersistentVolume. The claim was bound to a PersistentVolume and this\nvolume does not exist any longer and all data on it was lost."
    },
    "v1alpha1Pipeline": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the pipeline will be created."
        },
        "name": {
          "type": "string",
          "description": "The name of the pipeline."
        },
        "description": {
          "type": "string",
          "title": "The description of the pipeline.\n+optional"
        },
        "jenkinsfile": {
          "type": "string",
          "title": "The jenksinfile defines how pipeline runs, such as nodes, steps and agent.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PipelineStatus",
          "description": "The status describes the information of runs for the pipeline."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ParameterDefinition"
          },
          "title": "The parameters when create a pipeline\n+optional"
        },
        "lastPipelineRunState": {
          "$ref": "#/definitions/v1alpha1PipelineRunState",
          "description": "The status of the pipeline last build."
        },
        "totalRunTimes": {
          "type": "string",
          "format": "int64",
          "description": "The last run status of the pipeline."
        },
        "lastRunTime": {
          "type": "string",
          "format": "int64",
          "description": "The last run time of the pipeline."
        },
        "totalSuccessTimes": {
          "type": "string",
          "format": "int64",
          "description": "The total run times of the pipeline successfully."
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "weather": {
          "$ref": "#/definitions/v1alpha1PipelineWeather",
          "description": "The pipeline weather."
        },
        "buildConfig": {
          "$ref": "#/definitions/v1alpha1BuildConfig",
          "title": "The build config of pipeline"
        },
        "triggers": {
          "$ref": "#/definitions/v1alpha1BuildTrigger",
          "title": "The build triggers for pipeline"
        },
        "pipelineScm": {
          "$ref": "#/definitions/v1alpha1PipelineScm",
          "title": "Configuration to create a pipeline based on a codebase"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1PipelineType",
          "title": "The type of pipeline"
        },
        "pipelineMultiBranch": {
          "$ref": "#/definitions/v1alpha1PipelineMultiBranch",
          "title": "The multi branch pipeline"
        },
        "genericWebhookTrigger": {
          "$ref": "#/definitions/v1alpha1GenericWebhookTrigger",
          "title": "The webhook"
        }
      },
      "description": "Response message for the `CreatePipeline`, `GetPipeline`, `UpdatePipeline` and `UpdatePipelineJenkinsfile` method."
    },
    "v1alpha1PipelineArtifact": {
      "type": "object",
      "properties": {
        "downloadable": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/PipelineArtifactLinks"
        }
      }
    },
    "v1alpha1PipelineMultiBranch": {
      "type": "object",
      "properties": {
        "gitSource": {
          "$ref": "#/definitions/v1alpha1GitSource"
        },
        "scriptPath": {
          "type": "string"
        },
        "interval": {
          "type": "string",
          "format": "int64"
        },
        "orphanedItemStrategy": {
          "$ref": "#/definitions/v1alpha1OrphanedItemStrategy"
        }
      }
    },
    "v1alpha1PipelineRun": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The scope where the pipeline will be created."
        },
        "name": {
          "type": "string",
          "description": "The name of the pipeline."
        },
        "runId": {
          "type": "string",
          "format": "int64",
          "description": "The id of the build."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1PipelineRunState",
          "description": "The PipelineRunState of the build."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "The update_at is pipeline run status update time"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "The update_at is pipeline run status update time"
        },
        "duration": {
          "type": "string",
          "format": "int64",
          "title": "This uptime is a continuous event for pipeline status"
        },
        "triggerType": {
          "$ref": "#/definitions/v1alpha1TriggerBuildType",
          "title": "This trigger_type is pipeline trigger build type"
        },
        "branchInfo": {
          "$ref": "#/definitions/v1alpha1BranchInfo",
          "title": "This branch_info is the info of branch"
        }
      },
      "description": "Response message for the `CreatePipelineRun`, `GetPipelineRun`, `ReplayPipelineRun` and \n`CancelPipelineRun` method."
    },
    "v1alpha1PipelineRunEdge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of edge"
        },
        "type": {
          "type": "string",
          "title": "The type of edge"
        }
      },
      "title": "PipelineRunEdge the edge of pipeline run node"
    },
    "v1alpha1PipelineRunNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/v1alpha1BlueOceanResult"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1BlueOceanNodeType"
        },
        "firstParent": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PipelineRunEdge"
          }
        }
      },
      "title": "PipelineRunNode the node of pipeline run"
    },
    "v1alpha1PipelineRunState": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "QUEUE",
        "RUNNING",
        "SUCCESS",
        "FAILED",
        "CANCELED",
        "ERROR",
        "NOT_BUILT"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "The status of the pipeline."
    },
    "v1alpha1PipelineRunStep": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "durationInMillis": {
          "type": "string",
          "format": "int64"
        },
        "displayDescription": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/v1alpha1BlueOceanResult"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1BlueOceanStepType"
        },
        "input": {
          "$ref": "#/definitions/v1alpha1Input"
        }
      },
      "title": "PipelineRunStep the single step for pipeline run"
    },
    "v1alpha1PipelineScm": {
      "type": "object",
      "properties": {
        "gitRepository": {
          "$ref": "#/definitions/apipipelinev1alpha1GitRepository",
          "title": "Code repository address"
        },
        "credentialId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "jenkinsFilePath": {
          "type": "string"
        },
        "scmType": {
          "$ref": "#/definitions/v1alpha1ScmType"
        }
      }
    },
    "v1alpha1PipelineStatus": {
      "type": "object",
      "properties": {
        "healthScore": {
          "type": "integer",
          "format": "int32",
          "title": "The healthy score state of the latest N pipelineruns. 0-100, e.x.: mapping to Jenkins healthReport.score"
        }
      }
    },
    "v1alpha1PipelineType": {
      "type": "string",
      "enum": [
        "PIPELINE_TYPE_UNSPECIFIED",
        "PIPELINE_TYPE_CUSTOM",
        "PIPELINE_TYPE_SCM",
        "PIPELINE_TYPE_TEMPLATE",
        "PIPELINE_TYPE_MULTI_BRANCH"
      ],
      "default": "PIPELINE_TYPE_UNSPECIFIED",
      "title": "The type of pipeline: scm or custom"
    },
    "v1alpha1PipelineWeather": {
      "type": "string",
      "enum": [
        "PIPELINE_WEATHER_UNSPECIFIED",
        "PIPELINE_WEATHER_SUNNY",
        "PIPELINE_WEATHER_PARTIALLY",
        "PIPELINE_WEATHER_CLOUDY",
        "PIPELINE_WEATHER_RAINING",
        "PIPELINE_WEATHER_STORM"
      ],
      "default": "PIPELINE_WEATHER_UNSPECIFIED",
      "description": "The weather of the pipeline.\n\n - PIPELINE_WEATHER_SUNNY: No recent builds failed.\n - PIPELINE_WEATHER_PARTIALLY: 80% of recent builds success.\n - PIPELINE_WEATHER_CLOUDY: 60% of recent builds success.\n - PIPELINE_WEATHER_RAINING: 40% of recent builds success.\n - PIPELINE_WEATHER_STORM: All recent builds failed."
    },
    "v1alpha1PluginType": {
      "type": "string",
      "enum": [
        "PLUGIN_TYPE_UNSPECIFIED",
        "PLUGIN_TYPE_SENTINEL",
        "PLUGIN_TYPE_MESH"
      ],
      "default": "PLUGIN_TYPE_UNSPECIFIED"
    },
    "v1alpha1Ports": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "ContainerPort connects to a certain container port in a pod."
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        }
      },
      "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
    },
    "v1alpha1Protocol": {
      "type": "string",
      "enum": [
        "PROTOCOL_UNSPECIFIED",
        "PROTOCOL_TCP",
        "PROTOCOL_UDP",
        "PROTOCOL_SCTP"
      ],
      "default": "PROTOCOL_UNSPECIFIED"
    },
    "v1alpha1PrunePropagationPolicy": {
      "type": "string",
      "enum": [
        "Foreground",
        "Background",
        "Orphan"
      ],
      "default": "Foreground",
      "description": " - Foreground: Foreground means that the object will be deleted in the foreground.\nSet `foreground` by default.\n - Background: Background means that the object will be deleted in\nthe background.\n - Orphan: Orphan means that the object will be orphaned."
    },
    "v1alpha1Redirect": {
      "type": "object",
      "properties": {
        "redirectKpandaUrl": {
          "type": "string",
          "title": "the url redirect to kpanda ui"
        },
        "redirectMspiderUrl": {
          "type": "string",
          "title": "the url redirect to mspider ui"
        },
        "redirectPipelineUrl": {
          "type": "string",
          "title": "the url redirect to pipeline"
        },
        "redirectSkoalaUrl": {
          "type": "string",
          "title": "the url redirect to skoala service ui"
        }
      }
    },
    "v1alpha1Registry": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Alias is an alias for the registry, showed in list."
        },
        "host": {
          "type": "string",
          "description": "Host is registry host."
        },
        "name": {
          "type": "string",
          "description": "Name is registry name, use to query project lists."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RegistryType"
        }
      },
      "title": "Registry contains necessary info"
    },
    "v1alpha1RegistryNamespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1RegistryType": {
      "type": "string",
      "enum": [
        "REGISTRY_TYPE_UNSPECIFIED",
        "REGISTRY_TYPE_HARBOR",
        "REGISTRY_TYPE_DOCKER",
        "REGISTRY_TYPE_JFROG"
      ],
      "default": "REGISTRY_TYPE_UNSPECIFIED"
    },
    "v1alpha1ReleaseInfo": {
      "type": "object",
      "properties": {
        "firstDeployed": {
          "type": "string",
          "format": "int64",
          "description": "FirstDeployed is when the release was first deployed."
        },
        "lastDeployed": {
          "type": "string",
          "format": "int64",
          "description": "LastDeployed is when the release was last deployed."
        },
        "deleted": {
          "type": "string",
          "format": "int64",
          "description": "Deleted tracks when this object was deleted."
        },
        "description": {
          "type": "string",
          "description": "Description is human-friendly \"log entry\" about this release."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleasePhase",
          "title": "Status is the current state of the release"
        },
        "notes": {
          "type": "string",
          "title": "Contains the rendered templates/NOTES.txt if available"
        },
        "readme": {
          "type": "string"
        }
      }
    },
    "v1alpha1ReleasePhase": {
      "type": "string",
      "enum": [
        "RELEASE_PHASE_UNSPECIFIED",
        "unknown",
        "deployed",
        "uninstalled",
        "superseded",
        "failed",
        "uninstalling",
        "pending_install",
        "pending_upgrade",
        "pending_rollback"
      ],
      "default": "RELEASE_PHASE_UNSPECIFIED",
      "description": " - RELEASE_PHASE_UNSPECIFIED: The release state is unspecified.\n - unknown: unknown indicates that a release is in an uncertain state.\n - deployed: deployed indicates that the release has been pushed to Kubernetes.\n - uninstalled: uninstalled indicates that a release has been uninstalled from Kubernetes.\n - superseded: superseded indicates that this release object is outdated and a newer one exists.\n - failed: failed indicates that the release was not successfully deployed.\n - uninstalling: uninstalling indicates that a uninstall operation is underway.\n - pending_install: pending_install indicates that an install operation is underway.\n - pending_upgrade: pending_upgrade indicates that an upgrade operation is underway.\n - pending_rollback: pending_rollback indicates that an rollback operation is underway."
    },
    "v1alpha1ReleaseResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion of the resource."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the resource."
        }
      },
      "title": "ReleaseResource belongs to ReleaseSpec"
    },
    "v1alpha1ReleaseSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the release"
        },
        "info": {
          "$ref": "#/definitions/v1alpha1ReleaseInfo",
          "title": "Info provides information about a release"
        },
        "chart": {
          "$ref": "#/definitions/v1alpha1HelmChart",
          "description": "HelmChart is the chart that was released."
        },
        "values": {
          "type": "string",
          "description": "Config is the set of extra Values added to the chart.\nThese values override the default values inside of the chart."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReleaseResource"
          },
          "description": "Manifest is the string representation of the rendered template."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version is an int which represents the version of the release."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the kubernetes namespace of the release."
        },
        "helmMajorVersion": {
          "type": "integer",
          "format": "int32",
          "title": "HelmMajorVersion is the helm major version"
        }
      }
    },
    "v1alpha1ReleaseStatus": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/v1alpha1Summary"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1Resource"
          },
          "description": "Resources contain resource phase info."
        }
      }
    },
    "v1alpha1ReplicaSetHealthStatus": {
      "type": "string",
      "enum": [
        "REPLICA_SET_HEALTH_STATUS_UNSPECIFIED",
        "REPLICA_SET_HEALTH_STATUS_REPLICA_FAILURE",
        "REPLICA_SET_HEALTH_STATUS_PROGRESSING",
        "REPLICA_SET_HEALTH_STATUS_SCALED_DOWN",
        "REPLICA_SET_HEALTH_STATUS_HEALTHY"
      ],
      "default": "REPLICA_SET_HEALTH_STATUS_UNSPECIFIED"
    },
    "v1alpha1ReplicaSetInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "ReplicaSet name"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReplicaSetHealthStatus",
          "title": "replicaset health status"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "Rollout revision"
        },
        "stable": {
          "type": "boolean",
          "title": "Is it a stable version"
        },
        "canary": {
          "type": "boolean",
          "title": "Is it a canary version"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "scaleDownDeadline": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutv1alpha1PodInfo"
          },
          "title": "pod information created by replicaSets"
        },
        "active": {
          "type": "boolean",
          "title": "it is active version"
        },
        "preview": {
          "type": "boolean",
          "title": "it is preview version"
        }
      },
      "title": "Reference ReplicaSetInfo defined in\nhttps://github.com/argoproj/argo-rollouts/blob/94cdfd5aa4d316f1621167fef8c606befcaf78a6/pkg/apiclient/rollout/rollout.proto#L111"
    },
    "v1alpha1Repo": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1RepoType": {
      "type": "string",
      "enum": [
        "Git",
        "Helm"
      ],
      "default": "Git"
    },
    "v1alpha1RepoUrl": {
      "type": "object",
      "properties": {
        "https": {
          "type": "string"
        },
        "ssh": {
          "type": "string"
        }
      }
    },
    "v1alpha1ResourceIgnoreDifferences": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "jsonPointers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jqPathExpressions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedFieldsManagers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs"
        }
      },
      "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state."
    },
    "v1alpha1ResourceKind": {
      "type": "string",
      "enum": [
        "RESOURCE_KIND_UNSPECIFIED",
        "RESOURCE_KIND_DEPLOYMENT",
        "RESOURCE_KIND_STATEFULSET",
        "RESOURCE_KIND_DAEMONSET",
        "RESOURCE_KIND_POD",
        "RESOURCE_KIND_SERVICE",
        "RESOURCE_KIND_INGRESS",
        "RESOURCE_KIND_JOB",
        "RESOURCE_KIND_CRONJOB",
        "RESOURCE_KIND_HORIZONTAL_POD_AUTOSCALER",
        "RESOURCE_KIND_REPLICASET",
        "RESOURCE_KIND_CRON_HPA"
      ],
      "default": "RESOURCE_KIND_UNSPECIFIED"
    },
    "v1alpha1ResourceList": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu is the total pod cpu resource. Unit: m."
        },
        "memory": {
          "type": "string",
          "description": "Memory is the total memory resource. Unit: byte."
        },
        "storage": {
          "type": "string",
          "description": "Storage is the total storage resource. Unit: byte."
        }
      },
      "description": "ResourceList returns a string representation of a resource list in a human\nreadable format."
    },
    "v1alpha1ResourcePhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "InProgress",
        "Failed",
        "Current",
        "Terminating",
        "NotFound",
        "Unknown"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": "The set of status conditions which can be assigned to resources.\n\n - PHASE_UNSPECIFIED: Phase unspecified.\n - InProgress: Resource in progress.\n - Failed: Resource failed.\n - Current: Resource current.\n - Terminating: Resource Terminating.\n - NotFound: Resource NotFound.\n - Unknown: Resource Unknown."
    },
    "v1alpha1ResourceResult": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "Group specifies the API group of the resource"
        },
        "version": {
          "type": "string",
          "title": "Version specifies the API version of the resource"
        },
        "kind": {
          "type": "string",
          "title": "Kind specifies the API kind of the resource"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace of the resource"
        },
        "name": {
          "type": "string",
          "title": "Name specifies the name of the resource"
        },
        "status": {
          "type": "string",
          "title": "Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks"
        },
        "message": {
          "type": "string",
          "title": "Message contains an informational or error message for the last sync OR operation"
        },
        "hookType": {
          "type": "string",
          "title": "HookType specifies the type of the hook. Empty for non-hook resources"
        },
        "hookPhase": {
          "type": "string",
          "description": "HookPhase contains the state of any operation associated with this resource OR hook\nThis can also contain values for non-hook resources."
        },
        "syncPhase": {
          "type": "string",
          "title": "SyncPhase indicates the particular phase of the sync that this result was acquired in"
        }
      },
      "title": "ResourceResult holds the operation result details of a specific resource"
    },
    "v1alpha1ResourceStatus": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "health": {
          "$ref": "#/definitions/apisapplicationv1alpha1HealthStatus"
        },
        "hook": {
          "type": "boolean"
        },
        "requiresPruning": {
          "type": "boolean"
        }
      },
      "title": "ResourceStatus holds the current sync and health status of a resource\nTODO: describe members of this type"
    },
    "v1alpha1ResourceType": {
      "type": "string",
      "enum": [
        "RESOURCE_TYPE_UNSPECIFIED",
        "RESOURCE_TYPE_JIRA_PROJECT",
        "RESOURCE_TYPE_GITLAB_PROJECT",
        "RESOURCE_TYPE_SONARQUBE"
      ],
      "default": "RESOURCE_TYPE_UNSPECIFIED"
    },
    "v1alpha1RetryStrategy": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed."
        },
        "backoff": {
          "$ref": "#/definitions/v1alpha1Backoff",
          "title": "Backoff controls how to backoff on subsequent retries of failed syncs"
        }
      },
      "title": "RetryStrategy contains information about the strategy to apply when a sync failed"
    },
    "v1alpha1RevisionHistory": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "title": "Revision holds the revision the sync was performed against"
        },
        "deployedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "DeployedAt holds the time the sync operation completed"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID is an auto incrementing identifier of the RevisionHistory"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the application source used for the sync operation"
        },
        "deployStartedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "DeployStartedAt holds the time the sync operation started"
        }
      },
      "title": "RevisionHistory contains history information about a previous sync"
    },
    "v1alpha1RolloutAnalysisRunStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha1RolloutInfo": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "Workspace is a virtual space to scope clusters and namespaces which current user can access."
        },
        "name": {
          "type": "string",
          "description": "Name for resource Rollout, must be unique within a combination of cluster and namespace."
        },
        "deployTarget": {
          "$ref": "#/definitions/applicationv1alpha1DeployTarget",
          "description": "A combination of cluster and namespace to specify the space within which each name must be unique."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1RolloutPhase",
          "title": "Rollout Phase"
        },
        "message": {
          "type": "string",
          "title": "Rollout message"
        },
        "workloadRef": {
          "$ref": "#/definitions/v1alpha1WorkloadRef",
          "title": "Rollout refer object name"
        },
        "strategy": {
          "$ref": "#/definitions/apirolloutv1alpha1RolloutStrategy",
          "title": "Rollout Strategy, it may be canary or blue_green"
        },
        "currentStep": {
          "type": "integer",
          "format": "int32",
          "title": "current step"
        },
        "setWeight": {
          "type": "string",
          "title": "expected weight"
        },
        "actualWeight": {
          "type": "string",
          "title": "actual weight"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "title": "ready pods number"
        },
        "current": {
          "type": "integer",
          "format": "int32",
          "title": "current pods number"
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "title": "expected pods number"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "title": "/ updated pods number"
        },
        "available": {
          "type": "integer",
          "format": "int32",
          "title": "available pods number"
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReplicaSetInfo"
          },
          "title": "Rollout controlled ReplicaSet information"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "The create time of the rollout."
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirolloutv1alpha1CanaryStep"
          },
          "title": "canary strategy steps"
        },
        "analysisRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AnalysisRunInfo"
          }
        }
      },
      "title": "Reference RolloutInfo defined in\nhttps://github.com/argoproj/argo-rollouts/blob/94cdfd5aa4d316f1621167fef8c606befcaf78a6/pkg/apiclient/rollout/rollout.proto#L73"
    },
    "v1alpha1RolloutPhase": {
      "type": "string",
      "enum": [
        "ROLLOUT_PHASE_UNSPECIFIED",
        "ROLLOUT_PHASE_HEALTHY",
        "ROLLOUT_PHASE_DEGRADED",
        "ROLLOUT_PHASE_PROCESSING",
        "ROLLOUT_PHASE_PAUSED",
        "ROLLOUT_PHASE_SCALEDDOWN"
      ],
      "default": "ROLLOUT_PHASE_UNSPECIFIED"
    },
    "v1alpha1SCMConfiguration": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1alpha1ScanResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1ScanStatus",
          "description": "The log content."
        }
      },
      "title": "GetScanlogResponse the response of scanlog"
    },
    "v1alpha1ScanStatus": {
      "type": "string",
      "enum": [
        "SCAN_STATUS_UNSPECIFIED",
        "SCAN_STATUS_SUCC",
        "SCAN_STATUS_FAILED"
      ],
      "default": "SCAN_STATUS_UNSPECIFIED"
    },
    "v1alpha1ScmType": {
      "type": "string",
      "enum": [
        "SCM_TYPE_UNSPECIFIED",
        "SCM_TYPE_GIT",
        "SCM_TYPE_CVS",
        "SCM_TYPE_CVS_PROJECT_SET",
        "SCM_TYPE_MERCURIAL",
        "SCM_TYPE_SUBVERSION"
      ],
      "default": "SCM_TYPE_UNSPECIFIED"
    },
    "v1alpha1SecretReferences": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string"
        },
        "registry": {
          "type": "string"
        }
      }
    },
    "v1alpha1ServiceMesh": {
      "type": "object",
      "properties": {
        "meshId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1SidecarInjectionStatus",
          "title": "the injection status of workload in service mesh"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled service mesh"
        }
      }
    },
    "v1alpha1ServiceMonitor": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/v1alpha1ServiceMonitorSpec"
        }
      }
    },
    "v1alpha1ServiceMonitorSpec": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Endpoint"
          }
        }
      }
    },
    "v1alpha1ServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_UNSPECIFIED",
        "CLUSTER_IP",
        "NODE_PORT",
        "LOAD_BALANCER"
      ],
      "default": "SERVICE_TYPE_UNSPECIFIED"
    },
    "v1alpha1SessionAffinity": {
      "type": "string",
      "enum": [
        "ServiceAffinityUnspecified",
        "ServiceAffinityClientIP",
        "ServiceAffinityNone"
      ],
      "default": "ServiceAffinityUnspecified"
    },
    "v1alpha1SetHeaderRoute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name this is the name of the route to use for the mirroring of traffic this also needs\nto be included in the `spec.strategy.canary.trafficRouting.managedRoutes` field"
        },
        "match": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HeaderRoutingMatch"
          }
        }
      },
      "title": "SetHeaderRoute defines the route with specified header name to send 100% of traffic to the canary service"
    },
    "v1alpha1SidecarInjectionStatus": {
      "type": "string",
      "enum": [
        "SIDECAR_INJECTION_STATUS_UNSPECIFIED",
        "SIDECAR_INJECTION_STATUS_INJECTED",
        "SIDECAR_INJECTION_STATUS_UN_INJECTED",
        "SIDECAR_INJECTION_STATUS_NEED_RESTART"
      ],
      "default": "SIDECAR_INJECTION_STATUS_UNSPECIFIED"
    },
    "v1alpha1SonarqubeConfig": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1alpha1SonarqubeInfo": {
      "type": "object",
      "properties": {
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "workspaceId": {
          "type": "string"
        },
        "nameInJenkins": {
          "type": "string"
        }
      }
    },
    "v1alpha1StringMatch": {
      "type": "object",
      "properties": {
        "exact": {
          "type": "string",
          "title": "Exact The string must match exactly"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix The string will be prefixed matched"
        },
        "regex": {
          "type": "string",
          "title": "Regex The string will be regular expression matched"
        }
      },
      "title": "StringMatch Used to define what type of matching we will use exact, prefix, or regular expression"
    },
    "v1alpha1SubmitInputResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      },
      "title": "SubmitInputResponse the response for approval/abort input"
    },
    "v1alpha1Summary": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/v1alpha1ReleasePhase"
        },
        "transitioning": {
          "type": "boolean"
        },
        "error": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1SyncOperation": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec."
        },
        "prune": {
          "type": "boolean",
          "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
        },
        "dryRun": {
          "type": "boolean",
          "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
        },
        "syncStrategy": {
          "$ref": "#/definitions/v1alpha1SyncStrategy",
          "title": "SyncStrategy describes how to perform the sync"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncOperationResource"
          },
          "title": "Resources describes which resources shall be part of the sync"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source overrides the source definition set in the application.\nThis is typically set in a Rollback operation and is nil during a Sync operation"
        },
        "manifests": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Manifests is an optional field that overrides sync source with a local directory for development"
        },
        "syncOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false"
        }
      },
      "description": "SyncOperation contains details about a sync operation."
    },
    "v1alpha1SyncOperationResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "description": "SyncOperationResource contains resources to sync."
    },
    "v1alpha1SyncOperationResult": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceResult"
          },
          "title": "Resources contains a list of sync result items for each individual resource in a sync operation"
        },
        "revision": {
          "type": "string",
          "title": "Revision holds the revision this sync operation was performed to"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source records the application source information of the sync, used for comparing auto-sync"
        }
      },
      "title": "SyncOperationResult represent result of sync operation"
    },
    "v1alpha1SyncOptions": {
      "type": "object",
      "properties": {
        "skipSchemaValidate": {
          "type": "boolean",
          "description": "Following options are false by default."
        },
        "pruneLast": {
          "type": "boolean"
        },
        "applyOutOfSyncOnly": {
          "type": "boolean"
        },
        "respectIgnoreDifferences": {
          "type": "boolean"
        },
        "serverSideApply": {
          "type": "boolean"
        },
        "replace": {
          "type": "boolean"
        },
        "prunePropagationPolicy": {
          "$ref": "#/definitions/v1alpha1PrunePropagationPolicy"
        }
      }
    },
    "v1alpha1SyncPipelineResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "v1alpha1SyncPolicyAutomated": {
      "type": "object",
      "properties": {
        "prune": {
          "type": "boolean",
          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
        },
        "selfHeal": {
          "type": "boolean",
          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
        },
        "allowEmpty": {
          "type": "boolean",
          "title": "AllowEmpty allows apps have zero live resources (default: false)"
        }
      },
      "title": "SyncPolicyAutomated controls the behavior of an automated sync"
    },
    "v1alpha1SyncStrategy": {
      "type": "object",
      "properties": {
        "apply": {
          "$ref": "#/definitions/v1alpha1SyncStrategyApply",
          "description": "Apply will perform a `kubectl apply` to perform the sync."
        },
        "hook": {
          "$ref": "#/definitions/v1alpha1SyncStrategyHook",
          "title": "Hook will submit any referenced resources to perform the sync. This is the default strategy"
        }
      },
      "title": "SyncStrategy controls the manner in which a sync is performed"
    },
    "v1alpha1SyncStrategyApply": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times."
        }
      },
      "title": "SyncStrategyApply uses `kubectl apply` to perform the apply"
    },
    "v1alpha1SyncStrategyHook": {
      "type": "object",
      "properties": {
        "syncStrategyApply": {
          "$ref": "#/definitions/v1alpha1SyncStrategyApply",
          "title": "Embed SyncStrategyApply type to inherit any `apply` options\n+optional"
        }
      },
      "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`."
    },
    "v1alpha1Template": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1TemplateType"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1TemplateParameterDefinition"
          }
        },
        "jenkinsfile": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1TemplateParameterDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of parameter"
        },
        "displayName": {
          "type": "string",
          "title": "Text to display in the form"
        },
        "defaultValue": {
          "type": "string",
          "title": "The default value of parameter, the parameter is required if defaultValue was nil"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1TemplateParameterType",
          "title": "The type of parameter"
        },
        "description": {
          "type": "string",
          "title": "The description of this parameter"
        }
      }
    },
    "v1alpha1TemplateParameterType": {
      "type": "string",
      "enum": [
        "TEMPLATE_PARAMETER_TYPE_UNSPECIFIED",
        "TEMPLATE_PARAMETER_TYPE_TEXT",
        "TEMPLATE_PARAMETER_TYPE_STRING",
        "TEMPLATE_PARAMETER_TYPE_BOOLEAN",
        "TEMPLATE_PARAMETER_TYPE_CHOICE",
        "TEMPLATE_PARAMETER_TYPE_PASSWORD",
        "TEMPLATE_PARAMETER_TYPE_CREDENTIAL",
        "TEMPLATE_PARAMETER_TYPE_TARGET"
      ],
      "default": "TEMPLATE_PARAMETER_TYPE_UNSPECIFIED"
    },
    "v1alpha1TemplateRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the template to reference"
        },
        "parameters": {
          "type": "string",
          "title": "JSON of template parameters to render, as the format of {\"param1\": \"value1\", \"param2\": \"value2\"}"
        }
      }
    },
    "v1alpha1TemplateType": {
      "type": "string",
      "enum": [
        "TEMPLATE_TYPE_UNSPECIFIED",
        "TEMPLATE_TYPE_BUILTIN",
        "TEMPLATE_TYPE_CUSTOM"
      ],
      "default": "TEMPLATE_TYPE_UNSPECIFIED"
    },
    "v1alpha1TlsConfig": {
      "type": "object",
      "properties": {
        "skipVerify": {
          "type": "boolean"
        },
        "caData": {
          "type": "string"
        }
      }
    },
    "v1alpha1ToolChainInstance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "config": {
          "type": "string",
          "title": "config configuration information of any instance"
        },
        "connectStatus": {
          "type": "boolean",
          "description": "connection status."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1InstanceType",
          "description": "instance type."
        },
        "name": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1IntegrationType"
        },
        "address": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        }
      }
    },
    "v1alpha1ToolchainResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ResourceType"
        },
        "visibility": {
          "$ref": "#/definitions/v1alpha1Visibility",
          "description": "if type is gitlab_project visibility is not null, otherwise it is null."
        }
      }
    },
    "v1alpha1TraceRuntime": {
      "type": "string",
      "enum": [
        "TRACE_RUNTIME_UNSPECIFIED",
        "TRACE_RUNTIME_DOTNET",
        "TRACE_RUNTIME_NODEJS",
        "TRACE_RUNTIME_JAVA",
        "TRACE_RUNTIME_PYTHON"
      ],
      "default": "TRACE_RUNTIME_UNSPECIFIED"
    },
    "v1alpha1TraceSpec": {
      "type": "object",
      "properties": {
        "runtime": {
          "$ref": "#/definitions/v1alpha1TraceRuntime"
        }
      }
    },
    "v1alpha1TrafficWeights": {
      "type": "object",
      "properties": {
        "canary": {
          "$ref": "#/definitions/v1alpha1WeightDestination",
          "title": "Canary is the current traffic weight split to canary ReplicaSet"
        },
        "stable": {
          "$ref": "#/definitions/v1alpha1WeightDestination",
          "title": "Stable is the current traffic weight split to stable ReplicaSet"
        },
        "additional": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WeightDestination"
          },
          "title": "Additional holds the weights split to additional ReplicaSets such as experiment ReplicaSets"
        },
        "verified": {
          "type": "boolean",
          "title": "Verified is an optional indicator that the weight has been verified to have taken effect.\nThis is currently only applicable to ALB traffic router"
        }
      },
      "title": "TrafficWeights describes the current status of how traffic has been split"
    },
    "v1alpha1TriggerBuildType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "MANUAL",
        "SCHEDULE",
        "SCMCHANGE",
        "WEBHOOK",
        "BRANCH_INDEX"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1alpha1TriggerFilter": {
      "type": "object",
      "properties": {
        "branchFilter": {
          "type": "string"
        },
        "tagFilter": {
          "type": "string"
        },
        "prTriggerEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1UnbindToolchainResourceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "toolchainId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ResourceType"
        }
      }
    },
    "v1alpha1UpdateAppGroupResponse": {
      "type": "object",
      "properties": {
        "appGroup": {
          "type": "string"
        }
      }
    },
    "v1alpha1UpdateJenkinsJSONResponse": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "description": "The json content."
        }
      },
      "title": "UpdateJenkinsJSONResponse the response for update jenkinsjson"
    },
    "v1alpha1UpdateMicroServiceResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1alpha1MicroServiceTraditional"
        }
      }
    },
    "v1alpha1UpdateRolloutJsonResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1UpdateWorkloadReplicasResponse": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1Visibility": {
      "type": "string",
      "enum": [
        "VISIBILITY_UNSPECIFIED",
        "VISIBILITY_INTERNAL",
        "VISIBILITY_PRIVATE",
        "VISIBILITY_PUBLIC"
      ],
      "default": "VISIBILITY_UNSPECIFIED"
    },
    "v1alpha1WeightDestination": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "title": "Weight is an percentage of traffic being sent to this destination"
        },
        "serviceName": {
          "type": "string",
          "title": "ServiceName is the Kubernetes service name traffic is being sent to"
        },
        "podTemplateHash": {
          "type": "string",
          "title": "PodTemplateHash is the pod template hash label for this destination"
        }
      }
    },
    "v1alpha1WorkloadRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Deployment name in the target cluster and namespace."
        }
      }
    },
    "v1alpha1WorkloadResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1WorkloadResourceRef": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WorkloadResource"
          }
        },
        "pipelineName": {
          "type": "string"
        }
      }
    },
    "v1alpha1WorkloadType": {
      "type": "string",
      "enum": [
        "WORKLOAD_TYPE_UNSPECIFIED",
        "WORKLOAD_TYPE_DEPLOYMENT",
        "WORKLOAD_TYPE_STATEFUL_SET",
        "WORKLOAD_TYPE_DAEMON_SET",
        "WORKLOAD_TYPE_JOB",
        "WORKLOAD_TYPE_CRONJOB"
      ],
      "default": "WORKLOAD_TYPE_UNSPECIFIED"
    },
    "v1alpha1WorkloadsJSON": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha1Workspace": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of the workspace."
        },
        "alias": {
          "type": "string",
          "description": "The alias name of the workspace."
        }
      }
    },
    "v1alpha2ApplicationRevision": {
      "type": "object",
      "properties": {
        "revisionHash": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha2ApplicationStatusPhase": {
      "type": "string",
      "enum": [
        "APPLICATION_PHASE_UNSPECIFIED",
        "READY",
        "PROGRESSING",
        "UNKNOWN",
        "MISSING"
      ],
      "default": "APPLICATION_PHASE_UNSPECIFIED"
    },
    "v1alpha2ApplicationTopology": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "description": "Application metadata information."
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Node"
          },
          "description": "Node represents a resource in the application."
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Edge"
          },
          "description": "Edge represents a relationship between two resources."
        }
      }
    },
    "v1alpha2AppliedResources": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1alpha2ClusterServiceVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createAt": {
          "type": "string",
          "format": "int64"
        },
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "v1alpha2Components": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2ConfigMapInfo": {
      "type": "object"
    },
    "v1alpha2CreateOperatorApplicationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2DaemonSetInfo": {
      "type": "object",
      "properties": {
        "desiredNumberScheduled": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of daemons."
        },
        "numberReady": {
          "type": "integer",
          "format": "int32",
          "description": "NumberReady is the number of nodes that should be running the daemon pod and have one\nor more of the daemon pod running with a Ready Condition."
        },
        "strategyType": {
          "$ref": "#/definitions/v1alpha2DaemonSetInfoUpdateStrategyType"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus"
        }
      }
    },
    "v1alpha2DaemonSetInfoUpdateStrategyType": {
      "type": "string",
      "enum": [
        "UPDATE_STRATEGY_UNSPECIFIED",
        "ON_DELETE",
        "ROLLING_UPDATE"
      ],
      "default": "UPDATE_STRATEGY_UNSPECIFIED",
      "description": "Daemonset Update strategy.\n\n - UPDATE_STRATEGY_UNSPECIFIED: The field was not set\n - ON_DELETE: OnDelete: Replace the old daemons only when it's killed\n - ROLLING_UPDATE: RollingUpdate: Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other."
    },
    "v1alpha2DeploymentInfo": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Desired replicas."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pods targeted by this Deployment with a Ready Condition."
        },
        "strategyType": {
          "$ref": "#/definitions/v1alpha2DeploymentInfoUpdateStrategyType"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus"
        }
      }
    },
    "v1alpha2DeploymentInfoUpdateStrategyType": {
      "type": "string",
      "enum": [
        "UPDATE_STRATEGY_UNSPECIFIED",
        "RECREATE",
        "ROLLING_UPDATE"
      ],
      "default": "UPDATE_STRATEGY_UNSPECIFIED",
      "description": "Deployment rollout strategy.\n\n - UPDATE_STRATEGY_UNSPECIFIED: The field was not set\n - RECREATE: Recreate\n - ROLLING_UPDATE: RollingUpdate"
    },
    "v1alpha2Descriptor": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1alpha2Edge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "title": "Source Node ID"
        },
        "target": {
          "type": "string",
          "title": "Target Node ID"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Properties for the edge."
        }
      }
    },
    "v1alpha2GetApplicationYAMLResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetMeshIDResponse": {
      "type": "object",
      "properties": {
        "meshId": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetOAMApplicationJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetOperatorApplicationExamplesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetOperatorApplicationJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2GetSentinelAddrResponse": {
      "type": "object",
      "properties": {
        "sentinelAddr": {
          "type": "string"
        }
      }
    },
    "v1alpha2IngressInfo": {
      "type": "object"
    },
    "v1alpha2ListApplicationComponentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListApplicationRevisionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ApplicationRevision"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListApplicationWorkloadsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Workload"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListMutilCloudDeployTargetResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2DeploymentTarget"
          }
        }
      }
    },
    "v1alpha2ListOAMApplicationResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2OAMApplication"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListOperatorApplicationResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ClusterServiceVersion"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2ListOperatorCustomResourceDefinitionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2ListOperatorsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2ListResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Resource"
          },
          "description": "Resources list."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page information."
        }
      }
    },
    "v1alpha2ListSchemaDefinitionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2SchemaDefinition"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha2OAMApplication": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/amambaioapitypesObjectMeta",
          "title": "oam application metadata"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha2OAMApplicationSpec",
          "description": "application spec, hold all the components ,traits and deploy targets."
        },
        "status": {
          "$ref": "#/definitions/v1alpha2OAMApplicationStatus",
          "description": "application status, contains the application phase, conditions, applied resources and services."
        }
      }
    },
    "v1alpha2OAMApplicationPhase": {
      "type": "string",
      "enum": [
        "OAM_APPLICATION_PHASE_UNSPECIFIED",
        "OAM_APPLICATION_PHASE_STARTING",
        "OAM_APPLICATION_PHASE_RENDERING",
        "OAM_APPLICATION_PHASE_POLICY_GENERATING",
        "OAM_APPLICATION_PHASE_RUNNING_WORKFLOW",
        "OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING",
        "OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED",
        "OAM_APPLICATION_PHASE_WORKFLOW_FAILED",
        "OAM_APPLICATION_PHASE_RUNNING",
        "OAM_APPLICATION_PHASE_UNHEALTHY",
        "OAM_APPLICATION_PHASE_DELETING"
      ],
      "default": "OAM_APPLICATION_PHASE_UNSPECIFIED",
      "title": "- OAM_APPLICATION_PHASE_STARTING: ApplicationStarting means the app is preparing for reconcile\n - OAM_APPLICATION_PHASE_RENDERING: ApplicationRendering means the app is rendering\n - OAM_APPLICATION_PHASE_POLICY_GENERATING: ApplicationPolicyGenerating means the app is generating policies\n - OAM_APPLICATION_PHASE_RUNNING_WORKFLOW: ApplicationRunningWorkflow means the app is running workflow\n - OAM_APPLICATION_PHASE_WORKFLOW_SUSPENDING: ApplicationWorkflowSuspending means the app's workflow is suspending\n - OAM_APPLICATION_PHASE_WORKFLOW_TERMINATED: ApplicationWorkflowTerminated means the app's workflow is terminated\n - OAM_APPLICATION_PHASE_WORKFLOW_FAILED: ApplicationWorkflowFailed means the app's workflow is failed\n - OAM_APPLICATION_PHASE_RUNNING: ApplicationRunning means the app finished rendering and applied result to the cluster\n - OAM_APPLICATION_PHASE_UNHEALTHY: ApplicationUnhealthy means the app finished rendering and applied result to the cluster, but still unhealthy\n - OAM_APPLICATION_PHASE_DELETING: ApplicationDeleting means application is being deleted"
    },
    "v1alpha2OAMApplicationService": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "healthy": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "traits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2ServiceTrait"
          }
        },
        "workloadDefinition": {
          "$ref": "#/definitions/v1alpha2WorkloadDefinition"
        }
      }
    },
    "v1alpha2OAMApplicationSpec": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2OAMComponent"
          }
        },
        "deployTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2DeployTarget"
          },
          "title": "where to deploy the application"
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1alpha2OAMApplicationStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha2OAMApplicationPhase",
          "title": "application phase"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectReference"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha2Condition"
          }
        },
        "appliedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2AppliedResources"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2OAMApplicationService"
          }
        },
        "workflow": {
          "$ref": "#/definitions/v1alpha2Workflow"
        }
      }
    },
    "v1alpha2OAMComponent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "component name"
        },
        "type": {
          "type": "string",
          "description": "component type, eg: webservice, crontask, etc."
        },
        "properties": {
          "type": "string",
          "description": "component properties, it's must a json string."
        },
        "traits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Trait"
          },
          "title": "component traits"
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha2ObjectStatus": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1alpha2PatchResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2PersistentVolumeClaimInfo": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2PersistentVolumeClaimInfoAccessMode"
          }
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "capacity represents the actual resources of the underlying volume."
        },
        "storageClassName": {
          "type": "string",
          "description": "storageClassName is the name of the StorageClass required by the claim."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2PersistentVolumeClaimInfoPhase"
        }
      }
    },
    "v1alpha2PersistentVolumeClaimInfoAccessMode": {
      "type": "string",
      "enum": [
        "ACCESS_MODE_UNKNOWN",
        "READ_WRITE_ONCE",
        "READ_ONLY_MANY",
        "READ_WRITE_MANY",
        "READ_WRITE_ONCE_POD"
      ],
      "default": "ACCESS_MODE_UNKNOWN",
      "description": "- READ_WRITE_ONCE: ReadWriteOnce means the volume can be mounted as read-write by a single node\n - READ_ONLY_MANY: ReadOnlyMany means the volume can be mounted read-only by many nodes\n - READ_WRITE_MANY: ReadWriteMany means the volume can be mounted as read-write by many nodes\n - READ_WRITE_ONCE_POD: the volume can be mounted as read-write by a single Pod. Use ReadWriteOncePod \naccess mode if you want to ensure that only one pod across whole cluster can read \nthat PVC or write to it. This is only supported for CSI volumes and Kubernetes \nversion 1.22+.",
      "title": "The actual access mode the volume backing the PVC has.\nmore details: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"
    },
    "v1alpha2PersistentVolumeClaimInfoPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNKNOWN",
        "PENDING",
        "BOUND",
        "LOST"
      ],
      "default": "PHASE_UNKNOWN",
      "description": "phase represents the current phase of PersistentVolumeClaim.\n\n - PENDING: Pending means that PersistentVolumeClaim has been accepted by the system, but the \nunderlying PersistentVolume has not been created yet.\n - BOUND: Bound means that PersistentVolumeClaim has been bound to a PersistentVolume.\n - LOST: Lost means that PersistentVolumeClaim can no longer be bound to a volume and has \nbeen deleted by the system. PersistentVolumeClaim will be deleted automatically \nwhen reclaimPolicy is Retain."
    },
    "v1alpha2PodInfoPodPhase": {
      "type": "string",
      "enum": [
        "POD_PHASE_UNSPECIFIED",
        "PENDING",
        "RUNNING",
        "SUCCEEDED",
        "FAILED",
        "UNKNOWN"
      ],
      "default": "POD_PHASE_UNSPECIFIED",
      "description": "Pending: The pod has been accepted by the Kubernetes system, but one or more of the\ncontainer images has not been created. This includes time before being scheduled as\nwell as time spent downloading images over the network, which could take a while.\nRunning: The pod has been bound to a node, and all of the containers have been created.\nAt least one container is still running, or is in the process of starting or restarting.\nSucceeded: All containers in the pod have terminated in success, and will not be restarted.\nFailed: All containers in the pod have terminated, and at least one container has\nterminated in failure. The container either exited with non-zero status or was terminated\nby the system.\nUnknown: For some reason the state of the pod could not be obtained, typically due to an\nerror in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase\n+optional",
      "title": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle.\nThe conditions array, the reason and message fields, and the individual container status\narrays contain more detail about the pod's status.\nThere are five possible phase values:"
    },
    "v1alpha2PropagationPolicy": {
      "type": "string",
      "enum": [
        "PROPAGATION_POLICY_UNSPECIFIED",
        "PROPAGATION_POLICY_ORPHAN",
        "PROPAGATION_POLICY_BACKGROUND"
      ],
      "default": "PROPAGATION_POLICY_UNSPECIFIED"
    },
    "v1alpha2RollbackRevisionResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha2SchemaDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "string"
        },
        "uiSchema": {
          "type": "string"
        }
      }
    },
    "v1alpha2SecretInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha2SecretInfoType"
        }
      }
    },
    "v1alpha2SecretInfoType": {
      "type": "string",
      "enum": [
        "TYPE_UNKNOWN",
        "OPAQUE",
        "SERVICE_ACCOUNT_TOKEN",
        "DOCKER_CONFIG",
        "BASIC_AUTH",
        "SSH_AUTH",
        "TLS",
        "BOOTSTRAP_TOKEN"
      ],
      "default": "TYPE_UNKNOWN"
    },
    "v1alpha2ServiceInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha2ServiceInfoType"
        }
      }
    },
    "v1alpha2ServiceInfoType": {
      "type": "string",
      "enum": [
        "TYPE_UNKNOWN",
        "TYPE_CLUSTER_IP",
        "TYPE_NODE_PORT",
        "TYPE_LOAD_BALANCER",
        "TYPE_EXTERNAL_NAME"
      ],
      "default": "TYPE_UNKNOWN"
    },
    "v1alpha2ServiceTrait": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha2StatefulSetInfo": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Desired replicas."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pods targeted by this Deployment with a Ready Condition."
        },
        "strategyType": {
          "$ref": "#/definitions/v1alpha2StatefulSetInfoUpdateStrategyType"
        },
        "status": {
          "$ref": "#/definitions/applicationv1alpha2WorkloadStatus"
        }
      }
    },
    "v1alpha2StatefulSetInfoUpdateStrategyType": {
      "type": "string",
      "enum": [
        "UPDATE_STRATEGY_UNSPECIFIED",
        "ON_DELETE",
        "ROLLING_UPDATE"
      ],
      "default": "UPDATE_STRATEGY_UNSPECIFIED",
      "description": "StatefulSet Update strategy.\n\n - UPDATE_STRATEGY_UNSPECIFIED: The field was not set\n - ON_DELETE: OnDelete: Replace the old daemons only when it's killed\n - ROLLING_UPDATE: RollingUpdate: Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other."
    },
    "v1alpha2Step": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha2WorkflowStepPhase"
        },
        "reason": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1alpha2Trait": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "trait type, eg: ingress, autoscale, etc.\nshould unique in the component."
        },
        "properties": {
          "type": "string",
          "description": "trait properties, it must a json string."
        }
      }
    },
    "v1alpha2UpdateApplicationYANLResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2UpdateOAMApplicationJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2UpdateResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "v1alpha2Workflow": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha2WorkflowRunPhase"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha2Step"
          }
        }
      }
    },
    "v1alpha2WorkflowRunPhase": {
      "type": "string",
      "enum": [
        "WORKFLOW_STATUS_UNSPECIFIED",
        "WORKFLOW_STATUS_INITIALIZING",
        "WORKFLOW_STATUS_EXECUTING",
        "WORKFLOW_STATUS_SUSPENDING",
        "WORKFLOW_STATUS_TERMINATED",
        "WORKFLOW_STATUS_FAILED",
        "WORKFLOW_STATUS_SUCCEEDED",
        "WORKFLOW_STATUS_SKIPPED"
      ],
      "default": "WORKFLOW_STATUS_UNSPECIFIED",
      "title": "- WORKFLOW_STATUS_INITIALIZING: WorkflowStateInitializing means the workflow run is initializing\n - WORKFLOW_STATUS_EXECUTING: WorkflowStateExecuting means the workflow run is executing\n - WORKFLOW_STATUS_SUSPENDING: WorkflowStateSuspending means the workflow run is suspending\n - WORKFLOW_STATUS_TERMINATED: WorkflowStateTerminated means the workflow run is terminated\n - WORKFLOW_STATUS_FAILED: WorkflowStateFailed means the workflow run is failed\n - WORKFLOW_STATUS_SUCCEEDED: WorkflowStateSucceeded means the workflow run is succeeded\n - WORKFLOW_STATUS_SKIPPED: WorkflowStateSkipped means the workflow run is skipped"
    },
    "v1alpha2WorkflowStepPhase": {
      "type": "string",
      "enum": [
        "WORKFLOW_STEP_PHASE_UNSPECIFIED",
        "WORKFLOW_STEP_PHASE_Succeeded",
        "WORKFLOW_STEP_PHASE_Failed",
        "WORKFLOW_STEP_PHASE_Skipped",
        "WORKFLOW_STEP_PHASE_Running",
        "WORKFLOW_STEP_PHASE_Pending",
        "WORKFLOW_STEP_PHASE_Suspending"
      ],
      "default": "WORKFLOW_STEP_PHASE_UNSPECIFIED",
      "description": " - WORKFLOW_STEP_PHASE_Succeeded: WorkflowStepPhaseSucceeded will make the controller run the next step.\n - WORKFLOW_STEP_PHASE_Failed: WorkflowStepPhaseFailed will report error in `message`.\n - WORKFLOW_STEP_PHASE_Skipped: WorkflowStepPhaseSkipped will make the controller skip the step.\n - WORKFLOW_STEP_PHASE_Running: WorkflowStepPhaseRunning will make the controller continue the workflow.\n - WORKFLOW_STEP_PHASE_Pending: WorkflowStepPhasePending will make the controller wait for the step to run.\n - WORKFLOW_STEP_PHASE_Suspending: WorkflowStepPhaseSuspending will make the controller suspend the workflow."
    },
    "v1alpha2WorkloadDefinition": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
