{
  "swagger": "2.0",
  "info": {
    "title": "中间件服务",
    "version": "v0.19.0"
  },
  "tags": [
    {
      "name": "CloudShellService"
    },
    {
      "name": "Cluster"
    },
    {
      "name": "Metric"
    },
    {
      "name": "MysqlMgr"
    },
    {
      "name": "StorageConfig"
    },
    {
      "name": "Template"
    },
    {
      "name": "Version"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/mcamel.io/mysql/v1alpha2/cloudshells": {
      "post": {
        "operationId": "CloudShellService_CreateCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCloudShellRequest"
            }
          }
        ],
        "tags": [
          "CloudShellService"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/cloudshells/{name}": {
      "get": {
        "summary": "GetCloudShell get a cloudshell in golobal cluster.",
        "operationId": "CloudShellService_GetCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CloudShellService"
        ]
      },
      "delete": {
        "summary": "DeleteCloudShell delete a cloudshell in golobal cluster.",
        "operationId": "CloudShellService_DeleteCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CloudShellService"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql": {
      "post": {
        "operationId": "MysqlMgr_CreateMysql",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateMysqlResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMysqlReq"
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql-params/{cluster}": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlParam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlParamResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/version": {
      "get": {
        "operationId": "Version_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetVersionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Version"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{instanceType}/{name}": {
      "delete": {
        "operationId": "MysqlMgr_DeleteMysql",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteMysqlResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"delete|required#RBAC error|unkonwn clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#unkonwn namespace!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ]
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"regex:^[a-z][a-z0-9-]{0,38}[a-z0-9]$#unknown name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{instanceType}/{name}/backup": {
      "delete": {
        "operationId": "MysqlMgr_DeleteMysqlBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteMysqlBackupResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"delete|required#RBAC error|unkonwn clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#unkonwn namespace!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ]
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}": {
      "get": {
        "operationId": "MysqlMgr_GetMysql",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ],
            "default": "UnKnown"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/backup": {
      "post": {
        "operationId": "MysqlMgr_CreateMysqlBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateMysqlBackupResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"update|required#RBAC error|input clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#input namespace!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "cluster's name\n@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "@inject_tag: v:\"min:1#choose workspace_id!\""
                },
                "backupName": {
                  "type": "string",
                  "title": "backup's name\n@inject_tag: v:\"required#unknown name!\""
                },
                "backupBucket": {
                  "type": "string",
                  "title": "backup's bucket"
                },
                "backupBucketSubPath": {
                  "type": "string",
                  "title": "backup's bucket sub path"
                },
                "instanceType": {
                  "$ref": "#/definitions/InstanceType",
                  "title": "the instance type of mysql"
                }
              }
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/backup/config": {
      "put": {
        "operationId": "MysqlMgr_UpdateMysqlBackupConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateMysqlBackupConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"update|required#RBAC error|unknown backup_schedule!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "@inject_tag: v:\"min:1#choose workspace_id!\""
                },
                "backupSchedule": {
                  "type": "string",
                  "title": "backup's backup_schedule"
                },
                "backupBucket": {
                  "type": "string",
                  "title": "Deprecated: backup's bucket, find bucket in storage_config_name instead"
                },
                "backupHistoryLimit": {
                  "type": "integer",
                  "format": "int32",
                  "title": "backup's history limit"
                },
                "backupBucketSubPath": {
                  "type": "string",
                  "title": "backup's bucket sub path\n@inject_tag: v:\"regex:^(/[^/ ]*)+/?$#invalid path!\""
                },
                "isOpenAutoBackup": {
                  "type": "boolean",
                  "title": "if open auto backup"
                },
                "storageConfigName": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose storage_config_name!\""
                },
                "storageConfigNamespace": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose storage_config_namespace!\""
                },
                "storageConfigCluster": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose storage_config_cluster!\""
                },
                "instanceType": {
                  "$ref": "#/definitions/InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/backup/jobs": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlBackupJobList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlBackupJobListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster info",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace info",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name info",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "backupName",
            "description": "job's backupname",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/backups": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlBackupList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlBackupListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster info",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace info",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name info",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ],
            "default": "UnKnown"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/conf": {
      "put": {
        "operationId": "MysqlMgr_UpdateMysqlConf",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateMysqlConfResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"update|required#RBAC error|choose clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose Namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "confItems": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/templateTemplateConfigItem"
                  },
                  "title": "废弃,不再使用\n string conf=4;"
                },
                "reloadFromConfTemplateName": {
                  "type": "string"
                },
                "instanceType": {
                  "$ref": "#/definitions/InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/confs": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlConfs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlConfResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#choose clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose Namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ],
            "default": "UnKnown"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/grafana": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlGrafanaAddr",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlGrafanaAddrResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ],
            "default": "UnKnown"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/nodes": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlNodeList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlNodeListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ],
            "default": "UnKnown"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/params": {
      "put": {
        "operationId": "MysqlMgr_UpdateMysqlParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateMysqlParamsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "WHY check update? \nAdmin and Editor have 「update」verb, according to https://docs.daocloud.io/middleware/permission/, only Admin and Editor can create mcamel instance.\n@inject_tag: v:\"update|required#RBAC error|choose clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose Namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"withFiledsMaxLen:%v-mysql-%v.mysql.%v,name,replicas,namespace,60|required|regex:^[a-z][a-z0-9-]{0,38}[a-z0-9]$#fields too long!|input name!|input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "@inject_tag: v:\"required#choose workspace_id!\""
                },
                "describe": {
                  "type": "string"
                },
                "version": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|supportVersion#choose version|choose version\""
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "title": "@inject_tag: v:\"required|between:1,100#choose replicas|choose replicas between 3 and 100\""
                },
                "instanceType": {
                  "$ref": "#/definitions/InstanceType"
                },
                "storageClassName": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose sc\""
                },
                "storageCapacity": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|resource#choose capacity|resource\""
                },
                "rootPassword": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|passwordMid#input password|input valid password\""
                },
                "serviceType": {
                  "$ref": "#/definitions/commonServiceType",
                  "title": "@inject_tag: v:\"serviceType#choose serviceType\""
                },
                "serviceAnnotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "@inject_tag: v:\"k8sValidation:annotations#input valid annotations\""
                },
                "ports": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CreateMysqlReqPorts"
                  }
                },
                "cpuRequest": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|resource#input cpuRequest|resource\""
                },
                "cpuLimit": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|resource#input cpuLimit|resource\""
                },
                "memoryRequest": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|resource#input memoryRequest|resource\""
                },
                "memoryLimit": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required|resource#input memoryLimit|resource\""
                },
                "conf": {
                  "type": "string",
                  "title": "mysql's conf"
                },
                "confTemplateName": {
                  "type": "string"
                },
                "backupSchedule": {
                  "type": "string",
                  "title": "backup's backup_schedule"
                },
                "backupSecretName": {
                  "type": "string",
                  "title": "backup's secret"
                },
                "backupBucket": {
                  "type": "string",
                  "title": "Deprecated: will get bucket name from storage_config_name\nbackup's bucket"
                },
                "isOpenPhpAdmin": {
                  "type": "boolean",
                  "title": "isOpenPhpAdmin, phpAdmin set ,if true,will deploy phpadmin,if false do notiong with phpAdmin"
                },
                "phpAdminServiceType": {
                  "$ref": "#/definitions/commonServiceType",
                  "title": "phpAdminService,default clusterIP\n@inject_tag: v:\"serviceType#choose phpAdminServiceType\""
                },
                "phpAdminNodePort": {
                  "type": "integer",
                  "format": "int32",
                  "title": "if PhpAdminServiceType is nodePort,it will required!"
                },
                "phpAdminCpuRequest": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input cpuRequest|resource\""
                },
                "phpAdminCpuLimit": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input cpuLimit|resource\""
                },
                "phpAdminMemoryRequest": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input memoryRequest|resource\""
                },
                "phpAdminMemoryLimit": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input memoryLimit|resource\""
                },
                "backupHistoryLimit": {
                  "type": "integer",
                  "format": "int32",
                  "title": "backup's history limit"
                },
                "backupBucketSubPath": {
                  "type": "string",
                  "title": "backup's bucket sub path"
                },
                "initBackupPath": {
                  "type": "string",
                  "title": "init backup file path, if set, will create mysql cluster from backup"
                },
                "initBackupSecretName": {
                  "type": "string",
                  "title": "init backup secret name, operator use it to clone backup file from remote storage"
                },
                "isOpenAutoBackup": {
                  "type": "boolean",
                  "title": "if open auto backup"
                },
                "initSourceMysqlClusterName": {
                  "type": "string",
                  "title": "init_source_mysql_cluster_name is the recover source of current cluster"
                },
                "initSourceBackupName": {
                  "type": "string",
                  "title": "init_source_mysql_cluster_namespace is the source backup name"
                },
                "storageConfigName": {
                  "type": "string"
                },
                "storageConfigNamespace": {
                  "type": "string"
                },
                "storageConfigCluster": {
                  "type": "string"
                },
                "affinity": {
                  "$ref": "#/definitions/commonAffinity",
                  "title": "@inject_tag: v:\"k8sValidation:affinity#input valid affinity\""
                },
                "serviceMonitorInterval": {
                  "type": "string",
                  "title": "serviceMonitor 的抓取周期"
                },
                "accessWhitelist": {
                  "$ref": "#/definitions/commonAccessWhitelist"
                },
                "enableSlowQueryLog": {
                  "type": "boolean"
                },
                "externalTrafficPolicy": {
                  "$ref": "#/definitions/commonExternalTrafficPolicy",
                  "title": "lb\n@inject_tag: v:\"checklb#checklb failed!\""
                },
                "lbTyp": {
                  "$ref": "#/definitions/commonLBTyp"
                },
                "lbPoolName": {
                  "type": "string"
                },
                "lbAddress": {
                  "type": "string"
                },
                "phpAdminExternalTrafficPolicy": {
                  "$ref": "#/definitions/commonExternalTrafficPolicy",
                  "title": "phpadmin lb"
                },
                "phpAdminLbTyp": {
                  "$ref": "#/definitions/commonLBTyp"
                },
                "phpAdminLbPoolName": {
                  "type": "string"
                },
                "phpAdminLbAddress": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/recover": {
      "post": {
        "operationId": "MysqlMgr_CreateMysqlRecover",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateMysqlRecoverResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"update|required#RBAC error|choose clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose Namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is source mysql cluster get config from source mysql cluster\n@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "@inject_tag: v:\"min:1#choose workspace_id!\""
                },
                "backupName": {
                  "type": "string",
                  "title": "backup_name \n@inject_tag: v:\"required#input backup name for new cluster!\""
                },
                "targetMysqlClusterName": {
                  "type": "string",
                  "title": "target_mysql_cluster_name, the cluster to create\n@inject_tag: v:\"required#input name!\""
                },
                "targetMysqlClusterNamespace": {
                  "type": "string"
                },
                "targetMysqlClusterCluster": {
                  "type": "string"
                },
                "instanceType": {
                  "$ref": "#/definitions/InstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/users": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlUsersResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "WHY check update? \nAdmin and Editor have 「update」verb, according to https://docs.daocloud.io/middleware/permission/, only Admin and Editor can get password.\n@inject_tag: v:\"update|required#RBAC error|choose clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose Namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ],
            "default": "UnKnown"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{cluster}/{namespace}/{name}/{instanceType}/slowlog": {
      "delete": {
        "summary": "删除慢查询日志",
        "operationId": "MysqlMgr_DeleteSlowlog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteSlowlogResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"delete|required#RBAC error|unkonwn clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#unkonwn namespace!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"regex:^[a-z][a-z0-9-]{0,38}[a-z0-9]$#unknown name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ]
          },
          {
            "name": "podName",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{workspaceId}/providers": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlBackupProviderList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlBackupProviderListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1#choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysql/{workspaceId}/secret": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlBackupSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlBackupSecretResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"get|min:1#RBAC error|choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      },
      "put": {
        "operationId": "MysqlMgr_SetMysqlBackupSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SetMysqlBackupSecretResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"update|min:1#RBAC error|choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "accessKey": {
                  "type": "string"
                },
                "secretKey": {
                  "type": "string"
                },
                "endpoint": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/mysqls": {
      "post": {
        "operationId": "MysqlMgr_DeleteMysqls",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteMysqlsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteMysqlsReq"
            }
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/storage-config/bucket/check-job": {
      "post": {
        "operationId": "StorageConfig_CreateStorageConfigBucketCheckJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateStorageConfigBucketCheckJobResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateStorageConfigBucketCheckJobReq"
            }
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/storage-config/param": {
      "get": {
        "operationId": "StorageConfig_GetStorageConfigParam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetStorageConfigParamResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/workspaces": {
      "get": {
        "operationId": "Cluster_GetWorkspaceList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetWorkspaceListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/all-events-kinds": {
      "get": {
        "operationId": "Cluster_GetAllEventKindsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAllEventKindsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/insight/status": {
      "get": {
        "operationId": "Cluster_GetInsightAgentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetInsightAgentStatusResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/install-file": {
      "post": {
        "operationId": "Cluster_InstallFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/InstallFileResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "gvr": {
                  "$ref": "#/definitions/InstallFileReqGVR"
                }
              }
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/install-version": {
      "get": {
        "operationId": "Cluster_GetInstallVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetInstallVersionResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/lbaddress/pools": {
      "get": {
        "operationId": "Cluster_GetMetallbIPAddressPoolsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMetallbIPAddressPoolsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "mcamel_type is holdplace for mcamel type.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/mysql-operator/versions": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlOperatorVersionList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlOperatorVersionListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/nodelabels": {
      "get": {
        "operationId": "Cluster_GetClusterNodeLabelList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetClusterNodeLabelListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#请输入Cluster\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/nodeports": {
      "get": {
        "operationId": "Cluster_GetClusterNodePortList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetClusterNodePortListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#请输入Cluster\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/podlabels": {
      "get": {
        "operationId": "Cluster_GetClusterPodLabelList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetClusterPodLabelListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#请输入Cluster\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/events": {
      "get": {
        "summary": "pod 列表上会使用",
        "operationId": "Cluster_GetEventList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetEventListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of deployment belongs to.\n@inject_tag: v:\"required#choose cluster\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.\n@inject_tag: v:\"required#choose namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind represents what type of event is needed.\n@inject_tag: v:\"required#choose kind\"\n\n - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Pod: ListEvents by deployment.\n       Deployment = 1;\n       // ListEvents by statefulSet.\n       StatefulSet = 2;\n       // ListEvents by daemonSet.\n       DaemonSet = 3;\n       // ListEvents by pod.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Pod"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is DEPLOYMENT,\nthis presents the name of deployments.\n@inject_tag: v:\"required#choose kind name\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "description": "Type is used for query, showing events of specified type.\nUse example: type=WARNING&type=NORMAL.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "Normal",
                "Warning"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/resourcequota": {
      "get": {
        "operationId": "Cluster_GetResourceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetResourceQuotaResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#choose cluster\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/{name}/alerts": {
      "get": {
        "operationId": "Metric_GetAlertsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAlertsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#input cluster!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#input namespace!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Metric"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/{name}/all-events": {
      "get": {
        "operationId": "Cluster_GetAllEventList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAllEventListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventType",
            "description": " - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "Normal",
              "Warning"
            ],
            "default": "EVENT_TYPE_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/{name}/{instanceType}/slowlog/conf": {
      "get": {
        "summary": "获取慢查询相关的参数",
        "operationId": "MysqlMgr_GetSlowlogConf",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetSlowlogConfResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#choose clusterName!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#choose Namespace\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ]
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/{name}/{instanceType}/topology": {
      "get": {
        "operationId": "MysqlMgr_GetTopology",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetTopologyResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ]
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{cluster}/{namespace}/{name}/{podName}/{instanceType}/slowlog": {
      "get": {
        "summary": "获取慢查询日志列表",
        "operationId": "MysqlMgr_GetSlowlogList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetSlowlogListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UnKnown",
              "SingleNode",
              "MasterSlave",
              "Mgr"
            ]
          },
          {
            "name": "page",
            "description": "common.PageInfoReq = 1;",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/clusters": {
      "get": {
        "operationId": "Cluster_GetClusterList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetClusterListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/hostnetwork-ports": {
      "get": {
        "operationId": "Cluster_GetClusterHostnetworkPorts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetClusterHostnetworkPortsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#Input Cluster\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/minios": {
      "get": {
        "operationId": "MysqlMgr_GetMinioList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMinioListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1#choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "common.PageInfoReq=1;",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/mysqls": {
      "get": {
        "operationId": "MysqlMgr_GetMysqlList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMysqlListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1|get#choose workspace_id!RBAC error\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "common.PageInfoReq=1;",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "description": "@inject_tag: v:\"listSearchKey#invalid search key\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterCluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MysqlMgr"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/permissions": {
      "get": {
        "operationId": "Cluster_GetPermissionsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetPermissionsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/restart": {
      "post": {
        "operationId": "Cluster_RestartInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RestartInstanceResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "title": "@inject_tag: v:\"update|required#RBAC error|choose clusterName!\""
                },
                "namespace": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "extra": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/storage-config": {
      "post": {
        "operationId": "StorageConfig_CreateStorageConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateStorageConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configUpdate|min:1#RBAC error|choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "title": "Deprecated: always store to global cluster"
                },
                "namespace": {
                  "type": "string",
                  "title": "Deprecated: always store to mcamel system"
                },
                "name": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input name!\""
                },
                "storageType": {
                  "type": "string",
                  "title": "@inject_tag: v:\"in:minio,minio-wild,s3#choose storage type!\""
                },
                "accessKey": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input access key!\""
                },
                "secretKey": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input secret key!\""
                },
                "bucket": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input bucket!\""
                },
                "endpoint": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-unless:storageType,minio#input endpoint if storage type is not minio!\""
                },
                "minioCluster": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-if:storageType,minio#input minio cluster if storage type is minio!\""
                },
                "minioNamespace": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-if:storageType,minio#input minio namespace if storage type is minio!\""
                },
                "minioName": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-if:storageType,minio#input minio name if storage type is minio!\""
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/storage-config/{cluster}/{namespace}/{name}": {
      "delete": {
        "operationId": "StorageConfig_DeleteStorageConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteStorageConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configDelete|min:1#RBAC error|choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#input cluster!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#input namespace!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/storage-config/{name}": {
      "get": {
        "operationId": "StorageConfig_GetStorageConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetStorageConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1#choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "@inject_tag: v:\"required#input namespace!\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#input cluster!\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      },
      "put": {
        "operationId": "StorageConfig_UpdateStorageConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateStorageConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configUpdate|min:1#RBAC error|choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "title": "Deprecated: always store to global cluster"
                },
                "namespace": {
                  "type": "string",
                  "title": "Deprecated: always store to mcamel system"
                },
                "storageType": {
                  "type": "string",
                  "title": "@inject_tag: v:\"in:minio,minio-wild,s3#choose storage type!\""
                },
                "accessKey": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input access key!\""
                },
                "secretKey": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input secret key!\""
                },
                "bucket": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#input bucket!\""
                },
                "endpoint": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-unless:storageType,minio#input endpoint if storage type is not minio!\""
                },
                "minioCluster": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-if:storageType,minio#input minio cluster if storage type is minio!\""
                },
                "minioNamespace": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-if:storageType,minio#input minio namespace if storage type is minio!\""
                },
                "minioName": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required-if:storageType,minio#input minio name if storage type is minio!\""
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/storage-config/{name}/consumers": {
      "get": {
        "operationId": "StorageConfig_GetStorageConfigConsumers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetStorageConfigConsumersResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1#choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#input name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/storage-configs": {
      "get": {
        "operationId": "StorageConfig_GetStorageConfigList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetStorageConfigListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1|configGet#choose workspace_id!RBAC error\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StorageConfig"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_config": {
      "get": {
        "operationId": "Template_GetTemplateConfigList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateGetTemplateConfigListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"min:1#choose workspace_id!\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "@inject_tag: v:\"configGet#RBAC error\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateInstanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MysqlMasterReplica",
              "RedisStandalone",
              "RedisFailover",
              "RedisCluster",
              "KafkaConfig",
              "MysqlMgrConfig",
              "MongodbConfig",
              "PostgresqlConfig",
              "RabbitmqConfig"
            ],
            "default": "MysqlMasterReplica"
          }
        ],
        "tags": [
          "Template"
        ]
      },
      "post": {
        "operationId": "Template_CreateTemplateConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateCreateTemplateConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configUpdate#RBAC error\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetName": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose target_name!\""
                },
                "targetVersion": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose target_version!\""
                },
                "targetType": {
                  "type": "string"
                },
                "targetTemplateType": {
                  "type": "string"
                },
                "targetConf": {
                  "type": "string"
                },
                "fromTemplateName": {
                  "type": "string"
                },
                "targetTemplateInstanceType": {
                  "$ref": "#/definitions/templateTemplateInstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Template"
        ]
      },
      "put": {
        "operationId": "Template_UpdateTemplateConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateUpdateTemplateConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configUpdate#RBAC error\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose name!\""
                },
                "version": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "templateType": {
                  "type": "string"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/templateTemplateConfigItem"
                  }
                },
                "conf": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_config/to_template": {
      "put": {
        "summary": "string -> 模版 items",
        "operationId": "Template_UpdateTemplateConfigToItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateUpdateTemplateConfigToItemResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configUpdate#RBAC error\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "conf": {
                  "type": "string",
                  "title": "@inject_tag: v:\"required#choose conf!\""
                },
                "version": {
                  "type": "string"
                },
                "templateInstanceType": {
                  "$ref": "#/definitions/templateTemplateInstanceType"
                }
              }
            }
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_config/versions": {
      "get": {
        "operationId": "Template_GetTemplateConfigVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateGetTemplateConfigVersionsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_config/{name}": {
      "get": {
        "operationId": "Template_GetTemplateConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateGetTemplateConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#choose name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createTimestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "templateInstanceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MysqlMasterReplica",
              "RedisStandalone",
              "RedisFailover",
              "RedisCluster",
              "KafkaConfig",
              "MysqlMgrConfig",
              "MongodbConfig",
              "PostgresqlConfig",
              "RabbitmqConfig"
            ],
            "default": "MysqlMasterReplica"
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_config/{name}/to_string": {
      "get": {
        "summary": "模版 -> string",
        "operationId": "Template_GetTemplateConfigString",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateGetTemplateConfigStringResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#choose name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_config/{name}/{version}": {
      "delete": {
        "operationId": "Template_DeleteTemplateConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateDeleteTemplateConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"configDelete#RBAC error\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "@inject_tag: v:\"required#choose name!\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "@inject_tag: v:\"required#choose version!\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/template_instance_type": {
      "get": {
        "operationId": "Template_GetTemplateInstanceTypeList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/templateGetTemplateInstanceTypeListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/apis/mcamel.io/mysql/v1alpha2/{workspaceId}/{cluster}/namespaces": {
      "get": {
        "operationId": "Cluster_GetClusterNamespaceList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetClusterNamespaceListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "@inject_tag: v:\"required#请输入WSid\"",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cluster",
            "description": "@inject_tag: v:\"required#请输入Cluster\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/healthz": {
      "get": {
        "operationId": "Version_Healthz",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/HealthzReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Version"
        ]
      }
    }
  },
  "definitions": {
    "AccessWhitelistExternal": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        }
      }
    },
    "AccessWhitelistInternal": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "podSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CloudShell": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/CloudShellSpec"
        },
        "status": {
          "$ref": "#/definitions/CloudShellStatus"
        }
      }
    },
    "CloudShellSpec": {
      "type": "object",
      "properties": {
        "configMapName": {
          "type": "string"
        },
        "once": {
          "type": "boolean"
        },
        "commandAction": {
          "type": "string"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        },
        "cleanup": {
          "type": "boolean"
        }
      }
    },
    "CloudShellStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "type": "string"
        },
        "accessUrl": {
          "type": "string"
        }
      }
    },
    "ClusterItem": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ClusterItemMetadata"
        },
        "status": {
          "$ref": "#/definitions/ClusterItemStatus"
        }
      }
    },
    "ClusterItemMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ClusterItemNetworkMode": {
      "type": "string",
      "enum": [
        "Unknown",
        "Flannel",
        "Calico"
      ],
      "default": "Unknown"
    },
    "ClusterItemStatus": {
      "type": "object",
      "properties": {
        "networkMode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterItemNetworkMode"
          }
        }
      }
    },
    "CommonReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "CreateCloudShellRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/CreateCloudShellRequestType"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "podName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "logCount": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/CloudShell"
        }
      }
    },
    "CreateCloudShellRequestType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "bash",
        "exec",
        "logs",
        "upload",
        "download"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "CreateMysqlBackupReq": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: v:\"min:1#choose workspace_id!\""
        },
        "cluster": {
          "type": "string",
          "title": "@inject_tag: v:\"update|required#RBAC error|input clusterName!\""
        },
        "namespace": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input namespace!\""
        },
        "name": {
          "type": "string",
          "title": "cluster's name\n@inject_tag: v:\"required#input name!\""
        },
        "backupName": {
          "type": "string",
          "title": "backup's name\n@inject_tag: v:\"required#unknown name!\""
        },
        "backupBucket": {
          "type": "string",
          "title": "backup's bucket"
        },
        "backupBucketSubPath": {
          "type": "string",
          "title": "backup's bucket sub path"
        },
        "instanceType": {
          "$ref": "#/definitions/InstanceType",
          "title": "the instance type of mysql"
        }
      }
    },
    "CreateMysqlBackupResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "when create,message will write"
        }
      }
    },
    "CreateMysqlRecoverResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CreateMysqlReq": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: v:\"required#choose workspace_id!\""
        },
        "cluster": {
          "type": "string",
          "title": "WHY check update? \nAdmin and Editor have 「update」verb, according to https://docs.daocloud.io/middleware/permission/, only Admin and Editor can create mcamel instance.\n@inject_tag: v:\"update|required#RBAC error|choose clusterName!\""
        },
        "namespace": {
          "type": "string",
          "title": "@inject_tag: v:\"required#choose Namespace\""
        },
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"withFiledsMaxLen:%v-mysql-%v.mysql.%v,name,replicas,namespace,60|required|regex:^[a-z][a-z0-9-]{0,38}[a-z0-9]$#fields too long!|input name!|input name!\""
        },
        "describe": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "title": "@inject_tag: v:\"required|supportVersion#choose version|choose version\""
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: v:\"required|between:1,100#choose replicas|choose replicas between 3 and 100\""
        },
        "instanceType": {
          "$ref": "#/definitions/InstanceType"
        },
        "storageClassName": {
          "type": "string",
          "title": "@inject_tag: v:\"required#choose sc\""
        },
        "storageCapacity": {
          "type": "string",
          "title": "@inject_tag: v:\"required|resource#choose capacity|resource\""
        },
        "rootPassword": {
          "type": "string",
          "title": "@inject_tag: v:\"required|passwordMid#input password|input valid password\""
        },
        "serviceType": {
          "$ref": "#/definitions/commonServiceType",
          "title": "@inject_tag: v:\"serviceType#choose serviceType\""
        },
        "serviceAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@inject_tag: v:\"k8sValidation:annotations#input valid annotations\""
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateMysqlReqPorts"
          }
        },
        "cpuRequest": {
          "type": "string",
          "title": "@inject_tag: v:\"required|resource#input cpuRequest|resource\""
        },
        "cpuLimit": {
          "type": "string",
          "title": "@inject_tag: v:\"required|resource#input cpuLimit|resource\""
        },
        "memoryRequest": {
          "type": "string",
          "title": "@inject_tag: v:\"required|resource#input memoryRequest|resource\""
        },
        "memoryLimit": {
          "type": "string",
          "title": "@inject_tag: v:\"required|resource#input memoryLimit|resource\""
        },
        "conf": {
          "type": "string",
          "title": "mysql's conf"
        },
        "confTemplateName": {
          "type": "string"
        },
        "backupSchedule": {
          "type": "string",
          "title": "backup's backup_schedule"
        },
        "backupSecretName": {
          "type": "string",
          "title": "backup's secret"
        },
        "backupBucket": {
          "type": "string",
          "title": "Deprecated: will get bucket name from storage_config_name\nbackup's bucket"
        },
        "isOpenPhpAdmin": {
          "type": "boolean",
          "title": "isOpenPhpAdmin, phpAdmin set ,if true,will deploy phpadmin,if false do notiong with phpAdmin"
        },
        "phpAdminServiceType": {
          "$ref": "#/definitions/commonServiceType",
          "title": "phpAdminService,default clusterIP\n@inject_tag: v:\"serviceType#choose phpAdminServiceType\""
        },
        "phpAdminNodePort": {
          "type": "integer",
          "format": "int32",
          "title": "if PhpAdminServiceType is nodePort,it will required!"
        },
        "phpAdminCpuRequest": {
          "type": "string",
          "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input cpuRequest|resource\""
        },
        "phpAdminCpuLimit": {
          "type": "string",
          "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input cpuLimit|resource\""
        },
        "phpAdminMemoryRequest": {
          "type": "string",
          "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input memoryRequest|resource\""
        },
        "phpAdminMemoryLimit": {
          "type": "string",
          "title": "@inject_tag: v:\"required-with:IsOpenPhpAdmin|resource#input memoryLimit|resource\""
        },
        "backupHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "title": "backup's history limit"
        },
        "backupBucketSubPath": {
          "type": "string",
          "title": "backup's bucket sub path"
        },
        "initBackupPath": {
          "type": "string",
          "title": "init backup file path, if set, will create mysql cluster from backup"
        },
        "initBackupSecretName": {
          "type": "string",
          "title": "init backup secret name, operator use it to clone backup file from remote storage"
        },
        "isOpenAutoBackup": {
          "type": "boolean",
          "title": "if open auto backup"
        },
        "initSourceMysqlClusterName": {
          "type": "string",
          "title": "init_source_mysql_cluster_name is the recover source of current cluster"
        },
        "initSourceBackupName": {
          "type": "string",
          "title": "init_source_mysql_cluster_namespace is the source backup name"
        },
        "storageConfigName": {
          "type": "string"
        },
        "storageConfigNamespace": {
          "type": "string"
        },
        "storageConfigCluster": {
          "type": "string"
        },
        "affinity": {
          "$ref": "#/definitions/commonAffinity",
          "title": "@inject_tag: v:\"k8sValidation:affinity#input valid affinity\""
        },
        "serviceMonitorInterval": {
          "type": "string",
          "title": "serviceMonitor 的抓取周期"
        },
        "accessWhitelist": {
          "$ref": "#/definitions/commonAccessWhitelist"
        },
        "enableSlowQueryLog": {
          "type": "boolean"
        },
        "externalTrafficPolicy": {
          "$ref": "#/definitions/commonExternalTrafficPolicy",
          "title": "lb\n@inject_tag: v:\"checklb#checklb failed!\""
        },
        "lbTyp": {
          "$ref": "#/definitions/commonLBTyp"
        },
        "lbPoolName": {
          "type": "string"
        },
        "lbAddress": {
          "type": "string"
        },
        "phpAdminExternalTrafficPolicy": {
          "$ref": "#/definitions/commonExternalTrafficPolicy",
          "title": "phpadmin lb"
        },
        "phpAdminLbTyp": {
          "$ref": "#/definitions/commonLBTyp"
        },
        "phpAdminLbPoolName": {
          "type": "string"
        },
        "phpAdminLbAddress": {
          "type": "string"
        }
      }
    },
    "CreateMysqlReqPorts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input name\""
        },
        "protocol": {
          "type": "string",
          "title": "@inject_tag: v:\"required|in:TCP,UDP#choose protocol|choose protocol\""
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "targetPort": {
          "type": "integer",
          "format": "int32"
        },
        "nodePort": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateMysqlResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CreateStorageConfigBucketCheckJobReq": {
      "type": "object",
      "properties": {
        "storageType": {
          "type": "string",
          "title": "@inject_tag: v:\"required|in:minio,minio-wild,s3:#choose storage type!|choose valid storage type!\""
        },
        "endpoint": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input endpoint!\""
        },
        "accessKey": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input access key!\""
        },
        "secretKey": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input secret key!\""
        },
        "bucket": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input bucket name!\""
        },
        "cluster": {
          "type": "string",
          "title": "minio cluster\n@inject_tag: v:\"required-if:storageType,minio#input minio cluster if storage type is minio!\""
        },
        "namespace": {
          "type": "string",
          "title": "minio namespace\n@inject_tag: v:\"required-if:storageType,minio#input minio namespace if storage type is minio!\""
        },
        "name": {
          "type": "string",
          "title": "minio name\n@inject_tag: v:\"required-if:storageType,minio#input minio name if storage type is minio!\""
        }
      }
    },
    "CreateStorageConfigBucketCheckJobResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CreateStorageConfigReq": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: v:\"configUpdate|min:1#RBAC error|choose workspace_id!\""
        },
        "cluster": {
          "type": "string",
          "title": "Deprecated: always store to global cluster"
        },
        "namespace": {
          "type": "string",
          "title": "Deprecated: always store to mcamel system"
        },
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input name!\""
        },
        "storageType": {
          "type": "string",
          "title": "@inject_tag: v:\"in:minio,minio-wild,s3#choose storage type!\""
        },
        "accessKey": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input access key!\""
        },
        "secretKey": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input secret key!\""
        },
        "bucket": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input bucket!\""
        },
        "endpoint": {
          "type": "string",
          "title": "@inject_tag: v:\"required-unless:storageType,minio#input endpoint if storage type is not minio!\""
        },
        "minioCluster": {
          "type": "string",
          "title": "@inject_tag: v:\"required-if:storageType,minio#input minio cluster if storage type is minio!\""
        },
        "minioNamespace": {
          "type": "string",
          "title": "@inject_tag: v:\"required-if:storageType,minio#input minio namespace if storage type is minio!\""
        },
        "minioName": {
          "type": "string",
          "title": "@inject_tag: v:\"required-if:storageType,minio#input minio name if storage type is minio!\""
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreateStorageConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "DataStorageClassValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "allowVolumeExpansion": {
          "type": "boolean"
        }
      }
    },
    "DeleteMysqlBackupResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "instanceType": {
          "$ref": "#/definitions/InstanceType"
        }
      }
    },
    "DeleteMysqlReq": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "@inject_tag: v:\"delete|required#RBAC error|unkonwn clusterName!\""
        },
        "namespace": {
          "type": "string",
          "title": "@inject_tag: v:\"required#unkonwn namespace!\""
        },
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"regex:^[a-z][a-z0-9-]{0,38}[a-z0-9]$#unknown name!\""
        },
        "instanceType": {
          "$ref": "#/definitions/InstanceType"
        }
      }
    },
    "DeleteMysqlResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "DeleteMysqlsReq": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeleteMysqlReq"
          }
        }
      }
    },
    "DeleteMysqlsResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "DeleteSlowlogResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "DeleteStorageConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Edge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Property"
        }
      }
    },
    "EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "title": "Component from which the event is generated.\n+optional"
        },
        "host": {
          "type": "string",
          "title": "Node name on which the event is generated.\n+optional"
        }
      },
      "description": "EventSource contains information for an event."
    },
    "EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "Normal",
        "Warning"
      ],
      "default": "EVENT_TYPE_UNSPECIFIED",
      "description": "Type of event (Normal, Warning), new types could be added in the\nfuture.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type."
    },
    "GetAlertsListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetAlertsListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AlertSummary"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetAllEventKindsListResp": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetAllEventListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetAllEventListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetAllEventListRespItems"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetAllEventListRespItems": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/ItemsSource"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/GetAllEventListRespItemsMetadata"
        },
        "apiVersion": {
          "type": "string"
        },
        "lastTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "firstTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "involvedObject": {
          "$ref": "#/definitions/ItemsInvolvedObject"
        },
        "reportingInstance": {
          "type": "string"
        },
        "reportingComponent": {
          "type": "string"
        }
      }
    },
    "GetAllEventListRespItemsMetadata": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GetClusterHostnetworkPortsResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "GetClusterListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetClusterNamespaceListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetClusterNodeLabelListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClusterNodeLabelListRespLabel"
          }
        },
        "items1": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClusterNodeLabelListRespNode2Label"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetClusterNodeLabelListRespLabel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetClusterNodeLabelListRespNode2Label": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string"
        },
        "label": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClusterNodeLabelListRespLabel"
          }
        }
      }
    },
    "GetClusterNodePortListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetClusterPodLabelListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClusterPodLabelListRespLabel"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetClusterPodLabelListRespLabel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetEventListReqKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Pod"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Pod: ListEvents by deployment.\n       Deployment = 1;\n       // ListEvents by statefulSet.\n       StatefulSet = 2;\n       // ListEvents by daemonSet.\n       DaemonSet = 3;\n       // ListEvents by pod."
    },
    "GetEventListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetEventListRespItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetEventListRespItem": {
      "type": "object",
      "properties": {
        "involvedObject": {
          "$ref": "#/definitions/ObjectReference",
          "description": "The object that this event is about."
        },
        "reason": {
          "type": "string",
          "description": "reason is why the action was taken. It is human-readable.\nThis field cannot be empty for new Events and it can have at most 128\ncharacters."
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation."
        },
        "source": {
          "$ref": "#/definitions/EventSource",
          "description": "The component reporting this event. Should be a short machine\nunderstandable string."
        },
        "lastTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the most recent occurrence of this event was recorded."
        },
        "type": {
          "$ref": "#/definitions/EventType",
          "description": "Type of this event (Normal, Warning), new types could be added in the\nfuture."
        }
      }
    },
    "GetInsightAgentStatusResp": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/GetInsightAgentStatusRespInsightAgentStatus"
        },
        "clusterStatus": {
          "$ref": "#/definitions/commonClusterStatus"
        }
      }
    },
    "GetInsightAgentStatusRespInsightAgentStatus": {
      "type": "string",
      "enum": [
        "NotInstall",
        "Install"
      ],
      "default": "NotInstall"
    },
    "GetInstallVersionResp": {
      "type": "object",
      "properties": {
        "clusterVersion": {
          "type": "string",
          "title": "Example: v1.27.0"
        },
        "supportVersion": {
          "$ref": "#/definitions/GetInstallVersionRespSupportVersion"
        },
        "status": {
          "$ref": "#/definitions/GetInstallVersionRespStatus"
        }
      }
    },
    "GetInstallVersionRespStatus": {
      "type": "object",
      "properties": {
        "inRange": {
          "type": "boolean"
        }
      }
    },
    "GetInstallVersionRespSupportVersion": {
      "type": "object",
      "properties": {
        "minVersion": {
          "type": "string"
        },
        "maxVersion": {
          "type": "string"
        }
      }
    },
    "GetMetallbIPAddressPoolsListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMetallbIPAddressPoolsListRespItem"
          }
        },
        "isSupportLb": {
          "type": "boolean"
        },
        "externalTrafficPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonExternalTrafficPolicy"
          },
          "title": "lb"
        },
        "lbTyp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonLBTyp"
          }
        }
      }
    },
    "GetMetallbIPAddressPoolsListRespItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "autoAssign": {
          "type": "boolean",
          "description": "AutoAssign flag used to prevent MetallB from automatic allocation\nfor a pool."
        },
        "avoidBuggyIPs": {
          "type": "boolean",
          "description": "AvoidBuggyIPs prevents addresses ending with .0 and .255\nto be used by a pool."
        }
      }
    },
    "GetMinioListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetMinioListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetMysqlBackupJobItemGetMysqlBackupJobItemSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "parallelism": {
          "type": "integer",
          "format": "int32"
        },
        "completions": {
          "type": "integer",
          "format": "int32"
        },
        "jobType": {
          "$ref": "#/definitions/GetMysqlBackupJobItemSpecJobType"
        },
        "completionTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "backupType": {
          "$ref": "#/definitions/GetMysqlBackupJobItemGetMysqlBackupJobItemSpecBackupType"
        },
        "backupPath": {
          "type": "string"
        }
      }
    },
    "GetMysqlBackupJobItemGetMysqlBackupJobItemSpecBackupType": {
      "type": "string",
      "enum": [
        "Full"
      ],
      "default": "Full"
    },
    "GetMysqlBackupJobItemSpecJobType": {
      "type": "string",
      "enum": [
        "Auto",
        "Manual"
      ],
      "default": "Auto"
    },
    "GetMysqlBackupJobItemStatusStatus": {
      "type": "string",
      "enum": [
        "Failed",
        "Running",
        "Complete"
      ],
      "default": "Failed"
    },
    "GetMysqlBackupJobListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetMysqlBackupJobListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMysqlBackupJobListRespGetMysqlBackupJobItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        },
        "status": {
          "$ref": "#/definitions/GetMysqlBackupJobListRespStatus"
        }
      }
    },
    "GetMysqlBackupJobListRespGetMysqlBackupJobItem": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/GetMysqlBackupJobItemGetMysqlBackupJobItemSpec"
        },
        "status": {
          "$ref": "#/definitions/GetMysqlBackupJobListRespGetMysqlBackupJobItemStatus"
        }
      }
    },
    "GetMysqlBackupJobListRespGetMysqlBackupJobItemStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/GetMysqlBackupJobItemStatusStatus"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GetMysqlBackupJobListRespStatus": {
      "type": "object",
      "properties": {
        "isConfigAutoBackup": {
          "type": "boolean"
        },
        "backupSchedule": {
          "type": "string",
          "title": "backup's backup_schedule"
        },
        "backupSecretName": {
          "type": "string",
          "title": "backup's secret"
        },
        "backupBucket": {
          "type": "string",
          "title": "backup's bucket"
        },
        "backupBucketSubPath": {
          "type": "string"
        }
      }
    },
    "GetMysqlBackupListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetMysqlBackupListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MysqlBackupItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetMysqlBackupProviderListResp": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/GetMysqlParamRespSelect"
        }
      }
    },
    "GetMysqlBackupSecretResp": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SetMysqlBackupSecretReq"
        }
      }
    },
    "GetMysqlConfReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetMysqlConfResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMysqlConfRespItems"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        },
        "conf": {
          "$ref": "#/definitions/UpdateMysqlConfReq"
        }
      }
    },
    "GetMysqlConfRespItems": {
      "type": "object",
      "properties": {
        "paramType": {
          "$ref": "#/definitions/ItemsParamType"
        },
        "paramName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GetMysqlGrafanaAddrResp": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "GetMysqlListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetMysqlListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MysqlClusterItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetMysqlNodeListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetMysqlNodeListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMysqlNodeListRespData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetMysqlNodeListRespData": {
      "type": "object",
      "properties": {
        "podName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/GetMysqlNodeListRespPodStatus"
        },
        "ip": {
          "type": "string"
        },
        "restart": {
          "type": "integer",
          "format": "int32"
        },
        "cpuUsage": {
          "type": "number",
          "format": "double"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double"
        },
        "memoryUsage": {
          "type": "number",
          "format": "double"
        },
        "memoryLimit": {
          "type": "number",
          "format": "double"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "nodeType": {
          "$ref": "#/definitions/GetMysqlNodeListRespNodeType"
        },
        "healthStatus": {
          "$ref": "#/definitions/GetMysqlNodeListRespHealthStatus"
        },
        "common": {
          "$ref": "#/definitions/commonPodCommon"
        }
      }
    },
    "GetMysqlNodeListRespHealthStatus": {
      "type": "string",
      "enum": [
        "HealthStatusUnknown",
        "HealthStatusHealthy",
        "HealthStatusUnhealthy"
      ],
      "default": "HealthStatusUnknown",
      "description": " - HealthStatusUnknown: Unknown means the state of the pod is unknown.\n - HealthStatusHealthy: Healthy means the pod is healthy.\n - HealthStatusUnhealthy: Unhealthy means the pod is unhealthy."
    },
    "GetMysqlNodeListRespNodeType": {
      "type": "string",
      "enum": [
        "Master",
        "Replica",
        "PhpAdmin",
        "PRIMARY",
        "SECONDARY"
      ],
      "default": "Master"
    },
    "GetMysqlNodeListRespPodStatus": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Unknown",
        "Pending",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": " - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system)."
    },
    "GetMysqlOperatorVersionListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMysqlOperatorVersionListRespGetMysqlOperatorVersionListData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetMysqlOperatorVersionListRespGetMysqlOperatorVersionListData": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "instanceType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceType"
          }
        }
      }
    },
    "GetMysqlParamResp": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/GetMysqlParamRespSelect"
        },
        "replicas": {
          "$ref": "#/definitions/GetMysqlParamRespSelect"
        },
        "storage": {
          "$ref": "#/definitions/GetMysqlParamRespSelect"
        },
        "cnf": {
          "$ref": "#/definitions/GetMysqlParamRespSelect",
          "title": "cnf is mysql 5.x conf"
        },
        "eightXcnf": {
          "$ref": "#/definitions/GetMysqlParamRespSelect",
          "title": "eightXcnf is mysql 8.x conf"
        },
        "mgrVersion": {
          "$ref": "#/definitions/GetMysqlParamRespSelect"
        }
      }
    },
    "GetMysqlParamRespSelect": {
      "type": "object",
      "properties": {
        "selectType": {
          "$ref": "#/definitions/GetMysqlParamRespSelectSelectType"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMysqlParamRespSelectData"
          }
        }
      }
    },
    "GetMysqlParamRespSelectData": {
      "type": "object",
      "properties": {
        "sValue": {
          "$ref": "#/definitions/GetMysqlParamRespSelectDataStringValue"
        },
        "iValue": {
          "$ref": "#/definitions/GetMysqlParamRespSelectDataIntValue"
        },
        "scValue": {
          "$ref": "#/definitions/DataStorageClassValue"
        }
      }
    },
    "GetMysqlParamRespSelectDataIntValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMysqlParamRespSelectDataStringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "GetMysqlParamRespSelectSelectType": {
      "type": "string",
      "enum": [
        "Single",
        "Multiple"
      ],
      "default": "Single"
    },
    "GetMysqlResp": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/MysqlClusterItem"
        }
      }
    },
    "GetMysqlUsersResp": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMysqlUsersRespUserItem"
          }
        }
      }
    },
    "GetMysqlUsersRespUserItem": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "GetPermissionsListResp": {
      "type": "object",
      "properties": {
        "permissionsBool": {
          "$ref": "#/definitions/GetPermissionsListRespPermissions"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionsType"
          }
        }
      }
    },
    "GetPermissionsListRespPermissions": {
      "type": "object",
      "properties": {
        "GetInstance": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"get\""
        },
        "CreateInstance": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"update\""
        },
        "UpdateInstance": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"update\""
        },
        "DeleteInstance": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"delete\""
        },
        "GetMetric": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"get\""
        },
        "GetInstanceLog": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"get\""
        },
        "GetConfig": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"get\""
        },
        "UpdateConfig": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"update\""
        },
        "GetBackup": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"get\""
        },
        "CreateBackup": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"update\""
        },
        "UpdateBackup": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"update\""
        },
        "DeleteBackup": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"delete\""
        },
        "GetBackupConf": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configGet\""
        },
        "CreateBackupConf": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configUpdate\""
        },
        "UpdateBackupConf": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configUpdate\""
        },
        "DeleteBackupConf": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configDelete\""
        },
        "GetTemplate": {
          "type": "boolean",
          "title": "模板权限\n@inject_tag: ref:\"configGet\""
        },
        "CreateTemplate": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configUpdate\""
        },
        "UpdateTemplate": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configUpdate\""
        },
        "DeleteTemplate": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configDelete\""
        },
        "GetUserPassword": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"update\""
        },
        "ExportTemplate": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configUpdate\""
        },
        "ImportTemplate": {
          "type": "boolean",
          "title": "@inject_tag: ref:\"configUpdate\""
        }
      }
    },
    "GetResourceQuotaResp": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/GetResourceQuotaRespMetadata",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/GetResourceQuotaRespSpec",
          "description": "Spec defines the desired quota."
        },
        "status": {
          "$ref": "#/definitions/GetResourceQuotaRespStatus",
          "description": "Status defines the actual enforced quota and its current usage."
        }
      }
    },
    "GetResourceQuotaRespMetadata": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GetResourceQuotaRespSpec": {
      "type": "object",
      "properties": {
        "hard": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Hard is the set of desired hard limits for each named resource."
        }
      },
      "description": "Spec defines the desired hard limits to enforce for Quota."
    },
    "GetResourceQuotaRespStatus": {
      "type": "object",
      "properties": {
        "hard": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Hard is the set of enforced hard limits for each named resource."
        },
        "used": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Used is used for each named resource."
        },
        "available": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Available is the amount of the quota that remains available."
        }
      },
      "description": "Status defines the enforced hard limits and observed use."
    },
    "GetSlowlogConfResp": {
      "type": "object",
      "properties": {
        "longQueryTime": {
          "type": "string"
        }
      }
    },
    "GetSlowlogListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetSlowlogListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetSlowlogListRespItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetSlowlogListRespItem": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string"
        },
        "db": {
          "type": "string"
        },
        "sqlText": {
          "type": "string"
        },
        "queryTime": {
          "type": "string"
        },
        "lockTime": {
          "type": "string"
        },
        "rowsExamined": {
          "type": "string"
        },
        "rowsSent": {
          "type": "string"
        },
        "userHost": {
          "type": "string"
        }
      }
    },
    "GetStorageConfigConsumersResp": {
      "type": "object",
      "properties": {
        "consumers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetStorageConfigConsumersRespConsumer"
          }
        }
      }
    },
    "GetStorageConfigConsumersRespConsumer": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/GetStorageConfigConsumersRespStorageConfigConsumerType"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GetStorageConfigConsumersRespStorageConfigConsumerType": {
      "type": "string",
      "enum": [
        "STORAGE_CONFIG_CONSUMER_TYPE_UNSPECIFIED",
        "STORAGE_CONFIG_CONSUMER_TYPE_MYSQL",
        "STORAGE_CONFIG_CONSUMER_TYPE_REDIS"
      ],
      "default": "STORAGE_CONFIG_CONSUMER_TYPE_UNSPECIFIED"
    },
    "GetStorageConfigListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetStorageConfigListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageConfigItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "GetStorageConfigParamResp": {
      "type": "object",
      "properties": {
        "storageType": {
          "$ref": "#/definitions/GetStorageConfigParamRespSelect"
        }
      }
    },
    "GetStorageConfigParamRespSelect": {
      "type": "object",
      "properties": {
        "selectType": {
          "$ref": "#/definitions/GetStorageConfigParamRespSelectSelectType"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetStorageConfigParamRespSelectData"
          }
        }
      }
    },
    "GetStorageConfigParamRespSelectData": {
      "type": "object",
      "properties": {
        "sValue": {
          "$ref": "#/definitions/GetStorageConfigParamRespSelectDataStringValue"
        },
        "iValue": {
          "$ref": "#/definitions/GetStorageConfigParamRespSelectDataIntValue"
        }
      }
    },
    "GetStorageConfigParamRespSelectDataIntValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetStorageConfigParamRespSelectDataStringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "GetStorageConfigParamRespSelectSelectType": {
      "type": "string",
      "enum": [
        "Single",
        "Multiple"
      ],
      "default": "Single"
    },
    "GetStorageConfigResp": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/StorageConfigItem"
        }
      }
    },
    "GetTopologyResp": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "instanceType": {
          "$ref": "#/definitions/InstanceType"
        },
        "version": {
          "type": "string"
        },
        "storageClassName": {
          "type": "string"
        },
        "storageCapacity": {
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        }
      }
    },
    "GetVersionReply": {
      "type": "object",
      "properties": {
        "commonReply": {
          "$ref": "#/definitions/CommonReply"
        },
        "gitCommit": {
          "type": "string"
        },
        "gitVersion": {
          "type": "string"
        },
        "buildTime": {
          "type": "string"
        }
      }
    },
    "GetWorkspaceListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "GetWorkspaceListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetWorkspaceListRespItem"
          },
          "title": "def items"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "title": "def pagination"
        }
      }
    },
    "GetWorkspaceListRespItem": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int64",
          "title": "id"
        },
        "alias": {
          "type": "string",
          "title": "alias"
        },
        "visible": {
          "type": "boolean",
          "title": "Visible"
        }
      }
    },
    "HealthzReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "InstallFileReqGVR": {
      "type": "string",
      "enum": [
        "None",
        "CustomResourceDefinition"
      ],
      "default": "None"
    },
    "InstallFileResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "InstanceType": {
      "type": "string",
      "enum": [
        "UnKnown",
        "SingleNode",
        "MasterSlave",
        "Mgr"
      ],
      "default": "UnKnown"
    },
    "ItemsInvolvedObject": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        }
      }
    },
    "ItemsParamType": {
      "type": "string",
      "enum": [
        "conf"
      ],
      "default": "conf"
    },
    "ItemsSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        }
      }
    },
    "MysqlBackupItem": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/MysqlBackupItemMetadata"
        },
        "spec": {
          "$ref": "#/definitions/CreateMysqlBackupReq"
        },
        "status": {
          "$ref": "#/definitions/MysqlBackupItemStatus"
        }
      }
    },
    "MysqlBackupItemMetadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "MysqlBackupItemStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/MysqlBackupItemStatusStatus"
        },
        "message": {
          "type": "string"
        },
        "backupUrl": {
          "type": "string"
        },
        "backupType": {
          "$ref": "#/definitions/MysqlBackupItemStatusBackupType"
        },
        "backupMethod": {
          "$ref": "#/definitions/MysqlBackupItemStatusBackupMethod"
        },
        "completionTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "MysqlBackupItemStatusBackupMethod": {
      "type": "string",
      "enum": [
        "Manual",
        "Auto"
      ],
      "default": "Manual"
    },
    "MysqlBackupItemStatusBackupType": {
      "type": "string",
      "enum": [
        "Full",
        "Incremental"
      ],
      "default": "Full"
    },
    "MysqlBackupItemStatusStatus": {
      "type": "string",
      "enum": [
        "Running",
        "Failed",
        "Succeeded"
      ],
      "default": "Running"
    },
    "MysqlClusterItem": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/MysqlClusterItemMetadata"
        },
        "spec": {
          "$ref": "#/definitions/CreateMysqlReq"
        },
        "status": {
          "$ref": "#/definitions/MysqlClusterItemStatus"
        }
      },
      "title": "generate by https://json2pb.vercel.app"
    },
    "MysqlClusterItemMetadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "MysqlClusterItemStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "podsAreReadyNum": {
          "type": "integer",
          "format": "int32"
        },
        "webManagerAddr": {
          "type": "string"
        },
        "clusterIPs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isAutoBackupEnabled": {
          "type": "boolean"
        },
        "serviceAddr": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/commonCommonItemStatus"
        },
        "isControl": {
          "type": "boolean"
        },
        "secondsBehindMaster": {
          "type": "number",
          "format": "float"
        },
        "cpuUtilization": {
          "type": "number",
          "format": "float"
        },
        "memoryUtilization": {
          "type": "number",
          "format": "float"
        },
        "restoreInitialStatus": {
          "$ref": "#/definitions/MysqlClusterItemStatusRestoreInitialStatus",
          "title": "恢复初始化是否成功"
        }
      }
    },
    "MysqlClusterItemStatusRestoreInitialStatus": {
      "type": "string",
      "enum": [
        "Unknown",
        "Running",
        "Failed",
        "Succeeded"
      ],
      "default": "Unknown"
    },
    "Node": {
      "type": "object",
      "properties": {
        "serverUuid": {
          "type": "string"
        },
        "upstreamServerUuid": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/RoleType"
        },
        "podName": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "podStatus": {
          "$ref": "#/definitions/PodStatus"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "cpuLimit": {
          "type": "string"
        },
        "cpuRequest": {
          "type": "string"
        },
        "memoryLimit": {
          "type": "string"
        },
        "memoryRequest": {
          "type": "string"
        },
        "totalContainer": {
          "type": "integer",
          "format": "int32"
        },
        "totalContainerReady": {
          "type": "integer",
          "format": "int32"
        },
        "gtidPurged": {
          "type": "string"
        },
        "gtidExecuted": {
          "type": "string"
        },
        "lagBehindUpstream": {
          "type": "string",
          "format": "int64"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonOwnerReference"
          }
        },
        "cluster": {
          "type": "string"
        },
        "workspaceAlias": {
          "type": "string"
        }
      }
    },
    "ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        }
      },
      "description": "ObjectReference contains enough information to let you inspect or modify the\nreferred object."
    },
    "PermissionsType": {
      "type": "string",
      "enum": [
        "None",
        "GetInstance",
        "CreateInstance",
        "UpdateInstance",
        "DeleteInstance",
        "GetMetric",
        "GetInstanceLog",
        "GetConfig",
        "UpdateConfig",
        "GetBackup",
        "CreateBackup",
        "UpdateBackup",
        "DeleteBackup",
        "GetBackupConf",
        "CreateBackupConf",
        "UpdateBackupConf",
        "DeleteBackupConf",
        "GetTemplate",
        "CreateTemplate",
        "UpdateTemplate",
        "DeleteTemplate",
        "GetUserPassword",
        "ExportTemplate",
        "ImportTemplate"
      ],
      "default": "None",
      "title": "这个顺序和 GetPermissionsListResp.Permissions 一样，可以复制过来, 只保留顺序。不能打乱顺序,第一个永远是 None"
    },
    "PodCommonCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PodCommonConditionStatus"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PodCommonConditionStatus": {
      "type": "string",
      "enum": [
        "PodConditionStatusUnknown",
        "PodConditionStatusTrue",
        "PodConditionStatusFalse"
      ],
      "default": "PodConditionStatusUnknown"
    },
    "PodCommonPodPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Unknown",
        "Pending",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": " - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system)."
    },
    "PodStatus": {
      "type": "string",
      "enum": [
        "PodStatus_UNSPECIFIED",
        "PodStatus_Unknown",
        "PodStatus_Pending",
        "PodStatus_Running",
        "PodStatus_Succeeded",
        "PodStatus_Failed",
        "PodStatus_Terminating"
      ],
      "default": "PodStatus_UNSPECIFIED",
      "description": " - PodStatus_Terminating: When a Pod is being deleted, it is shown as Terminating by some kubectl commands."
    },
    "Property": {
      "type": "object"
    },
    "RestartInstanceResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "RoleType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Master",
        "Replica",
        "PRIMARY",
        "SECONDARY"
      ],
      "default": "Unknown"
    },
    "SetMysqlBackupSecretReq": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: v:\"update|min:1#RBAC error|choose workspace_id!\""
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "SetMysqlBackupSecretResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "create message"
        }
      }
    },
    "Status": {
      "type": "string",
      "enum": [
        "Failed",
        "Running",
        "Creating",
        "MgrOnline",
        "MgrRecovering",
        "MgrError",
        "MgrOffline",
        "MgrNotManaged",
        "MgrUnmanaged",
        "MgrUnreachable",
        "MgrUnknown"
      ],
      "default": "Failed"
    },
    "StorageConfigItem": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/CreateStorageConfigReq"
        },
        "status": {
          "$ref": "#/definitions/StorageConfigItemStorageConfigStatus"
        }
      }
    },
    "StorageConfigItemStorageConfigStatus": {
      "type": "object",
      "properties": {
        "lastUpdateTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "TemplateConfigItemValueType": {
      "type": "string",
      "enum": [
        "String",
        "SingleSelection",
        "MultiString"
      ],
      "default": "String"
    },
    "TenantItem": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/TenantItemCreateMinioReq"
        },
        "status": {
          "$ref": "#/definitions/TenantItemStatus"
        }
      }
    },
    "TenantItemCreateMinioReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        }
      }
    },
    "TenantItemStatus": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/commonCommonItemStatus",
          "title": "Status status= 1;\nint32 pods_are_ready_num=2;\nstring web_manager_addr=3;\nrepeated string cluster_i_ps=4;\nstring service_addr=6;"
        }
      }
    },
    "UpdateMysqlBackupConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdateMysqlConfReq": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "@inject_tag: v:\"update|required#RBAC error|choose clusterName!\""
        },
        "namespace": {
          "type": "string",
          "title": "@inject_tag: v:\"required#choose Namespace\""
        },
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"required#input name!\""
        },
        "confItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateTemplateConfigItem"
          },
          "title": "废弃,不再使用\n string conf=4;"
        },
        "reloadFromConfTemplateName": {
          "type": "string"
        },
        "instanceType": {
          "$ref": "#/definitions/InstanceType"
        }
      }
    },
    "UpdateMysqlConfResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdateMysqlParamsResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdateStorageConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "commonAccessWhitelist": {
      "type": "object",
      "properties": {
        "internals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessWhitelistInternal"
          }
        },
        "externals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessWhitelistExternal"
          }
        }
      }
    },
    "commonAffinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/commonNodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/definitions/commonPodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/commonPodAntiAffinity"
        }
      }
    },
    "commonClusterStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "Unknown",
        "Creating",
        "Running",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "default": "UNSPECIFIED"
    },
    "commonCommonItemStatus": {
      "type": "object",
      "properties": {
        "serviceAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "webManagerAddress": {
          "type": "string"
        },
        "webLogAddress": {
          "type": "string"
        },
        "avgPvAllocatedInGb": {
          "type": "number",
          "format": "double"
        },
        "avgPvUsedInGb": {
          "type": "number",
          "format": "double"
        },
        "cpuUtilization": {
          "type": "number",
          "format": "double"
        },
        "memoryUtilization": {
          "type": "number",
          "format": "double"
        },
        "clusterStatus": {
          "$ref": "#/definitions/commonClusterStatus"
        }
      },
      "description": "CommonItemStatus define CR(MysqlCluster/Tenant...) common status."
    },
    "commonContainerState": {
      "type": "object",
      "properties": {
        "waiting": {
          "$ref": "#/definitions/commonContainerStateWaiting",
          "description": "ContainerStateWaiting is a waiting state of a container."
        },
        "running": {
          "$ref": "#/definitions/commonContainerStateRunning",
          "description": "ContainerStateRunning indicates a currently running container."
        },
        "terminated": {
          "$ref": "#/definitions/commonContainerStateTerminated",
          "description": "ContainerStateTerminated indicates a container that ran and completed\n(\"stopped\" in other contexts, although a created container is technically\nalso \"stopped\")."
        }
      }
    },
    "commonContainerStateRunning": {
      "type": "object",
      "properties": {
        "startedAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "ContainerStateRunning indicates a currently running container."
    },
    "commonContainerStateTerminated": {
      "type": "object",
      "properties": {
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "Container exit code."
        },
        "signal": {
          "type": "integer",
          "format": "int32",
          "description": "Signal defines a signal that can trigger eviction of pods on a node."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "The container terminated information."
        },
        "startedAt": {
          "type": "string",
          "format": "int64",
          "description": "The container created time."
        },
        "finishedAt": {
          "type": "string",
          "format": "int64",
          "description": "The container terminated time."
        }
      },
      "description": "ContainerStateExited indicates a container that ran\nand completed (\"stopped\" in other contexts, although a created container is\ntechnically also \"stopped\")."
    },
    "commonContainerStateWaiting": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "(brief) reason the container is not yet running.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "Message regarding why the container is not yet running.\n+optional"
        }
      },
      "description": "ContainerStateWaiting represents 'Waiting' container state."
    },
    "commonContainerStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name.\nCannot be updated."
        },
        "state": {
          "$ref": "#/definitions/commonContainerState",
          "title": "Details about the container's current condition.\n+optional"
        }
      },
      "description": "ContainerStatus represents the container status."
    },
    "commonExternalTrafficPolicy": {
      "type": "string",
      "enum": [
        "Cluster",
        "Local"
      ],
      "default": "Cluster"
    },
    "commonLBTyp": {
      "type": "string",
      "enum": [
        "MetalLB",
        "Others"
      ],
      "default": "MetalLB"
    },
    "commonLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonLabelSelectorRequirement"
          }
        }
      }
    },
    "commonLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "string",
          "title": "Operator valid string: In, NotIn, Exists, DoesNotExist"
        }
      }
    },
    "commonNodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/commonNodeSelector"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonPreferredSchedulingTerm"
          }
        }
      }
    },
    "commonNodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonNodeSelectorTerm"
          }
        }
      }
    },
    "commonNodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "string",
          "title": "Operator valid string: In, NotIn, Exists, DoesNotExist, Gt, Lt"
        }
      }
    },
    "commonNodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonNodeSelectorRequirement"
          }
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonNodeSelectorRequirement"
          }
        }
      }
    },
    "commonOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "controller": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "commonPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "commonPodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonPodAffinityTerm"
          }
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonWeightedPodAffinityTerm"
          }
        }
      }
    },
    "commonPodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/commonLabelSelector"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topologyKey": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/commonLabelSelector"
        }
      }
    },
    "commonPodAntiAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonPodAffinityTerm"
          }
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonWeightedPodAffinityTerm"
          }
        }
      }
    },
    "commonPodCommon": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/PodCommonPodPhase"
        },
        "ip": {
          "type": "string"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "cpuUsage": {
          "type": "number",
          "format": "double"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double"
        },
        "memoryUsage": {
          "type": "number",
          "format": "double"
        },
        "memoryLimit": {
          "type": "number",
          "format": "double"
        },
        "pvUsedInGb": {
          "type": "number",
          "format": "double"
        },
        "pvAllocatedInGb": {
          "type": "number",
          "format": "double"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodCommonCondition"
          }
        },
        "containersName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonOwnerReference"
          }
        },
        "initContainersName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "initContainersStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonContainerStatus"
          }
        },
        "containersStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonContainerStatus"
          }
        },
        "podStatus": {
          "type": "string"
        }
      }
    },
    "commonPreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "preference": {
          "$ref": "#/definitions/commonNodeSelectorTerm"
        }
      }
    },
    "commonServiceType": {
      "type": "string",
      "enum": [
        "ClusterIP",
        "NodePort",
        "LoadBalancer"
      ],
      "default": "ClusterIP"
    },
    "commonWeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/commonPodAffinityTerm"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "templateCreateTemplateConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "templateDeleteTemplateConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "templateGetTemplateConfigListReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "templateGetTemplateConfigListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateGetTemplateConfigReq"
          }
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "templateGetTemplateConfigReq": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "sortDir": {
          "$ref": "#/definitions/templateGetTemplateConfigReqSortDir"
        },
        "sortBy": {
          "type": "string"
        },
        "searchKey": {
          "type": "string"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"required#choose name!\""
        },
        "version": {
          "type": "string"
        },
        "templateType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "templateInstanceType": {
          "$ref": "#/definitions/templateTemplateInstanceType"
        }
      }
    },
    "templateGetTemplateConfigReqSortDir": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "templateGetTemplateConfigResp": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/templateUpdateTemplateConfigReq"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination"
        }
      }
    },
    "templateGetTemplateConfigStringResp": {
      "type": "object",
      "properties": {
        "conf": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "templateGetTemplateConfigVersionsResp": {
      "type": "object",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "templateGetTemplateInstanceTypeListResp": {
      "type": "object",
      "properties": {
        "type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateTemplateInstanceType"
          }
        }
      }
    },
    "templateTemplateConfigItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "default": {
          "type": "string"
        },
        "current": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isNeedRestart": {
          "type": "boolean"
        },
        "valueType": {
          "$ref": "#/definitions/TemplateConfigItemValueType"
        },
        "valueRemarksZh": {
          "type": "string"
        },
        "valueRemarksEn": {
          "type": "string"
        },
        "updateTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "templateTemplateInstanceType": {
      "type": "string",
      "enum": [
        "MysqlMasterReplica",
        "RedisStandalone",
        "RedisFailover",
        "RedisCluster",
        "KafkaConfig",
        "MysqlMgrConfig",
        "MongodbConfig",
        "PostgresqlConfig",
        "RabbitmqConfig"
      ],
      "default": "MysqlMasterReplica",
      "title": "实例类型"
    },
    "templateUpdateTemplateConfigReq": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: v:\"configUpdate#RBAC error\""
        },
        "name": {
          "type": "string",
          "title": "@inject_tag: v:\"required#choose name!\""
        },
        "version": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "templateType": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateTemplateConfigItem"
          }
        },
        "conf": {
          "type": "string"
        }
      }
    },
    "templateUpdateTemplateConfigResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "templateUpdateTemplateConfigToItemResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateTemplateConfigItem"
          }
        }
      }
    },
    "v1alpha1AlertSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1alpha1TargetType"
        },
        "target": {
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/v1alpha1Severity"
        },
        "value": {
          "type": "string"
        },
        "notifyResponse": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startAt": {
          "type": "string",
          "format": "int64"
        },
        "updateAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1Severity": {
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "CRITICAL",
        "WARNING",
        "INFO"
      ],
      "default": "SEVERITY_UNSPECIFIED"
    },
    "v1alpha1TargetType": {
      "type": "string",
      "enum": [
        "TARGET_TYPE_UNSPECIFIED",
        "GLOBAL",
        "CLUSTER",
        "NAMESPACE",
        "NODE",
        "DEPLOYMENT",
        "STATEFULSET",
        "DAEMONSET",
        "POD"
      ],
      "default": "TARGET_TYPE_UNSPECIFIED"
    }
  }
}
