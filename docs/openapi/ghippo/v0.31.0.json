{
  "swagger": "2.0",
  "info": {
    "title": "全局管理",
    "version": "v0.31.0"
  },
  "tags": [
    {
      "name": "About"
    },
    {
      "name": "Audit"
    },
    {
      "name": "BatchAudits"
    },
    {
      "name": "Client"
    },
    {
      "name": "Account"
    },
    {
      "name": "FeatureGate"
    },
    {
      "name": "GProducts"
    },
    {
      "name": "GProductLicenses"
    },
    {
      "name": "Group"
    },
    {
      "name": "IDP"
    },
    {
      "name": "KeycloakEvent"
    },
    {
      "name": "Login"
    },
    {
      "name": "LoginPage"
    },
    {
      "name": "Message"
    },
    {
      "name": "Oauth2"
    },
    {
      "name": "OIDC"
    },
    {
      "name": "Openapi"
    },
    {
      "name": "ProductNavigator"
    },
    {
      "name": "Publish"
    },
    {
      "name": "Role"
    },
    {
      "name": "SecurityPolicy"
    },
    {
      "name": "SmtpSetting"
    },
    {
      "name": "Theme"
    },
    {
      "name": "TopNavigator"
    },
    {
      "name": "Users"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Workspace"
    },
    {
      "name": "Ldap"
    },
    {
      "name": "Audit"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/ghippo.io/v1alpha1/.well-known/openid-configuration": {
      "get": {
        "operationId": "OIDC_WellKnown",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oidcWellKnownResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "OIDC"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/about/developers": {
      "get": {
        "operationId": "About_ListDevelopers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/aboutListDevelopersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "About"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/about/opensources": {
      "get": {
        "operationId": "About_ListOpenSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/aboutListOpenSourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "page: 当前页码，默认值为1",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "每页数量,默认为 10",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "About"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/about/versions": {
      "get": {
        "operationId": "About_ListGProductVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/aboutListGProductVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "About"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/audits/batch": {
      "post": {
        "operationId": "BatchAudits_BatchInsertAudits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/batchauditBatchInsertAuditsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/batchauditBatchInsertAuditsRequest"
            }
          }
        ],
        "tags": [
          "BatchAudits"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/audits/clear": {
      "get": {
        "operationId": "Audit_GetAutoClearAuditTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetAutoClearAuditTimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/audits/external": {
      "get": {
        "summary": "来自外部传递进来的审计日志，用于不经过apiserver的请求，例如直接请求keycloak的请求，由前端埋点调用",
        "operationId": "Audit_ExternalAudit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditExternalAuditResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "externalType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "loginFailed",
              "forgetPassword",
              "resetPassword"
            ],
            "default": "loginFailed"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/audits/limit-range": {
      "get": {
        "operationId": "Audit_GetLimitRangeTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetLimitRangeTimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/audits/reports/resources": {
      "get": {
        "operationId": "Audit_GetAuditResourceReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetAuditResourceReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/audits/reports/users": {
      "get": {
        "operationId": "Audit_GetAuditUserReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetAuditUserReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/auth-token": {
      "get": {
        "operationId": "Openapi_AuthToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditAuthTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Openapi"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/authenticate-with-password": {
      "post": {
        "summary": "gRPC 调用，不暴露给 OpenAPI",
        "operationId": "Login_AuthenticateWithPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginAuthenticateWithPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginAuthenticateWithPasswordRequest"
            }
          }
        ],
        "tags": [
          "Login"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/certs": {
      "get": {
        "operationId": "Openapi_Certs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditCertsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Openapi"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/clients": {
      "get": {
        "operationId": "Client_ListClients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clientListClientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Client"
        ]
      },
      "post": {
        "operationId": "Client_CreateClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clientCreateClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clientCreateClientRequest"
            }
          }
        ],
        "tags": [
          "Client"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/clients/{id}": {
      "get": {
        "operationId": "Client_GetClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clientGetClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Client"
        ]
      },
      "delete": {
        "operationId": "Client_DeleteClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clientDeleteClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Client"
        ]
      },
      "put": {
        "operationId": "Client_UpdateClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clientUpdateClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "baseUrl": {
                  "type": "string",
                  "title": "repeated string redirect_uris = 4 [(validate.rules).repeated.min_items = 1];"
                }
              }
            }
          }
        ],
        "tags": [
          "Client"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user": {
      "get": {
        "operationId": "Account_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1currentuserGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/accesstoken": {
      "post": {
        "operationId": "Account_CreateAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserCreateAccessTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currentuserCreateAccessTokenRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/accesstokens": {
      "get": {
        "operationId": "Account_ListAccessTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserListAccessTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/accesstokens/{id}": {
      "delete": {
        "operationId": "Account_DeleteAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserDeleteAccessTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/email": {
      "put": {
        "operationId": "Account_UpdateEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserUpdateEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currentuserUpdateEmailRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/global-permissions": {
      "get": {
        "operationId": "Account_GetGlobalPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserGetGlobalPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/language": {
      "put": {
        "operationId": "Account_UpdateLanguage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserUpdateLanguageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currentuserUpdateLanguageRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/password": {
      "put": {
        "operationId": "Account_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserUpdatePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currentuserUpdatePasswordRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/password-description": {
      "get": {
        "operationId": "Account_PasswordDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserPasswordDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/set-password": {
      "put": {
        "operationId": "Account_SetCurrentUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserSetCurrentUserPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currentuserSetCurrentUserPasswordRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/sshkeys": {
      "get": {
        "operationId": "Account_ListSSHKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserListSSHKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "post": {
        "operationId": "Account_CreateSSHKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserCreateSSHKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/currentuserCreateSSHKeyRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/current-user/sshkeys/{sshkeyId}": {
      "delete": {
        "operationId": "Account_DeleteSSHKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserDeleteSSHKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sshkeyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "put": {
        "operationId": "Account_UpdateSSHKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/currentuserUpdateSSHKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sshkeyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sshKeyName": {
                  "type": "string"
                },
                "publicKey": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/exclusiveresource-types": {
      "get": {
        "operationId": "Workspace_ListExclusiveResourceTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListExclusiveResourceTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/feature-gate": {
      "get": {
        "operationId": "FeatureGate_ListFeatureGates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/feature_gateListFeatureGatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "FeatureGate"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folderrolenames": {
      "get": {
        "operationId": "Role_ListFolderRoleNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListFolderRoleNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folderroles/{name}/members-folders": {
      "get": {
        "operationId": "Role_ListMembersFoldersByFolderRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListMembersFoldersByFolderRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders": {
      "get": {
        "operationId": "Workspace_ListFolders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListFoldersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      },
      "post": {
        "operationId": "Workspace_CreateFolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceCreateFolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workspaceCreateFolderRequest"
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders-tree": {
      "get": {
        "operationId": "Workspace_ListFolderTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListFolderTreeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}": {
      "get": {
        "operationId": "Workspace_GetFolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceGetFolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      },
      "delete": {
        "summary": "TODO: sub folder删不删？",
        "operationId": "Workspace_DeleteFolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceDeleteFolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      },
      "put": {
        "operationId": "Workspace_UpdateFolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceUpdateFolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string",
                  "title": "string name = 1 [(validate.rules).string.min_len = 1];"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/authorize": {
      "post": {
        "operationId": "Workspace_Authorize",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceAuthorizeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "memberName": {
                  "type": "string",
                  "title": "string role_name = 2;"
                },
                "memberType": {
                  "type": "string"
                },
                "memberId": {
                  "type": "string"
                },
                "roleNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/deauthorize": {
      "put": {
        "operationId": "Workspace_Deauthorize",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceDeauthorizeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "roleName": {
                  "type": "string"
                },
                "memberName": {
                  "type": "string"
                },
                "memberType": {
                  "type": "string"
                },
                "memberId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/groups": {
      "get": {
        "operationId": "Workspace_FolderListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceFolderListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/members-roles": {
      "get": {
        "operationId": "Workspace_ListMembersRolesByFolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListMembersRolesByFolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "memberName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/permissions": {
      "get": {
        "operationId": "Workspace_FolderListPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceFolderListPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/reauthorize": {
      "put": {
        "operationId": "Workspace_Reauthorize",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceReauthorizeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oldRoleName": {
                  "type": "string"
                },
                "newRoleName": {
                  "type": "string"
                },
                "memberName": {
                  "type": "string"
                },
                "memberType": {
                  "type": "string"
                },
                "memberId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/folders/{folderId}/users": {
      "get": {
        "operationId": "Workspace_FolderListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceFolderListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "每页条数",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "当前页",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/gproduct-licenses": {
      "get": {
        "operationId": "GProductLicenses_ListGProductLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseListGProductLicensesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GProductLicenses"
        ]
      },
      "put": {
        "operationId": "GProductLicenses_UpdateGProductLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseUpdateGProductLicensesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gproductlicenseUpdateGProductLicensesRequest"
            }
          }
        ],
        "tags": [
          "GProductLicenses"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/gproduct-licenses/esn": {
      "get": {
        "operationId": "GProductLicenses_GetGProductLicensesESN",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseGetGProductLicensesESNResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GProductLicenses"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/gproduct-licenses/over-quota": {
      "get": {
        "operationId": "GProductLicenses_GetGProductLicensesOverQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseGetGProductLicensesOverQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GProductLicenses"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/gproduct-licenses/yaml": {
      "get": {
        "operationId": "GProductLicenses_GetGProductLicensesYaml",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseGetGProductLicenseYamlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GProductLicenses"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/gproduct-licenses/{id}": {
      "get": {
        "operationId": "GProductLicenses_GetGProductLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseGetGProductLicensesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GProductLicenses"
        ]
      },
      "delete": {
        "operationId": "GProductLicenses_DeleteGProductLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductlicenseDeleteProductLicensesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GProductLicenses"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/gproducts": {
      "get": {
        "operationId": "GProducts_ListGProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gproductListGProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GProducts"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/groups": {
      "get": {
        "operationId": "Group_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "post": {
        "operationId": "Group_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupCreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/groupCreateGroupRequest"
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/groups/{id}": {
      "get": {
        "operationId": "Group_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupGetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "delete": {
        "operationId": "Group_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupDeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "operationId": "Group_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupUpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/groups/{id}/members": {
      "get": {
        "operationId": "Group_GroupMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/groups/{id}/members/{userId}": {
      "delete": {
        "operationId": "Group_DeleteUserFromGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupDeleteUserFromGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "post": {
        "operationId": "Group_AddUserToGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupAddUserToGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/groups/{id}/roles": {
      "get": {
        "operationId": "Group_ListGroupRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupListGroupRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "description": "role type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "authorized",
            "description": "是否授权",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "operationId": "Group_UpdateGroupRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupUpdateGroupRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "removeRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/groups/{id}/subjects": {
      "get": {
        "operationId": "Group_ListGroupSubjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupListGroupSubjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/idp": {
      "get": {
        "operationId": "IDP_ListIDPs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpListIDPsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "IDP"
        ]
      },
      "post": {
        "operationId": "IDP_CreateIDP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpCreateIDPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/idpCreateIDPRequest"
            }
          }
        ],
        "tags": [
          "IDP"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/idp/wellknown-url": {
      "get": {
        "operationId": "IDP_GetWellKnownUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpGetWellKnownUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "IDP"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/idp/{alias}": {
      "get": {
        "operationId": "IDP_GetIDP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpGetIDPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IDP"
        ]
      },
      "delete": {
        "operationId": "IDP_DeleteIDP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpDeleteIDPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IDP"
        ]
      },
      "put": {
        "operationId": "IDP_UpdateIDP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpUpdateIDPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string"
                },
                "clientId": {
                  "type": "string"
                },
                "clientSecret": {
                  "type": "string"
                },
                "clientAuthentications": {
                  "$ref": "#/definitions/idpClientAuthentications"
                },
                "providerId": {
                  "$ref": "#/definitions/v1alpha1idpProviderType"
                },
                "authorizationUrl": {
                  "type": "string"
                },
                "userInfoUrl": {
                  "type": "string"
                },
                "tokenUrl": {
                  "type": "string"
                },
                "logoutUrl": {
                  "type": "string"
                },
                "enableAutoLinkFlow": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "IDP"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/idp/{alias}/redirect-url": {
      "get": {
        "operationId": "IDP_GetRedirectUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpGetRedirectUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IDP"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/keycloak-event": {
      "post": {
        "operationId": "KeycloakEvent_KeycloakEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/keycloakeventKeycloakEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/keycloakeventKeycloakEventRequest"
            }
          }
        ],
        "tags": [
          "KeycloakEvent"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/login": {
      "get": {
        "operationId": "Login_RedirectLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginLoginGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "callbackUrl",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Login"
        ]
      },
      "post": {
        "operationId": "Login_OIDCLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginLoginPostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginLoginPostRequest"
            }
          }
        ],
        "tags": [
          "Login"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/login-page/info": {
      "get": {
        "operationId": "LoginPage_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginpageGetLoginPageInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "LoginPage"
        ]
      },
      "put": {
        "operationId": "LoginPage_UpdateInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginpageUpdateLoginPageInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginpageUpdateLoginPageInfoRequest"
            }
          }
        ],
        "tags": [
          "LoginPage"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/login-page/reset": {
      "post": {
        "operationId": "LoginPage_ResetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginpageResetLoginPageInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "LoginPage"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/login-page/version": {
      "get": {
        "operationId": "LoginPage_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginpageGetLoginPageVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "LoginPage"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/logout": {
      "delete": {
        "operationId": "Login_OIDCLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Login"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/messages": {
      "get": {
        "operationId": "Message_ListMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageListMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "unreadCount",
            "description": "是否只返回统计未读数量",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "read",
            "description": "是否只返回已读或未读，传\"read\"或\"unread\"来区分，不传返回已读和未读的消息",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "read",
              "unread"
            ],
            "default": "all"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/messages/count": {
      "get": {
        "operationId": "Message_GetMessagesCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetMessagesCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/messages/delete": {
      "post": {
        "operationId": "Message_DeleteMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageDeleteMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageDeleteMessagesRequest"
            }
          }
        ],
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/messages/system/system-message": {
      "get": {
        "operationId": "Message_GetSystemMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetSystemMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/messages/toggle-unread": {
      "get": {
        "operationId": "Message_ToggleUnreadMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageToggleUnreadMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "next",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/messages/{id}": {
      "get": {
        "operationId": "Message_GetMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/oauth2": {
      "get": {
        "operationId": "Oauth2_GetOauth2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oauthGetOauth2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Oauth2"
        ]
      },
      "delete": {
        "operationId": "Oauth2_DeleteOauth2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oauthDeleteOauth2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "providerType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "wechatwork"
            ],
            "default": "wechatwork"
          }
        ],
        "tags": [
          "Oauth2"
        ]
      },
      "post": {
        "operationId": "Oauth2_CreateOauth2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oauthCreateOauth2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/oauthCreateOauth2Request"
            }
          }
        ],
        "tags": [
          "Oauth2"
        ]
      },
      "put": {
        "operationId": "Oauth2_UpdateOauth2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oauthUpdateOauth2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/oauthUpdateOauth2Request"
            }
          }
        ],
        "tags": [
          "Oauth2"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/oauth2/redirect-domain": {
      "get": {
        "operationId": "Oauth2_GetOauth2RedirectDomain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oauthGetOauth2RedirectDomainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Oauth2"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/oidc/ghippo-client-config": {
      "get": {
        "operationId": "OIDC_GhippoClientConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oidcGhippoClientConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "OIDC"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/oidc/logout": {
      "get": {
        "operationId": "OIDC_RedirectFrontendLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oidcRedirectFrontendLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "OIDC"
        ]
      },
      "delete": {
        "operationId": "OIDC_OIDCLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oidcOIDCLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "OIDC"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/oidc/token": {
      "post": {
        "operationId": "OIDC_OIDCToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oidcOIDCTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/oidcOIDCTokenRequest"
            }
          }
        ],
        "tags": [
          "OIDC"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/oidc/userinfo": {
      "get": {
        "operationId": "OIDC_OIDCUserInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/oidcOIDCUserInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "OIDC"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/permissions": {
      "get": {
        "operationId": "Role_ListAllPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListAllPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/platformroles/{name}/members": {
      "get": {
        "operationId": "Role_ListMembersByPlatformRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListMembersByPlatformRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/product-nav/info": {
      "get": {
        "operationId": "ProductNavigator_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/productnavProductNavResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ProductNavigator"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/publish/messages": {
      "post": {
        "operationId": "Publish_PublishMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/publishPublishMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/publishPublishMessageRequest"
            }
          }
        ],
        "tags": [
          "Publish"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/read-messages": {
      "post": {
        "operationId": "Message_SetReadMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageSetReadMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageSetReadMessagesRequest"
            }
          }
        ],
        "tags": [
          "Message"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/refresh-token": {
      "post": {
        "operationId": "Login_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "Login"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/resourcequota-types": {
      "get": {
        "operationId": "Workspace_ListResourceQuotaTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListResourceQuotaTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/roles": {
      "get": {
        "operationId": "Role_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "每页条数",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "当前页",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "query_all_role_type",
              "query_system",
              "query_custom"
            ],
            "default": "query_all_role_type"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "query_all_auth_scope",
              "query_platform",
              "query_folder",
              "query_workspace"
            ],
            "default": "query_all_auth_scope"
          }
        ],
        "tags": [
          "Role"
        ]
      },
      "post": {
        "operationId": "Role_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleCreateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/roleCreateRoleRequest"
            }
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/roles/check-role-name/{name}": {
      "get": {
        "operationId": "Role_CheckRoleName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleCheckRoleNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/roles/role-member-count/{name}": {
      "get": {
        "operationId": "Role_GetRoleMemberCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleGetRoleMemberCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/roles/{name}": {
      "get": {
        "operationId": "Role_GetRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleGetRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      },
      "delete": {
        "operationId": "Role_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleDeleteRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      },
      "put": {
        "operationId": "Role_UpdateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleUpdateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "globalRoleType type = 2;"
                },
                "perms": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/rolePermission"
                  },
                  "title": "AuthScope scope = 3;"
                }
              }
            }
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/accountlockout": {
      "get": {
        "operationId": "SecurityPolicy_GetAccountLockoutPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetAccountLockoutPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetAccountLockoutPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetAccountLockoutPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetAccountLockoutPolicyRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/logout": {
      "get": {
        "operationId": "SecurityPolicy_GetLogoutPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetLogoutPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetLogoutPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetLogoutPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetLogoutPolicyRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/mfa": {
      "get": {
        "operationId": "SecurityPolicy_GetMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetMFAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetMFAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetMFARequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/password": {
      "get": {
        "operationId": "SecurityPolicy_GetPasswordPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetPasswordPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetPasswordPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetPasswordPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetPasswordPolicyRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/sessionlimit/system": {
      "get": {
        "operationId": "SecurityPolicy_GetSystemSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetSystemSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetSystemSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetSystemSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetSystemSessionLimitRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/sessionlimit/time": {
      "get": {
        "operationId": "SecurityPolicy_GetTimeSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetTimeSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetTimeSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetTimeSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetTimeSessionLimitRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/sessionlimit/user": {
      "get": {
        "operationId": "SecurityPolicy_GetUserSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetUserSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetUserSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetUserSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetUserSessionLimitRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/securitypolicy/sessiontimeout": {
      "get": {
        "operationId": "SecurityPolicy_GetSessionTimeout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicyGetSessionTimeoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SecurityPolicy"
        ]
      },
      "put": {
        "operationId": "SecurityPolicy_SetSessionTimeout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/securitypolicySetSessionTimeoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitypolicySetSessionTimeoutRequest"
            }
          }
        ],
        "tags": [
          "SecurityPolicy"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/session-limit": {
      "post": {
        "operationId": "Login_CheckSessionLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginCheckSessionLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginCheckSessionLimitRequest"
            }
          }
        ],
        "tags": [
          "Login"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/sharedresource-types": {
      "get": {
        "operationId": "Workspace_ListSharedResourceTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListSharedResourceTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/smtp-setting": {
      "get": {
        "operationId": "SmtpSetting_GetSmtpServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/smtpsettingGetSmtpServerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SmtpSetting"
        ]
      },
      "put": {
        "operationId": "SmtpSetting_SetSmtpServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/smtpsettingSetSmtpServerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpsettingSetSmtpServerRequest"
            }
          }
        ],
        "tags": [
          "SmtpSetting"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/smtp-setting/conn-test": {
      "post": {
        "operationId": "SmtpSetting_SmtpServerConnTest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/smtpsettingSmtpConnTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpsettingSmtpConnTestRequest"
            }
          }
        ],
        "tags": [
          "SmtpSetting"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/footer-theme": {
      "get": {
        "operationId": "Theme_GetFooterThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeGetFooterThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      },
      "post": {
        "operationId": "Theme_SetFooterThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeSetFooterThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/themeSetFooterThemeConfigRequest"
            }
          }
        ],
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/footer/reset": {
      "post": {
        "operationId": "Theme_ResetFooterThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeResetFooterThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/login_page": {
      "get": {
        "operationId": "Theme_GetLoginThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeGetLoginThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      },
      "post": {
        "operationId": "Theme_SetLoginThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeSetLoginThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/themeSetLoginThemeConfigRequest"
            }
          }
        ],
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/login_page.css": {
      "get": {
        "operationId": "Theme_GetLoginThemeCSS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/login_page/reset": {
      "post": {
        "operationId": "Theme_ResetLoginThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeResetLoginThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/theme": {
      "get": {
        "operationId": "Theme_GetThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeGetThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      },
      "post": {
        "operationId": "Theme_SetThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeSetThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/themeSetThemeConfigRequest"
            }
          }
        ],
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/theme.css": {
      "get": {
        "operationId": "Theme_GetThemeCSS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/themes/theme/reset": {
      "post": {
        "operationId": "Theme_ResetThemeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/themeResetThemeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Theme"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/top-nav": {
      "post": {
        "operationId": "TopNavigator_SetTopNav",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/topnavSetTopNavResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topnavSetTopNavRequest"
            }
          }
        ],
        "tags": [
          "TopNavigator"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/top-nav/info": {
      "get": {
        "operationId": "TopNavigator_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/topnavTopNavResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "TopNavigator"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/top-nav/reset": {
      "post": {
        "operationId": "TopNavigator_ResetTopNav",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/topnavResetTopNavResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "TopNavigator"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/update-quota-check": {
      "post": {
        "operationId": "Workspace_UpdateQuotaCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceUpdateQuotaCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workspaceUpdateQuotaCheckRequest"
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users": {
      "get": {
        "operationId": "Users_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "每页条数",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "当前页",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "Users_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/check-user-email/{username}": {
      "get": {
        "operationId": "Users_CheckUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCheckUserEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/check/{username}": {
      "get": {
        "operationId": "Users_CheckUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCheckUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/username/{username}": {
      "get": {
        "operationId": "Users_GetUserByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1userGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/without-password": {
      "post": {
        "operationId": "Users_CreateUserWithoutPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserWithoutPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreateUserWithoutPasswordRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}": {
      "get": {
        "operationId": "Users_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1userGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "Users_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "Users_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/accesstoken": {
      "post": {
        "operationId": "Users_CreateUserAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserAccessTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "expiredAt": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/accesstokens": {
      "get": {
        "operationId": "Users_ListUserAccessTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUserAccessTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/accesstokens/{aid}": {
      "delete": {
        "operationId": "Users_DeleteUserAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userDeleteUserAccessTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "aid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/groups": {
      "get": {
        "operationId": "Users_ListUserGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUserGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/mfa": {
      "delete": {
        "operationId": "Users_ResetUserMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userResetUserMFAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/password": {
      "put": {
        "operationId": "Users_SetUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userSetUserPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/roles": {
      "get": {
        "operationId": "Users_ListUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUserRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "description": "搜索关键字",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "description": "role type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "authorized",
            "description": "是否授权",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "Users_UpdateUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUpdateUserRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "removeRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{id}/subjects": {
      "get": {
        "operationId": "Users_ListUserSubjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUserSubjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/users/{username}/sshkeys/verify": {
      "post": {
        "operationId": "Users_VerifyUserSSHPublicKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userVerifyUserSSHPublicKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "publicKey": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/webhook": {
      "get": {
        "operationId": "Webhook_ListWebhooksByClientId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookListWebhooksByClientIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Webhook"
        ]
      },
      "post": {
        "operationId": "Webhook_CreateWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookCreateWebhookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhookCreateWebhookRequest"
            }
          }
        ],
        "tags": [
          "Webhook"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/webhook-record": {
      "get": {
        "operationId": "Webhook_ListWebhookRecordsByClientId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookListWebhookRecordsByClientIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "successful",
              "failed"
            ],
            "default": "all"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Webhook"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/webhook-record/{id}": {
      "get": {
        "operationId": "Webhook_GetWebhookRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookGetWebhookRecordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Webhook"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/webhook/{id}": {
      "get": {
        "operationId": "Webhook_GetWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookGetWebhookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Webhook"
        ]
      },
      "delete": {
        "operationId": "Webhook_DeleteWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookDeleteWebhookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Webhook"
        ]
      },
      "put": {
        "operationId": "Webhook_UpdateWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webhookUpdateWebhookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "clientId": {
                  "type": "string"
                },
                "resourceType": {
                  "$ref": "#/definitions/v1alpha1webhookResourceType"
                },
                "action": {
                  "$ref": "#/definitions/webhookAction"
                },
                "url": {
                  "type": "string"
                },
                "method": {
                  "$ref": "#/definitions/webhookMethod"
                },
                "headers": {
                  "type": "string",
                  "title": "map<string, string> headers = 8;"
                },
                "requestParameter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Webhook"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspace-sharedresource-quota": {
      "get": {
        "operationId": "Workspace_GetWorkspaceSharedResourceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceGetWorkspaceSharedResourceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "notFormatted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspace-sharedresource-quota-hard": {
      "put": {
        "operationId": "Workspace_SetQuotaHardForWorkspaceSharedResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceSetQuotaHardForWorkspaceSharedResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workspaceSetQuotaHardForWorkspaceSharedResourceRequest"
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspacerolenames": {
      "get": {
        "operationId": "Role_ListWorkspaceRoleNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListWorkspaceRoleNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaceroles/{name}/members-workspaces": {
      "get": {
        "operationId": "Role_ListMembersWorkspacesByWorkspaceRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roleListMembersWorkspacesByWorkspaceRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces": {
      "get": {
        "operationId": "Workspace_ListWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListWorkspacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      },
      "post": {
        "operationId": "Workspace_CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceCreateWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workspaceCreateWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}": {
      "get": {
        "operationId": "Workspace_GetWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceGetWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      },
      "delete": {
        "summary": "TODO: sub ws删不删？",
        "operationId": "Workspace_DeleteWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceDeleteWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/available-exclusiveresources": {
      "get": {
        "operationId": "Workspace_ListAvailableExclusiveResourcesByWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListAvailableExclusiveResourcesByWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceScope",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/available-sharedresources": {
      "get": {
        "operationId": "Workspace_ListAvailableSharedResourcesByWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListAvailableSharedResourcesByWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/bind-exclusiveresource": {
      "post": {
        "operationId": "Workspace_BindExclusiveResourceToWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceBindExclusiveResourceToWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "resourceScope": {
                  "type": "string"
                },
                "gproduct": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/bind-sharedresource": {
      "post": {
        "operationId": "Workspace_BindSharedResourceToWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceBindSharedResourceToWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "resourceScope": {
                  "type": "string"
                },
                "gproduct": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/bind-sharedresource-setquota": {
      "post": {
        "operationId": "Workspace_BindSharedResourceAndSetQuotaHardToWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceBindSharedResourceAndSetQuotaHardToWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "cluster 资源 resource_scope 为空\nstring resource_scope = 4 [(validate.rules).string.min_len = 1];",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "gproduct": {
                  "type": "string"
                },
                "quotaHard": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/exclusiveresources": {
      "get": {
        "operationId": "Workspace_ListExclusiveResourcesByWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListExclusiveResourcesByWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/members-roles": {
      "get": {
        "operationId": "Workspace_ListMembersRolesByWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListMembersRolesByWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "memberName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/move": {
      "post": {
        "operationId": "Workspace_MoveWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceMoveWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destFolderId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/move-folders": {
      "get": {
        "operationId": "Workspace_MoveWorkspaceFolderList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceMoveWorkspaceFolderListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "folder",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/sharedresource/{resourceName}/quota-types": {
      "get": {
        "operationId": "Workspace_ListWorkspaceShareResourceQuotaTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListWorkspaceShareResourceQuotaTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/sharedresources": {
      "get": {
        "operationId": "Workspace_ListSharedResourcesByWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceListSharedResourcesByWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha1/workspaces/{workspaceId}/unbind-resource": {
      "put": {
        "operationId": "Workspace_UnbindResourceFromWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/workspaceUnbindResourceFromWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "resourceScope": {
                  "type": "string"
                },
                "gproduct": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldap": {
      "post": {
        "operationId": "Ldap_CreateLdap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapCreateLdapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ldapCreateLdapRequest"
            }
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldaps": {
      "get": {
        "operationId": "Ldap_ListLdaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapListLdapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldaps/{id}": {
      "get": {
        "operationId": "Ldap_GetLdap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapGetLdapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Ldap"
        ]
      },
      "delete": {
        "operationId": "Ldap_DeleteLdap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapDeleteLdapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Ldap"
        ]
      },
      "put": {
        "operationId": "Ldap_UpdateLdap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapUpdateLdapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "vendor": {
                  "$ref": "#/definitions/ldapLdapVendor"
                },
                "startTls": {
                  "type": "string",
                  "description": "Encrypts the connection to LDAP using STARTTLS, which will disable connection pooling."
                },
                "connectionUrl": {
                  "type": "string"
                },
                "usersDn": {
                  "type": "string",
                  "title": "Full DN of LDAP tree where your users are. This DN is the parent of LDAP users.\nIt could be for example 'ou=users,dc=example,dc=com' assuming that your typical user will have DN like 'uid=john,ou=users,dc=example,dc=com'"
                },
                "bindDn": {
                  "type": "string",
                  "title": "DN of LDAP admin, which will be used by Keycloak to access LDAP server"
                },
                "bindCredential": {
                  "type": "string",
                  "description": "Password of LDAP admin."
                },
                "userObjectClasses": {
                  "type": "string",
                  "description": "All values of LDAP objectClass attribute for users in LDAP divided by comma.\nFor example: 'inetOrgPerson, organizationalPerson' .\nNewly created Keycloak users will be written to LDAP with all those object classes and existing LDAP user records are found just if they contain all those object classes."
                },
                "usernameLdapAttribute": {
                  "type": "string",
                  "title": "Name of LDAP attribute, which is mapped as Keycloak username. For many LDAP server vendors it can be 'uid'.\nFor Active directory it can be 'sAMAccountName' or 'cn'.\nThe attribute should be filled for all LDAP user records you want to import from LDAP to Keycloak"
                },
                "fullSyncPeriod": {
                  "type": "string",
                  "title": "Period for full synchronization in seconds: -1 手动同步"
                },
                "rdnLdapAttribute": {
                  "type": "string",
                  "description": "Name of the LDAP attribute, which is used as RDN (top attribute) of typical user DN.\nUsually it's the same as the Username LDAP attribute, however it is not required.\nFor example for Active directory, it is common to use 'cn' as RDN attribute when username attribute might be 'sAMAccountName'."
                },
                "uuidLdapAttribute": {
                  "type": "string",
                  "description": "Name of the LDAP attribute, which is used as a unique object identifier (UUID) for objects in LDAP.\nFor many LDAP server vendors, it is 'entryUUID'; however some are different.\nFor example, for Active directory it should be 'objectGUID'.\nIf your LDAP server does not support the notion of UUID, you can use any other attribute that is supposed to be unique among LDAP users in tree.\nFor example 'uid' or 'entryDN'."
                },
                "editMode": {
                  "type": "string",
                  "description": "READ_ONLY is a read-only LDAP store.\nWRITABLE means data will be synced back to LDAP on demand."
                },
                "readTimeout": {
                  "type": "string",
                  "description": "LDAP read timeout in milliseconds. This timeout applies for LDAP read operations."
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "username": {
                  "type": "string"
                },
                "userLdapFilter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldaps/{id}/group": {
      "get": {
        "operationId": "Ldap_GetLdapGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapGetLdapGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Ldap"
        ]
      },
      "post": {
        "operationId": "Ldap_CreateLdapGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapCreateLdapGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupDn": {
                  "type": "string"
                },
                "groupObjectClasses": {
                  "type": "string"
                },
                "groupNameLdapAttribute": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldaps/{id}/sync": {
      "get": {
        "operationId": "Ldap_SyncUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapSyncUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldaps/{ldapId}/group/{id}": {
      "delete": {
        "operationId": "Ldap_DeleteLdapGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapDeleteLdapGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ldapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Ldap"
        ]
      },
      "put": {
        "operationId": "Ldap_UpdateLdapGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapUpdateLdapGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ldapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupDn": {
                  "type": "string"
                },
                "groupObjectClasses": {
                  "type": "string"
                },
                "groupNameLdapAttribute": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/ldaps/{ldapId}/group/{id}/sync": {
      "get": {
        "operationId": "Ldap_SyncLdapGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapSyncLdapGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ldapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/testLdapAuthentication": {
      "post": {
        "operationId": "Ldap_TestLdapAuthentication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapTestLdapAuthenticationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ldapTestLdapAuthenticationRequest"
            }
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha2/testLdapConnection": {
      "post": {
        "operationId": "Ldap_TestLdapConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ldapTestLdapConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ldapTestLdapConnectionRequest"
            }
          }
        ],
        "tags": [
          "Ldap"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits": {
      "get": {
        "operationId": "Audit_ListAudits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditListAuditsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "succeeded",
              "failed"
            ],
            "default": "all"
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "fuzzy",
              "exact"
            ],
            "default": "fuzzy"
          },
          {
            "name": "searchUser",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gproduct",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/clear": {
      "post": {
        "operationId": "Audit_ClearAuditsNow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditClearAuditsNowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auditClearAuditsNowRequest"
            }
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/export": {
      "get": {
        "operationId": "Audit_ExportAudits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gproduct",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "succeeded",
              "failed"
            ],
            "default": "all"
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "fuzzy",
              "exact"
            ],
            "default": "fuzzy"
          },
          {
            "name": "searchUser",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Csv",
              "Excel"
            ],
            "default": "Csv"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/export/uri": {
      "get": {
        "operationId": "Audit_GetExportURI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetExportURIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "module",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "audit",
              "kube_audit"
            ],
            "default": "audit"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/kube": {
      "get": {
        "operationId": "Audit_ListKubeAudits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditListKubeAuditsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "succeeded",
              "failed"
            ],
            "default": "all"
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "fuzzy",
              "exact"
            ],
            "default": "fuzzy"
          },
          {
            "name": "searchUser",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "搜索偏移量",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "分页大小",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/kube/clear": {
      "post": {
        "operationId": "Audit_ClearKubeAuditsNow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditClearKubeAuditsNowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auditClearKubeAuditsNowRequest"
            }
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/kube/export": {
      "get": {
        "operationId": "Audit_ExportKubeAudits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "succeeded",
              "failed"
            ],
            "default": "all"
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "fuzzy",
              "exact"
            ],
            "default": "fuzzy"
          },
          {
            "name": "searchUser",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Csv",
              "Excel"
            ],
            "default": "Csv"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/kube/{id}": {
      "get": {
        "operationId": "Audit_GetKubeAuditDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetKubeAuditDetailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/set-auto-clear": {
      "put": {
        "operationId": "Audit_SetAutoClearAuditSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditSetAutoClearAuditSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auditSetAutoClearAuditSettingRequest"
            }
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/set-auto-clear/kube": {
      "put": {
        "operationId": "Audit_SetAutoClearKubeAuditSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditSetAutoClearKubeAuditSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auditSetAutoClearKubeAuditSettingRequest"
            }
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    },
    "/apis/ghippo.io/v1alpha3/audits/{id}": {
      "get": {
        "operationId": "Audit_GetAuditDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auditGetAuditDetailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Audit"
        ]
      }
    }
  },
  "definitions": {
    "aboutDeveloper": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "aboutGProductVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "aboutListDevelopersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aboutDeveloper"
          }
        }
      }
    },
    "aboutListGProductVersionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aboutGProductVersion"
          }
        }
      }
    },
    "aboutListOpenSourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aboutOpenSource"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1aboutPagination"
        }
      }
    },
    "aboutOpenSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "开源软件名称"
        },
        "license": {
          "type": "string",
          "title": "开源协议"
        }
      }
    },
    "apiHttpBody": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The HTTP request/response body as raw binary."
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs."
        }
      },
      "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest)\n        returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody)\n        returns (google.protobuf.Empty);\n\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged."
    },
    "auditAuditInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "auditName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "gproduct": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha3auditStatusType"
        },
        "user": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "auditAuthTokenResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "auditCertsResponse": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auditKey"
          }
        }
      }
    },
    "auditClearAuditsNowRequest": {
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditClearAuditsNowResponse": {
      "type": "object"
    },
    "auditClearKubeAuditsNowRequest": {
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditClearKubeAuditsNowResponse": {
      "type": "object"
    },
    "auditExportTypes": {
      "type": "string",
      "enum": [
        "Csv",
        "Excel"
      ],
      "default": "Csv"
    },
    "auditExternalAuditResponse": {
      "type": "object"
    },
    "auditExternalType": {
      "type": "string",
      "enum": [
        "loginFailed",
        "forgetPassword",
        "resetPassword"
      ],
      "default": "loginFailed"
    },
    "auditGetAuditDetailResponse": {
      "type": "object",
      "properties": {
        "audit": {
          "type": "string"
        }
      }
    },
    "auditGetAuditResourceReportResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auditResourceReport"
          }
        }
      }
    },
    "auditGetAuditUserReportResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auditUserReport"
          }
        }
      }
    },
    "auditGetAutoClearAuditTimeResponse": {
      "type": "object",
      "properties": {
        "kubeDays": {
          "type": "integer",
          "format": "int32"
        },
        "ghippoDays": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditGetExportURIResponse": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/auditRequestMethod"
        }
      }
    },
    "auditGetKubeAuditDetailResponse": {
      "type": "object",
      "properties": {
        "audit": {
          "type": "string"
        }
      }
    },
    "auditGetLimitRangeTimeResponse": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditKey": {
      "type": "object",
      "properties": {
        "kid": {
          "type": "string"
        },
        "kty": {
          "type": "string"
        },
        "e": {
          "type": "string"
        },
        "n": {
          "type": "string"
        },
        "alg": {
          "type": "string"
        },
        "use": {
          "type": "string"
        }
      }
    },
    "auditKubeAuditInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "auditName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1alpha3auditStatusType"
        },
        "user": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "auditListAuditsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auditAuditInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha3auditPagination"
        }
      }
    },
    "auditListKubeAuditsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auditKubeAuditInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha3auditPagination"
        }
      }
    },
    "auditModules": {
      "type": "string",
      "enum": [
        "audit",
        "kube_audit"
      ],
      "default": "audit"
    },
    "auditRequestMethod": {
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PUT",
        "DELETE",
        "PATCH"
      ],
      "default": "GET"
    },
    "auditResourceReport": {
      "type": "object",
      "properties": {
        "ResourceType": {
          "type": "string"
        },
        "EventName": {
          "type": "string"
        },
        "Count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditSetAutoClearAuditSettingRequest": {
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditSetAutoClearAuditSettingResponse": {
      "type": "object"
    },
    "auditSetAutoClearKubeAuditSettingRequest": {
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auditSetAutoClearKubeAuditSettingResponse": {
      "type": "object"
    },
    "auditUserReport": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "TotalCount": {
          "type": "integer",
          "format": "int32"
        },
        "SuccessCount": {
          "type": "integer",
          "format": "int32"
        },
        "FailedCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "batchauditBatchInsertAuditsRequest": {
      "type": "object",
      "properties": {
        "audits": {
          "type": "string"
        }
      },
      "title": "@openapiv2-ignore"
    },
    "batchauditBatchInsertAuditsResponse": {
      "type": "object",
      "title": "@openapiv2-ignore"
    },
    "clientClientInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "secret": {
          "type": "string",
          "title": "bool enabled = 4;\nrepeated string redirect_uris = 5;"
        },
        "baseUrl": {
          "type": "string"
        }
      }
    },
    "clientCreateClientRequest": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        }
      }
    },
    "clientCreateClientResponse": {
      "type": "object"
    },
    "clientDeleteClientResponse": {
      "type": "object"
    },
    "clientGetClientResponse": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/clientClientInfo"
        }
      }
    },
    "clientListClientsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clientClientInfo"
          }
        }
      }
    },
    "clientUpdateClientResponse": {
      "type": "object"
    },
    "currentuserCreateAccessTokenRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "currentuserCreateAccessTokenResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "currentuserCreateSSHKeyRequest": {
      "type": "object",
      "properties": {
        "sshKeyName": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "currentuserCreateSSHKeyResponse": {
      "type": "object"
    },
    "currentuserDeleteAccessTokenResponse": {
      "type": "object"
    },
    "currentuserDeleteSSHKeyResponse": {
      "type": "object"
    },
    "currentuserGetGlobalPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/currentuserGlobalPermission"
          }
        }
      }
    },
    "currentuserGlobalPermission": {
      "type": "string",
      "enum": [
        "Unknown",
        "ListUser",
        "CreateUser",
        "UpdateUser",
        "DeleteUser",
        "AuthorizeUser",
        "ListGroup",
        "CreateGroup",
        "UpdateGroup",
        "DeleteGroup",
        "UpdateGroupUser",
        "AuthorizeGroup",
        "GetRole",
        "GetIdp",
        "CreateIdp",
        "UpdateIdp",
        "DeleteIdp",
        "GetAudit",
        "DeleteAudit",
        "GetSecurityPolicy",
        "UpdateSecurityPolicy",
        "GetSMTP",
        "UpdateSMTP",
        "GetAppearance",
        "UpdateAppearance",
        "GetLicense",
        "UpdateLicense",
        "DeleteLicense",
        "GetWorkspace",
        "GetAboutPlatform",
        "DeleteRole",
        "UpdateRole",
        "CreateRole",
        "AccountingAndBilling",
        "ReportManagement",
        "GetClient",
        "DeleteClient",
        "UpdateClient",
        "CreateClient",
        "EditCluster",
        "GetAccountingBilling",
        "UpdateAccountingBilling",
        "GetReportManagement",
        "UpdateReportManagement",
        "GetBillingSetting",
        "UpdateBillingSetting"
      ],
      "default": "Unknown"
    },
    "currentuserListAccessTokensResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1currentuserAccessToken"
          }
        }
      }
    },
    "currentuserListSSHKeysResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/currentuserSSHKey"
          }
        }
      }
    },
    "currentuserPasswordDescriptionResponse": {
      "type": "object",
      "properties": {
        "allowModify": {
          "type": "boolean"
        },
        "emptyPassword": {
          "type": "boolean"
        }
      }
    },
    "currentuserSSHKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "sshKeyName": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "currentuserSetCurrentUserPasswordRequest": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "currentuserSetCurrentUserPasswordResponse": {
      "type": "object"
    },
    "currentuserUpdateEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "currentuserUpdateEmailResponse": {
      "type": "object"
    },
    "currentuserUpdateLanguageRequest": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        }
      }
    },
    "currentuserUpdateLanguageResponse": {
      "type": "object"
    },
    "currentuserUpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "currentuserUpdatePasswordResponse": {
      "type": "object"
    },
    "currentuserUpdateSSHKeyResponse": {
      "type": "object"
    },
    "feature_gateFeatureGateID": {
      "type": "string",
      "enum": [
        "CreateUserInWorkspace"
      ],
      "default": "CreateUserInWorkspace"
    },
    "feature_gateFeatureGateInfo": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/feature_gateFeatureGateID",
          "title": "唯一标志符"
        },
        "description": {
          "type": "string",
          "title": "关于此 FeatureGate 的描述"
        },
        "enabled": {
          "type": "boolean",
          "title": "是否启用"
        }
      }
    },
    "feature_gateListFeatureGatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/feature_gateFeatureGateInfo"
          }
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "gproductListGProductsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1gproductGProduct"
          }
        }
      }
    },
    "gproductlicenseDeleteProductLicensesResponse": {
      "type": "object"
    },
    "gproductlicenseGProductLicense": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "gproductlicenseGProductLicenseInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "licenseKey": {
          "type": "string"
        },
        "licenseLevel": {
          "type": "string"
        },
        "physicalUsedCpu": {
          "type": "string"
        },
        "physicalMaxCpu": {
          "type": "string"
        },
        "virtualUsedCpu": {
          "type": "string"
        },
        "virtualMaxCpu": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        },
        "usedNode": {
          "type": "string"
        },
        "maxNode": {
          "type": "string"
        },
        "physicalUsedGpu": {
          "type": "string"
        },
        "physicalMaxGpu": {
          "type": "string"
        }
      }
    },
    "gproductlicenseGetGProductLicenseYamlResponse": {
      "type": "object",
      "properties": {
        "yaml": {
          "type": "string"
        }
      }
    },
    "gproductlicenseGetGProductLicensesESNResponse": {
      "type": "object",
      "properties": {
        "esn": {
          "type": "string"
        }
      }
    },
    "gproductlicenseGetGProductLicensesOverQuotaResponse": {
      "type": "object",
      "properties": {
        "expireSoonLicenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gproductlicenseGProductLicense"
          }
        },
        "expiredLicenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gproductlicenseGProductLicense"
          }
        }
      }
    },
    "gproductlicenseGetGProductLicensesResponse": {
      "type": "object",
      "properties": {
        "license": {
          "$ref": "#/definitions/gproductlicenseGProductLicenseInfo"
        }
      }
    },
    "gproductlicenseListGProductLicensesResponse": {
      "type": "object",
      "properties": {
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gproductlicenseGProductLicense"
          }
        }
      }
    },
    "gproductlicenseUpdateGProductLicensesRequest": {
      "type": "object",
      "properties": {
        "yaml": {
          "type": "string"
        }
      }
    },
    "gproductlicenseUpdateGProductLicensesResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gproductlicenseGProductLicense"
          }
        }
      }
    },
    "groupAddUserToGroupResponse": {
      "type": "object"
    },
    "groupCreateGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "groupCreateGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "groupDeleteGroupResponse": {
      "type": "object"
    },
    "groupDeleteUserFromGroupResponse": {
      "type": "object"
    },
    "groupGetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/groupGroupInfo"
        }
      }
    },
    "groupGroupInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userCount": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "canAuthorize": {
          "type": "boolean"
        }
      }
    },
    "groupGroupMembersResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1groupPagination"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1groupUser"
          }
        }
      }
    },
    "groupGroupSubject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "subjectName": {
          "type": "string"
        }
      }
    },
    "groupListGroupRolesResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1groupPagination"
        },
        "authorizedCount": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1groupRoleInfo"
          }
        }
      }
    },
    "groupListGroupSubjectResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1groupPagination"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupGroupSubject"
          }
        }
      }
    },
    "groupListGroupsResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1groupPagination"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupGroupInfo"
          }
        }
      }
    },
    "groupUpdateGroupResponse": {
      "type": "object"
    },
    "groupUpdateGroupRolesResponse": {
      "type": "object"
    },
    "idpClientAuthentications": {
      "type": "string",
      "enum": [
        "client_secret_post",
        "client_secret_basic",
        "client_secret_jwt",
        "private_key_jwt"
      ],
      "default": "client_secret_post"
    },
    "idpCreateIDPRequest": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "title": "string id = 1;"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "clientAuthentications": {
          "$ref": "#/definitions/idpClientAuthentications"
        },
        "providerId": {
          "$ref": "#/definitions/v1alpha1idpProviderType"
        },
        "authorizationUrl": {
          "type": "string"
        },
        "userInfoUrl": {
          "type": "string"
        },
        "tokenUrl": {
          "type": "string"
        },
        "logoutUrl": {
          "type": "string"
        },
        "enableAutoLinkFlow": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "idpCreateIDPResponse": {
      "type": "object"
    },
    "idpDeleteIDPResponse": {
      "type": "object"
    },
    "idpGetIDPResponse": {
      "type": "object",
      "properties": {
        "idpInfo": {
          "$ref": "#/definitions/idpIDPInfo"
        }
      }
    },
    "idpGetRedirectUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "idpGetWellKnownUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "idpIDPInfo": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "title": "string id = 1;"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "clientAuthentications": {
          "$ref": "#/definitions/idpClientAuthentications"
        },
        "providerId": {
          "$ref": "#/definitions/v1alpha1idpProviderType"
        },
        "authorizationUrl": {
          "type": "string"
        },
        "userInfoUrl": {
          "type": "string"
        },
        "tokenUrl": {
          "type": "string"
        },
        "logoutUrl": {
          "type": "string"
        },
        "enableAutoLinkFlow": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "idpListIDPsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/idpIDPInfo"
          }
        }
      }
    },
    "idpUpdateIDPResponse": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        }
      }
    },
    "keycloakeventAuthDetails": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "realmId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "title": "参考 ExtendedAuthDetails 类的定义"
    },
    "keycloakeventKeycloakEventRequest": {
      "type": "object",
      "properties": {
        "realmId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "operationType": {
          "type": "string"
        },
        "resourcePath": {
          "type": "string"
        },
        "representation": {
          "type": "string",
          "title": "json string"
        },
        "uid": {
          "type": "string"
        },
        "authDetails": {
          "$ref": "#/definitions/keycloakeventAuthDetails"
        },
        "type": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "keycloakeventKeycloakEventResponse": {
      "type": "object"
    },
    "ldapCreateLdapGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ldapCreateLdapRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/ldapLdapVendor",
          "title": "LDAP vendor (provider), only is other"
        },
        "startTls": {
          "type": "string",
          "description": "Encrypts the connection to LDAP using STARTTLS, which will disable connection pooling."
        },
        "connectionUrl": {
          "type": "string"
        },
        "usersDn": {
          "type": "string",
          "title": "Full DN of LDAP tree where your users are. This DN is the parent of LDAP users.\nIt could be for example 'ou=users,dc=example,dc=com' assuming that your typical user will have DN like 'uid=john,ou=users,dc=example,dc=com'"
        },
        "bindDn": {
          "type": "string",
          "title": "DN of LDAP admin, which will be used by Keycloak to access LDAP server"
        },
        "bindCredential": {
          "type": "string",
          "description": "Password of LDAP admin."
        },
        "userObjectClasses": {
          "type": "string",
          "description": "All values of LDAP objectClass attribute for users in LDAP divided by comma.\nFor example: 'inetOrgPerson, organizationalPerson' .\nNewly created Keycloak users will be written to LDAP with all those object classes and existing LDAP user records are found just if they contain all those object classes."
        },
        "usernameLdapAttribute": {
          "type": "string",
          "title": "Name of LDAP attribute, which is mapped as Keycloak username. For many LDAP server vendors it can be 'uid'.\nFor Active directory it can be 'sAMAccountName' or 'cn'.\nThe attribute should be filled for all LDAP user records you want to import from LDAP to Keycloak"
        },
        "fullSyncPeriod": {
          "type": "string",
          "title": "Period for full synchronization in seconds: -1 手动同步"
        },
        "rdnLdapAttribute": {
          "type": "string",
          "description": "Name of the LDAP attribute, which is used as RDN (top attribute) of typical user DN.\nUsually it's the same as the Username LDAP attribute, however it is not required.\nFor example for Active directory, it is common to use 'cn' as RDN attribute when username attribute might be 'sAMAccountName'."
        },
        "uuidLdapAttribute": {
          "type": "string",
          "description": "Name of the LDAP attribute, which is used as a unique object identifier (UUID) for objects in LDAP.\nFor many LDAP server vendors, it is 'entryUUID'; however some are different.\nFor example, for Active directory it should be 'objectGUID'.\nIf your LDAP server does not support the notion of UUID, you can use any other attribute that is supposed to be unique among LDAP users in tree.\nFor example 'uid' or 'entryDN'."
        },
        "editMode": {
          "type": "string",
          "description": "READ_ONLY is a read-only LDAP store.\nWRITABLE means data will be synced back to LDAP on demand."
        },
        "readTimeout": {
          "type": "string",
          "description": "LDAP read timeout in milliseconds. This timeout applies for LDAP read operations."
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "userLdapFilter": {
          "type": "string"
        }
      }
    },
    "ldapCreateLdapResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ldapDeleteLdapGroupResponse": {
      "type": "object"
    },
    "ldapDeleteLdapResponse": {
      "type": "object"
    },
    "ldapGetLdapGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "groupDn": {
          "type": "string"
        },
        "groupObjectClasses": {
          "type": "string"
        },
        "groupNameLdapAttribute": {
          "type": "string"
        }
      }
    },
    "ldapGetLdapResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/ldapLdapVendor"
        },
        "startTls": {
          "type": "string"
        },
        "connectionUrl": {
          "type": "string"
        },
        "usersDn": {
          "type": "string"
        },
        "bindDn": {
          "type": "string"
        },
        "bindCredential": {
          "type": "string"
        },
        "userObjectClasses": {
          "type": "string"
        },
        "usernameLdapAttribute": {
          "type": "string"
        },
        "fullSyncPeriod": {
          "type": "string"
        },
        "rdnLdapAttribute": {
          "type": "string"
        },
        "uuidLdapAttribute": {
          "type": "string"
        },
        "editMode": {
          "type": "string"
        },
        "readTimeout": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "userLdapFilter": {
          "type": "string"
        }
      }
    },
    "ldapLdapVendor": {
      "type": "string",
      "enum": [
        "other",
        "ad"
      ],
      "default": "other"
    },
    "ldapListLdap": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "ldapListLdapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ldapListLdap"
          }
        }
      }
    },
    "ldapSyncLdapGroupsResponse": {
      "type": "object",
      "properties": {
        "ignored": {
          "type": "boolean"
        },
        "added": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "integer",
          "format": "int32"
        },
        "removed": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ldapSyncUsersResponse": {
      "type": "object",
      "properties": {
        "ignored": {
          "type": "boolean"
        },
        "added": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "integer",
          "format": "int32"
        },
        "removed": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ldapTestLdapAuthenticationRequest": {
      "type": "object",
      "properties": {
        "bindDn": {
          "type": "string",
          "title": "DN of LDAP admin, which will be used by Keycloak to access LDAP server"
        },
        "bindCredential": {
          "type": "string",
          "description": "Password of LDAP admin."
        },
        "connectionUrl": {
          "type": "string",
          "title": "Connection URL to your LDAP server"
        },
        "connectionTimeout": {
          "type": "string",
          "title": "LDAP Connection Timeout in milliseconds: 选填"
        },
        "action": {
          "type": "string",
          "title": "测试事件类型: 选填, testAuthentication"
        },
        "startTls": {
          "type": "string",
          "title": "Encrypts the connection to LDAP using STARTTLS, which will disable connection pooling. 选填"
        },
        "useTruststoreSpi": {
          "type": "string",
          "title": "Specifies whether LDAP connection will use the truststore SPI with the truststore configured.\n'Always' means that it will always use it.\n'Never' means that it will not use it.\n'Only for ldaps' means that it will use if your connection URL use ldaps.\n选填"
        },
        "componentId": {
          "type": "string",
          "title": "Ldap id: 选填, uuid. 如果 bind_credential 的值等于 \"**********\", 则此字段是必填参"
        }
      }
    },
    "ldapTestLdapAuthenticationResponse": {
      "type": "object"
    },
    "ldapTestLdapConnectionRequest": {
      "type": "object",
      "properties": {
        "connectionUrl": {
          "type": "string",
          "title": "Connection URL to your LDAP server"
        },
        "bindDn": {
          "type": "string",
          "title": "DN of LDAP admin, which will be used by Keycloak to access LDAP server: 选填"
        },
        "bindCredential": {
          "type": "string",
          "title": "Password of LDAP admin. 选填"
        },
        "connectionTimeout": {
          "type": "string",
          "title": "LDAP Connection Timeout in milliseconds: 选填"
        },
        "action": {
          "type": "string",
          "title": "测试事件类型: 选填, testConnection"
        },
        "startTls": {
          "type": "string",
          "description": "Encrypts the connection to LDAP using STARTTLS, which will disable connection pooling."
        },
        "useTruststoreSpi": {
          "type": "string",
          "title": "Specifies whether LDAP connection will use the truststore SPI with the truststore configured.\n'Always' means that it will always use it.\n'Never' means that it will not use it.\n'Only for ldaps' means that it will use if your connection URL use ldaps.\n选填"
        },
        "componentId": {
          "type": "string",
          "title": "Ldap id: 选填, uuid"
        }
      }
    },
    "ldapTestLdapConnectionResponse": {
      "type": "object"
    },
    "ldapUpdateLdapGroupResponse": {
      "type": "object"
    },
    "ldapUpdateLdapResponse": {
      "type": "object"
    },
    "loginAuthenticateWithPasswordRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "loginAuthenticateWithPasswordResponse": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "loginCheckSessionLimitRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "loginCheckSessionLimitResponse": {
      "type": "object"
    },
    "loginLoginGetResponse": {
      "type": "object"
    },
    "loginLoginPostRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "sessionState": {
          "type": "string"
        },
        "callbackUrl": {
          "type": "string"
        },
        "useSso": {
          "type": "string"
        }
      }
    },
    "loginLoginPostResponse": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "loginLogoutResponse": {
      "type": "object",
      "properties": {
        "externalLogoutUrl": {
          "type": "string"
        }
      }
    },
    "loginRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "loginRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "loginpageGetLoginPageInfoResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "platformName": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "tabName": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "favicon": {
          "type": "string"
        },
        "background": {
          "type": "string"
        },
        "customBg": {
          "type": "boolean"
        },
        "isVideo": {
          "type": "boolean"
        }
      }
    },
    "loginpageGetLoginPageVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "loginpageResetLoginPageInfoResponse": {
      "type": "object"
    },
    "loginpageUpdateLoginPageInfoRequest": {
      "type": "object",
      "properties": {
        "platformName": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "tabName": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "favicon": {
          "type": "string"
        },
        "background": {
          "type": "string"
        },
        "isVideo": {
          "type": "boolean"
        }
      }
    },
    "loginpageUpdateLoginPageInfoResponse": {
      "type": "object"
    },
    "messageDeleteMessagesRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "messageDeleteMessagesResponse": {
      "type": "object"
    },
    "messageGetMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/messageMessageInfo"
        }
      }
    },
    "messageGetMessagesCountResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "readTotal": {
          "type": "integer",
          "format": "int32"
        },
        "unreadTotal": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "messageGetSystemMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "show": {
          "type": "boolean"
        }
      }
    },
    "messageListMessagesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messageMessageInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1messagePagination"
        }
      }
    },
    "messageMessageInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "read": {
          "$ref": "#/definitions/messageReadType"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "messageReadType": {
      "type": "string",
      "enum": [
        "all",
        "read",
        "unread"
      ],
      "default": "all"
    },
    "messageSetReadMessagesRequest": {
      "type": "object",
      "properties": {
        "all": {
          "type": "boolean"
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "messageSetReadMessagesResponse": {
      "type": "object"
    },
    "messageToggleUnreadMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/messageMessageInfo"
        }
      }
    },
    "oauthCreateOauth2Request": {
      "type": "object",
      "properties": {
        "providerType": {
          "$ref": "#/definitions/v1alpha1oauthProviderType"
        },
        "displayName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        }
      }
    },
    "oauthCreateOauth2Response": {
      "type": "object"
    },
    "oauthDeleteOauth2Response": {
      "type": "object"
    },
    "oauthGetOauth2RedirectDomainResponse": {
      "type": "object",
      "properties": {
        "redirectDomain": {
          "type": "string"
        }
      }
    },
    "oauthGetOauth2Response": {
      "type": "object",
      "properties": {
        "providerType": {
          "$ref": "#/definitions/v1alpha1oauthProviderType"
        },
        "displayName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        }
      }
    },
    "oauthUpdateOauth2Request": {
      "type": "object",
      "properties": {
        "providerType": {
          "$ref": "#/definitions/v1alpha1oauthProviderType"
        },
        "displayName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        }
      }
    },
    "oauthUpdateOauth2Response": {
      "type": "object"
    },
    "oidcGhippoClientConfigResponse": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "groupsClaim": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "userClaim": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        }
      }
    },
    "oidcOIDCLogoutResponse": {
      "type": "object"
    },
    "oidcOIDCTokenRequest": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "grantType": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "code": {
          "type": "string",
          "title": "string response_type = 4 [(validate.rules).string.min_len = 1];"
        },
        "redirectUri": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "oidcOIDCTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "idToken": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "refreshExpiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "notBeforePolicy": {
          "type": "integer",
          "format": "int32"
        },
        "sessionState": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "oidcOIDCUserInfoResponse": {
      "type": "object",
      "properties": {
        "sub": {
          "type": "string"
        },
        "preferredUsername": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "oidcRedirectFrontendLogoutResponse": {
      "type": "object"
    },
    "oidcWellKnownResponse": {
      "type": "object",
      "properties": {
        "issuer": {
          "type": "string"
        },
        "authorizationEndpoint": {
          "type": "string"
        },
        "tokenEndpoint": {
          "type": "string"
        },
        "jwksUri": {
          "type": "string"
        },
        "userinfoEndpoint": {
          "type": "string"
        },
        "introspectionEndpoint": {
          "type": "string"
        },
        "idTokenSigningAlgValuesSupported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endSessionEndpoint": {
          "type": "string"
        }
      }
    },
    "productnavProductMenu": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "menus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productnavProductMenu"
          }
        }
      }
    },
    "productnavProductNavCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "menus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productnavProductMenu"
          }
        }
      }
    },
    "productnavProductNavResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productnavProductNavCategory"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "publishPublishMessageRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "messageUid": {
          "type": "string"
        }
      }
    },
    "publishPublishMessageResponse": {
      "type": "object"
    },
    "roleAuthScope": {
      "type": "string",
      "enum": [
        "platform",
        "folder",
        "workspace"
      ],
      "default": "platform",
      "title": "- platform: unknown_auth_scope = 0;"
    },
    "roleAuthScopeAllPermissions": {
      "type": "object",
      "properties": {
        "authScope": {
          "$ref": "#/definitions/roleAuthScope"
        },
        "categoryPerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleCategoryAllPermissions"
          }
        }
      }
    },
    "roleCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        }
      }
    },
    "roleCategoryAllPermissions": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/roleCategory"
        },
        "resourcePerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleResourceAllPermissions"
          }
        }
      }
    },
    "roleCategoryPermissions": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/roleCategory"
        },
        "resourcePerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleResourcePermissions"
          }
        }
      }
    },
    "roleCheckRoleNameResponse": {
      "type": "object",
      "properties": {
        "exist": {
          "type": "boolean"
        }
      }
    },
    "roleCreateRoleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "string gproduct = 2 [(validate.rules).string = {min_len: 1, max_len: 63}];\nglobalRoleType type = 3;"
        },
        "scope": {
          "$ref": "#/definitions/roleAuthScope"
        },
        "perms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolePermission"
          }
        }
      }
    },
    "roleCreateRoleResponse": {
      "type": "object"
    },
    "roleDeleteRoleResponse": {
      "type": "object"
    },
    "roleGProductAllPermissions": {
      "type": "object",
      "properties": {
        "gproduct": {
          "$ref": "#/definitions/v1alpha1roleGProduct"
        },
        "authscopePerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleAuthScopeAllPermissions"
          },
          "title": "map<string, string> gproduct = 1;"
        }
      }
    },
    "roleGProductPermissions": {
      "type": "object",
      "properties": {
        "gproduct": {
          "$ref": "#/definitions/v1alpha1roleGProduct",
          "title": "string gproduct = 1;"
        },
        "categoryPerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleCategoryPermissions"
          }
        }
      }
    },
    "roleGetRoleMemberCountResponse": {
      "type": "object",
      "properties": {
        "userCount": {
          "type": "integer",
          "format": "int32"
        },
        "groupCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "roleGetRoleResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/roleglobalRoleType"
        },
        "description": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/roleAuthScope"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "gproductPerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleGProductPermissions"
          }
        }
      }
    },
    "roleListAllPermissionsResponse": {
      "type": "object",
      "properties": {
        "gproductPerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleGProductAllPermissions"
          }
        }
      }
    },
    "roleListFolderRoleNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleRoleName"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1rolePagination"
        }
      }
    },
    "roleListMembersByPlatformRoleResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleMember"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1rolePagination"
        }
      }
    },
    "roleListMembersFoldersByFolderRoleResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleMemberFolder"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1rolePagination"
        }
      }
    },
    "roleListMembersWorkspacesByWorkspaceRoleResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleMemberWorkspace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1rolePagination"
        }
      }
    },
    "roleListRolesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1roleRoleInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1rolePagination"
        }
      }
    },
    "roleListWorkspaceRoleNamesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleRoleName"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1rolePagination"
        }
      }
    },
    "roleMember": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "roleMemberFolder": {
      "type": "object",
      "properties": {
        "memberName": {
          "type": "string"
        },
        "memberType": {
          "type": "string"
        },
        "folderId": {
          "type": "integer",
          "format": "int32"
        },
        "folderAlias": {
          "type": "string"
        },
        "memberId": {
          "type": "string"
        }
      }
    },
    "roleMemberWorkspace": {
      "type": "object",
      "properties": {
        "memberName": {
          "type": "string"
        },
        "memberType": {
          "type": "string"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "workspaceAlias": {
          "type": "string"
        },
        "memberId": {
          "type": "string"
        }
      }
    },
    "rolePermission": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "gproduct": {
          "type": "string"
        }
      }
    },
    "roleQueryAuthScope": {
      "type": "string",
      "enum": [
        "query_all_auth_scope",
        "query_platform",
        "query_folder",
        "query_workspace"
      ],
      "default": "query_all_auth_scope"
    },
    "roleQueryRoleType": {
      "type": "string",
      "enum": [
        "query_all_role_type",
        "query_system",
        "query_custom"
      ],
      "default": "query_all_role_type"
    },
    "roleResourceAction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        },
        "tips": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "roleResourceActionWithDependency": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/roleResourceAction"
        },
        "dependPerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolePermission"
          }
        }
      }
    },
    "roleResourceAllPermissions": {
      "type": "object",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/v1alpha1roleResourceType"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleResourceActionWithDependency"
          }
        }
      }
    },
    "roleResourcePermissions": {
      "type": "object",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/v1alpha1roleResourceType"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleResourceAction"
          }
        }
      }
    },
    "roleRoleName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "authScope": {
          "$ref": "#/definitions/roleAuthScope"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "roleUpdateRoleResponse": {
      "type": "object"
    },
    "roleglobalRoleType": {
      "type": "string",
      "enum": [
        "system",
        "custom"
      ],
      "default": "system",
      "title": "TODO: 改为 RoleType"
    },
    "securitypolicyGetAccountLockoutPolicyResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "maxLoginFailures": {
          "type": "integer",
          "format": "int32"
        },
        "maxFailuresWaitSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "failureResetSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitypolicyGetLogoutPolicyResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "securitypolicyGetMFAResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "securitypolicyGetPasswordPolicyResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitypolicyPasswordPolicyInfo"
          }
        }
      }
    },
    "securitypolicyGetSessionTimeoutResponse": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitypolicyGetSystemSessionLimitResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitypolicyGetTimeSessionLimitResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "securitypolicyGetUserSessionLimitResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitypolicyPasswordPolicyInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/securitypolicyPasswordPolicyType"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "securitypolicyPasswordPolicyType": {
      "type": "string",
      "enum": [
        "MinimumLengthLabel",
        "NotRecentlyUsedLabel",
        "NotUsernameLabel",
        "NotEmailLabel",
        "DigitsLabel",
        "UppercaseCharactersLabel",
        "LowercaseCharactersLabel",
        "SpecialCharactersLabel",
        "ExpirePasswordLabel"
      ],
      "default": "MinimumLengthLabel"
    },
    "securitypolicySetAccountLockoutPolicyRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "maxLoginFailures": {
          "type": "integer",
          "format": "int32",
          "title": "failures count >= 0"
        },
        "maxFailuresWaitSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Lock time >= 60s"
        },
        "failureResetSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "reset time >= 60s"
        }
      }
    },
    "securitypolicySetAccountLockoutPolicyResponse": {
      "type": "object"
    },
    "securitypolicySetLogoutPolicyRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "securitypolicySetLogoutPolicyResponse": {
      "type": "object"
    },
    "securitypolicySetMFARequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "securitypolicySetMFAResponse": {
      "type": "object"
    },
    "securitypolicySetPasswordPolicyRequest": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitypolicyPasswordPolicyInfo"
          }
        }
      }
    },
    "securitypolicySetPasswordPolicyResponse": {
      "type": "object"
    },
    "securitypolicySetSessionTimeoutRequest": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "timeout > 3600s"
        }
      }
    },
    "securitypolicySetSessionTimeoutResponse": {
      "type": "object"
    },
    "securitypolicySetSystemSessionLimitRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitypolicySetSystemSessionLimitResponse": {
      "type": "object"
    },
    "securitypolicySetTimeSessionLimitRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "securitypolicySetTimeSessionLimitResponse": {
      "type": "object"
    },
    "securitypolicySetUserSessionLimitRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitypolicySetUserSessionLimitResponse": {
      "type": "object"
    },
    "smtpsettingGetSmtpServerResponse": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "ssl": {
          "type": "boolean"
        },
        "starttls": {
          "type": "boolean"
        },
        "from": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "smtpsettingSetSmtpServerRequest": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "ssl": {
          "type": "boolean"
        },
        "starttls": {
          "type": "boolean"
        },
        "from": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "smtpsettingSetSmtpServerResponse": {
      "type": "object"
    },
    "smtpsettingSmtpConnTestRequest": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "ssl": {
          "type": "boolean"
        },
        "starttls": {
          "type": "boolean"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "smtpsettingSmtpConnTestResponse": {
      "type": "object"
    },
    "themeGetFooterThemeConfigResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "css": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "themeGetLoginThemeConfigResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "css": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "themeGetThemeConfigResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "css": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "themeResetFooterThemeConfigResponse": {
      "type": "object"
    },
    "themeResetLoginThemeConfigResponse": {
      "type": "object"
    },
    "themeResetThemeConfigResponse": {
      "type": "object"
    },
    "themeSetFooterThemeConfigRequest": {
      "type": "object",
      "properties": {
        "css": {
          "type": "string"
        }
      }
    },
    "themeSetFooterThemeConfigResponse": {
      "type": "object"
    },
    "themeSetLoginThemeConfigRequest": {
      "type": "object",
      "properties": {
        "css": {
          "type": "string"
        }
      }
    },
    "themeSetLoginThemeConfigResponse": {
      "type": "object"
    },
    "themeSetThemeConfigRequest": {
      "type": "object",
      "properties": {
        "css": {
          "type": "string"
        }
      }
    },
    "themeSetThemeConfigResponse": {
      "type": "object"
    },
    "topnavResetTopNavResponse": {
      "type": "object"
    },
    "topnavSetTopNavRequest": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        },
        "favicon": {
          "type": "string"
        },
        "tabName": {
          "type": "string"
        }
      }
    },
    "topnavSetTopNavResponse": {
      "type": "object"
    },
    "topnavTopNavResponse": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        },
        "favicon": {
          "type": "string"
        },
        "tabName": {
          "type": "string"
        }
      }
    },
    "userCheckUserEmailResponse": {
      "type": "object",
      "properties": {
        "existed": {
          "type": "boolean"
        }
      }
    },
    "userCheckUserResponse": {
      "type": "object",
      "properties": {
        "existed": {
          "type": "boolean"
        }
      }
    },
    "userCreateUserAccessTokenResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "userCreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "temporary": {
          "type": "boolean"
        }
      }
    },
    "userCreateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "userCreateUserWithoutPasswordRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "userCreateUserWithoutPasswordResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "userDeleteUserAccessTokenResponse": {
      "type": "object"
    },
    "userDeleteUserResponse": {
      "type": "object"
    },
    "userListUserAccessTokensResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1userAccessToken"
          }
        }
      }
    },
    "userListUserGroupsResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1userPagination"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1userGroup"
          }
        }
      }
    },
    "userListUserRolesResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1userPagination"
        },
        "authorizedCount": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1userRoleInfo"
          }
        }
      }
    },
    "userListUserSubjectResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/v1alpha1userPagination"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userUserSubject"
          }
        }
      }
    },
    "userListUsersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1userGetUserResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1userPagination"
        }
      }
    },
    "userResetUserMFAResponse": {
      "type": "object"
    },
    "userSetUserPasswordResponse": {
      "type": "object"
    },
    "userUpdateUserResponse": {
      "type": "object"
    },
    "userUpdateUserRolesResponse": {
      "type": "object"
    },
    "userUserSubject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "subjectName": {
          "type": "string"
        }
      }
    },
    "userVerifyUserSSHPublicKeyResponse": {
      "type": "object"
    },
    "v1alpha1aboutPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1currentuserAccessToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "v1alpha1currentuserGetUserResponse": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "v1alpha1gproductGProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "uiAssetsUrl": {
          "type": "string"
        },
        "needImportLicense": {
          "type": "boolean"
        },
        "needUpdateExpiredLicense": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1groupPagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1groupRoleInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "authorized": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1groupUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1alpha1idpProviderType": {
      "type": "string",
      "enum": [
        "oidc"
      ],
      "default": "oidc"
    },
    "v1alpha1messagePagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1oauthProviderType": {
      "type": "string",
      "enum": [
        "wechatwork"
      ],
      "default": "wechatwork"
    },
    "v1alpha1roleGProduct": {
      "type": "object",
      "properties": {
        "gproduct": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        }
      }
    },
    "v1alpha1rolePagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1roleResourceType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        }
      }
    },
    "v1alpha1roleRoleInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/roleglobalRoleType"
        },
        "description": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/roleAuthScope"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1alpha1userAccessToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "v1alpha1userGetUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "lastLoginAt": {
          "type": "string"
        },
        "canAuthorize": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1userGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1userPagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1userRoleInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "authorized": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1webhookPagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1webhookResourceType": {
      "type": "string",
      "enum": [
        "resource_type_user"
      ],
      "default": "resource_type_user"
    },
    "v1alpha1webhookStatus": {
      "type": "string",
      "enum": [
        "all",
        "successful",
        "failed"
      ],
      "default": "all"
    },
    "v1alpha1workspaceGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userCount": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "canAuthorize": {
          "type": "boolean"
        },
        "authorized": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1workspacePagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha1workspaceUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "canAuthorize": {
          "type": "boolean"
        },
        "authorized": {
          "type": "boolean"
        }
      }
    },
    "v1alpha3auditPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1alpha3auditSearchType": {
      "type": "string",
      "enum": [
        "fuzzy",
        "exact"
      ],
      "default": "fuzzy"
    },
    "v1alpha3auditStatusType": {
      "type": "string",
      "enum": [
        "all",
        "succeeded",
        "failed"
      ],
      "default": "all"
    },
    "webhookAction": {
      "type": "string",
      "enum": [
        "action_create",
        "action_update",
        "action_delete",
        "action_login",
        "action_logout"
      ],
      "default": "action_create"
    },
    "webhookCreateWebhookRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/v1alpha1webhookResourceType"
        },
        "action": {
          "$ref": "#/definitions/webhookAction"
        },
        "url": {
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/webhookMethod"
        },
        "headers": {
          "type": "string"
        },
        "requestParameter": {
          "type": "string"
        }
      }
    },
    "webhookCreateWebhookResponse": {
      "type": "object"
    },
    "webhookDeleteWebhookResponse": {
      "type": "object"
    },
    "webhookGetWebhookRecordResponse": {
      "type": "object",
      "properties": {
        "webhookRecordInfo": {
          "$ref": "#/definitions/webhookWebhookRecordInfo"
        }
      }
    },
    "webhookGetWebhookResponse": {
      "type": "object",
      "properties": {
        "webhookInfo": {
          "$ref": "#/definitions/webhookWebhookInfo"
        }
      }
    },
    "webhookListWebhookRecordsByClientIdResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/webhookWebhookRecordInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1webhookPagination"
        }
      }
    },
    "webhookListWebhooksByClientIdResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/webhookWebhookInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1webhookPagination"
        }
      }
    },
    "webhookMethod": {
      "type": "string",
      "enum": [
        "method_get",
        "method_post",
        "method_put",
        "method_delete",
        "method_patch"
      ],
      "default": "method_get"
    },
    "webhookStatusResponse": {
      "type": "string",
      "enum": [
        "response_unknown",
        "response_successful",
        "response_failed"
      ],
      "default": "response_unknown"
    },
    "webhookUpdateWebhookResponse": {
      "type": "object"
    },
    "webhookWebhookInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/v1alpha1webhookResourceType"
        },
        "action": {
          "$ref": "#/definitions/webhookAction"
        },
        "url": {
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/webhookMethod"
        },
        "headers": {
          "type": "string"
        },
        "requestParameter": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "webhookWebhookRecordInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "type": "string"
        },
        "webhookId": {
          "type": "integer",
          "format": "int32"
        },
        "webhookName": {
          "type": "string"
        },
        "resourceType": {
          "$ref": "#/definitions/v1alpha1webhookResourceType"
        },
        "action": {
          "$ref": "#/definitions/webhookAction"
        },
        "url": {
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/webhookMethod"
        },
        "eventTime": {
          "type": "string"
        },
        "eventData": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/webhookStatusResponse"
        },
        "requestedAt": {
          "type": "string"
        },
        "request": {
          "type": "string"
        },
        "respondedAt": {
          "type": "string"
        },
        "response": {
          "type": "string"
        },
        "errMessage": {
          "type": "string"
        }
      }
    },
    "workspaceAuthorizeResponse": {
      "type": "object"
    },
    "workspaceBindExclusiveResourceToWorkspaceResponse": {
      "type": "object"
    },
    "workspaceBindSharedResourceAndSetQuotaHardToWorkspaceResponse": {
      "type": "object"
    },
    "workspaceBindSharedResourceToWorkspaceResponse": {
      "type": "object"
    },
    "workspaceClusterStatus": {
      "type": "string",
      "enum": [
        "StatusUnknown",
        "StatusRunning",
        "StatusNotRunning"
      ],
      "default": "StatusUnknown"
    },
    "workspaceCreateFolderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Deprecated: Do not use."
        },
        "alias": {
          "type": "string"
        },
        "parentFolderId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workspaceCreateFolderResponse": {
      "type": "object",
      "properties": {
        "folderId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workspaceCreateWorkspaceRequest": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "title": "string name = 1 [(validate.rules).string.max_len = 64];"
        },
        "parentFolderId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workspaceCreateWorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workspaceDeauthorizeResponse": {
      "type": "object"
    },
    "workspaceDeleteFolderResponse": {
      "type": "object"
    },
    "workspaceDeleteWorkspaceResponse": {
      "type": "object"
    },
    "workspaceFolderInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Deprecated: Do not use."
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "workspaceFolderListGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1workspaceGroup"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceFolderListPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceFolderPermission"
          }
        }
      }
    },
    "workspaceFolderListUsersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1workspaceUser"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceFolderPermission": {
      "type": "string",
      "enum": [
        "Unknown",
        "CreateFolder",
        "UpdateFolder",
        "GetFolder",
        "DeleteFolder",
        "AuthorizeFolder",
        "CreateWorkspace",
        "UpdateWorkspace",
        "GetWorkspace",
        "DeleteWorkspace",
        "AuthorizeWorkspace",
        "ResourceBindingWorkspace",
        "UpdateResourceQuotaWorkspace"
      ],
      "default": "Unknown"
    },
    "workspaceFolderTree": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "isWorkspace": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceFolderTree"
          }
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceFolderPermission"
          }
        },
        "resourceKind": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceWorkspaceResourceKindEnum"
          }
        }
      }
    },
    "workspaceGetFolderResponse": {
      "type": "object",
      "properties": {
        "folder": {
          "$ref": "#/definitions/workspaceFolderInfo"
        }
      }
    },
    "workspaceGetWorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspace": {
          "$ref": "#/definitions/workspaceWorkspaceInfo"
        }
      }
    },
    "workspaceGetWorkspaceSharedResourceQuotaResponse": {
      "type": "object",
      "properties": {
        "setting": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "used": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "workspaceListAvailableExclusiveResourcesByWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceResourceInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListAvailableSharedResourcesByWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceResourceInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListExclusiveResourceTypesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workspaceListExclusiveResourcesByWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceWorkspacesResourceInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListFolderTreeResponse": {
      "type": "object",
      "properties": {
        "folderTree": {
          "$ref": "#/definitions/workspaceFolderTree"
        },
        "defaultId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workspaceListFoldersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceFolderInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListMembersRolesByFolderResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceMemberRoleFolderInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListMembersRolesByWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceMemberRoleWorkspaceInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListResourceQuotaTypesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workspaceListSharedResourceTypesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workspaceListSharedResourcesByWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceWorkspacesResourceInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceListWorkspaceShareResourceQuotaTypesResponse": {
      "type": "object",
      "properties": {
        "gpus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceResourceQuotaType"
          }
        }
      }
    },
    "workspaceListWorkspacesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceWorkspaceInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceMemberRoleFolderInfo": {
      "type": "object",
      "properties": {
        "memberName": {
          "type": "string"
        },
        "memberType": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "folderId": {
          "type": "integer",
          "format": "int32"
        },
        "memberId": {
          "type": "string"
        }
      }
    },
    "workspaceMemberRoleWorkspaceInfo": {
      "type": "object",
      "properties": {
        "memberName": {
          "type": "string"
        },
        "memberType": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "memberId": {
          "type": "string"
        }
      }
    },
    "workspaceMoveWorkspaceFolderListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceMoverWorkspaceFolder"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1alpha1workspacePagination"
        }
      }
    },
    "workspaceMoveWorkspaceResponse": {
      "type": "object"
    },
    "workspaceMoverWorkspaceFolder": {
      "type": "object",
      "properties": {
        "folderId": {
          "type": "integer",
          "format": "int32"
        },
        "folderAlias": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "parentAlias": {
          "type": "string"
        }
      }
    },
    "workspaceReauthorizeResponse": {
      "type": "object"
    },
    "workspaceResourceInfo": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "gproduct": {
          "type": "string"
        },
        "resourceScope": {
          "type": "string"
        },
        "bound": {
          "type": "boolean"
        },
        "clusterStatus": {
          "$ref": "#/definitions/workspaceClusterStatus"
        }
      }
    },
    "workspaceResourceQuotaType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceResourceQuotaTypeKey"
          }
        }
      }
    },
    "workspaceResourceQuotaTypeKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "aliasZh": {
          "type": "string"
        }
      }
    },
    "workspaceSetQuotaHardForWorkspaceSharedResourceRequest": {
      "type": "object",
      "properties": {
        "workspaceResourceId": {
          "type": "integer",
          "format": "int32"
        },
        "quotaHard": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "workspaceSetQuotaHardForWorkspaceSharedResourceResponse": {
      "type": "object"
    },
    "workspaceUnbindResourceFromWorkspaceResponse": {
      "type": "object"
    },
    "workspaceUpdateFolderResponse": {
      "type": "object"
    },
    "workspaceUpdateQuotaCheckRequest": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "gproduct": {
          "type": "string"
        },
        "resourceScope": {
          "type": "string",
          "title": "cluster 资源 resource_scope 为空"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "quotaHard": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "workspaceUpdateQuotaCheckResponse": {
      "type": "object",
      "properties": {
        "passed": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "workspaceWorkspaceInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "workspaceWorkspaceResourceKindEnum": {
      "type": "string",
      "enum": [
        "resource_group",
        "shared_resource",
        "registry",
        "kangaroo_registry",
        "kangaroo_project"
      ],
      "default": "resource_group"
    },
    "workspaceWorkspacesResourceInfo": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceScope": {
          "type": "string"
        },
        "gproduct": {
          "type": "string"
        },
        "workspaceId": {
          "type": "integer",
          "format": "int32"
        },
        "workspaceResourceId": {
          "type": "integer",
          "format": "int32"
        },
        "module": {
          "type": "string"
        },
        "clusterStatus": {
          "$ref": "#/definitions/workspaceClusterStatus"
        }
      }
    }
  }
}
