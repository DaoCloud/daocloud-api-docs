{
  "swagger": "2.0",
  "info": {
    "title": "镜像仓库",
    "version": "v0.18.0"
  },
  "tags": [
    {
      "name": "Core"
    },
    {
      "name": "Harbor"
    },
    {
      "name": "Image"
    },
    {
      "name": "Retention"
    },
    {
      "name": "Registries"
    },
    {
      "name": "Replications"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/kangaroo.io/v1alpha1/cluster": {
      "get": {
        "summary": "list cluster",
        "operationId": "Core_ListCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "sort_by determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - creation_time: Sort result by creation_time.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "creation_time"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "orderBy",
            "description": "order_by determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/cluster/{cluster}/namespace": {
      "get": {
        "summary": "list namespace with cluster",
        "operationId": "Core_ListNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "sort_by determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - creation_time: Sort result by creation_time.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "creation_time"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "orderBy",
            "description": "order_by determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/cluster/{cluster}/namespace/{namespace}/harbors/{name}/sync": {
      "get": {
        "operationId": "Harbor_SyncHarborStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/cluster/{cluster}/namespace/{namespace}/harbors/{name}/verify": {
      "get": {
        "operationId": "Harbor_GetVerifyDependService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CheckDependServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Harbor_CreateVerifyDependService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "$ref": "#/definitions/v1alpha1DatabaseSpec",
                  "title": "database is describe run Harbor required database configuration"
                },
                "cache": {
                  "$ref": "#/definitions/v1alpha1CacheSpec",
                  "title": "cache is describe run Harbor required cache configuration"
                },
                "storage": {
                  "$ref": "#/definitions/v1alpha1OCIStorageSpec",
                  "title": "storage is describe run Harbor storage oci artifact configuration"
                }
              }
            }
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/cluster/{cluster}/namespace/{namespace}/tls": {
      "get": {
        "operationId": "Harbor_ListTLSSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListTLSResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace is tls secret namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/clusters/{cluster}/check": {
      "get": {
        "summary": "Verify that the harbor operator CRD is installed in the cluster.",
        "operationId": "Harbor_VerifyHarborOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyHarborOperatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "target cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/clusters/{cluster}/harbors/default-params": {
      "get": {
        "summary": "List of parameters needed to create a harbor instance.",
        "operationId": "Harbor_GetHarborParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHarborParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Deployment of target clusters",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/clusters/{cluster}/namespace/{namespace}/check": {
      "get": {
        "summary": "verify that the namespace quota is enough to create harbor instance.",
        "operationId": "Harbor_VerifyNamespaceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyNamespaceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "target cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "target namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestCpu",
            "description": "request cpu, no unit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestMemory",
            "description": "request memory, unit is G",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "replicas",
            "description": "replicas",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/harbors/{name}": {
      "get": {
        "operationId": "Harbor_GetHarborCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HarborCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is HarborCluster instance name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "Harbor_DeleteHarborCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is HarborCluster instance name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "Harbor_CreateHarborCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HarborCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is HarborCluster instance name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/typesObjectMeta",
                  "description": "Standard object's metadata."
                },
                "spec": {
                  "$ref": "#/definitions/v1alpha1HarborClusterSpec",
                  "title": "behaviour of HarborClusterSpec"
                }
              },
              "title": "CreateHarborClusterRequest is create HarborCluster resource request param"
            }
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Harbor_UpdateHarborCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HarborCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name is HarborCluster instance name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "spec": {
                  "$ref": "#/definitions/v1alpha1HarborClusterSpec",
                  "title": "behaviour of HarborClusterSpec"
                },
                "metadata": {
                  "$ref": "#/definitions/typesObjectMeta",
                  "description": "Standard object's metadata."
                }
              },
              "title": "UpdateHarborClusterRequest is update HarborCluster resource request param"
            }
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/clusters/{cluster}/node-port/check": {
      "get": {
        "summary": "verify nodeport port is not used.",
        "operationId": "Harbor_VerifyNodePort",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyNodePortResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port",
            "description": "port is node port",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/current-user/global-permissions": {
      "get": {
        "operationId": "Core_GetGlobalPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GlobalPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/current-user/workspace-permissions/{workspace}": {
      "get": {
        "operationId": "Core_GetWorkspacePermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkspacePermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/filter_registries/{registry}/registries": {
      "get": {
        "summary": "list global registry with native registry filter",
        "operationId": "Registries_ListFilterRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListFilterRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is search registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/harbors": {
      "get": {
        "operationId": "Harbor_ListHarborClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHarborClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "sort_by determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "orderBy",
            "description": "order_by determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by harbor cluster name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries": {
      "get": {
        "summary": "list registry with global scope",
        "operationId": "Registries_ListRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiregistryv1alpha1ListRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is search registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "intergratedType",
            "description": "intergrated_type is filter registry integrated type.\n\n - IntegratedType_UNSPECIFIED: INTEGRATED_UNSPECIFIED wen un specified type.\n - Automatic: Automatic means is registry integrated type is trusteeship.\n - Manual: Manual means is registry integrated type is integrated.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "IntegratedType_UNSPECIFIED",
              "Automatic",
              "Manual"
            ],
            "default": "IntegratedType_UNSPECIFIED"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "create registry with global scope",
        "operationId": "Registries_CreateRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateRegistryRequest"
            }
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}": {
      "get": {
        "summary": "get registry with global scope",
        "operationId": "Registries_GetRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "delete registry with global scope",
        "operationId": "Registries_DeleteRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "update registry with global scope",
        "operationId": "Registries_UpdateRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credential": {
                  "$ref": "#/definitions/v1alpha1RegistryAdminCredential",
                  "title": "credential is login registry credential"
                }
              }
            }
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/detail": {
      "get": {
        "summary": "get registry detail with global scope",
        "operationId": "Registries_GetRegistryDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RegistryDetail"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/executions": {
      "get": {
        "summary": "ListExecutions is list executions",
        "operationId": "Replications_ListExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListExecutionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to list.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "policyId",
            "description": "policy_id is the policy to list.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "status",
            "description": "search status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trigger",
            "description": "search trigger",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "CreateExecution is start a policy",
        "operationId": "Replications_CreateExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "policyId": {
                  "type": "string",
                  "format": "int64",
                  "description": "policy_id is the policy to create."
                }
              }
            }
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/executions/{executionId}": {
      "get": {
        "summary": "GetExecution is get execution",
        "operationId": "Replications_GetExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Execution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to get.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "description": "execution_id is the execution to get.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "StopExecution is stop a policy",
        "operationId": "Replications_StopExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to stop.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "description": "execution_id is the execution to stop.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/executions/{executionId}/tasks": {
      "get": {
        "summary": "ListReplicationTasks is list replication tasks",
        "operationId": "Replications_ListReplicationTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListReplicationTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to list.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "description": "execution_id is the execution to get.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceType",
            "description": "resource_type search by resource type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status search by status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/executions/{executionId}/tasks/{taskId}/log": {
      "get": {
        "summary": "GetReplicationTasksLog is get replication tasks log",
        "operationId": "Replications_GetReplicationTasksLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetReplicationTaskLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to get.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "description": "execution_id is the execution to get.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "description": "task_id is the task to get.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/native/registries": {
      "get": {
        "summary": "ListNativeRegistry is list native registry",
        "operationId": "Replications_ListNativeRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNativeRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to list.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is the fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "CreateNativeRegistry is create native registry",
        "operationId": "Replications_CreateNativeRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "createType": {
                  "$ref": "#/definitions/v1alpha1CreateNativeRegistryRequestType",
                  "description": "type is the type of create native registry."
                },
                "integrationRegistry": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nativeRegistry": {
                  "$ref": "#/definitions/v1alpha1NativeRegistrySpec"
                }
              }
            }
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/native/registries/{nativeRegistryId}": {
      "delete": {
        "summary": "DeleteNativeRegistry is delete native registry",
        "operationId": "Replications_DeleteNativeRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nativeRegistryId",
            "description": "native_registry is the native registry to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateNativeRegistry is update native registry",
        "operationId": "Replications_UpdateNativeRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NativeRegistry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nativeRegistryId",
            "description": "native_registry_id is the native registry to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nativeRegistry": {
                  "$ref": "#/definitions/v1alpha1NativeRegistrySpec",
                  "description": "native_registry is the native registry to update."
                }
              }
            }
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/policies": {
      "get": {
        "summary": "ListPolicies is list list policies",
        "operationId": "Replications_ListPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to list.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is the fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "CreatePolicy is create policy",
        "operationId": "Replications_CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "policy is the policy to create."
                },
                "description": {
                  "type": "string",
                  "description": "description is the description of the policy."
                },
                "trigger": {
                  "$ref": "#/definitions/v1alpha1Trigger",
                  "description": "trigger is the trigger of the policy."
                },
                "filters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1Filter"
                  },
                  "description": "filters is the filters of the policy."
                },
                "srcRegistryId": {
                  "type": "string",
                  "format": "int64",
                  "description": "src_registry_id is the source registry of the policy."
                },
                "destRegistryId": {
                  "type": "string",
                  "format": "int64",
                  "description": "dest_registry_id is the destination registry of the policy."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "enabled is the enabled of the policy."
                },
                "override": {
                  "type": "boolean",
                  "description": "override is the override of the policy."
                },
                "destNamespace": {
                  "type": "string",
                  "description": "dest_namespace is the destination namespace of the policy."
                },
                "speed": {
                  "type": "integer",
                  "format": "int32",
                  "title": "speed limit for each task\nunit: kbps"
                }
              }
            }
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/policies/{policyId}": {
      "delete": {
        "summary": "DeletePolicy is delete policy",
        "operationId": "Replications_DeletePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyId",
            "description": "policy_id is the policy to delete.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "CreatePolicy is create policy",
        "operationId": "Replications_UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is the name of the registry to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyId",
            "description": "policy_id is the policy to update.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "policy is the policy to update."
                },
                "description": {
                  "type": "string",
                  "description": "description is the description of the policy."
                },
                "trigger": {
                  "$ref": "#/definitions/v1alpha1Trigger",
                  "description": "trigger is the trigger of the policy."
                },
                "filters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1Filter"
                  },
                  "description": "filters is the filters of the policy."
                },
                "srcRegistry": {
                  "$ref": "#/definitions/v1alpha1NativeRegistry",
                  "description": "src_registry is the source registry of the policy."
                },
                "destRegistry": {
                  "$ref": "#/definitions/v1alpha1NativeRegistry",
                  "description": "dest_registry is the destination registry of the policy."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "enabled is the enabled of the policy."
                },
                "override": {
                  "type": "boolean",
                  "description": "override is the override of the policy."
                },
                "destNamespace": {
                  "type": "string",
                  "description": "dest_namespace is the destination namespace of the policy."
                },
                "speed": {
                  "type": "integer",
                  "format": "int32",
                  "title": "speed limit for each task\nunit: kbps"
                }
              }
            }
          }
        ],
        "tags": [
          "Replications"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/project/{project}/scanner": {
      "get": {
        "summary": "list scanner registration of project",
        "operationId": "Image_GetScannerOfProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetScannerOfProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/projects": {
      "get": {
        "summary": "ListRegistryProject is get registry all project",
        "operationId": "Image_ListRegistryProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistryProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is fuzzy search project name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyBind",
            "description": "only_bind is only return project bind workspace project.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "CreateRegistryProject is create project",
        "operationId": "Image_CreateRegistryProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "title": "project is project name"
                },
                "public": {
                  "type": "boolean",
                  "title": "public is true or false"
                }
              }
            }
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/projects/{project}": {
      "delete": {
        "summary": "DeleteRegistryProject is delete project",
        "operationId": "Image_DeleteRegistryProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "UpdateProject is update project",
        "operationId": "Image_UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "public": {
                  "type": "boolean",
                  "title": "public is true or false"
                }
              }
            }
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/projects/{project}/binding": {
      "put": {
        "summary": "UpdateRegistryProjectBinding is binding workspace to project",
        "operationId": "Image_UpdateRegistryProjectBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bindingWorkspace": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "binding_workspace is project binding workspace"
                }
              }
            }
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/statistic": {
      "get": {
        "summary": "GetRegistryProject is get registry all project",
        "operationId": "Image_GetRegistryStatistic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StatisticResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/registries/{registry}/storage_statistic": {
      "get": {
        "summary": "get usage storage statistic",
        "operationId": "Registries_GetStorageStatistic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetStorageStatisticResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "description": "start timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "end",
            "description": "end timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/select/registries/summary": {
      "get": {
        "summary": "ListRegistry return registry instance.",
        "operationId": "Image_APIListRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1APIListRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global",
            "description": "global is get global registry",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is fuzzy search registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/select/registries/{registry}/projects": {
      "get": {
        "summary": "APIListProject is return project from current registry",
        "operationId": "Image_APIListProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1APIListProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "public is filter public project or private project, value is true or false",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyBind",
            "description": "only_bind is only return project bind workspace project, this registry is admin manager.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "all",
            "description": "all is return all project, public field is invalid.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is fuzzy search project name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/select/registries/{registry}/projects/{project}/repositories": {
      "get": {
        "summary": "APIListRepositories is return repositories from current registry and project",
        "operationId": "Image_APIListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1APIListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry_secret_name is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project_name is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "workspace_id is current use workspace id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is fuzzy search repositories name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/select/registries/{registry}/projects/{project}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "APIListArtifacts is return artifacts from current registry and project and repositories",
        "operationId": "Image_APIListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1APIListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repository name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyTagName",
            "description": "fuzzy_name is fuzzy search artifact name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspace": {
      "get": {
        "summary": "list visible workspaces",
        "operationId": "Core_ListVisibleWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "workspace name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Core"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspace/{workspace}/minio": {
      "get": {
        "summary": "the api is list mcamel minio instance from workspace",
        "operationId": "Harbor_ListMinio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListMinioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "The namespace of the postgresql instance",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "The page of the postgresql instance\npage is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspace/{workspace}/postgresql": {
      "get": {
        "operationId": "Harbor_ListPostgresql",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPostgresqlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "The namespace of the postgresql instance",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "The page of the postgresql instance\npage is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspace/{workspace}/redis": {
      "get": {
        "operationId": "Harbor_ListRedis",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRedisResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "The namespace of the redis instance",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "The page of the redis instance\npage is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Harbor"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries": {
      "get": {
        "summary": "list registry with workspace scope",
        "operationId": "Registries_ListWorkspaceRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspaceRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is associated registry workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is search registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "create registry with workspace scope",
        "operationId": "Registries_CreateWorkspaceRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is associated registry workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is registry name."
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1RegistryType",
                  "title": "RegistryType is registry type"
                },
                "url": {
                  "type": "string",
                  "title": "url is access to registry url address"
                },
                "credential": {
                  "$ref": "#/definitions/v1alpha1RegistryAdminCredential",
                  "title": "RegistryAdminCredential is login registry credential"
                }
              }
            }
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/summary": {
      "get": {
        "summary": "ListRegistry return registry instance.",
        "operationId": "Image_ListRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiimagev1alpha1ListRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}": {
      "get": {
        "summary": "get registry with workspace scope",
        "operationId": "Registries_GetWorkspaceRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is associated registry workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "delete registry with workspace scope",
        "operationId": "Registries_DeleteWorkspaceRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is associated registry workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "update registry with workspace scope",
        "operationId": "Registries_UpdateWorkspaceRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is associated registry workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credential": {
                  "$ref": "#/definitions/v1alpha1RegistryAdminCredential",
                  "title": "credential is login registry credential"
                }
              }
            }
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects": {
      "get": {
        "summary": "ListProject is return project from current registry",
        "operationId": "Image_ListProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is search project name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}": {
      "get": {
        "operationId": "Image_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectResponseItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories": {
      "get": {
        "summary": "ListRepositories is return repositories from current registry and project",
        "operationId": "Image_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace_id is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry_secret_name is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project_name is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "fuzzy_name is search repository name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": " - unspecified: unspecified is unspecified\n - pull_count: pull_count is sort by pull count\n - update_time: update_time is sort by update time",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "unspecified",
              "pull_count",
              "update_time"
            ],
            "default": "unspecified"
          },
          {
            "name": "sortDir",
            "description": " - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories/{repository}": {
      "get": {
        "operationId": "Image_GetRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "DeleteRepositories is delete repositories api",
        "operationId": "Image_DeleteRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "Image_UpdateRepositoryDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateRepositoryDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "description is repositories description"
                }
              }
            }
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts is return artifacts from current registry and project and repositories",
        "operationId": "Image_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repository name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "sort_by determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "orderBy",
            "description": "order_by determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyTagName",
            "description": "fuzzy_tag_name is fuzzy search artifact with tag name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts/history/{digest}": {
      "get": {
        "summary": "GetArtifactsInfo is return artifacts info",
        "operationId": "Image_GetArtifactsInfoBuildHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1TagInfoBuildHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repository name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "digest",
            "description": "digest is image digest",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts/{digest}": {
      "get": {
        "summary": "GetArtifactsInfo is return artifacts info",
        "operationId": "Image_GetArtifactsInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1TagInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repository name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "digest",
            "description": "digest is image digest",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "DeleteArtifacts is delete artifacts",
        "operationId": "Image_DeleteArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "digest",
            "description": "digest is artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts/{digest}/scan": {
      "post": {
        "summary": "Mirror scan of artifact",
        "operationId": "Image_ScanArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "digest",
            "description": "digest is artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "stop scan of artifact",
        "operationId": "Image_StopScanArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "digest",
            "description": "digest is artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/projects/{project}/repositories/{repository}/artifacts/{digest}/scan/{report}": {
      "get": {
        "summary": "Mirror scan of artifact",
        "operationId": "Image_GetScanReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetScanReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "project is project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "repository is repositories name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "digest",
            "description": "digest is artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "report",
            "description": "report is scan report id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/push": {
      "get": {
        "operationId": "Image_GetPushCommand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPushCommandResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is current use workspace id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "expired",
            "description": "expired",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Image"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/retention": {
      "post": {
        "summary": "create retention",
        "operationId": "Retention_CreateRetention",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "retention": {
                  "$ref": "#/definitions/v1alpha1RetentionPolicy"
                }
              }
            }
          }
        ],
        "tags": [
          "Retention"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/retention/{retentionId}": {
      "get": {
        "summary": "GetRetention is get retention policy",
        "operationId": "Retention_GetRetention",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RetentionPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "is registry name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "retentionId",
            "description": "is retention id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Retention"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "update retention policy",
        "operationId": "Retention_UpdateRetention",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RetentionPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "retentionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "retention": {
                  "$ref": "#/definitions/v1alpha1RetentionPolicy"
                }
              }
            }
          }
        ],
        "tags": [
          "Retention"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/retention/{retentionId}/executions": {
      "get": {
        "summary": "list retention execution",
        "operationId": "Retention_ListRetentionExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRetentionExecutionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "retentionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "page_size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Retention"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "start retention execution",
        "operationId": "Retention_CreateRetentionExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "retentionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dryRun": {
                  "type": "boolean",
                  "title": "if dry_run is true, the execution will not delete any image"
                }
              }
            }
          }
        ],
        "tags": [
          "Retention"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/retention/{retentionId}/executions/{executionId}": {
      "put": {
        "summary": "stop retention execution",
        "operationId": "Retention_StopRetentionExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "retentionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Retention"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/robot_info": {
      "get": {
        "operationId": "Registries_GetRegistryRobotInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RegistryRobotInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/apis/kangaroo.io/v1alpha1/workspaces/{workspace}/registries/{registry}/type": {
      "get": {
        "summary": "get registry type",
        "operationId": "Registries_GetRegistryType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetRegistryTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace",
            "description": "workspace is associated registry workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registry",
            "description": "registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "CacheSpecCacheType": {
      "type": "string",
      "enum": [
        "CACHE_UNSPECIFIED",
        "BUILT_IN_MODE",
        "MCAMEL_MODE",
        "EXTERNAL_MODE"
      ],
      "default": "CACHE_UNSPECIFIED",
      "description": "- CACHE_UNSPECIFIED: CACHE_UNSPECIFIED wen un specified type\n - BUILT_IN_MODE: BUILT_IN_MODE mode, redis created by HarborCluster cr\n - MCAMEL_MODE: MCAMEL_MODE is daocloud provide\n - EXTERNAL_MODE: EXTERNAL_MODE is direct config redis url、username、password",
      "title": "CacheType is describe how to access the cache for redis"
    },
    "DatabaseSpecDatabaseType": {
      "type": "string",
      "enum": [
        "DATABASE_UNSPECIFIED",
        "BUILT_IN_MODE",
        "MCAMEL_MODE",
        "EXTERNAL_MODE"
      ],
      "default": "DATABASE_UNSPECIFIED",
      "description": "- DATABASE_UNSPECIFIED: DATABASE_UNSPECIFIED wen un specified type\n - BUILT_IN_MODE: BUILT_IN_MODE mode, database created by HarborCluster cr\n - MCAMEL_MODE: MCAMEL_MODE is daocloud provide\n - EXTERNAL_MODE: EXTERNAL_MODE is direct config database url、username、password",
      "title": "DatabaseType is describe how to access the database"
    },
    "ExposeSpecExposeType": {
      "type": "string",
      "enum": [
        "EXPOSE_UNSPECIFIED",
        "INGRESS",
        "LOAD_BALANCE",
        "NODE_PORT"
      ],
      "default": "EXPOSE_UNSPECIFIED",
      "description": "- EXPOSE_UNSPECIFIED: EXPOSE_UNSPECIFIED wen un specified type\n - INGRESS: INGRESS is describe use ingress expose harbor\n - LOAD_BALANCE: LOAD_BALANCE is describe use LoadBalance expose harbor\n - NODE_PORT: NODE_PORT is describe use NodePort expose harbor",
      "title": "ExposeType describe expose harbor server type"
    },
    "FilterDecoration": {
      "type": "string",
      "enum": [
        "DECORATION_UNSPECIFIED",
        "DECORATION_MATCHES",
        "DECORATION_EXCLUDES"
      ],
      "default": "DECORATION_UNSPECIFIED"
    },
    "FilterFilterType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "NAME",
        "TAG"
      ],
      "default": "UNSPECIFIED"
    },
    "HarborClusterStatusTargetClusterStatus": {
      "type": "string",
      "enum": [
        "TARGET_CLUSTER_STATUS_UNSPECIFIED",
        "TARGET_CLUSTER_STATUS_RUNNING",
        "TARGET_CLUSTER_STATUS_FAILED",
        "TARGET_CLUSTER_STATUS_UNKNOWN",
        "TARGET_CLUSTER_STATUS_DELETING",
        "TARGET_CLUSTER_STATUS_CREATING",
        "TARGET_CLUSTER_STATUS_UPDATING"
      ],
      "default": "TARGET_CLUSTER_STATUS_UNSPECIFIED"
    },
    "NativeRegistryCredentialcredential_type": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "BASIC",
        "OAUTH",
        "SECRET"
      ],
      "default": "UNSPECIFIED",
      "description": " - UNSPECIFIED: UNSPECIFIED is the default value."
    },
    "NativeRegistryregistry_status": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "HEALTHY",
        "UNHEALTHY"
      ],
      "default": "UNSPECIFIED",
      "description": " - UNSPECIFIED: UNSPECIFIED is the default value.\n - HEALTHY: HEALTHY is the healthy status.\n - UNHEALTHY: UNHEALTHY is the unhealthy status."
    },
    "OCIStorageSpecStorageType": {
      "type": "string",
      "enum": [
        "STORAGE_UNSPECIFIED",
        "S3",
        "STORAGE_CLASS",
        "MCAMEL_MINIO"
      ],
      "default": "STORAGE_UNSPECIFIED",
      "title": "- STORAGE_UNSPECIFIED: STORAGE_UNSPECIFIED wen un specified type\n - S3: use s3 storage oci artifact\n - STORAGE_CLASS: STORAGE_CLASS use StorageClass to dynamic create persistent volume\n - MCAMEL_MINIO: MCAMEL_MINIO use mcamel minio to storage oci artifact"
    },
    "RegistryTarGetClusterStatus": {
      "type": "string",
      "enum": [
        "TARGET_CLUSTER_STATUS_UNSPECIFIED",
        "TARGET_CLUSTER_STATUS_NOT_FOUND",
        "TARGET_CLUSTER_STATUS_NORMAL"
      ],
      "default": "TARGET_CLUSTER_STATUS_UNSPECIFIED",
      "title": "- TARGET_CLUSTER_STATUS_UNSPECIFIED: CLUSTER_STATUS_UNSPECIFIED wen un specified type\nif registry type is integrated, the status is not specified\n - TARGET_CLUSTER_STATUS_NORMAL: TARGET_CLUSTER_STATUS_NORMAL is the cluster is normal.\nexcept for the above status, the rest are all normal status"
    },
    "ScanOverviewSeverity": {
      "type": "string",
      "enum": [
        "unspecified",
        "unknown",
        "low",
        "medium",
        "high",
        "critical",
        "none"
      ],
      "default": "unspecified",
      "description": "- unspecified: unspecified is unspecified\n - unknown: unknown is unknown\n - low: low is low\n - medium: medium is medium\n - high: high is high\n - critical: critical is critical\n - none: none is none",
      "title": "severity is scan result, e.g. High、Critical、None"
    },
    "VerifyHarborOperatorResponseHarborOperatorStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_HARBOR_OPERATOR_IS_NOT_INSTALLED",
        "STATUS_CLUSTER_IS_NOT_EXIST",
        "STATUS_READY"
      ],
      "default": "STATUS_UNSPECIFIED",
      "title": "- STATUS_UNSPECIFIED: HARBOR_OPERATOR_STATUS_UNSPECIFIED is default value\n - STATUS_HARBOR_OPERATOR_IS_NOT_INSTALLED: HARBOR_OPERATOR_STATUS_NOT_INSTALLED is not installed harbor operator\n - STATUS_CLUSTER_IS_NOT_EXIST: STATUS_CLUSTER_IS_NOT_EXIST is not exist cluster\n - STATUS_READY: STATUS_READY is ready to deploy harbor"
    },
    "apiimagev1alpha1ListRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RegistrySecret"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "apiregistryv1alpha1ListRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "data of registry"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "apitypesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - created_at: Sort result by creationTimestamp."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "imagev1alpha1Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is tag name"
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "title": "push_time is tag push time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "typesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "cluster": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "typesOrderBy": {
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "default": "desc",
      "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order."
    },
    "typesPage": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "pageSize is the data number shown per page."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Page is for data paging."
    },
    "v1alpha1APIListArtifactsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifacts"
          },
          "title": "data of repository"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1APIListProjectResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "items is project name"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1APIListRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RegistrySecret"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1APIListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Repository"
          },
          "title": "data of repository"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1Artifacts": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "title": "digest is image digest"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/imagev1alpha1Tag"
          },
          "title": "tags is tag name"
        },
        "scanOverview": {
          "$ref": "#/definitions/v1alpha1ScanOverview",
          "title": "scan_overview is cve id"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Reference"
          }
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "title": "image_size is size"
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "title": "push_time is first push time"
        },
        "pullTime": {
          "type": "string",
          "format": "int64",
          "title": "pull_time is last pull time"
        },
        "imagePullUrl": {
          "type": "string",
          "title": "pull_cmd is pull image cmd"
        }
      }
    },
    "v1alpha1BuildHistory": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "title": "created is image level create time"
        },
        "createdBy": {
          "type": "string",
          "title": "created_by is image level add content"
        }
      }
    },
    "v1alpha1CacheBuiltInModeSpec": {
      "type": "object",
      "title": "CacheBuiltInModeSpec is describe use BuiltInMode how to configuration"
    },
    "v1alpha1CacheExternalModeSpec": {
      "type": "object",
      "properties": {
        "hostAndPort": {
          "type": "string",
          "title": "host_and_port is name of host to connect to and name of port to connect to"
        },
        "username": {
          "type": "string",
          "title": "username is describe connect cache username"
        },
        "password": {
          "type": "string",
          "title": "password is describe connect cache password"
        }
      },
      "title": "CacheExternalModeSpec is describe how to config external redis cache"
    },
    "v1alpha1CacheMcamelModeSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is describe mcamel redis instance name"
        },
        "namespace": {
          "type": "string",
          "title": "namespace is describe mcamel redis instance namespace"
        },
        "cluster": {
          "type": "string",
          "title": "cluster is describe mcamel redis instance cluster"
        },
        "workspace": {
          "type": "string",
          "title": "workspace is describe mcamel redis instance workspace"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RedisInstanceType",
          "title": "RedisInstanceType is describe mcamel redis instance type"
        }
      },
      "title": "CacheMcamelModeSpec is describe use mcame mode how configuration"
    },
    "v1alpha1CacheSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/CacheSpecCacheType",
          "title": "type describe how to access the cache"
        },
        "inSpec": {
          "$ref": "#/definitions/v1alpha1CacheBuiltInModeSpec",
          "title": "in_spec describe behavior required to create a database"
        },
        "mcamelSpec": {
          "$ref": "#/definitions/v1alpha1CacheMcamelModeSpec",
          "title": "mcamel_spec describe behavior required to user a mcamel database"
        },
        "externalSpec": {
          "$ref": "#/definitions/v1alpha1CacheExternalModeSpec",
          "title": "external_spec describe behavior required to user a external database"
        }
      }
    },
    "v1alpha1CheckDependServiceResponse": {
      "type": "object",
      "properties": {
        "db": {
          "$ref": "#/definitions/v1alpha1CheckResponse"
        },
        "cache": {
          "$ref": "#/definitions/v1alpha1CheckResponse"
        },
        "storage": {
          "$ref": "#/definitions/v1alpha1CheckResponse"
        }
      }
    },
    "v1alpha1CheckResponse": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "isPass": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateNativeRegistryRequestType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INTEGRATION",
        "NATIVE"
      ],
      "default": "UNSPECIFIED",
      "description": " - UNSPECIFIED: NativeRegistry is the native registry.\n - INTEGRATION: INTEGRATION is the integration registry.\n - NATIVE: NATIVE is the native registry."
    },
    "v1alpha1CreateRegistryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is registry name."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RegistryType",
          "title": "type is registry type"
        },
        "url": {
          "type": "string",
          "title": "registry_url is access to registry url address"
        },
        "credential": {
          "$ref": "#/definitions/v1alpha1RegistryAdminCredential",
          "title": "credential is login registry credential"
        }
      }
    },
    "v1alpha1DBBuiltInModeSpec": {
      "type": "object",
      "title": "DBBuiltInModeSpec is describe use buildt in model how to configuration"
    },
    "v1alpha1DBExternalModeSpec": {
      "type": "object",
      "properties": {
        "hostAndPort": {
          "type": "string",
          "title": "host_and_port is name of host to connect to and name of port to connect to"
        },
        "username": {
          "type": "string",
          "title": "username is describe connect database username"
        },
        "password": {
          "type": "string",
          "title": "password is describe connect database password"
        }
      },
      "title": "DBExternalModeSpec is describe how to config external database"
    },
    "v1alpha1DBMcamelModeSpec": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "cluster is postgres deploy cluster name"
        },
        "namespace": {
          "type": "string",
          "title": "namespace is postgres deploy namespace"
        },
        "name": {
          "type": "string",
          "title": "name is postgres instance name"
        },
        "workspace": {
          "type": "string"
        }
      },
      "title": "DBMcamelModeSpec is describe use mcamle db how to configuration"
    },
    "v1alpha1DatabaseSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/DatabaseSpecDatabaseType",
          "title": "type describe how to access the database"
        },
        "inSpec": {
          "$ref": "#/definitions/v1alpha1DBBuiltInModeSpec",
          "title": "in_spec describe behavior required to create a database"
        },
        "mcamelSpec": {
          "$ref": "#/definitions/v1alpha1DBMcamelModeSpec",
          "title": "mcamel_spec describe behavior required to user a mcamel database"
        },
        "externalSpec": {
          "$ref": "#/definitions/v1alpha1DBExternalModeSpec",
          "title": "external_spec describe behavior required to user a external database"
        }
      },
      "title": "Database is describe run Harbor required database configuration"
    },
    "v1alpha1Execution": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "int64",
          "title": "The end time"
        },
        "failed": {
          "type": "string",
          "format": "int64",
          "title": "The count of failed executions"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "The ID of the execution"
        },
        "inProgress": {
          "type": "string",
          "format": "int64",
          "title": "The count of in_progress executions"
        },
        "policyId": {
          "type": "string",
          "format": "int64",
          "title": "The ID if the policy that the execution belongs to"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "The start time"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ExecutionStatus",
          "title": "The status of the execution"
        },
        "statusText": {
          "type": "string",
          "title": "The status text"
        },
        "stopped": {
          "type": "string",
          "format": "int64",
          "title": "The count of stopped executions"
        },
        "succeed": {
          "type": "string",
          "format": "int64",
          "title": "The count of succeed executions"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "The total count of all executions"
        },
        "trigger": {
          "$ref": "#/definitions/v1alpha1TriggerMode",
          "title": "The trigger mode"
        }
      }
    },
    "v1alpha1ExecutionStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_STOPPED",
        "STATUS_SUCCEED",
        "STATUS_FAILED",
        "STATUS_IN_PROGRESS"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": " - STATUS_UNSPECIFIED: UNSPECIFIED is the default value.\n - STATUS_STOPPED: STOPPED is the stopped status.\n - STATUS_SUCCEED: SUCCEED is the succeed status.\n - STATUS_FAILED: FAILED is the failed status.\n - STATUS_IN_PROGRESS: IN_PROGRESS is the in_progress status."
    },
    "v1alpha1ExposeIngressSpec": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "title": "host is expose harbor domain"
        },
        "ingressClassName": {
          "type": "string",
          "title": "ingressClassName is set ingressClass name"
        }
      },
      "title": "ExposeIngressSpec is describe how to use ingress expose harbor"
    },
    "v1alpha1ExposeLoadBalanceSpec": {
      "type": "object",
      "title": "ExposeLoadBalanceSpec is describe how to use LoadBalance expose harbor"
    },
    "v1alpha1ExposeNodePortSpec": {
      "type": "object",
      "properties": {
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "title": "node_port is customer node port"
        }
      },
      "title": "ExposeNodePortSpec is describe how to use NodePort expose harbor"
    },
    "v1alpha1ExposeSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ExposeSpecExposeType",
          "title": "type is define expose harbor type"
        },
        "ingressSpec": {
          "$ref": "#/definitions/v1alpha1ExposeIngressSpec",
          "title": "ingress_spec is when type is Ingress, describe how to use ingress expose harbor"
        },
        "loadBalanceSpec": {
          "$ref": "#/definitions/v1alpha1ExposeLoadBalanceSpec",
          "title": "load_balance_spec is when type is LoadBalance, describe how to use LoadBalance expose harbor"
        },
        "nodePortSpec": {
          "$ref": "#/definitions/v1alpha1ExposeNodePortSpec",
          "title": "node_port_spec is when type is NodePort, describe how to use NodePort expose harbor"
        },
        "externalUrl": {
          "type": "string",
          "title": "external_url is expose url"
        },
        "exposeHttps": {
          "type": "boolean",
          "title": "expose_https is set true or false, true is use https, false is use http"
        },
        "httpsSpec": {
          "$ref": "#/definitions/v1alpha1HttpsSpec",
          "title": "https_spec is describe https config"
        }
      },
      "title": "ExposeSpec is describe how to expose harbor server"
    },
    "v1alpha1ExtraAttrs": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string",
          "title": "architecture is image support cpu arch"
        },
        "author": {
          "type": "string",
          "title": "author is image author"
        },
        "digest": {
          "type": "string",
          "title": "digest is image digest"
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "title": "image_size is size"
        },
        "createdTime": {
          "type": "string",
          "format": "int64",
          "title": "created_time is image build time"
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "title": "push_time is image push time"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/imagev1alpha1Tag"
          },
          "title": "tags is tag name"
        },
        "repoName": {
          "type": "string",
          "title": "repo_name is image repo name"
        },
        "os": {
          "type": "string",
          "title": "os is image support os"
        },
        "imagePullUrl": {
          "type": "string",
          "title": "pull_cmd is pull image cmd"
        },
        "pullTime": {
          "type": "string",
          "format": "int64",
          "title": "pull_time is image pull time"
        }
      }
    },
    "v1alpha1Filter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FilterFilterType"
        },
        "value": {
          "type": "string"
        },
        "decoration": {
          "$ref": "#/definitions/FilterDecoration"
        }
      }
    },
    "v1alpha1GetHarborParamsResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "harbor version list"
        },
        "storage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceNameList"
          },
          "title": "List of available storagesclasses"
        },
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceNameList"
          },
          "title": "List of ingress in a cluster"
        }
      },
      "description": "Response message for the `GetHarborParams` method."
    },
    "v1alpha1GetPushCommandResponse": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "string",
          "title": "cmd is push image to registry command"
        },
        "expired": {
          "type": "string",
          "format": "int64",
          "title": "expired is push image to registry command expired time"
        },
        "expiredAt": {
          "type": "string",
          "title": "expired_at is push image to registry command expired time"
        }
      }
    },
    "v1alpha1GetRegistryTypeResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "description": "registry is registry name."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RegistryType",
          "title": "registry type"
        }
      }
    },
    "v1alpha1GetReplicationTaskLogResponse": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "description": "log is the log of the replication task."
        }
      }
    },
    "v1alpha1GetScanReportResponse": {
      "type": "object",
      "properties": {
        "report": {
          "type": "string",
          "title": "report is scan report"
        }
      }
    },
    "v1alpha1GetScannerOfProjectResponse": {
      "type": "object",
      "properties": {
        "scanner": {
          "$ref": "#/definitions/v1alpha1ScannerRegistration"
        }
      }
    },
    "v1alpha1GetStorageStatisticResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StorageStatisticItem"
          },
          "title": "usage storage statistic data"
        }
      }
    },
    "v1alpha1GlobalPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PermissionsType"
          }
        }
      }
    },
    "v1alpha1HarborCluster": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "metadata Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1HarborClusterSpec",
          "title": "spec behaviour of HarborClusterSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1HarborClusterStatus",
          "title": "status current information about the HarborCluster"
        }
      },
      "title": "HarborCluster"
    },
    "v1alpha1HarborClusterSpec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "version is HarborCluster deploy the version used by Harbor"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "replicas is HarborCluster number of replicas by deployment"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1Resources",
          "description": "resources describes the compute resource requirements."
        },
        "database": {
          "$ref": "#/definitions/v1alpha1DatabaseSpec",
          "title": "database is describe run Harbor required database configuration"
        },
        "cache": {
          "$ref": "#/definitions/v1alpha1CacheSpec",
          "title": "cache is describe run Harbor required cache configuration"
        },
        "storage": {
          "$ref": "#/definitions/v1alpha1OCIStorageSpec",
          "title": "storage is describe run Harbor storage oci artifact configuration"
        },
        "expose": {
          "$ref": "#/definitions/v1alpha1ExposeSpec",
          "title": "expose is describe how to expose harbor server"
        },
        "userSyncToHarbor": {
          "type": "boolean",
          "title": "If true it will sync all users to the harbor instance,\nallowing them to log in to the harbor instance with their DCE5.0 account password"
        },
        "adminPassword": {
          "type": "string",
          "title": "admin_password is harbor admin password"
        },
        "enableTrivy": {
          "type": "boolean",
          "title": "enable_trivy is enable harbor secret scan"
        },
        "enableMetrics": {
          "type": "boolean"
        }
      },
      "title": "HarborClusterSpec is describe this HarborCluster resource behavior"
    },
    "v1alpha1HarborClusterStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1HarborClusterStatusClusterStatus",
          "title": "Status indicates the overall status of the Harbor cluster\nStatus can be \"provisioning\", \"healthy\" and \"unhealthy\""
        },
        "targetClusterStatus": {
          "$ref": "#/definitions/HarborClusterStatusTargetClusterStatus",
          "title": "TargetClusterStatus indicates the overall status of the target cluster\nStatus can be \"running\", \"failed\", \"unknown\", \"deleting\", \"creating\" and \"updating\""
        }
      },
      "title": "HarborClusterStatus describe this HarborCluster resource status"
    },
    "v1alpha1HarborClusterStatusClusterStatus": {
      "type": "string",
      "enum": [
        "CLUSTER_STATUS_UNSPECIFIED",
        "PROVISIONING",
        "HEALTHY",
        "UNHEALTHY"
      ],
      "default": "CLUSTER_STATUS_UNSPECIFIED",
      "description": " - CLUSTER_STATUS_UNSPECIFIED: CLUSTER_STATUS_UNSPECIFIED wen un specified type\n - PROVISIONING: PROVISIONING is the status of provisioning.\n - HEALTHY: HEALTHY is the status of healthy.\n - UNHEALTHY: HEALTHY is the status of unhealthy."
    },
    "v1alpha1HttpsSpec": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "namespace is save https secret namespace"
        },
        "name": {
          "type": "string",
          "title": "name is save https secret name"
        }
      }
    },
    "v1alpha1IntegratedType": {
      "type": "string",
      "enum": [
        "IntegratedType_UNSPECIFIED",
        "Automatic",
        "Manual"
      ],
      "default": "IntegratedType_UNSPECIFIED",
      "description": " - IntegratedType_UNSPECIFIED: INTEGRATED_UNSPECIFIED wen un specified type.\n - Automatic: Automatic means is registry integrated type is trusteeship.\n - Manual: Manual means is registry integrated type is integrated."
    },
    "v1alpha1ListArtifactsRequestSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting."
    },
    "v1alpha1ListArtifactsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifacts"
          },
          "title": "data of repository"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListClusterRequestSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "creation_time"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - creation_time: Sort result by creation_time."
    },
    "v1alpha1ListClusterResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "cluster name list"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListExecutionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Execution"
          },
          "description": "items is the list of NativeRegistry."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListFilterRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "data of registry"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHarborClusterResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HarborCluster"
          },
          "description": "The data is the job YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      },
      "title": "HarborClusterList is HarborCluster list data"
    },
    "v1alpha1ListMinioResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1MinioSummary"
          },
          "title": "The minio instance list"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "title": "The page of the minio instance"
        }
      }
    },
    "v1alpha1ListNamespaceRequestSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "creation_time"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": " - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - creation_time: Sort result by creation_time."
    },
    "v1alpha1ListNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of namespaces under cluster"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListNativeRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NativeRegistry"
          },
          "description": "items is the list of NativeRegistry."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListPoliciesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Policy"
          },
          "description": "items is the list of NativeRegistry."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListPostgresqlResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PostgresqlSummary"
          },
          "title": "The list of the postgresql instance"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "title": "The page of the postgresql instance"
        }
      }
    },
    "v1alpha1ListProjectResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ListProjectResponseItem"
          },
          "title": "items is project name"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListProjectResponseItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is project name"
        },
        "public": {
          "type": "boolean",
          "title": "public is project public status"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total is project total artifact num"
        },
        "createTime": {
          "type": "string",
          "format": "int64",
          "title": "create_time is project create time"
        },
        "retentionId": {
          "type": "string",
          "format": "int64",
          "title": "retention_id is project retention id"
        },
        "projectId": {
          "type": "string",
          "format": "int64",
          "title": "project_id is project id"
        }
      }
    },
    "v1alpha1ListRedisResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RedisSummary"
          },
          "title": "The redis instance list"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "title": "The page of the redis instance"
        }
      }
    },
    "v1alpha1ListRegistryProjectResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RegistryProjectResponse"
          },
          "title": "items is project items"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListReplicationTasksResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReplicationTask"
          },
          "description": "items is the list of NativeRegistry."
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListRepositoriesRequestSortBy": {
      "type": "string",
      "enum": [
        "unspecified",
        "pull_count",
        "update_time"
      ],
      "default": "unspecified",
      "title": "- unspecified: unspecified is unspecified\n - pull_count: pull_count is sort by pull count\n - update_time: update_time is sort by update time"
    },
    "v1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Repository"
          },
          "title": "data of repository"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListRetentionExecutionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RetentionExecution"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListTLSResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ListTLSResponseItem"
          },
          "description": "The data is the job YAML details."
        }
      }
    },
    "v1alpha1ListTLSResponseItem": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1TLSType",
          "title": "type is tls type"
        }
      }
    },
    "v1alpha1ListWorkspaceRegistryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "data of associated registry"
        },
        "pagination": {
          "$ref": "#/definitions/typesPage",
          "description": "Page returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListWorkspaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Workspace"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPage"
        }
      }
    },
    "v1alpha1McamelMinioSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is describe mcamel minio instance name"
        },
        "namespace": {
          "type": "string",
          "title": "namespace is describe mcamel minio instance namespace"
        },
        "cluster": {
          "type": "string",
          "title": "cluster is describe mcamel minio instance cluster"
        },
        "workspace": {
          "type": "string",
          "title": "workspace is describe mcamel minio instance workspace"
        },
        "bucket": {
          "type": "string",
          "title": "bucket is describe mcamel minio instance bucket"
        }
      }
    },
    "v1alpha1MinioStatus": {
      "type": "string",
      "enum": [
        "MINIO_STATUS_UNSPECIFIED",
        "MINIO_STATUS_FAILED",
        "MINIO_STATUS_RUNNING",
        "MINIO_STATUS_CREATING"
      ],
      "default": "MINIO_STATUS_UNSPECIFIED"
    },
    "v1alpha1MinioSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the minio instance"
        },
        "cluster": {
          "type": "string",
          "title": "The cluster of the minio deploy target"
        },
        "namespace": {
          "type": "string",
          "title": "The namespace of the minio deploy target"
        },
        "buckets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The buckets of the minio instance"
        },
        "address": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The address of the minio instance"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1MinioStatus",
          "title": "The status of the minio instance"
        }
      }
    },
    "v1alpha1NativeRegistry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1NativeRegistryType",
          "description": "type is the type of registry."
        },
        "name": {
          "type": "string",
          "description": "name is the name of registry."
        },
        "url": {
          "type": "string",
          "description": "url is the url of registry."
        },
        "nativeRegistryCredential": {
          "$ref": "#/definitions/v1alpha1NativeRegistryCredential",
          "description": "credential is the credential of registry."
        },
        "insecure": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "description": "description is the description of registry."
        },
        "status": {
          "$ref": "#/definitions/NativeRegistryregistry_status",
          "description": "status is the status of registry."
        },
        "creationTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1NativeRegistryCredential": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "Access key, e.g. user name when credential type is 'basic'."
        },
        "accessSecret": {
          "type": "string",
          "description": "Access secret, e.g. password when credential type is 'basic'."
        },
        "type": {
          "$ref": "#/definitions/NativeRegistryCredentialcredential_type",
          "description": "Credential type, such as 'basic', 'oauth'."
        }
      }
    },
    "v1alpha1NativeRegistrySpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1NativeRegistryType",
          "description": "type is the type of registry."
        },
        "name": {
          "type": "string",
          "description": "name is the name of registry."
        },
        "url": {
          "type": "string",
          "description": "url is the url of registry."
        },
        "nativeRegistryCredential": {
          "$ref": "#/definitions/v1alpha1NativeRegistryCredential",
          "description": "credential is the credential of registry."
        },
        "insecure": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "description": "description is the description of registry."
        }
      }
    },
    "v1alpha1NativeRegistryType": {
      "type": "string",
      "enum": [
        "NATIVE_REGISTRY_UNSPECIFIED",
        "NATIVE_REGISTRY_DOCKER_REGISTRY",
        "NATIVE_REGISTRY_HARBOR",
        "NATIVE_REGISTRY_JFROG_ARTIFACTORY"
      ],
      "default": "NATIVE_REGISTRY_UNSPECIFIED",
      "description": " - NATIVE_REGISTRY_UNSPECIFIED: UNSPECIFIED is the default value.\n - NATIVE_REGISTRY_DOCKER_REGISTRY: DOCKER is the docker registry.\n - NATIVE_REGISTRY_HARBOR: HARBOR is the harbor registry.\n - NATIVE_REGISTRY_JFROG_ARTIFACTORY: JFROG_ARTIFACTORY is the jfrog_artifactory registry."
    },
    "v1alpha1OCIStorageSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OCIStorageSpecStorageType",
          "title": "type describe how to user storage oci artifact"
        },
        "s3Spec": {
          "$ref": "#/definitions/v1alpha1S3Spec",
          "title": "se_spec describe behavior required to use s3"
        },
        "mcamelMinioSpec": {
          "$ref": "#/definitions/v1alpha1McamelMinioSpec",
          "title": "mcamel_minio_spec describe behavior required to use mcamel minio"
        },
        "scSpec": {
          "$ref": "#/definitions/v1alpha1StorageClassSpec",
          "title": "sc_spec describe behavior required to user storageClass"
        }
      },
      "title": "OCIStorage is describe run Harbor storage oci artifact configuration"
    },
    "v1alpha1PermissionsType": {
      "type": "string",
      "enum": [
        "ScanImage",
        "DeleteImage",
        "GetImage",
        "CreateImageKey",
        "CreateConnectedRegistry",
        "DeleteConnectedRegistry",
        "UpdateConnectedRegistry",
        "GetConnectedRegistry",
        "CreateRegistryIntegration",
        "DeleteRegistryIntegration",
        "UpdateRegistryIntegration",
        "GetRegistryIntegration",
        "CreateRegistrySpace",
        "DeleteRegistrySpace",
        "UpdateRegistrySpace",
        "GetRegistrySpace",
        "BindRegistrySpace",
        "CreateManagedHarbor",
        "DeleteManagedHarbor",
        "UpdateManagedHarbor",
        "GetManagedHarbor",
        "CreateImage",
        "UpdateImage"
      ],
      "default": "ScanImage"
    },
    "v1alpha1Platform": {
      "type": "object",
      "properties": {
        "osVersion": {
          "type": "string",
          "title": "The version of the OS that the artifact applys to"
        },
        "architecture": {
          "type": "string",
          "title": "The architecture that the artifact applys to"
        },
        "os": {
          "type": "string",
          "title": "The OS that the artifact applys to"
        },
        "variant": {
          "type": "string",
          "title": "The variant of the CPU"
        }
      }
    },
    "v1alpha1Policy": {
      "type": "object",
      "properties": {
        "destRegistry": {
          "$ref": "#/definitions/v1alpha1NativeRegistry"
        },
        "srcRegistry": {
          "$ref": "#/definitions/v1alpha1NativeRegistry"
        },
        "enabled": {
          "type": "boolean"
        },
        "creationTime": {
          "type": "string",
          "format": "int64"
        },
        "updateTime": {
          "type": "string",
          "format": "int64"
        },
        "speed": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "override": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "destNamespace": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Filter"
          }
        },
        "trigger": {
          "$ref": "#/definitions/v1alpha1Trigger"
        }
      }
    },
    "v1alpha1PostgresqlStatus": {
      "type": "string",
      "enum": [
        "PG_STATUS_UNSPECIFIED",
        "PG_STATUS_RUNNING",
        "PG_STATUS_CREATING",
        "PG_STATUS_FAILED"
      ],
      "default": "PG_STATUS_UNSPECIFIED",
      "title": "- PG_STATUS_RUNNING: The postgresql instance is running\n - PG_STATUS_CREATING: The postgresql instance is creating\n - PG_STATUS_FAILED: The postgresql instance is failed"
    },
    "v1alpha1PostgresqlSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the postgresql instance"
        },
        "cluster": {
          "type": "string",
          "title": "The cluster of the postgresql instance"
        },
        "namespace": {
          "type": "string",
          "title": "The namespace of the postgresql instance"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PostgresqlStatus",
          "title": "The status of the postgresql instance"
        },
        "numberOfInstances": {
          "type": "integer",
          "format": "int32",
          "title": "The Number of instances of the postgresql instance count"
        }
      }
    },
    "v1alpha1QuotaResponse": {
      "type": "object",
      "properties": {
        "request": {
          "type": "string"
        },
        "allocatable": {
          "type": "string"
        }
      }
    },
    "v1alpha1RedisInstanceType": {
      "type": "string",
      "enum": [
        "STANDALONE",
        "CLUSTER",
        "FAILOVER"
      ],
      "default": "STANDALONE",
      "title": "- STANDALONE: The redis instance is standalone\n - CLUSTER: The redis instance is cluster\n - FAILOVER: The redis instance is sentinel"
    },
    "v1alpha1RedisStatus": {
      "type": "string",
      "enum": [
        "RUNNING",
        "CREATING",
        "FAILED"
      ],
      "default": "RUNNING",
      "title": "- RUNNING: The redis instance is running\n - CREATING: The redis instance is creating\n - FAILED: The redis instance is failed"
    },
    "v1alpha1RedisSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the redis instance"
        },
        "redisAddr": {
          "type": "string",
          "title": "redis_addr is the address of the redis instance"
        },
        "cluster": {
          "type": "string",
          "title": "The cluster of the redis instance"
        },
        "namespace": {
          "type": "string",
          "title": "The namespace of the redis instance"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RedisStatus",
          "title": "The status of the redis instance"
        },
        "instanceType": {
          "$ref": "#/definitions/v1alpha1RedisInstanceType",
          "title": "The instance type of the redis instance"
        }
      }
    },
    "v1alpha1Reference": {
      "type": "object",
      "properties": {
        "childDigest": {
          "type": "string",
          "title": "The digest of the child artifact"
        },
        "platform": {
          "$ref": "#/definitions/v1alpha1Platform",
          "title": "platform"
        }
      }
    },
    "v1alpha1Registry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is registry name."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RegistryType",
          "title": "RegistryType is registry type"
        },
        "url": {
          "type": "string",
          "title": "registry_url is access to registry url address"
        },
        "credential": {
          "$ref": "#/definitions/v1alpha1RegistryAdminCredential",
          "title": "RegistryAdminCredential is login registry credential"
        },
        "integratedType": {
          "$ref": "#/definitions/v1alpha1IntegratedType"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RegistryStatus"
        },
        "createAt": {
          "type": "string",
          "format": "int64",
          "title": "create_at is registry create time"
        },
        "isExist": {
          "type": "boolean"
        },
        "clusterStatus": {
          "$ref": "#/definitions/RegistryTarGetClusterStatus"
        }
      }
    },
    "v1alpha1RegistryAdminCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "login registry username."
        },
        "password": {
          "type": "string",
          "title": "login registry password"
        }
      }
    },
    "v1alpha1RegistryDetail": {
      "type": "object",
      "properties": {
        "registryName": {
          "type": "string",
          "description": "registry_name is registry name."
        },
        "host": {
          "type": "string",
          "description": "host is registry access host."
        },
        "deployCluster": {
          "type": "string",
          "description": "deploy_cluster is registry deploy cluster."
        },
        "deployNamespace": {
          "type": "string",
          "title": "deploy_namespace is registry deploy namesapce"
        },
        "copies": {
          "type": "string",
          "description": "copies is number of registry copies."
        },
        "description": {
          "type": "string",
          "description": "description is registry description."
        },
        "createAt": {
          "type": "string",
          "format": "int64",
          "description": "create_at is registry create time."
        },
        "author": {
          "type": "string",
          "description": "author is create registry author."
        },
        "integratedType": {
          "$ref": "#/definitions/v1alpha1IntegratedType",
          "description": "integrated_type is registry integrated type."
        },
        "projectNum": {
          "type": "integer",
          "format": "int32",
          "description": "project_num is registry project number."
        },
        "repositoryNum": {
          "type": "integer",
          "format": "int32",
          "description": "repository_num is registry repository number."
        },
        "chartNum": {
          "type": "integer",
          "format": "int32",
          "description": "chart_num is registry helm chart number."
        },
        "usageStorage": {
          "type": "string",
          "format": "int64",
          "description": "usage_storage is registry usage storage.\nunit is byte."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1RegistryType",
          "description": "type is registry type."
        }
      }
    },
    "v1alpha1RegistryProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "title": "project is project name"
        },
        "public": {
          "type": "boolean",
          "title": "public is true or false"
        },
        "bindingWorkspace": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "binding_workspace is project binding workspace"
        },
        "repositoriesCount": {
          "type": "string",
          "format": "int64",
          "title": "repositories_count is image total num"
        },
        "createTime": {
          "type": "string",
          "format": "int64",
          "title": "create_time is current project create time"
        }
      }
    },
    "v1alpha1RegistryRobotInfoResponse": {
      "type": "object",
      "properties": {
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "v1alpha1RegistrySecret": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "title": "alias is an alias for registry"
        },
        "host": {
          "type": "string",
          "title": "host is registry host"
        },
        "name": {
          "type": "string",
          "title": "name is registry name"
        },
        "health": {
          "$ref": "#/definitions/v1alpha1RegistrySecretHealth",
          "title": "health is registry health status"
        },
        "registryType": {
          "$ref": "#/definitions/v1alpha1RegistryType"
        },
        "scope": {
          "type": "string",
          "title": "scope is registry scope, e.g. workspace, global"
        }
      }
    },
    "v1alpha1RegistrySecretHealth": {
      "type": "string",
      "enum": [
        "health_unspecified",
        "healthy",
        "unhealthy"
      ],
      "default": "health_unspecified",
      "title": "- health_unspecified: health_unspecified is unspecified\n - healthy: healthy is healthy\n - unhealthy: unhealthy is unhealthy"
    },
    "v1alpha1RegistryStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1RegistryStatusClusterStatus",
          "title": "Status indicates the overall status of the Harbor cluster\nStatus can be \"provisioning\", \"healthy\" and \"unhealthy\""
        }
      }
    },
    "v1alpha1RegistryStatusClusterStatus": {
      "type": "string",
      "enum": [
        "CLUSTER_STATUS_UNSPECIFIED",
        "HEALTHY",
        "UNHEALTHY"
      ],
      "default": "CLUSTER_STATUS_UNSPECIFIED",
      "description": " - CLUSTER_STATUS_UNSPECIFIED: CLUSTER_STATUS_UNSPECIFIED wen un specified type\n - HEALTHY: HEALTHY is the status of healthy.\n - UNHEALTHY: HEALTHY is the status of unhealthy."
    },
    "v1alpha1RegistryType": {
      "type": "string",
      "enum": [
        "RegistryType_UNSPECIFIED",
        "DOCKER_REGISTRY",
        "HARBOR",
        "JFROG"
      ],
      "default": "RegistryType_UNSPECIFIED",
      "description": " - RegistryType_UNSPECIFIED: UNSPECIFIED wen un specified type.\n - DOCKER_REGISTRY: DOCKER_REGISTRY means is registry type is docker registry.\n - HARBOR: HARBOR means is registry type is harbor.\n - JFROG: JFROG means is registry type is jfrog."
    },
    "v1alpha1ReplicationTask": {
      "type": "object",
      "properties": {
        "destResource": {
          "type": "string",
          "title": "The destination resource that the task operates"
        },
        "endTime": {
          "type": "string",
          "format": "int64",
          "title": "The end time of the task"
        },
        "executionId": {
          "type": "string",
          "format": "int64",
          "title": "The ID of the execution that the task belongs to"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "The ID of the task"
        },
        "jobId": {
          "type": "string",
          "title": "The ID of the underlying job that the task related to"
        },
        "operation": {
          "$ref": "#/definitions/v1alpha1ReplicationTaskOperation"
        },
        "resourceType": {
          "type": "string",
          "title": "The type of the resource that the task operates"
        },
        "srcResource": {
          "type": "string",
          "title": "The source resource that the task operates"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "The start time of the task"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReplicationTaskStatus",
          "title": "The status of the task"
        }
      }
    },
    "v1alpha1ReplicationTaskOperation": {
      "type": "string",
      "enum": [
        "OPERATION_UNSPECIFIED",
        "OPERATION_DELETE",
        "OPERATION_COPY"
      ],
      "default": "OPERATION_UNSPECIFIED",
      "description": "- OPERATION_UNSPECIFIED: UNSPECIFIED is the default value.\n - OPERATION_DELETE: DELETE is the delete operation.\n - OPERATION_COPY: COPY is the copy operation.",
      "title": "The operation of the task"
    },
    "v1alpha1ReplicationTaskStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_STOPPED",
        "STATUS_SUCCEED",
        "STATUS_FAILED",
        "STATUS_PENDING",
        "STATUS_IN_PROGRESS"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": " - STATUS_UNSPECIFIED: UNSPECIFIED is the default value.\n - STATUS_STOPPED: STOPPED is the stopped status.\n - STATUS_SUCCEED: SUCCEED is the succeed status.\n - STATUS_FAILED: FAILED is the failed status.\n - STATUS_PENDING: PENDING is the pending status.\n - STATUS_IN_PROGRESS: IN_PROGRESS is the in_progress status."
    },
    "v1alpha1Repository": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the repository"
        },
        "public": {
          "type": "boolean",
          "description": "The public status of the project. The valid values are \"true\", \"false\"."
        },
        "tagCount": {
          "type": "string",
          "format": "int64",
          "title": "The count of the artifacts inside the repository"
        },
        "pullCount": {
          "type": "string",
          "format": "int64",
          "title": "The count that the artifact inside the repository pulled"
        },
        "updateTime": {
          "type": "string",
          "format": "int64",
          "title": "The update time of the repository\nFormat: date-time"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1alpha1ResourceNameList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is storageclass or ingress name"
        },
        "default": {
          "type": "boolean",
          "title": "default is describe this storageclass or ingress is this cluster default resource"
        },
        "hwameistorReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "if storageclass is hwameistor,the replicas is hwameistor replicas number\nelse replicas is empty"
        }
      },
      "title": "ResourceNameList is list storage、ingress list"
    },
    "v1alpha1Resources": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "limits": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "title": "Resources is describe run deploy server need resource, such as cpu、memory、disk"
    },
    "v1alpha1RetentionDecoration": {
      "type": "string",
      "enum": [
        "RETENTION_DECORATION_UNSPECIFIED",
        "REPO_MATCHES",
        "REPO_EXCLUDES"
      ],
      "default": "RETENTION_DECORATION_UNSPECIFIED"
    },
    "v1alpha1RetentionExecution": {
      "type": "object",
      "properties": {
        "dryRun": {
          "type": "boolean"
        },
        "endTime": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "policyId": {
          "type": "string",
          "format": "int64"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RetentionExecutionStatus"
        },
        "trigger": {
          "$ref": "#/definitions/v1alpha1RetentionExecutionTrigger"
        }
      }
    },
    "v1alpha1RetentionExecutionStatus": {
      "type": "string",
      "enum": [
        "RETENTION_EXECUTION_STATUS_UNSPECIFIED",
        "RETENTION_EXECUTION_STATUS_RUNNING",
        "RETENTION_EXECUTION_STATUS_STOPPED",
        "RETENTION_EXECUTION_STATUS_SUCCEED",
        "RETENTION_EXECUTION_STATUS_ERROR"
      ],
      "default": "RETENTION_EXECUTION_STATUS_UNSPECIFIED"
    },
    "v1alpha1RetentionExecutionTrigger": {
      "type": "string",
      "enum": [
        "RETENTION_EXECUTION_TRIGGER_MANUAL",
        "RETENTION_EXECUTION_TRIGGER_SCHEDULED"
      ],
      "default": "RETENTION_EXECUTION_TRIGGER_MANUAL"
    },
    "v1alpha1RetentionPolicy": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "The retention ID"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RetentionRule"
          },
          "title": "The retention rule list"
        },
        "scope": {
          "$ref": "#/definitions/v1alpha1RetentionPolicyScope",
          "title": "The retention scope"
        },
        "trigger": {
          "$ref": "#/definitions/v1alpha1RetentionRuleTrigger"
        }
      }
    },
    "v1alpha1RetentionPolicyScope": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "ref": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1RetentionRule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "scopeSelectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RetentionSelector"
          }
        },
        "template": {
          "$ref": "#/definitions/v1alpha1RetentionRuleTemplate"
        }
      }
    },
    "v1alpha1RetentionRuleTemplate": {
      "type": "string",
      "enum": [
        "RETENTION_RULE_TEMPLATE_UNSPECIFIED",
        "N_DAYS_SINCE_LAST_PULL",
        "N_DAYS_SINCE_LAST_PUSH",
        "TYPE_ALWAYS",
        "LATEST_PULLED_N",
        "LATEST_PUSHED_K"
      ],
      "default": "RETENTION_RULE_TEMPLATE_UNSPECIFIED",
      "description": " - RETENTION_RULE_TEMPLATE_UNSPECIFIED: Default value. This value is unused."
    },
    "v1alpha1RetentionRuleTrigger": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1alpha1RetentionRuleTriggerKind",
          "title": "is trigger kind\ne.g. manual, scheduled"
        },
        "settings": {
          "$ref": "#/definitions/v1alpha1RetentionRuleTriggerSettings"
        }
      }
    },
    "v1alpha1RetentionRuleTriggerKind": {
      "type": "string",
      "enum": [
        "RETENTION_RULE_TRIGGER_KIND_UNSPECIFIED",
        "MANUAL",
        "SCHEDULED"
      ],
      "default": "RETENTION_RULE_TRIGGER_KIND_UNSPECIFIED",
      "title": "- RETENTION_RULE_TRIGGER_KIND_UNSPECIFIED: Default value. This value is unused.\n - MANUAL: Manual trigger but the value is not used\n - SCHEDULED: Cron expression"
    },
    "v1alpha1RetentionRuleTriggerSettings": {
      "type": "object",
      "properties": {
        "cron": {
          "type": "string",
          "title": "Cron expression\nif trigger kind is manual, this value is not used"
        }
      }
    },
    "v1alpha1RetentionSelector": {
      "type": "object",
      "properties": {
        "decoration": {
          "$ref": "#/definitions/v1alpha1RetentionDecoration",
          "title": "is selector decoration\ne.g. repoMatches, repoExcludes"
        },
        "extras": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        }
      }
    },
    "v1alpha1S3Spec": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string",
          "title": "access_key the AWS access key. also username"
        },
        "secretKey": {
          "type": "string",
          "title": "secret_key the AWS secret key. also password"
        },
        "region": {
          "type": "string",
          "description": "region the AWS region in which your bucket exists."
        },
        "regionEndpoint": {
          "type": "string",
          "description": "region_endpoint for S3 compatible storage services (Minio, etc)."
        },
        "bucket": {
          "type": "string",
          "description": "bucket The bucket name in which you want to store the registry’s data."
        },
        "skipVerify": {
          "type": "boolean",
          "description": "skip_verify skips TLS verification when the value is set to true."
        },
        "v4Auth": {
          "type": "boolean",
          "description": "v4auth Indicates whether the registry uses Version 4 of AWS’s authentication."
        }
      },
      "title": "S3Spec is describe how to config external storage about s3"
    },
    "v1alpha1ScanOverview": {
      "type": "object",
      "properties": {
        "scanStatus": {
          "$ref": "#/definitions/v1alpha1ScanOverviewStatus",
          "title": "scan_status is"
        },
        "severity": {
          "$ref": "#/definitions/ScanOverviewSeverity"
        },
        "duration": {
          "type": "string",
          "format": "int64",
          "title": "The seconds spent for generating the report"
        },
        "endTime": {
          "type": "string",
          "format": "int64",
          "title": "The end time of the scan process that generating report"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "The start time of the scan process that generating report"
        },
        "reportId": {
          "type": "string",
          "title": "report_id id of the native scan report"
        },
        "scanner": {
          "$ref": "#/definitions/v1alpha1Scanner",
          "title": "scanner is scanner server info"
        },
        "summary": {
          "$ref": "#/definitions/v1alpha1ScanSummary",
          "title": "summary is scanner result summary"
        }
      }
    },
    "v1alpha1ScanOverviewStatus": {
      "type": "string",
      "enum": [
        "scan_status_unspecified",
        "pending",
        "running",
        "error",
        "success",
        "stopped"
      ],
      "default": "scan_status_unspecified",
      "title": "- scan_status_unspecified: scan_status_unspecified is unspecified\n - pending: pending is pending\n - running: running is running\n - error: error is error\n - success: success is success\n - stopped: stopped is stopped"
    },
    "v1alpha1ScanSummary": {
      "type": "object",
      "properties": {
        "fixable": {
          "type": "integer",
          "format": "int32",
          "title": "fixable is vulnerability fix num"
        },
        "summary": {
          "$ref": "#/definitions/v1alpha1VulnerabilitySummary",
          "title": "summary is vulnerability summary"
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "title": "total is vulnerability total num"
        }
      }
    },
    "v1alpha1Scanner": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is scanner server name"
        },
        "vendor": {
          "type": "string",
          "title": "vendor is scanner vendor"
        },
        "version": {
          "type": "string",
          "title": "version is scanner server version"
        }
      }
    },
    "v1alpha1ScannerRegistration": {
      "type": "object",
      "properties": {
        "accessCredential": {
          "type": "string",
          "description": "An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API."
        },
        "adapter": {
          "type": "string",
          "title": "Optional property to describe the name of the scanner registration"
        },
        "auth": {
          "type": "string",
          "title": "Specify what authentication approach is adopted for the HTTP communications.\nSupported types Basic\", \"Bearer\" and api key header \"X-ScannerAdapter-API-Key\""
        },
        "CreateTime": {
          "type": "string",
          "format": "int64",
          "title": "The creation time of this registration\nFormat: date-time"
        },
        "description": {
          "type": "string",
          "description": "An optional description of this registration."
        },
        "disabled": {
          "type": "boolean",
          "title": "Indicate whether the registration is enabled or not"
        },
        "health": {
          "$ref": "#/definitions/v1alpha1ScannerRegistrationHealth",
          "title": "Indicate the healthy of the registration"
        },
        "isDefault": {
          "type": "boolean",
          "title": "Indicate if the registration is set as the system default one"
        },
        "name": {
          "type": "string",
          "description": "The name of this registration."
        },
        "skipCertVerify": {
          "type": "boolean",
          "title": "Indicate if skip the certificate verification when sending HTTP requests"
        },
        "updateTime": {
          "type": "string",
          "format": "int64",
          "title": "The update time of this registration\nFormat: date-time"
        },
        "url": {
          "type": "string",
          "title": "A base URL of the scanner adapter"
        },
        "useInternalAddr": {
          "type": "boolean",
          "title": "Indicate whether use internal registry addr for the scanner to pull content or not"
        },
        "uuid": {
          "type": "string",
          "description": "The unique identifier of this registration."
        },
        "vendor": {
          "type": "string",
          "title": "Optional property to describe the vendor of the scanner registration"
        },
        "version": {
          "type": "string",
          "title": "Optional property to describe the version of the scanner registration"
        }
      }
    },
    "v1alpha1ScannerRegistrationHealth": {
      "type": "string",
      "enum": [
        "unspecified",
        "healthy",
        "unhealthy"
      ],
      "default": "unspecified"
    },
    "v1alpha1StatisticResponse": {
      "type": "object",
      "properties": {
        "privateProjectCount": {
          "type": "string",
          "format": "int64",
          "title": "PrivateProjectCount The count of the private projects"
        },
        "privateRepoCount": {
          "type": "string",
          "format": "int64",
          "title": "PrivateRepoCount The count of the private repositories"
        },
        "publicProjectCount": {
          "type": "string",
          "format": "int64",
          "title": "PublicProjectCountThe count of the public projects"
        },
        "publicRepoCount": {
          "type": "string",
          "format": "int64",
          "title": "PublicRepoCount The count of the public repositories"
        },
        "totalProjectCount": {
          "type": "string",
          "format": "int64",
          "title": "TotalProjectCount The count of the total projects, only be seen by the system admin"
        },
        "totalRepoCount": {
          "type": "string",
          "format": "int64",
          "title": "TotalRepoCount The count of the total repositories, only be seen by the system admin"
        },
        "totalStorageConsumption": {
          "type": "string",
          "format": "int64",
          "title": "TotalStorageConsumption The total storage consumption of blobs, only be seen by the system admin"
        }
      }
    },
    "v1alpha1StorageClassSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is describe StorageClass name"
        },
        "resource": {
          "$ref": "#/definitions/v1alpha1Resources",
          "description": "resource is describes the storage resource requirements."
        }
      },
      "title": "StorageClassSpec is describe behavior required to user storageClass"
    },
    "v1alpha1StorageStatisticItem": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "timestamp"
        },
        "value": {
          "type": "string",
          "title": "Current timestamp storage usage\nUnit: byte"
        }
      }
    },
    "v1alpha1TLSType": {
      "type": "string",
      "enum": [
        "TLS_TYPE_UNSPECIFIED",
        "SELF_SIGNED",
        "CUSTOM"
      ],
      "default": "TLS_TYPE_UNSPECIFIED",
      "description": " - TLS_TYPE_UNSPECIFIED: TLS_TYPE_UNSPECIFIED wen un specified type\n - SELF_SIGNED: SELF_SIGNED is the secret of self signed.\n - CUSTOM: CUSTOM is the secret of custom."
    },
    "v1alpha1TagInfoBuildHistoryResponse": {
      "type": "object",
      "properties": {
        "buildHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1BuildHistory"
          },
          "title": "build_history is a build history"
        }
      }
    },
    "v1alpha1TagInfoResponse": {
      "type": "object",
      "properties": {
        "extraAttrs": {
          "$ref": "#/definitions/v1alpha1ExtraAttrs",
          "title": "extra_attrs is image base info"
        },
        "buildHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1BuildHistory"
          },
          "title": "build_history is a build history"
        },
        "scanOverview": {
          "$ref": "#/definitions/v1alpha1ScanOverview",
          "title": "scan_overview is cve id"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Reference"
          }
        }
      }
    },
    "v1alpha1Trigger": {
      "type": "object",
      "properties": {
        "cron": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1TriggerMode"
        }
      }
    },
    "v1alpha1TriggerMode": {
      "type": "string",
      "enum": [
        "TRIGGER_MODEL_UNSPECIFIED",
        "TRIGGER_MODEL_MANUAL",
        "TRIGGER_MODEL_SCHEDULE",
        "TRIGGER_MODEL_EVENT_BASED"
      ],
      "default": "TRIGGER_MODEL_UNSPECIFIED",
      "description": " - TRIGGER_MODEL_UNSPECIFIED: UNSPECIFIED is the default value.\n - TRIGGER_MODEL_MANUAL: MANUAL is the manual trigger mode.\n - TRIGGER_MODEL_SCHEDULE: SCHEDULE is the schedule trigger mode.\n - TRIGGER_MODEL_EVENT_BASED: EVENT_BASED is the event_based trigger mode."
    },
    "v1alpha1UpdateRepositoryDescriptionResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "description is repositories description"
        }
      }
    },
    "v1alpha1VerifyHarborOperatorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/VerifyHarborOperatorResponseHarborOperatorStatus"
        }
      },
      "title": "VerifyHarborOperatorResponse represents the response of verify harbor-operator"
    },
    "v1alpha1VerifyNamespaceQuotaResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "cpu": {
          "$ref": "#/definitions/v1alpha1QuotaResponse"
        },
        "memory": {
          "$ref": "#/definitions/v1alpha1QuotaResponse"
        }
      }
    },
    "v1alpha1VerifyNodePortResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "title": "is used"
        }
      }
    },
    "v1alpha1VulnerabilitySummary": {
      "type": "object",
      "properties": {
        "critical": {
          "type": "integer",
          "format": "int32",
          "title": "critical is critical level vulnerability num"
        },
        "high": {
          "type": "integer",
          "format": "int32",
          "title": "high is high level vulnerability num"
        },
        "low": {
          "type": "integer",
          "format": "int32",
          "title": "low is low level vulnerability num"
        },
        "medium": {
          "type": "integer",
          "format": "int32",
          "title": "medium is medium level vulnerability num"
        },
        "unknown": {
          "type": "integer",
          "format": "int32",
          "title": "unknown is unknown level vulnerability num"
        }
      }
    },
    "v1alpha1Workspace": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of the workspace."
        },
        "alias": {
          "type": "string",
          "description": "The alias name of the workspace."
        }
      }
    },
    "v1alpha1WorkspacePermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PermissionsType"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
