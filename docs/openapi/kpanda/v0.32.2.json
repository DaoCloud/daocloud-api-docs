{
  "swagger": "2.0",
  "info": {
    "title": "容器管理",
    "version": "v0.32.2"
  },
  "tags": [
    {
      "name": "Apiextensions"
    },
    {
      "name": "Apps"
    },
    {
      "name": "Batch"
    },
    {
      "name": "Cluster"
    },
    {
      "name": "insight"
    },
    {
      "name": "Core"
    },
    {
      "name": "Networking"
    },
    {
      "name": "RBAC"
    },
    {
      "name": "Autoscaling"
    },
    {
      "name": "Storage"
    },
    {
      "name": "Registry"
    },
    {
      "name": "Image"
    },
    {
      "name": "Workspace"
    },
    {
      "name": "ClusterSetting"
    },
    {
      "name": "CloudShell"
    },
    {
      "name": "Clusterlcm"
    },
    {
      "name": "Addon"
    },
    {
      "name": "EtcdBackupRestore"
    },
    {
      "name": "StreamService"
    },
    {
      "name": "SettingService"
    },
    {
      "name": "FeatureGate"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/kpanda.io/v1alpha1/admincluster": {
      "get": {
        "summary": "ListAdminClusterSummary List cluster summary by adminCluster",
        "operationId": "RBAC_ListAdminClusterSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAdminClusterSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "user is the cluster's user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroup",
            "description": "userGroup is the cluster user's belong group",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/clusterrolebindings": {
      "get": {
        "summary": "ListClusterRoleBindings lists a cluster RoleBinding",
        "operationId": "RBAC_ListClusterRoleBindings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterRoleBindingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the roleBinding belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleRef",
            "description": "RoleRef is the role of the user, it should be the same as when it is created.\nSuch as: cluster-admin, ns-admin, ns-view, ns-edit, ns-admin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/cronjobs": {
      "get": {
        "summary": "ListAllCronJobs lists all clusters cronjob",
        "operationId": "Batch_ListAllCronJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterCronJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusters",
            "description": "Cluster the specified job belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Current status of a cron job.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional\ntodo: split list all jobs and list all cron jobs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether to return data that belongs to a virtual cluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/daemonsets": {
      "get": {
        "summary": "ListAllDaemonSets lists all daemonSet in all clusters",
        "operationId": "Apps_ListAllDaemonSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDaemonSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the workloads belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workloads belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether to return data that belongs to a virtual cluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/deployments": {
      "get": {
        "summary": "ListAllDeployments lists all deployment in all clusters",
        "operationId": "Apps_ListAllDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the workloads belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workloads belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether to return data that belongs to a virtual cluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/groups": {
      "get": {
        "summary": "ListGroups lists the groups in the system.",
        "operationId": "RBAC_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/jobs": {
      "get": {
        "summary": "ListAllJobs lists all cluster jobs",
        "operationId": "Batch_ListAllJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusters",
            "description": "Cluster the specified job belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Current status of a cron job.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional\ntodo: split list all jobs and list all cron jobs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether to return data that belongs to a virtual cluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/namespaces": {
      "get": {
        "summary": "ListNamespaces gets all the namespaces across clusters",
        "operationId": "Core_ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNamespacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Clusters is to filter namespaces by cluster names",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "workspaceId",
            "description": "workspace_id the specified namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceAlias",
            "description": "workspace_alias the specified namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is to filter namespaces by namespace name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyUnassign",
            "description": "Only_unassign is used to distinguish workspaces that are not assigned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeSystem",
            "description": "ExcludeSystem determines to exclude system namespaces, defaults to False.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether to return data that belongs to a virtual cluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeResourceQuota",
            "description": "IncludeQuota used to control whether return namespace resource quota, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/pods": {
      "get": {
        "summary": "ListAllPods will list all pod by given cluster and namespace,\nif you want list pods regardless of namespace, please given specify\nnamespace as \"\" and it supports across cluster.",
        "operationId": "Core_ListAllPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the pods belongs to, it is a array\nif you want to query cluster more than one, please use query\nlike '?cluster=cluster1&cluster=cluster2'.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for filter.\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PHASE_UNSPECIFIED",
              "Unknown",
              "Pending",
              "Running",
              "Succeeded",
              "Failed"
            ],
            "default": "PHASE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/rolebindings": {
      "get": {
        "summary": "ListRoleBindings lists the rolebidings created by frontend.",
        "operationId": "RBAC_ListRoleBindings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRoleBindingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the roleBinding belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the roleBinding belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleRef",
            "description": "RoleRef is the role of the user, it should be the same as when it is created.\nSuch as: cluster-admin, ns-admin, ns-view, ns-edit, ns-admin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/statefulsets": {
      "get": {
        "summary": "ListAllStatefulSets lists all statefulSet in all clusters",
        "operationId": "Apps_ListAllStatefulSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListStatefulSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the workloads belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workloads belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether to return data that belongs to a virtual cluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/asl/users": {
      "get": {
        "summary": "ListUsers lists the users in the system.",
        "operationId": "RBAC_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cloudshells": {
      "post": {
        "summary": "CreateCloudShell create a cloudshell in golobal cluster.",
        "operationId": "CloudShell_CreateCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateCloudShellRequest"
            }
          }
        ],
        "tags": [
          "CloudShell"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cloudshells/{name}": {
      "get": {
        "summary": "GetCloudShell get a cloudshell in golobal cluster.",
        "operationId": "CloudShell_GetCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CloudShell"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name specified the cloudshell name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CloudShell"
        ]
      },
      "delete": {
        "summary": "DeleteCloudShell delete a cloudshell in golobal cluster.",
        "operationId": "CloudShell_DeleteCloudShell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name specified the cloudshell name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/definitions/v1alpha1CloudShellType",
                  "description": "type specified the cloudshell command type (exec, logs, bash)."
                },
                "cluster": {
                  "type": "string",
                  "description": "cluster specified the cluster name for cloudshell."
                }
              },
              "description": "DeleteCloudShellResponse defines the delete api request."
            }
          }
        ],
        "tags": [
          "CloudShell"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm": {
      "post": {
        "operationId": "Clusterlcm_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateClusterRequest"
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/available-kube-versions": {
      "get": {
        "operationId": "Clusterlcm_ListKubeVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListKubeVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/available-runtime-versions": {
      "get": {
        "operationId": "Clusterlcm_ListRuntimeVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRuntimeVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kubeVersion",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/nodes": {
      "post": {
        "operationId": "Clusterlcm_BatchAddNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "$ref": "#/definitions/v1alpha1NodeInfoRole"
                },
                "nodeInfos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1NodeInfo"
                  }
                },
                "type": {
                  "$ref": "#/definitions/v1alpha1SSHInfoType"
                },
                "kubesprayArgs": {
                  "$ref": "#/definitions/v1alpha1NodeKubesprayArgs"
                }
              }
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/nodes/{name}": {
      "delete": {
        "operationId": "Clusterlcm_RemoveNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/ops": {
      "get": {
        "operationId": "Clusterlcm_ListClusterlcmOps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterlcmOpsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The fuzzy-name of the clusterclmOps.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the order of the data.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "targetCluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ACTION_UNSPECIFIED",
              "CREATE_CLUSTER",
              "UPGRADE_CLUSTER",
              "RESET_CLUSTER",
              "ADD_NODE",
              "REMOVE_NODE"
            ],
            "default": "ACTION_UNSPECIFIED"
          },
          {
            "name": "phase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_UNSPECIFIED",
              "Running",
              "Succeeded",
              "Failed",
              "Blocked"
            ],
            "default": "STATUS_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/ops/{name}": {
      "get": {
        "operationId": "Clusterlcm_GetClusterlcmOps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmOps"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the clusterclmOps.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      },
      "delete": {
        "operationId": "Clusterlcm_DeleteClusterlcmOps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the manger cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the cluster which needs to be create.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/ops/{name}/json": {
      "get": {
        "operationId": "Clusterlcm_GetClusterlcmOpsJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetClusterlcmOpsJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the clusterclmOps.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{cluster}/settings": {
      "get": {
        "operationId": "Clusterlcm_GetClusterlcmSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster which needs to be create.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{name}/precheck-infos": {
      "post": {
        "operationId": "Clusterlcm_GetPreCheckClusterInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPreCheckClusterInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the cluster which needs to be create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dkgClusterName": {
                  "type": "string",
                  "description": "The name of the manger cluster."
                },
                "kubeVersion": {
                  "type": "string",
                  "title": "kubernetes version of cluster to be created"
                },
                "operation": {
                  "type": "string",
                  "description": "operation represents the kubean operation name."
                }
              }
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{name}:check": {
      "post": {
        "operationId": "Clusterlcm_CheckCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CheckClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{name}:precheck": {
      "post": {
        "operationId": "Clusterlcm_PreCheckCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the cluster which needs to be create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dkgClusterName": {
                  "type": "string",
                  "description": "The name of the manger cluster."
                },
                "kubeVersion": {
                  "type": "string"
                },
                "nodeConfig": {
                  "$ref": "#/definitions/v1alpha1NodeConfig"
                }
              }
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{name}:reset": {
      "post": {
        "operationId": "Clusterlcm_ResetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/cluster-lcm/{name}:upgrade": {
      "post": {
        "operationId": "Clusterlcm_UpgradeCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterlcmResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the cluster which needs to upgrade.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "kubernetesVersion": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Clusterlcm"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters": {
      "get": {
        "summary": "ListClusters lists kpanda cr resources",
        "operationId": "Cluster_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLUSTER_ROLE_UNSPECIFIED",
              "CLUSTER_ROLE_MANAGER",
              "CLUSTER_ROLE_GLOBAL_SERVICE",
              "CLUSTER_ROLE_WORKER",
              "CLUSTER_ROLE_THIRD_PARTY"
            ],
            "default": "CLUSTER_ROLE_UNSPECIFIED"
          },
          {
            "name": "kubernetesVersion",
            "description": "KUBERNETESVERSION cluster k8s version use to support search sub cluster at\nListClusters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase is used for filter.\n\n - CLUSTER_PHASE_UNSPECIFIED: The cluster state is unspecified.\n - Unknown: The cluster state is unknown.\n - Creating: The cluster is being created.\n - Running: The cluster is running.\n - Updating: The cluster is updating.\n - Deleting: The cluster is being deleted.\n - Failed: The cluster create failed.\n - DeleteFailed: The cluster delete failed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLUSTER_PHASE_UNSPECIFIED",
              "Unknown",
              "Creating",
              "Running",
              "Updating",
              "Deleting",
              "Failed",
              "DeleteFailed"
            ],
            "default": "CLUSTER_PHASE_UNSPECIFIED"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used  to filter the clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "managedBy",
            "description": "ManagedBy represents who manages the cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the cluster list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the cluster list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether returned data contains\nvirtualCluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "post": {
        "summary": "CreateCluster creates a cluster",
        "operationId": "Cluster_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateOrUpdateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1IntegrateClusterRequest"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/validate": {
      "post": {
        "operationId": "Cluster_ValidateKubeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ValidateKubeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1ValidateKubeConfigRequest"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/accessiblestorageclasses": {
      "get": {
        "summary": "ListAccessibleStorageClasses lists all storageclasses in accessible clusters",
        "operationId": "Storage_ListAccessibleStorageClasses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAllStorageClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provisioner",
            "description": "Provisioner is used for fuzzy search by provisioner.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reclaimPolicy",
            "description": "ReclaimPolicy is used for fuzzy search by reclaimPolicy.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clustercert": {
      "post": {
        "summary": "CreateOpenAPIClusterCert creates openAPI cluster cert",
        "operationId": "Cluster_CreateOpenAPIClusterCert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateOpenAPIClusterCertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "one of cluster or kubeSystemID has value",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "kubeSystemID": {
                  "type": "string",
                  "description": "kubeSystemID is the cluster system ID."
                },
                "expirationSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ExpirationSeconds is the requested duration of validity of the request."
                }
              }
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clusterresourceoverride": {
      "post": {
        "summary": "CreateClusterResourceOverride creates a cro by given json.",
        "operationId": "Autoscaling_CreateClusterResourceOverride",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterResourceOverride"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster defines the cluster name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/v1alpha1ClusterResourceOverride",
                  "description": "date defines the content of ClusterResourceOverride."
                }
              }
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "put": {
        "summary": "UpdateClusterResourceOverride updates a cro by given json.",
        "operationId": "Autoscaling_UpdateClusterResourceOverride",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterResourceOverride"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster defines the cluster name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/v1alpha1ClusterResourceOverride",
                  "description": "date defines the content of ClusterResourceOverride."
                }
              }
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clusterresourceoverride/{name}": {
      "get": {
        "summary": "GetClusterResourceOverride gets a cro by name.",
        "operationId": "Autoscaling_GetClusterResourceOverride",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterResourceOverride"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster defines the cluster name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name defines the name of ClusterResourceOverride.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "delete": {
        "summary": "DeleteClusterResourceOverride deletes a cro by name.",
        "operationId": "Autoscaling_DeleteClusterResourceOverride",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster defines the cluster name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name defines the name of ClusterResourceOverride.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clusterrolebindings": {
      "post": {
        "summary": "CreateClusterRoleBinding creates a cluster roleBinding batch",
        "operationId": "RBAC_CreateClusterRoleBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterRoleBinding"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the clusterRoleBinding belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "$ref": "#/definitions/v1alpha1Subject",
                  "description": "Subject holds references to the objects the role applies to."
                },
                "roleRef": {
                  "$ref": "#/definitions/v1alpha1RoleRef",
                  "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in\nthe global namespace. If the RoleRef cannot be resolved, the Authorizer\nmust return an error."
                },
                "name": {
                  "type": "string",
                  "title": "the name of ClusterRole"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "ownerReferences": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/typesOwnerReference"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clusterrolebindings/{name}": {
      "delete": {
        "summary": "DeleteClusterRoleBinding deletes a cluster RoleBinding",
        "operationId": "RBAC_DeleteClusterRoleBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the roleBinding belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the clusterrolebinding to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clusterroles": {
      "get": {
        "summary": "ListClusterRoles lists the clusterroles",
        "operationId": "RBAC_ListClusterRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/clusterroles/{name}": {
      "get": {
        "summary": "GetClusterRole gets a ClusterRole",
        "operationId": "RBAC_GetClusterRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirbacv1alpha1ClusterRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the clusterrole belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the clusterrole to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      },
      "delete": {
        "summary": "DeleteClusterRole deletes a ClusterRole",
        "operationId": "RBAC_DeleteClusterRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the clusterrole belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the clusterrole to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      },
      "post": {
        "summary": "CreateClusterRole creates a ClusterRole",
        "operationId": "RBAC_CreateClusterRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirbacv1alpha1ClusterRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the clusterrole belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of role.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "RBAC"
        ]
      },
      "put": {
        "summary": "UpdateClusterRole updates a ClusterRole",
        "operationId": "RBAC_UpdateClusterRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateClusterRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the clusterrole belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the clusterrole to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              },
              "title": "UpdateClusterRoleRequest the request of update clusterrole"
            }
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/configmaps": {
      "get": {
        "summary": "ListClusterConfigMaps lists all configmaps in the specified cluster,\nregardless of namespace.",
        "operationId": "Core_ListClusterConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterConfigMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/crd-groups": {
      "get": {
        "summary": "ListCustomResourceDefinitionGroups lists all groups of customResourceDefinitions in the specified cluster",
        "operationId": "Apiextensions_ListCustomResourceDefinitionGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCustomResourceDefinitionGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster to request",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/cronjobs": {
      "get": {
        "summary": "ListCronJobs Lists cronJobs in a specific cluster",
        "operationId": "Batch_ListCronJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCronJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of Workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search.\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/custommetricsummary": {
      "get": {
        "summary": "ListCustomMetricsSummary return the custom metrics for specified\nresource.",
        "operationId": "Autoscaling_ListCustomMetricSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCustomMetricSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the custom metrics belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The kind of hpa targetRef.\n\n - Pod: The custom metrics for service.\n - Service: The custom metrics for service.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Pod",
              "Service"
            ],
            "default": "KIND_UNSPECIFIED"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/customresourcedefinitions": {
      "get": {
        "summary": "ListCustomResourceDefinitions lists customResourceDefinitions in the specified cluster",
        "operationId": "Apiextensions_ListCustomResourceDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCustomResourceDefinitionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster cluster to be queried",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name search the custom resource definitions fo name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Status search the custom resource definitions fo status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group is to filter customResourceDefinitions by group.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "post": {
        "summary": "CreateCustomResourceDefinition creates a customResourceDefinition to the\nsystem by given customResourceDefinition data",
        "operationId": "Apiextensions_CreateCustomResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateCustomResourceDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified customResourceDefinition belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the customResourceDefinition YAML details."
                }
              },
              "title": "CreateCustomResourceDefinitionRequest represents post request to a\ncustomResourceDefinition"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/customresourcedefinitions/{name}": {
      "get": {
        "summary": "GetCustomResourceDefinition gets a customResourceDefinition from\nthe system by given customResourceDefinition name",
        "operationId": "Apiextensions_GetCustomResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CustomResourceDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResourceDefinition belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResourceDefinition.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "delete": {
        "summary": "DeleteCustomResourceDefinition deletes a customResourceDefinition from the\nsystem by given customResourceDefinition name",
        "operationId": "Apiextensions_DeleteCustomResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified customResourceDefinition belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the metadata.name of the referenced customResourceDefinition.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "put": {
        "summary": "UpdateCustomResourceDefinition updates a customResourceDefinition from the\nsystem by given customResourceDefinition name",
        "operationId": "Apiextensions_UpdateCustomResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateCustomResourceDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified customResourceDefinition belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the customResourceDefinition YAML details."
                }
              },
              "title": "UpdateCustomResourceDefinitionRequest represents put request to a\ncustomResourceDefinition"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/customresourcedefinitions/{name}/json": {
      "get": {
        "summary": "GetCustomResourceDefinitionJSON gets a customResourceDefinition json from\nthe system by given customResourceDefinition name",
        "operationId": "Apiextensions_GetCustomResourceDefinitionJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCustomResourceDefinitionJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResourceDefinition belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResourceDefinition.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/daemonsets": {
      "get": {
        "summary": "ListClusterDaemonSets lists DaemonSet in one cluster",
        "operationId": "Apps_ListClusterDaemonSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDaemonSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of Workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/deployments": {
      "get": {
        "summary": "ListClusterDeployments lists one cluster all namespace's deployments",
        "operationId": "Apps_ListClusterDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of Workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/etcd:verify": {
      "post": {
        "summary": "VerifyEtcdConnection verifies the etcd connection.",
        "operationId": "EtcdBackupRestore_VerifyEtcdConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyEtcdConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd snapstore belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "etcdConnectionConfig": {
                  "$ref": "#/definitions/v1alpha1EtcdConnectionConfig",
                  "description": "config for etcd connection."
                }
              }
            }
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/snapstores:verify": {
      "post": {
        "summary": "VerifySnapStore verifies the SnapStore config.",
        "operationId": "EtcdBackupRestore_VerifySnapStoreConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifySnapStoreConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd snapstore belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accessKeyId": {
                  "type": "string",
                  "description": "username or access key id for S3."
                },
                "secretAccessKey": {
                  "type": "string",
                  "description": "password or secret key for S3."
                },
                "bucket": {
                  "type": "string",
                  "description": "the bucket name for S3."
                },
                "endpoint": {
                  "type": "string",
                  "description": "endpoint for S3."
                },
                "region": {
                  "type": "string",
                  "description": "region for S3."
                }
              }
            }
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies": {
      "post": {
        "summary": "CreateEtcdBackupStrategy creates a etcd backup strategy.",
        "operationId": "EtcdBackupRestore_CreateEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EtcdBackupStrategy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for EtcdBackupStrategy."
                },
                "strategy": {
                  "$ref": "#/definitions/v1alpha1EtcdBackupStrategy",
                  "description": "The data for the etcd backup strategy."
                }
              }
            }
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{name}": {
      "get": {
        "summary": "GetEtcdBackupStrategy get a etcd backup strategy in cluster.",
        "operationId": "EtcdBackupRestore_GetEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EtcdBackupStrategy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the etcd backup strategy name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      },
      "delete": {
        "summary": "DeleteEtcdBackupStrategy delete a etcd backup strategy in cluster.",
        "operationId": "EtcdBackupRestore_DeleteEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of etcd backup strategy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      },
      "put": {
        "summary": "UpdateEtcdBackupStrategy updates tcd backup strategy under the cluster",
        "operationId": "EtcdBackupRestore_UpdateEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EtcdBackupStrategy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name for EtcdBackupStrategy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "strategy": {
                  "$ref": "#/definitions/v1alpha1EtcdBackupStrategy",
                  "description": "The data for the etcd backup strategy."
                }
              }
            }
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{name}/json": {
      "get": {
        "summary": "GetEtcdBackupStrategyJSON get a etcd backup strategy json in cluster.",
        "operationId": "EtcdBackupRestore_GetEtcdBackupStrategyJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetEtcdBackupStrategyJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the etcd backup strategy name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{name}:execute": {
      "post": {
        "summary": "ExecuteEtcdBackupStrategy executes a etcd backup strategy under the cluster",
        "operationId": "EtcdBackupRestore_ExecuteEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ExecuteEtcdBackupStrategyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of etcd backup strategy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{name}:pause": {
      "post": {
        "summary": "PauseEtcdBackupStrategy pauses a etcd backup strategy under the cluster",
        "operationId": "EtcdBackupRestore_PauseEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PauseEtcdBackupStrategyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of etcd backup strategy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{name}:resume": {
      "post": {
        "summary": "ResumeEtcdBackupStrategy resumes a etcd backup strategy under the cluster",
        "operationId": "EtcdBackupRestore_ResumeEtcdBackupStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ResumeEtcdBackupStrategyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of etcd backup strategy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{strategy}/snapshots": {
      "get": {
        "summary": "ListEtcdSnapshots list etcd backup snapshots .",
        "operationId": "EtcdBackupRestore_ListEtcdSnapshots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEtcdSnapshotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "strategy",
            "description": "strategy represents the name of etcd backup strategy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/etcdbackuprestore/strategies/{strategy}/snapshots/{name}": {
      "delete": {
        "summary": "DeleteEtcdBackup delete a etcd backup.",
        "operationId": "EtcdBackupRestore_DeleteEtcdSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the etcd backup strategy belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "strategy",
            "description": "strategy represents the name of etcd backup strategy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of etcd snapshot.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/events": {
      "get": {
        "summary": "ListClusterEvents lists all events in the specified cluster,\nregardless of namespace.",
        "operationId": "Core_ListClusterEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the events belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "type",
            "description": "Type is used for query, showing events of specified type.\nUse example: type=WARNING&type=NORMAL.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "Normal",
                "Warning"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "kind",
            "description": "Kind is used for query, showing events of specified involvedObject kind,\ne.g. Node.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is used for query, showing events of specified involvedObject name,\ne.g. node‘s name when kind is Node.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/events/kinds": {
      "get": {
        "summary": "ListClusterEventKinds lists all involvedObject's kinds of events in the\nspecified cluster, regardless of namespace",
        "operationId": "Core_ListClusterEventKinds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterEventKindsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the events belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gpusummary": {
      "get": {
        "summary": "ListClusterGPUSummary lists gpu summary of all nodes of the specified cluster.",
        "operationId": "Core_ListClusterGPUSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterGPUSummaryResponese"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster defines the cluster name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/namespaces/{namespace}/{resource}": {
      "get": {
        "summary": "ListCustomResources lists customResources of namespaced scope from the\nsystem",
        "operationId": "Apiextensions_ListCustomResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCustomResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResources belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResources.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResources.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResources belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showDetail",
            "description": "ShowDetail is the presentation details, including metadata, spec, and status",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ownerReference",
            "description": "OwnerReference indicates that the query is based on the OwnerReference.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "post": {
        "summary": "CreateCustomResource creates a customResource of namespaced scope to the\nsystem by given customResource data",
        "operationId": "Apiextensions_CreateCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                }
              },
              "title": "CreateCustomResourceRequest represents create request to create one\nCustomResource of namespaced scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/namespaces/{namespace}/{resource}/{name}": {
      "get": {
        "summary": "GetCustomResource gets a customResource of namespaced scope from\nthe system",
        "operationId": "Apiextensions_GetCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CustomResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "showDetail",
            "description": "ShowDetail is the presentation details, including metadata, spec, and status",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "delete": {
        "summary": "DeleteCustomResource deletes a customResource of namespaced scope from the\nsystem by given customResource name",
        "operationId": "Apiextensions_DeleteCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletionPropagation",
            "description": " - DELETION_PROPAGATION_ORPHAN: Orphans the dependents.\n - DELETION_PROPAGATION_BACKGROUND: Deletes the object from the key-value store, the garbage collector will\ndelete the dependents in the background.\n - DELETION_PROPAGATION_FOREGROUND: The object exists in the key-value store until the garbage collector\ndeletes all the dependents whose ownerReference.blockOwnerDeletion=true\nfrom the key-value store.  API sever will put the \"foregroundDeletion\"\nfinalizer on the object, and sets its deletionTimestamp.  This policy is\ncascading, i.e., the dependents will be deleted with Foreground.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DELETION_PROPAGATION_UNSPECIFIED",
              "DELETION_PROPAGATION_ORPHAN",
              "DELETION_PROPAGATION_BACKGROUND",
              "DELETION_PROPAGATION_FOREGROUND"
            ],
            "default": "DELETION_PROPAGATION_UNSPECIFIED"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "put": {
        "summary": "UpdateCustomResource updates a customResource of namespaced scope from the\nsystem by given customResource name",
        "operationId": "Apiextensions_UpdateCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                }
              },
              "title": "UpdateCustomResourceRequest represents update request to update one\nCustomResource of namespaced scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "patch": {
        "summary": "PatchCustomResource patches a customResource of cluster scope from\nthe system by given customResource name",
        "operationId": "Apiextensions_PatchCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "patchType": {
                  "$ref": "#/definitions/PatchCustomResourceRequestPatchType",
                  "description": "The patch type for patching the resources."
                },
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                },
                "subResources": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "title": "PatchCustomResourceRequest represents patch request to update one\nCustomResource of cluster scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/namespaces/{namespace}/{resource}/{name}/json": {
      "get": {
        "summary": "GetCustomResourceJSON gets a customResource of namespaced scope json from\nthe system",
        "operationId": "Apiextensions_GetCustomResourceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCustomResourceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/namespaces/{namespace}/{resource}/{name}/status": {
      "put": {
        "summary": "UpdateCustomResourceStatus updates the status of a customResource",
        "operationId": "Apiextensions_UpdateCustomResourceStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateCustomResourceStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                }
              },
              "title": "UpdateCustomResourceStatusRequest requests to update the status of a customResource of namespaced scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/{resource}": {
      "get": {
        "summary": "ListClusterCustomResources lists customResources of cluster scope",
        "operationId": "Apiextensions_ListClusterCustomResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterCustomResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResources belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResources.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResources.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResources, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showDetail",
            "description": "ShowDetail is the presentation details, including metadata, spec, and status",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "post": {
        "summary": "CreateClusterCustomResource creates a customResource of cluster scope to\nthe system by given customResource data",
        "operationId": "Apiextensions_CreateClusterCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateClusterCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                }
              },
              "title": "CreateClusterCustomResourceRequest represents create request to create one\nCustomResource of cluster scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/{resource}/{name}": {
      "get": {
        "summary": "GetClusterCustomResource gets a customResource of cluster scope",
        "operationId": "Apiextensions_GetClusterCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CustomResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "showDetail",
            "description": "ShowDetail is the presentation details, including metadata, spec, and status",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "delete": {
        "summary": "DeleteClusterCustomResource deletes a customResource of cluster scope from\nthe system by given customResource name",
        "operationId": "Apiextensions_DeleteClusterCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletionPropagation",
            "description": " - DELETION_PROPAGATION_ORPHAN: Orphans the dependents.\n - DELETION_PROPAGATION_BACKGROUND: Deletes the object from the key-value store, the garbage collector will\ndelete the dependents in the background.\n - DELETION_PROPAGATION_FOREGROUND: The object exists in the key-value store until the garbage collector\ndeletes all the dependents whose ownerReference.blockOwnerDeletion=true\nfrom the key-value store.  API sever will put the \"foregroundDeletion\"\nfinalizer on the object, and sets its deletionTimestamp.  This policy is\ncascading, i.e., the dependents will be deleted with Foreground.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DELETION_PROPAGATION_UNSPECIFIED",
              "DELETION_PROPAGATION_ORPHAN",
              "DELETION_PROPAGATION_BACKGROUND",
              "DELETION_PROPAGATION_FOREGROUND"
            ],
            "default": "DELETION_PROPAGATION_UNSPECIFIED"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      },
      "put": {
        "summary": "UpdateClusterCustomResource updates a customResource of cluster scope from\nthe system by given customResource name",
        "operationId": "Apiextensions_UpdateClusterCustomResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateClusterCustomResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                }
              },
              "title": "UpdateClusterCustomResourceRequest represents update request to update one\nCustomResource of cluster scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/{resource}/{name}/json": {
      "get": {
        "summary": "GetClusterCustomResourceJSON gets a customResource json of cluster scope",
        "operationId": "Apiextensions_GetClusterCustomResourceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetClusterCustomResourceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/gvr/{group}/{version}/{resource}/{name}/status": {
      "put": {
        "summary": "UpdateClusterCustomResourceStatus updates the status of a customResource of cluster scope",
        "operationId": "Apiextensions_UpdateClusterCustomResourceStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateClusterCustomResourceStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the CustomResource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "description": "Group represents the resource group of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version represents the resource version of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "Resource represents the resource name of CustomResource, which is plural.\nYou can find it in plural field of related CRD definition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of CustomResource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the CustomResource YAML details."
                }
              },
              "title": "UpdateClusterCustomResourceStatusRequest requests to update the status of a CustomResource of cluster scope"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmcharts": {
      "get": {
        "summary": "ListCharts list chart from repositories.",
        "operationId": "Addon_ListHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Helm chart name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "category",
            "description": "Category is used for query.\n\n - CATEGORY_UNSPECIFIED: The Category is unspecified.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "CATEGORY_OTHERS",
              "CATEGORY_STORAGE",
              "CATEGORY_NETWORKING",
              "CATEGORY_MONITORING",
              "CATEGORY_DATABASE",
              "CATEGORY_DATASERVICE",
              "CATEGORY_ECOAPP",
              "CATEGORY_BIGDATA",
              "CATEGORY_SECURITY",
              "CATEGORY_IOTEDGE",
              "CATEGORY_INFRA"
            ],
            "default": "CATEGORY_UNSPECIFIED"
          },
          {
            "name": "repo",
            "description": "The repo name which the charts belongs to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "required",
            "description": "Required indicates whether to display the charts, which are required to install the cluster.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmcharts/installed": {
      "get": {
        "summary": "ListClusterInstalledHelmChart list the charts which installed belong to repo",
        "operationId": "Addon_ListClusterInstalledHelmChart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterInstalledHelmChartResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repoName",
            "description": "repo_name represents which helm repo's name use to list installed helm chart",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmoperations": {
      "get": {
        "summary": "ListClusterHelmOperations list operation in cluster.",
        "operationId": "Addon_ListClusterHelmOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterHelmOperationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified operation belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "releaseName",
            "description": "Filter helm_operation by release_name,\nThe release_name is  exactly.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmreleases": {
      "get": {
        "summary": "ListClusterHelmReleases list apps in cluster.",
        "operationId": "Addon_ListClusterHelmReleases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterHelmReleasesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified operation belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "helmChartName",
            "description": "the helm releases's chart name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "helmChartRepo",
            "description": "the helm releases's chart repo name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos": {
      "get": {
        "summary": "ListHelmRepos list repo in cluster.",
        "operationId": "Addon_ListHelmRepos",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReposResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the repository list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the repository list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "builtIn",
            "description": "builtin indicates whether to display the repos required to install the cluster.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "post": {
        "summary": "CreateHelmRepo create a repo in cluster.",
        "operationId": "Addon_CreateHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRepo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name represents for the resource name."
                },
                "description": {
                  "type": "string",
                  "description": "The description represents for the resource."
                },
                "url": {
                  "type": "string",
                  "title": "url A http url of the repo to connect to"
                },
                "verificationMethod": {
                  "$ref": "#/definitions/v1alpha1VerificationMethod",
                  "title": "Repository verification method"
                },
                "userName": {
                  "type": "string",
                  "title": "Repository user name"
                },
                "password": {
                  "type": "string",
                  "title": "Repository user password"
                },
                "token": {
                  "type": "string",
                  "title": "Repository token"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are key/value pairs that are attached to objects."
                },
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations to attach arbitrary metadata to objects."
                },
                "insecureSkipTLSVerify": {
                  "type": "boolean",
                  "description": "InsecureSkipTLSVerify will use insecure HTTPS to download the helmrepo's index."
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{name}": {
      "get": {
        "summary": "GetHelmRepo get a repo in cluster.",
        "operationId": "Addon_GetHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRepo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "delete": {
        "summary": "DeleteHelmRepo delete a repo in cluster.",
        "operationId": "Addon_DeleteHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "put": {
        "summary": "UpdateHelmRepo update repo",
        "operationId": "Addon_UpdateHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRepo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "The description represents for the resource."
                },
                "url": {
                  "type": "string",
                  "title": "url A http url of the repo to connect to"
                },
                "verificationMethod": {
                  "$ref": "#/definitions/v1alpha1VerificationMethod",
                  "title": "Repository verification method"
                },
                "userName": {
                  "type": "string",
                  "title": "Repository user name"
                },
                "password": {
                  "type": "string",
                  "title": "Repository user password"
                },
                "token": {
                  "type": "string",
                  "title": "Repository token"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are key/value pairs that are attached to objects."
                },
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations to attach arbitrary metadata to objects."
                },
                "insecureSkipTLSVerify": {
                  "type": "boolean",
                  "description": "InsecureSkipTLSVerify will use insecure HTTPS to download the helmrepo's index."
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{name}/json": {
      "get": {
        "summary": "GetHelmRepoJSON get a repo json in cluster.",
        "operationId": "Addon_GetHelmRepoJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmRepoJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{name}/validate": {
      "post": {
        "summary": "ValidateHelmRepo verifies if a repo is connectable.",
        "operationId": "Addon_ValidateHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ValidateHelmRepoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster of the repo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the repo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "title": "Url of the repo to connect to"
                },
                "verificationMethod": {
                  "$ref": "#/definitions/v1alpha1VerificationMethod",
                  "title": "Repository verification method"
                },
                "userName": {
                  "type": "string",
                  "title": "Repository user name"
                },
                "password": {
                  "type": "string",
                  "title": "Repository user password"
                },
                "insecureSkipTLSVerify": {
                  "type": "boolean",
                  "description": "InsecureSkipTLSVerify will use insecure HTTPS to download the helmrepo's index."
                }
              },
              "title": "ValidateHelmRepoRequest requests to validate the connection to a helm repo"
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{name}:refresh": {
      "post": {
        "summary": "RefreshHelmRepo updates a helm repo's index.",
        "operationId": "Addon_RefreshHelmRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRepo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the helmrepo belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}": {
      "get": {
        "summary": "GetHelmChartVersion get a chart version info from repository.",
        "operationId": "Addon_GetHelmChart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version represents for the resource version.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}/display": {
      "get": {
        "summary": "GetHelmChartDisplay get a chart display info from repository.",
        "operationId": "Addon_GetHelmChartDisplay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartDisplayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version represents for the resource version.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}/files": {
      "get": {
        "summary": "GetHelmChartFiles get a chart files from repository.",
        "operationId": "Addon_GetHelmChartFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version represents for the resource version.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}/manifests": {
      "post": {
        "summary": "GetHelmChartManifest get a chart manifests info from repository.",
        "operationId": "Addon_GetHelmChartManifest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartManifestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "The version represents for the resource version."
                },
                "releaseName": {
                  "type": "string",
                  "description": "release_name is the name of the release."
                },
                "namespace": {
                  "type": "string",
                  "description": "release_name is the name of the release namspace."
                },
                "values": {
                  "type": "string",
                  "description": "Config is the set of extra Values added to the chart.\nThese values override the default values inside of the chart."
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}/resources": {
      "get": {
        "summary": "GetHelmChartResources get the resources contained in charts.",
        "operationId": "Addon_GetHelmChartResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmChartResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version represents for the resource version.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/helmrepos/{repo}/helmcharts/{name}:config": {
      "post": {
        "summary": "GetHelmInstallConfig create a Release.",
        "operationId": "Addon_GetHelmInstallConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmInstallConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The repo represents for the charts belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of helmrelease",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Version is an int which represents the version of the chart."
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/ingressclasssummary": {
      "get": {
        "summary": "ListIngressClassSummary gets a list of ingressClass simple information\nfrom the system by given cluster name",
        "operationId": "Networking_ListIngressClassSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListIngressClassSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the ingressClass belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the IngressClass to retrieve for a specific namespace scoped.\nIf left empty, it retrieves the cluster scoped IngressClass.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/ingresses": {
      "get": {
        "summary": "ListClusterIngresses lists all ingresses in the specified cluster.",
        "operationId": "Networking_ListClusterIngresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterIngressesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, must be specified,\nwill return all the ingress of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is the number of pages at the beginning.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the number of every page displayed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy defines sort field, please see message kpanda.io.api.types.SortBy.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy defines the type of sort, default type asc, can also specify desc.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is the name of the ingress.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/jobs": {
      "get": {
        "summary": "ListJobs lists jobs in a specific cluster",
        "operationId": "Batch_ListJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of Workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search.\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/kubeconfig": {
      "get": {
        "summary": "GetClusterKubeConfig gets the specified cluster's kubeconfig",
        "operationId": "Cluster_GetClusterKubeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetClusterKubeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/limitranges": {
      "get": {
        "summary": "ListClusterLimitRanges lists all limitranges in the specified cluster.",
        "operationId": "Core_ListClusterLimitRanges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterLimitRangesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified LimitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the LimitRange list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the LimitRange list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/metallb/check-serviceports": {
      "post": {
        "summary": "ValidateMetallbSharedIPPortConflict checks whether the service port of\nthe loadBalance service with using shared ip is conflict with other loadBalancer\nservices",
        "operationId": "Networking_ValidateMetallbSharedIPPortConflict",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sharedLoadBalancerIP": {
                  "type": "string",
                  "title": "sharedLoadBalancerIP is the shared IP address that needs to be checked\nfor service port conflicts"
                },
                "servicePorts": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": "servicePorts is the list of service ports that need to be checked for\nconflicts"
                }
              }
            }
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/metallb/ippools": {
      "get": {
        "summary": "ListMetallbIPPool lists all metallb in the specified cluster and namespace.",
        "operationId": "Networking_ListMetallbIPAddressPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListMetallbIPPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is the number of pages at the beginning.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the number of every page displayed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy defines sort field, please see message kpanda.io.api.types.SortBy.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy defines the type of sort, default type asc, can also specify desc.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is the name of the ingress.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/metric": {
      "post": {
        "operationId": "insight_QueryClusterMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1MetricResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The name of the cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "param": {
                  "$ref": "#/definitions/v1alpha1BatchQueryRequestParam",
                  "title": "The query request param"
                },
                "matchLabels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "The labels of match"
                },
                "queryList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "The query of List"
                }
              },
              "title": "ClusterMetricsRequest  represents the request of get cluster metrics"
            }
          }
        ],
        "tags": [
          "insight"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/metricrange": {
      "post": {
        "operationId": "insight_QueryClusterMetricsRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1MetricRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "the name of the cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "param": {
                  "$ref": "#/definitions/v1alpha1BatchQueryRangeRequestParam",
                  "title": "The parameters of query request"
                },
                "matchLabels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "The labels of match"
                },
                "queryList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "The query of List"
                }
              },
              "title": "ClusterMetricsRangeRequest represents the request of get cluster metrics range"
            }
          }
        ],
        "tags": [
          "insight"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces": {
      "get": {
        "summary": "ListClusterNamespaces gets all the namespaces of given cluster",
        "operationId": "Core_ListClusterNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNamespacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the namespace list belong to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceId",
            "description": "workspace_id the specified namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceAlias",
            "description": "workspace_alias the specified namespace belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is to filter namespaces by namespace name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for filter.\n\n - NAMESPACE_PHASE_UNSPECIFIED: The namespace state is unspecified.\n - Active: NamespaceActive means the namespace is available for use in the system\n - Terminating: NamespaceTerminating means the namespace is undergoing graceful termination",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NAMESPACE_PHASE_UNSPECIFIED",
              "Active",
              "Terminating"
            ],
            "default": "NAMESPACE_PHASE_UNSPECIFIED"
          },
          {
            "name": "excludeSystem",
            "description": "ExcludeSystem determines to exclude system namespaces, defaults to False.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreateNamespace creates a namespace from the system by given namespace name",
        "operationId": "Core_CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster the specified namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "workspace_id the specified namespace belongs to."
                },
                "workspaceAlias": {
                  "type": "string",
                  "description": "workspace_alias the specified namespace belongs to."
                },
                "data": {
                  "type": "string",
                  "description": "The data is the service YAML details."
                }
              },
              "description": "Get Create Namespace information."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/configmaps": {
      "get": {
        "summary": "ListConfigMaps lists configmaps in the specified cluster and namespace.",
        "operationId": "Core_ListConfigMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListConfigMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "name is used for query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of configmaps, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreateConfigMap creates a configMap under the namespaces of a specific\ncluster",
        "operationId": "Core_CreateConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateConfigMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in yaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data field is the ConfigMap YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/configmaps/{configmap}/related": {
      "get": {
        "summary": "ListConfigMapsRelatedWorkloads list all workloads associated with this cm",
        "operationId": "Apps_ListConfigMapsRelatedWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListConfigMapRelatedWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "configmap",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/configmaps/{name}": {
      "get": {
        "summary": "GetConfigMap gets a configMap under the namespaces of a specific cluster",
        "operationId": "Core_GetConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ConfigMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeleteConfigMap deletes a configMap under the namespaces of a specific\ncluster",
        "operationId": "Core_DeleteConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the metadata.name of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateConfigMap updates a configMap under the namespaces of a specific\ncluster",
        "operationId": "Core_UpdateConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateConfigMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data The data field is the ConfigMap YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/configmaps/{name}/json": {
      "get": {
        "summary": "GetConfigMapJSON gets a configMap json under the namespaces of a specific\ncluster",
        "operationId": "Core_GetConfigMapJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetConfigMapJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "patch": {
        "summary": "PatchConfigMap patchs a configMap under the namespaces of a specific\ncluster",
        "operationId": "Core_PatchConfigMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchConfigMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the configmap belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "The data is the YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/controllerrevisions": {
      "get": {
        "summary": "query like controllerrevisions?kind=STATEFULSET\norcontrollerrevisions?kind=STATEFULSET",
        "operationId": "Apps_ListControllerRevisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListControllerRevisionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified controllerrevision belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified controllerrevision belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind stands for what type of revisions are needed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "StatefulSet",
              "DaemonSet"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is StatefulSet,\nthis presents the name of statefulset.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for controllerrevision name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronhorizontalpodautoscalers": {
      "get": {
        "summary": "ListCronHorizontalPodAutoscalers lists cron hpas in the specified cluster and namespace.",
        "operationId": "Autoscaling_ListCronHorizontalPodAutoscalers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCronHorizontalPodAutoscalersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "kind",
            "description": "The kind of hpa targetRef.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A hpa which targetRef kind is Deployment.\n - StatefulSet: A hpa which targetRef kind is StatefulSet.\n - ReplicaSet: A hpa which targetRef kind is ReplicaSet.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "ReplicaSet"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "name",
            "description": "The workload name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "post": {
        "summary": "CreateCronHorizontalPodAutoscaler creates a cron hpa by given json.",
        "operationId": "Autoscaling_CreateCronHorizontalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateCronHorizontalPodAutoscalerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in yaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data field is the hpa YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronhorizontalpodautoscalers/{name}": {
      "delete": {
        "summary": "DeleteCronHorizontalPodAutoscaler deletes a cron hpa by given name.",
        "operationId": "Autoscaling_DeleteCronHorizontalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the metadata.name of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "put": {
        "summary": "UpdateCronHorizontalPodAutoscaler updates the specified cron hpa, the body must\nbe a JSON string.",
        "operationId": "Autoscaling_UpdateCronHorizontalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateCronHorizontalPodAutoscalerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data The data field is the hpa YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronhorizontalpodautoscalers/{name}/json": {
      "get": {
        "summary": "GetCronHorizontalPodAutoscalerJSON gets the cron hpa by namespace and name,\nreturns a string in JSON format.",
        "operationId": "Autoscaling_GetCronHorizontalPodAutoscalerJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCronHorizontalPodAutoscalerJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced HorizontalPodAutoscaler.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "HorizontalPodAutoscaler name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v2 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs": {
      "get": {
        "summary": "ListClusterCronJobs lists cluster cronJobs under the namespaces of a\nspecific cluster",
        "operationId": "Batch_ListClusterCronJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterCronJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Status represents the current state of a job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs/{cronjob}/jobs": {
      "get": {
        "summary": "ListJobsByCronJobsName lists Jobs By CronJobs's Name under the namespaces\nof a specific cluster",
        "operationId": "Batch_ListJobsByCronJobsName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListJobsByCronJobNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cronjob",
            "description": "Cronjob name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Represents the current state of a cron job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Cronjob name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs/{name}": {
      "get": {
        "summary": "GetCronJob gets a cronJob under the namespaces of a specific cluster",
        "operationId": "Batch_GetCronJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CronJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Cronjob name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      },
      "delete": {
        "summary": "DeleteCronJob deletes a cronJob under the namespaces of a specific cluster",
        "operationId": "Batch_DeleteCronJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Cronjob name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs/{name}:pause": {
      "post": {
        "summary": "PauseCronJob pauses a cronjob under the namespaces of a specific\ncluster",
        "operationId": "Batch_PauseCronJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PauseCronJobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of cronjob",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "paused": {
                  "type": "boolean",
                  "description": "Paused indicates that the cronjob is paused."
                }
              },
              "title": "PauseCronJobRequest the request of pause cronjob"
            }
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/cronjobs/{name}:resume": {
      "post": {
        "summary": "ResumeCronJob resumes a cronjob under the namespaces of a specific\ncluster",
        "operationId": "Batch_ResumeCronJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ResumeCronJobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the cronjob belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of cronjob",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "paused": {
                  "type": "boolean",
                  "description": "Paused indicates that the cronjob is paused."
                }
              },
              "title": "ResumeCronJobRequest the request of resume CronJob"
            }
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/daemonsets": {
      "get": {
        "summary": "ListDaemonSets lists daemonSet by JSON under the namespaces of a specific\ncluster",
        "operationId": "Apps_ListDaemonSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDaemonSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/daemonsets/{name}": {
      "get": {
        "summary": "GetDaemonSet gets a daemonSets under the namespaces of a specific cluster",
        "operationId": "Apps_GetDaemonSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DaemonSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "delete": {
        "summary": "DeleteDaemonSet deletes a daemonSets under the namespaces of a specific\ncluster",
        "operationId": "Apps_DeleteDaemonSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which namespace the daemonSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the daemonSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of daemonSet",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "patch": {
        "summary": "PatchDaemonSet gets a daemonset under the namespaces of a specific cluster",
        "operationId": "Apps_PatchDaemonSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchDaemonSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster  which the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace which the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The json data of patch."
                }
              },
              "description": "The request of patching deployment."
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/daemonsets/{name}:restart": {
      "post": {
        "summary": "RestartDaemonSet restarts a daemonSets under the namespaces of a specific\ncluster",
        "operationId": "Apps_RestartDaemonSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RestartDaemonSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified daemonset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified daemonset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Daemonset name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/daemonsets/{name}:rollback": {
      "post": {
        "summary": "RollbackDaemonSet rollbacks a daemonSets under the namespaces of a specific\ncluster",
        "operationId": "Apps_RollbackDaemonSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RollbackDaemonSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified daemonset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified daemonset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Daemonset name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "string",
                  "format": "int64",
                  "description": "The version of Daemonset.\nRevision indicates the revision of the state represented by Data."
                }
              }
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments": {
      "get": {
        "summary": "ListDeployments lists deployment by JSON under the namespaces of a specific\ncluster",
        "operationId": "Apps_ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}": {
      "get": {
        "summary": "GetDeployment gets a deployment under the namespaces of a specific cluster",
        "operationId": "Apps_GetDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Deployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "delete": {
        "summary": "DeleteDeployment deletes a deployment under the namespaces of a specific\ncluster",
        "operationId": "Apps_DeleteDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "patch": {
        "summary": "PatchDeployment patches a deployment under the namespaces of a\nspecific cluster",
        "operationId": "Apps_PatchDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster  which the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace which the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The json data of patch."
                }
              },
              "description": "The request of patching deployment."
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:pause": {
      "post": {
        "summary": "PauseDeployment pauses a deployment under the namespaces of a specific\ncluster",
        "operationId": "Apps_PauseDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PauseDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:restart": {
      "post": {
        "summary": "RestartDeployment restarts a deployment under the namespaces of a specific\ncluster",
        "operationId": "Apps_RestartDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RestartDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:resume": {
      "post": {
        "summary": "ResumeDeployment resumes a deployment under the namespaces of a specific\ncluster",
        "operationId": "Apps_ResumeDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ResumeDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:rollback": {
      "post": {
        "summary": "RollbackDeployment rollbacks a deployment under the namespaces of a\nspecific cluster",
        "operationId": "Apps_RollbackDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RollbackDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "string",
                  "format": "int64",
                  "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
                }
              },
              "title": "RollbackDeploymentRequest the request of Rollback Deployment"
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:start": {
      "post": {
        "summary": "StartDeployment starts a deployment under the namespace of a specific cluster",
        "operationId": "Apps_StartDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StartDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/deployments/{name}:stop": {
      "post": {
        "summary": "StopDeployment starts a deployment under the namespace of a specific cluster",
        "operationId": "Apps_StopDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StopDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/events": {
      "get": {
        "summary": "ListEvents lists events under the namespaces of a specific cluster",
        "operationId": "Core_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind represents what type of event is needed.\n\n - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Deployment: ListEvents by deployment.\n - StatefulSet: ListEvents by statefulSet.\n - DaemonSet: ListEvents by daemonSet.\n - Pod: ListEvents by pod.\n - Service: ListEvents by service.\n - Ingress: ListEvents by ingress.\n - Job: ListEvents by job.\n - CronJob: ListEvents by cronJob.\n - HorizontalPodAutoscaler: ListEvents by HorizontalPodAutoscaler.\n - ReplicaSet: ListEvents by replicaset.\n - CronHPA: ListEvents by CronHPA.\n - PersistentVolumeClaim: ListEvents by PersistentVolumeClaim.\n - GroupVersionResource: ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,\nyou must specify the value of group version resource.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet",
              "Pod",
              "Service",
              "Ingress",
              "Job",
              "CronJob",
              "HorizontalPodAutoscaler",
              "ReplicaSet",
              "CronHPA",
              "PersistentVolumeClaim",
              "GroupVersionResource"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is DEPLOYMENT,\nthis presents the name of deployments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for event name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the event list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the event list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "type",
            "description": "Type is used for query, showing events of specified type.\nUse example: type=WARNING&type=NORMAL.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "Normal",
                "Warning"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "group",
            "description": "resource group,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "description": "resource version,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource",
            "description": "resource name,used when the kind type is GroupVersionResource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmoperations": {
      "get": {
        "summary": "ListHelmOperations list operation in cluster.",
        "operationId": "Addon_ListHelmOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmOperationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the repository list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the repository list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "releaseName",
            "description": "Filter helm_operation by release_name,\nThe release_name is  exactly.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmoperations/{name}": {
      "get": {
        "summary": "GetHelmOperation get a operation in cluster.",
        "operationId": "Addon_GetHelmOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the daemonSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "delete": {
        "summary": "DeleteHelmOperation delete a operation in cluster.",
        "operationId": "Addon_DeleteHelmOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the daemonSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmoperations/{name}/json": {
      "get": {
        "summary": "GetHelmOperationJSON get a operation json in cluster.",
        "operationId": "Addon_GetHelmOperationJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmOperationJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the daemonSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmreleases": {
      "get": {
        "summary": "ListHelmReleases lists apps in cluster.",
        "operationId": "Addon_ListHelmReleases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReleasesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the releases belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the release list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the release list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "post": {
        "summary": "CreateHelmRelease creates a Release.",
        "operationId": "Addon_CreateHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the chart belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helm release belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "repo": {
                  "type": "string",
                  "description": "The repo represents for the charts belongs to."
                },
                "timeout": {
                  "type": "string",
                  "description": "Time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)."
                },
                "wait": {
                  "type": "boolean",
                  "description": "If set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout."
                },
                "atomic": {
                  "type": "boolean",
                  "description": "If set, the installation process deletes the installation on failure. The --wait flag will be set automatically if --atomic is used."
                },
                "debug": {
                  "type": "boolean",
                  "description": "Enable verbose output."
                },
                "disableHooks": {
                  "type": "boolean",
                  "description": "Prevent hooks from running during install."
                },
                "disableOpenApiValidation": {
                  "type": "boolean",
                  "description": "If set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema."
                },
                "createNamespace": {
                  "type": "boolean",
                  "description": "Create the release namespace if not present."
                },
                "checkReleaseName": {
                  "type": "boolean",
                  "description": "Check whether the release name entered during installation matches the release name in charts annotations."
                },
                "chart": {
                  "$ref": "#/definitions/v1alpha1HelmChartInstall"
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmreleases/{helmrelease}/resources": {
      "get": {
        "summary": "ListHelmReleaseResources lists resources related to the specified helm release.",
        "operationId": "Addon_ListHelmReleaseResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReleaseResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "helmrelease",
            "description": "Name of the helmrelease.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is used to fuzzy search resources which belongs to this helmrelease by resource name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind is used to filter resources which belongs to this helmrelease by resource kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase is used to filter resources which belongs to this helmrelease by resource phase.\n\n - RESOURCE_PHASE_UNSPECIFIED: ResourcePhase unspecified.\n - InProgress: Resource in progress.\n - Failed: Resource failed.\n - Current: Resource current.\n - Terminating: Resource terminating.\n - Unknown: Resource unknown.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RESOURCE_PHASE_UNSPECIFIED",
              "InProgress",
              "Failed",
              "Current",
              "Terminating",
              "Unknown"
            ],
            "default": "RESOURCE_PHASE_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the resource list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmreleases/{helmrelease}/revisions": {
      "get": {
        "summary": "ListHelmReleaseRevisions lists revisions of the specified helm release.",
        "operationId": "Addon_ListHelmReleaseRevisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHelmReleaseRevisionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "helmrelease",
            "description": "Name of the helmrelease.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmreleases/{name}": {
      "get": {
        "summary": "GetHelmRelease gets a release in cluster.",
        "operationId": "Addon_GetHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HelmRelease"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the helmrelease.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "delete": {
        "summary": "DeleteHelmRelease delete a release.",
        "operationId": "Addon_DeleteHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DeleteHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of helmrelease.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "disableHooks": {
                  "type": "boolean"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "keepHistory": {
                  "type": "boolean"
                },
                "timeout": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      },
      "put": {
        "summary": "UpdateHelmRelease updates a release.",
        "operationId": "Addon_UpdateHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of helmrelease.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "repo": {
                  "type": "string",
                  "description": "The repo represents for the charts belongs to."
                },
                "timeout": {
                  "type": "string",
                  "description": "Time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)."
                },
                "wait": {
                  "type": "boolean",
                  "description": "If set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout."
                },
                "atomic": {
                  "type": "boolean",
                  "description": "If set, the installation process deletes the installation on failure. The --wait flag will be set automatically if --atomic is used."
                },
                "debug": {
                  "type": "boolean",
                  "description": "Enable verbose output."
                },
                "disableHooks": {
                  "type": "boolean",
                  "description": "Prevent hooks from running during install."
                },
                "disableOpenApiValidation": {
                  "type": "boolean",
                  "description": "If set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema."
                },
                "force": {
                  "type": "boolean",
                  "description": "Force resource updates through a replacement strategy."
                },
                "maxHistory": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Limit the maximum number of revisions saved per release. Use 0 for no limit (default 10)."
                },
                "install": {
                  "type": "boolean",
                  "description": "If a release by this name doesn't already exist, run an install."
                },
                "cleanupOnFail": {
                  "type": "boolean",
                  "description": "Allow deletion of new resources created in this upgrade when upgrade fails."
                },
                "chart": {
                  "$ref": "#/definitions/v1alpha1HelmChartUpgrade"
                }
              }
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmreleases/{name}/json": {
      "get": {
        "summary": "GetHelmReleaseJSON gets a release in cluster.",
        "operationId": "Addon_GetHelmReleaseJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHelmReleaseJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the release belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/helmreleases/{name}:rollback": {
      "post": {
        "summary": "RollbackHelmRelease rollbacks a release.",
        "operationId": "Addon_RollbackHelmRelease",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RollbackHelmReleaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the helmrelease belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of helmrelease.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Revision that needs to rollback to."
                },
                "timeout": {
                  "type": "string",
                  "description": "Time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)."
                },
                "wait": {
                  "type": "boolean",
                  "description": "If set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout."
                },
                "debug": {
                  "type": "boolean",
                  "description": "Enable verbose output."
                },
                "disableHooks": {
                  "type": "boolean",
                  "description": "Prevent hooks from running during install."
                },
                "force": {
                  "type": "boolean",
                  "description": "Force resource updates through a replacement strategy."
                },
                "maxHistory": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Limit the maximum number of revisions saved per release. Use 0 for no limit (default 10)."
                },
                "cleanupOnFail": {
                  "type": "boolean",
                  "description": "Allow deletion of new resources created in this upgrade when upgrade fails."
                }
              },
              "description": "RollbackHelmReleaseRequest rollbacks a release."
            }
          }
        ],
        "tags": [
          "Addon"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/horizontalpodautoscalers": {
      "get": {
        "summary": "ListHorizontalPodAutoscalers lists hpas in the specified cluster and namespace.",
        "operationId": "Autoscaling_ListHorizontalPodAutoscalers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListHorizontalPodAutoscalersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "kind",
            "description": "The kind of hpa targetRef.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A hpa which targetRef kind is Deployment.\n - StatefulSet: A hpa which targetRef kind is StatefulSet.\n - ReplicaSet: A hpa which targetRef kind is ReplicaSet.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "ReplicaSet"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "name",
            "description": "The workload name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "post": {
        "summary": "CreateHorizontalPodAutoscaler creates a hpa by given json.",
        "operationId": "Autoscaling_CreateHorizontalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateHorizontalPodAutoscalerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in yaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data field is the hpa YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/horizontalpodautoscalers/{name}": {
      "delete": {
        "summary": "DeleteHorizontalPodAutoscaler deletes a hpa by given name.",
        "operationId": "Autoscaling_DeleteHorizontalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the metadata.name of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "put": {
        "summary": "UpdateHorizontalPodAutoscaler updates the specified hpa, the body must\nbe a JSON string.",
        "operationId": "Autoscaling_UpdateHorizontalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateHorizontalPodAutoscalerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced hpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data The data field is the hpa YAML details"
                }
              }
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/horizontalpodautoscalers/{name}/json": {
      "get": {
        "summary": "GetHorizontalPodAutoscalerJSON gets the hpa by namespace and name,\nreturns a string in JSON format.",
        "operationId": "Autoscaling_GetHorizontalPodAutoscalerJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetHorizontalPodAutoscalerJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced HorizontalPodAutoscaler.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "HorizontalPodAutoscaler name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v2 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/ingresses": {
      "get": {
        "summary": "ListIngresses lists all ingresses in the specified cluster and namespace.",
        "operationId": "Networking_ListIngresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListIngressesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is the number of pages at the beginning.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the number of every page displayed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy defines sort field, please see message kpanda.io.api.types.SortBy.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy defines the type of sort, default type asc, can also specify desc.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is the name of the ingress.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "post": {
        "summary": "CreateIngress creates a ingress in the specified cluster and namespace.",
        "operationId": "Networking_CreateIngress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateIngressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data is the ingress YAML details."
                }
              },
              "title": "CreateIngressRequest the request of create cluster ingresses"
            }
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/ingresses/{name}": {
      "get": {
        "summary": "GetIngress gets the ingress by namespace and name.",
        "operationId": "Networking_GetIngress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Ingress"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of the ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "delete": {
        "summary": "DeleteIngress deletes the ingress by name.",
        "operationId": "Networking_DeleteIngress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "put": {
        "summary": "UpdateIngress updates the specified ingress, the body must be a JSON\nstring.",
        "operationId": "Networking_UpdateIngress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateIngressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data is the ingress YAML details."
                }
              },
              "title": "UpdateIngressRequest the request of update cluster ingresses"
            }
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "patch": {
        "summary": "PatchIngress patches the specified ingress, the body must be a JSON string.",
        "operationId": "Networking_PatchIngress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchIngressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The data defines the update details of ingress."
                }
              },
              "title": "PatchIngressRequest the request of patch cluster ingresses"
            }
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/ingresses/{name}/json": {
      "get": {
        "summary": "GetIngressJSON gets the ingress by namespace and name, returns a string in JSON\nformat.",
        "operationId": "Networking_GetIngressJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetIngressJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the ingress of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of the ingress.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v1 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/jobs": {
      "get": {
        "summary": "ListClusterJobs list cluster jobs under the namespaces of a specific\ncluster",
        "operationId": "Batch_ListClusterJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Status represents the current state of a job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/jobs/{name}": {
      "get": {
        "summary": "GetJob gets a job under the namespaces of a specific cluster",
        "operationId": "Batch_GetJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Job"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      },
      "delete": {
        "summary": "DeleteJob deletes a job under the namespaces of a specific cluster",
        "operationId": "Batch_DeleteJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/jobs/{name}:restart": {
      "post": {
        "summary": "RestartJob restarts a job under the namespaces of a specific\ncluster",
        "operationId": "Batch_RestartJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RestartJobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified job belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the job.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceVersion": {
                  "type": "string",
                  "description": "ResourceVersion of the job."
                }
              },
              "description": "Get restart job information."
            }
          }
        ],
        "tags": [
          "Batch"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/limitranges": {
      "get": {
        "summary": "ListLimitRanges lists all limitranges in the specified cluster and namespace.",
        "operationId": "Core_ListLimitRanges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListLimitRangesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the LimitRanges belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the LimitRanges belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for LimitRange name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the LimitRange list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the LimitRange list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreateLimitRange creates a limitrange in the specified cluster and namespace.",
        "operationId": "Core_CreateLimitRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateLimitRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the limitRange YAML details."
                }
              },
              "description": "Create LimitRange in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/limitranges/{name}": {
      "get": {
        "summary": "GetLimitRange gets the limitrange by namespace and name.",
        "operationId": "Core_GetLimitRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1LimitRange"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified limitRange.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeleteLimitRange deletes the limitrange by name.",
        "operationId": "Core_DeleteLimitRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the LimitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced LimitRange.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the LimitRange name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateLimitRange updates the specified limitrange, the body must be a JSON\nstring.",
        "operationId": "Core_UpdateLimitRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateLimitRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified limitRange.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the limitRange YAML details."
                }
              },
              "description": "Update LimitRange in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/limitranges/{name}/json": {
      "get": {
        "summary": "GetLimitRangeJSON gets the limitrange by namespace and name, returns a string in JSON format.",
        "operationId": "Core_GetLimitRangeJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetLimitRangeJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified limitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the limitRange name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/limitranges:compute": {
      "get": {
        "summary": "ComputeLimitRange returns the final effective quota detail of multi limit range in specified namespace",
        "operationId": "Core_ComputeLimitRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1LimitRange"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified LimitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified LimitRange belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/metricvalues": {
      "get": {
        "summary": "ListMetricValueList returns a list of metrics values for a given\nresource.",
        "operationId": "Autoscaling_ListMetricValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListMetricValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the hpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The kind of metrics.\n\n - Pod: The custom metrics for service.\n - Service: The custom metrics for service.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Pod",
              "Service"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The exact name of metric.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/networkpolicies": {
      "get": {
        "summary": "ListNetworkPolicies lists all networkpolicies in the specified cluster and namespace.",
        "operationId": "Networking_ListNetworkPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNetworkPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, return all the networkpolicies of the cluster\nbe specified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace of networkpolicy list.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page number.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the number of every page displayed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy defines sort field, please see message kpanda.io.api.types.SortBy.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy defines the type of sort, default type asc, can also specify desc.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is the name of the networkpolicy.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "post": {
        "summary": "CreateNetworkPolicy creates a networkpolicy in the specified cluster and namespace.",
        "operationId": "Networking_CreateNetworkPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateNetworkPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data is the networkpolicy YAML details."
                }
              },
              "title": "CreateNetworkPolicyRequest the request of create cluster networkpolicies"
            }
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/networkpolicies/{name}": {
      "get": {
        "summary": "GetNetworkPolicy gets the networkpolicy by namespace and name.",
        "operationId": "Networking_GetNetworkPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1NetworkPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specifies the namespace of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of the networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "delete": {
        "summary": "DeleteNetworkPolicy deletes the networkpolicy by name.",
        "operationId": "Networking_DeleteNetworkPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      },
      "put": {
        "summary": "UpdateNetworkPolicy updates the specified networkpolicy, the body must be a JSON\nstring.",
        "operationId": "Networking_UpdateNetworkPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateNetworkPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data is the networkpolicy YAML details."
                }
              },
              "title": "UpdateNetworkPolicyRequest the request of update cluster networkpolicies"
            }
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/networkpolicies/{name}/json": {
      "get": {
        "summary": "GetNetworkPolicyJSON gets the networkpolicy by namespace and name, returns a string in JSON\nformat.",
        "operationId": "Networking_GetNetworkPolicyJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNetworkPolicyJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster to request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace specified the namespace of networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of the networkpolicy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v1 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims": {
      "get": {
        "summary": "ListPersistentVolumeClaims gets the pvcs from the system",
        "operationId": "Core_ListPersistentVolumeClaims",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPersistentVolumeClaimsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for fuzzy search by name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for fuzzy search by phase.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessMode",
            "description": " - PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ReadWriteOnce: ReadWriteOnce can be mounted in read/write mode to exactly 1 host.\n - ReadOnlyMany: ReadOnlyMany can be mounted in read-only mode to many hosts.\n - ReadWriteMany: ReadWriteMany can be mounted in read/write mode to many hosts.\n - ReadWriteOncePod: ReadWriteOncePod can be mounted in read/write mode to exactly 1 pod.\nReadWriteOncePod cannot be used in combination with other access modes.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED",
              "ReadWriteOnce",
              "ReadOnlyMany",
              "ReadWriteMany",
              "ReadWriteOncePod"
            ],
            "default": "PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreatePersistentVolumeClaim create persistent volume claim",
        "operationId": "Core_CreatePersistentVolumeClaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreatePersistentVolumeClaimResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data is the pvc YAML details"
                }
              },
              "description": "CreatePersistentVolumeClaimRequest represents the request of create PVC in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims/{name}": {
      "get": {
        "summary": "GetPersistentVolumeClaim gets a pvc from the system by given pvc-name;",
        "operationId": "Core_GetPersistentVolumeClaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PersistentVolumeClaim"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of PVC to search",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeletePersistentVolumeClaim delete the specified pvc",
        "operationId": "Core_DeletePersistentVolumeClaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdatePersistentVolumeClaim update the persistent volume claim",
        "operationId": "Core_UpdatePersistentVolumeClaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdatePersistentVolumeClaimResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data represents the data of PVC  JSON"
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims/{name}/annotations": {
      "put": {
        "summary": "UpdatePersistentVolumeClaimAnnotations puts the specified pvc's annotations",
        "operationId": "Core_UpdatePersistentVolumeClaimAnnotations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdatePersistentVolumeClaimAnnotationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "labels represents the labels  of pvc"
                }
              },
              "title": "UpdatePersistentVolumeClaimAnnotationsRequest represents the request of put pvc's AnnotationsRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims/{name}/json": {
      "get": {
        "summary": "GetPersistentVolumeClaimJSON get the specified pvc's JSON",
        "operationId": "Core_GetPersistentVolumeClaimJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPersistentVolumeClaimJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of PVC to search",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims/{name}/labels": {
      "put": {
        "summary": "UpdatePersistentVolumeClaimLabels puts the specified pvc's labels",
        "operationId": "Core_UpdatePersistentVolumeClaimLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdatePersistentVolumeClaimLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of PVC to search",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "labels represents the labels  of pvc"
                }
              },
              "title": "UpdatePersistentVolumeClaimLabelsRequest represents the request of put pvc's labels"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/persistentvolumeclaims/{name}:scale": {
      "post": {
        "summary": "ScalePersistentVolumeClaim post scale the persistent volume claim capacity",
        "operationId": "Core_ScalePersistentVolumeClaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ScalePersistentVolumeClaimResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of PVC belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "capacity": {
                  "type": "string",
                  "title": "capacity represents the capacity of PVC"
                }
              },
              "title": "UpdateScalePersistentVolumeClaimRequest represents the request of scale Pvc"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods": {
      "get": {
        "summary": "ListPods will list all pod by given cluster and namespace",
        "operationId": "Core_ListPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "kind",
            "description": "The kind of pod.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - Service: Service to expose an application running on a set of Pods.\n - Job: Job is used to express a one-time task.\n - CronJob: CronJob runs repeatedly according to its time schedule.\n - ReplicaSet: ReplicaSet is the workload API object used to manage pods\n - NetworkPolicy: NetworkPolicy uses podSelector to select pods.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet",
              "Service",
              "Job",
              "CronJob",
              "ReplicaSet",
              "NetworkPolicy"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "Name of kind.\nIf the kind is Deployment,\nthis presents the name of the deployment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for pod name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for filter.\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PHASE_UNSPECIFIED",
              "Unknown",
              "Pending",
              "Running",
              "Succeeded",
              "Failed"
            ],
            "default": "PHASE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status is filter with pod status ,the status is composite state",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FILTER_POD_STATUS_UNSPECIFIED",
              "FILTER_POD_STATUS_RUNNING",
              "FILTER_POD_STATUS_ERROR",
              "FILTER_POD_STATUS_COMPLETED",
              "FILTER_POD_STATUS_WAITING"
            ],
            "default": "FILTER_POD_STATUS_UNSPECIFIED"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods/{name}": {
      "get": {
        "summary": "GetPods will get a pod under the namespaces of a specific cluster by pods",
        "operationId": "Core_GetPod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Pod"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Pod name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeletePod deletes a pod under the namespaces of a specific cluster",
        "operationId": "Core_DeletePod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Pod name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods/{name}/containers": {
      "get": {
        "summary": "ListContainersByPod lists containers under the namespaces of a specific\ncluster by pods",
        "operationId": "Core_ListContainersByPod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodContainerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of pod to search",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/pods/{name}/log": {
      "get": {
        "summary": "GetPodContainerLog gets pod contianer log",
        "operationId": "insight_GetPodContainerLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPodContainerLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Name of the cluster where the Pod is located",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Name of the namespace where the Pod is located",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of pod",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workload",
            "description": "workload refers to the name of a workload",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "container",
            "description": "Name of the pod where the container is located",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "Start time of get pod container log",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "description": "End time of get pod container log",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Number of page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Log number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "logSearch",
            "description": "for fuzzy query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "insight"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/replicasets": {
      "get": {
        "summary": "ListReplicaSets lists replicasets in specified namespace of a cluster",
        "operationId": "Apps_ListReplicaSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListReplicaSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of replicaset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the replicaset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "Kind stands for what type of replicasets are needed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of involvedObject.\nIf the kind is Deployment,\nthis presents the name of deployments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for replicaset name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is size of every page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/replicasets/{name}": {
      "get": {
        "summary": "GetReplicaSet gets replicaset detail in specified namespace of a cluster",
        "operationId": "Apps_GetReplicaSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ReplicaSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified replicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified replicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified replicaSet.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "delete": {
        "summary": "DeleteReplicaSet deletes a replicaset in specified namespace of a cluster",
        "operationId": "Apps_DeleteReplicaSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the ReplicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ReplicaSet.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the ReplicaSet name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "put": {
        "summary": "UpdateReplicaSet updates a replicaset in specified namespace of a cluster",
        "operationId": "Apps_UpdateReplicaSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateReplicaSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified replicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified replicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified replicaSet.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the replicaSet YAML details."
                }
              },
              "description": "Update ReplicaSet in the cluster."
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/replicasets/{name}/json": {
      "get": {
        "summary": "GetReplicaSetJSON gets replicaset yaml in specified namespace of a cluster",
        "operationId": "Apps_GetReplicaSetJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetReplicaSetJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified replicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified replicaSet belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the replicaSet name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/resourcequotas": {
      "get": {
        "summary": "ListResourceQuotas lists quotas in specified namespace",
        "operationId": "Core_ListResourceQuotas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListResourceQuotasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the ResourceQuotas belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the ResourceQuotas belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for ResourceQuota name, used for name fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the ResourceQuota list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the ResourceQuota list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreateResourceQuota creates a resourceQuota to the system by given resourceQuota data",
        "operationId": "Core_CreateResourceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateResourceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the resourceQuota YAML details."
                }
              },
              "description": "Create ResourceQuota in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/resourcequotas/{name}": {
      "get": {
        "summary": "GetResourceQuota gets a resourceQuota from the system by given resourceQuota name",
        "operationId": "Core_GetResourceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ResourceQuota"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified resourceQuota.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateResourceQuota updates a resourceQuota from the system by given resourceQuota name",
        "operationId": "Core_UpdateResourceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateResourceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified resourceQuota.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the resourceQuota YAML details."
                }
              },
              "description": "Update ResourceQuota in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/resourcequotas/{name}/json": {
      "get": {
        "summary": "GetResourceQuotaJSON gets a resourceQuota json from the system by given resourceQuota name",
        "operationId": "Core_GetResourceQuotaJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetResourceQuotaJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified resourceQuota belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the resourceQuota name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/resourcequotas:compute": {
      "get": {
        "summary": "ComputeResourceQuota returns the final effective quota detail of multi quotas in specified namespace",
        "operationId": "Core_ComputeResourceQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ResourceQuota"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified resourceQuotas belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified resourceQuotas belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/resources": {
      "post": {
        "summary": "CreateResource creates a list of resources of a given yaml",
        "operationId": "Apiextensions_CreateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the resources belong to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the resources belong to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The data field is the resource YAML details."
                }
              },
              "title": "CreateResourceRequest represents create request to create resources from yaml"
            }
          }
        ],
        "tags": [
          "Apiextensions"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/rolebindings": {
      "post": {
        "summary": "CreateRoleBinding creates a RoleBinding",
        "operationId": "RBAC_CreateRoleBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RoleBinding"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the roleBinding belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the roleBinding belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "$ref": "#/definitions/v1alpha1Subject",
                  "description": "Subject holds references to the objects the role applies to."
                },
                "roleRef": {
                  "$ref": "#/definitions/v1alpha1RoleRef",
                  "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in\nthe global namespace. If the RoleRef cannot be resolved, the Authorizer\nmust return an error."
                },
                "name": {
                  "type": "string",
                  "description": "the name of RoleBinding."
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "ownerReferences": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/typesOwnerReference"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/rolebindings/{name}": {
      "delete": {
        "summary": "ListRoleBindings lists the clusterrolebidings created by the frontend.",
        "operationId": "RBAC_DeleteRoleBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the roleBinding belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the roleBinding belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the rolebinding to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/roles": {
      "get": {
        "summary": "ListRoles lists the roles created by frontend.",
        "operationId": "RBAC_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      },
      "post": {
        "summary": "CreateRole creates a Role",
        "operationId": "RBAC_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacv1alpha1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "the name of role."
                }
              }
            }
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/roles/{name}": {
      "get": {
        "summary": "GetRole gets a Role",
        "operationId": "RBAC_GetRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacv1alpha1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the role to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      },
      "delete": {
        "summary": "DeleteRole deletes the roles created by the frontend.",
        "operationId": "RBAC_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the role to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      },
      "put": {
        "summary": "UpdateRole updates a Role",
        "operationId": "RBAC_UpdateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the role belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of the role to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                }
              },
              "title": "UpdateRoleRequest the request of update role"
            }
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/secrets": {
      "get": {
        "summary": "ListSecrets lists a secret under the namespaces of a specific cluster",
        "operationId": "Core_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "The name use to search specific secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is used to filter secrets by type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of secrets, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreateSecret creates a secret under the namespaces of a specific cluster",
        "operationId": "Core_CreateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in yaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data is the Secret YAML details"
                }
              },
              "description": "Create Secret in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/secrets/{name}": {
      "get": {
        "summary": "GetClusterSecret gets a secret under the namespaces of a specific cluster",
        "operationId": "Core_GetSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Secret"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeleteSecret deletes a secret under the namespaces of a specific cluster",
        "operationId": "Core_DeleteSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateSecret updates secret under the namespaces of a specific cluster",
        "operationId": "Core_UpdateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data field is the Secret YAML details"
                }
              },
              "description": "Update Secret in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/secrets/{name}/json": {
      "get": {
        "summary": "GetSecretJSON gets a secret json under the namespaces of a specific cluster",
        "operationId": "Core_GetSecretJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetSecretJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Secret name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "patch": {
        "summary": "PatchSecret patchs a Secret under the namespaces of a specific cluster",
        "operationId": "Core_PatchSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced secret.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The data is the secret YAML details."
                }
              },
              "description": "Patches the current secret."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/secrets/{secret}/related": {
      "get": {
        "summary": "ListSecretsRelatedWorkloads list all workloads associated with this secret",
        "operationId": "Apps_ListSecretsRelatedWorkloads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListSecretRelatedWorkloadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/serviceaccounts": {
      "post": {
        "summary": "CreateServiceAccount creates a sa from the system by given sa name",
        "operationId": "Core_CreateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateServiceAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the cluster of ServiceAccount to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data is the ServiceAccount YAML details"
                }
              },
              "description": "CreateStorageClassRequest represents the request of create ServiceAccount in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/serviceaccounts/{name}": {
      "get": {
        "summary": "GetServiceAccount gets a sa from the system by given sa\nname",
        "operationId": "Core_GetServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ServiceAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced ServiceAccount.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name  represents the name of ServiceAccount to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeleteServiceAccount deletes a sa from the system by given sa name",
        "operationId": "Core_DeleteServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the ServiceAccount belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of StorageClass",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services": {
      "get": {
        "summary": "ListServices lists services in the specified cluster and namespace",
        "operationId": "Core_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The kind of service.\nIf the kind is Deployment,\nthis presents the name of the deployment.\n\n - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "Name of kind.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for service name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the service list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the service list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "type",
            "description": "Type is a array used for frontend filter.\nUse examples: type=CLUSTER_IP&type=NODE_PORT.\n\n - SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ClusterIP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NodePort: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LoadBalancer: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - ExternalName: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SERVICE_TYPE_UNSPECIFIED",
                "ClusterIP",
                "NodePort",
                "LoadBalancer",
                "ExternalName"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ports",
            "description": "Ports is used to filter by port.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreateService creates a service to the system by given service data",
        "operationId": "Core_CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "When the current namespace is named, the priority is higher than that in\nyaml",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "Data is the Service YAML details"
                }
              },
              "description": "Create Service in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services/{name}": {
      "get": {
        "summary": "GetService gets a service from the system by given service name",
        "operationId": "Core_GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeleteService deletes a service from the system by given service name",
        "operationId": "Core_DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced service.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateService updates a service from the system by given service name",
        "operationId": "Core_UpdateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "Data is the Service YAML details"
                }
              },
              "description": "Update the Service information."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "patch": {
        "summary": "PatchService patches a service from the system by given service name",
        "operationId": "Core_PatchService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The json data of patch."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/services/{name}/json": {
      "get": {
        "summary": "GetServiceJSON gets a service json from the system by given service name",
        "operationId": "Core_GetServiceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetServiceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the service name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets": {
      "get": {
        "operationId": "Apps_ListStatefulSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListStatefulSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}": {
      "get": {
        "summary": "GetStatefulSet gets a statefulSets under the namespaces of a specific\ncluster",
        "operationId": "Apps_GetStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StatefulSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Cluster represents which namespace the workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "delete": {
        "summary": "DeleteStatefulSet deletes a statefulSet under the namespaces of a specific\ncluster",
        "operationId": "Apps_DeleteStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of deployment",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "patch": {
        "summary": "PatchStatefulSet update a statefulSet under the namespaces of a specific\ncluster",
        "operationId": "Apps_PatchStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchStatefulSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster  which the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace which the deployment belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the deployment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The json data of patch."
                }
              },
              "description": "The request of patching deployment."
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}:restart": {
      "post": {
        "summary": "RestartStatefulSet restarts a statefulSet under the namespaces of a\nspecific cluster",
        "operationId": "Apps_RestartStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RestartStatefulSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "StatefulSet name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}:rollback": {
      "post": {
        "summary": "RollbackStatefulSet rollbacks a statefulSet under the namespaces of a\nspecific cluster",
        "operationId": "Apps_RollbackStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RollbackStatefulSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace the specified statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "StatefulSet name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "string",
                  "format": "int64",
                  "description": "Revision indicates the revision of the state represented by Data."
                }
              }
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}:start": {
      "post": {
        "summary": "StartStatefulSet starts a statefulset under the namespace of a specific cluster",
        "operationId": "Apps_StartStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StartStatefulSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of statefulset.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/statefulsets/{name}:stop": {
      "post": {
        "summary": "StopStatefulSet starts a statefulset under the namespace of a specific cluster",
        "operationId": "Apps_StopStatefulSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StopStatefulSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the statefulset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of statefulset.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/verticalpodautoscalers": {
      "get": {
        "summary": "ListVerticalPodAutoscalers lists vpas in the specified cluster and namespace.",
        "operationId": "Autoscaling_ListVerticalPodAutoscalers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListVerticalPodAutoscalersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the vpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced vpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "kind",
            "description": "The kind of vpa targetRef.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A vpa which targetRef kind is Deployment.\n - StatefulSet: A vpa which targetRef kind is StatefulSet.\n - DaemonSet: A vpa which targetRef kind is DaemonSet.\n - ReplicaSet: A vpa which targetRef kind is ReplicaSet.\n - Job: A vpa which targetRef kind is Job.\n - CronJob: A vpa which targetRef kind is CronJob.\n - ReplicationController: A vpa which targetRef kind is ReplicationController.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "KIND_UNSPECIFIED",
              "Deployment",
              "StatefulSet",
              "DaemonSet",
              "ReplicaSet",
              "Job",
              "CronJob",
              "ReplicationController"
            ],
            "default": "KIND_UNSPECIFIED"
          },
          {
            "name": "kindName",
            "description": "The name of the targetRef.\nIf the kind is StatefulSet, this presents the name of statefulset.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "post": {
        "summary": "CreateVerticalPodAutoscaler creates a vpa by given json.",
        "operationId": "Autoscaling_CreateVerticalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateVerticalPodAutoscalerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified vpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace of the vpa.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data field is the vpa YAML details."
                }
              },
              "description": "CreateVerticalPodAutoscalerRequest requests to create a vpa."
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/verticalpodautoscalers/{name}": {
      "delete": {
        "summary": "DeleteVerticalPodAutoscaler deletes a vpa by given name.",
        "operationId": "Autoscaling_DeleteVerticalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the vpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced vpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the metadata.name of the vpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      },
      "put": {
        "summary": "UpdateVerticalPodAutoscaler updates the specified vpa, the body must\nbe a JSON string.",
        "operationId": "Autoscaling_UpdateVerticalPodAutoscaler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateVerticalPodAutoscalerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified vpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced vpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the vpa YAML details."
                }
              },
              "description": "UpdateVerticalPodAutoscalerRequest requests to update a vpa."
            }
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/verticalpodautoscalers/{name}/json": {
      "get": {
        "summary": "GetVerticalPodAutoscalerJSON gets a vpa by namespace and name, returning a string in JSON format.",
        "operationId": "Autoscaling_GetVerticalPodAutoscalerJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetVerticalPodAutoscalerJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the vpa belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace of the vpa.\nThis field is required in all cases.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the vpa.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v2 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Autoscaling"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/volumesnapshots": {
      "get": {
        "summary": "ListVolumeSnapshots list volume snapshot in single cluster",
        "operationId": "Storage_ListVolumeSnapshots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListVolumeSnapshotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the VolumeSnapshot belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      },
      "post": {
        "summary": "CreateVolumeSnapshot create volume snapshot in single cluster",
        "operationId": "Storage_CreateVolumeSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateVolumeSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "name represents the name of VolumeSnapshot to snapshot belongs to."
                }
              },
              "description": "CreateVolumeSnapshotRequest represents the request of create VolumeSnapshot Snapshot in the cluster."
            }
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/volumesnapshots/{name}": {
      "delete": {
        "summary": "DeleteVolumeSnapshot delete volume snapshot in single cluster",
        "operationId": "Storage_DeleteVolumeSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      },
      "put": {
        "summary": "UpdateVolumeSnapshot update volume snapshot",
        "operationId": "Storage_UpdateVolumeSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateVolumeSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of Volume snapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace represents the namespace of volume snapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name represents the name of volume snapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data represents the data of volume snapshot JSON"
                }
              },
              "description": "UpdateVolumeSnapshotRequest represents the request of update volume snapshot."
            }
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/volumesnapshots/{name}/json": {
      "get": {
        "summary": "GetVolumeSnapshotJSON list StorageClass in single cluster",
        "operationId": "Storage_GetVolumeSnapshotJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetVolumeSnapshotJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of VolumeSnapshots belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the VolumeSnapshots belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of VolumeSnapshots to search",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/{kind}/json": {
      "post": {
        "summary": "CreateWorkloadByJSON creates workload by JSON under the namespaces of a\nspecific cluster",
        "operationId": "Apps_CreateWorkloadByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "WorkloadKind the workload of kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "deployments",
              "statefulsets",
              "daemonsets",
              "jobs",
              "cronjobs",
              "pods",
              "replicasets"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data The data field is the Workload YAML details"
                }
              },
              "title": "CreateWorkloadByJSONRequest the request of create workload by JSON request"
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{namespace}/{kind}/{name}/json": {
      "get": {
        "summary": "GetWorkloadJSON gets workload by JSON under the namespaces of a specific\ncluster",
        "operationId": "Apps_GetWorkloadJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "WorkloadKind the workload of kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "deployments",
              "statefulsets",
              "daemonsets",
              "jobs",
              "cronjobs",
              "pods",
              "replicasets"
            ]
          },
          {
            "name": "name",
            "description": "Name represents the name of Workload",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stable",
            "description": "If stable is true, the v1 version under the corresponding package will be returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Apps"
        ]
      },
      "put": {
        "summary": "UpdateWorkloadByJSON updates workload by JSON under the namespaces of a\nspecific cluster",
        "operationId": "Apps_UpdateWorkloadByJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1WorkloadJSON"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the Workload belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "WorkloadKind the workload of kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "deployments",
              "statefulsets",
              "daemonsets",
              "jobs",
              "cronjobs",
              "pods",
              "replicasets"
            ]
          },
          {
            "name": "name",
            "description": "Name represents the name of Workload",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "data The data field is the Workload YAML details"
                }
              },
              "title": "UpdateWorkloadByJSONRequest request of update workload by JSON request"
            }
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{name}": {
      "get": {
        "summary": "GetNamespace gets a namespace from the system by given namespace\nname",
        "operationId": "Core_GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeleteNamespace deletes a namespace from the system by given namespace name",
        "operationId": "Core_DeleteNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateNamespace updates a namespace from the system by given namespace name",
        "operationId": "Core_UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data is the namespace YAML details."
                }
              },
              "description": "Update Namespace information."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "patch": {
        "summary": "PatchNamespace patches a namespace from the system by given namespace name",
        "operationId": "Core_PatchNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PatchNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The data is the namespace YAML details."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{name}/json": {
      "get": {
        "summary": "GetNamespaceJSON gets a namespace json from the system by given namespace\nname",
        "operationId": "Core_GetNamespaceJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNamespaceJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the namespace belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the requested namespace name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{name}/podsecurity:disable": {
      "post": {
        "summary": "DisableNamespacePodSecurity enables pod security policy of a namespace",
        "operationId": "Core_DisableNamespacePodSecurity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "DisableNamespacePodSecurityRequest requests to remove pod security labels of a namespace."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{name}/podsecurity:enable": {
      "post": {
        "summary": "EnableNamespacePodSecurity enables pod security policy of a namespace",
        "operationId": "Core_EnableNamespacePodSecurity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster of the namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the resource name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "podSecurity": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1PodSecurity"
                  },
                  "description": "PodSecurity is a list of label combinations of mode plus level."
                }
              },
              "description": "EnableNamespacePodSecurityRequest request to enable pod security of a namespace."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{name}:bind": {
      "post": {
        "operationId": "Workspace_BindResourceToWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BindResourceToWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32"
                },
                "workspaceAlias": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespaces/{name}:unbind": {
      "delete": {
        "operationId": "Workspace_UnbindResourceFromWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnbindResourceFromWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32"
                },
                "workspaceAlias": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/namespacesummary": {
      "get": {
        "summary": "ListClusterNamespaceSummary gets a list of namespace simple information\nfrom the system by given cluster name",
        "operationId": "Core_ListClusterNamespaceSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNamespaceSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the namespace summary list belong to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for filter.\n\n - NAMESPACE_PHASE_UNSPECIFIED: The namespace state is unspecified.\n - Active: NamespaceActive means the namespace is available for use in the system\n - Terminating: NamespaceTerminating means the namespace is undergoing graceful termination",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NAMESPACE_PHASE_UNSPECIFIED",
              "Active",
              "Terminating"
            ],
            "default": "NAMESPACE_PHASE_UNSPECIFIED"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/networkpolicies": {
      "get": {
        "summary": "ListClusterNetworkPolicies lists all networkpolicies in the specified cluster.",
        "operationId": "Networking_ListClusterNetworkPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNetworkPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the name of the cluster, must be specified,\nwill return all the networkpolicies of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page number.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the number of every page displayed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy defines sort field, please see message kpanda.io.api.types.SortBy.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy defines the type of sort, default type asc, can also specify desc.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is the name of the networkpolicy.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Networking"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes": {
      "get": {
        "summary": "ListNodes lists the node in specified cluster",
        "operationId": "Core_ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phase",
            "description": "Phase represents the current phase of node.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NODE_PHASE_UNSPECIFIED",
                "Ready",
                "Not_Ready",
                "Unknown"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nodeIp",
            "description": "nodeIp represents node's ip address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is to filter nodes by node name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "description": "Role is used for filter by node role.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NODE_ROLE_UNSPECIFIED",
              "CONTROL_PLANE",
              "WORKER"
            ],
            "default": "NODE_ROLE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{name}": {
      "get": {
        "summary": "GetNode gets a node from the system by given node name",
        "operationId": "Core_GetNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "showPods",
            "description": "ShowPods is to control whether returned data contains\nnode.status.PodAllocated. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdateNode updates a node from the system by given node name",
        "operationId": "Core_UpdateNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name represents for the node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "The data is the node YAML details."
                }
              },
              "description": "UpdateNodeRequest requests to update a node."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{name}/json": {
      "get": {
        "summary": "GetNodeJSON gets a node's json from the system by given node name",
        "operationId": "Core_GetNodeJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNodeJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the node name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{name}:unbindNamespace": {
      "post": {
        "summary": "UnbindNodeToNamespace makes the specified node to shared.",
        "operationId": "Core_UnbindNodeToNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnbindNodeToNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the cluster for namespace and node.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the node name for node which needs to\nbe unbound with namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "Namespace is the namespace for node to unbind."
                }
              },
              "description": "UnbindNodeToNamespaceRequest is the request for node unbind namespace."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/annotations": {
      "put": {
        "summary": "UpdateNodeAnnotations edits annotations of specified node.",
        "operationId": "Core_UpdateNodeAnnotations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateNodeAnnotationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations requested."
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/cordon": {
      "post": {
        "summary": "CordonNode makes the specified node to unschedulable.",
        "operationId": "Core_CordonNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/gpu-mode": {
      "put": {
        "summary": "UpdateNodeGPUMode updates single the gpu mode with cluster node",
        "operationId": "Core_UpdateNodeGPUMode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateNodeGPUModeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "$ref": "#/definitions/v1alpha1GPUModel"
                },
                "migSpec": {
                  "$ref": "#/definitions/v1alpha1MIGModeSpec"
                }
              }
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/gpu-stats": {
      "get": {
        "summary": "GetNodeGPUStats get node gpu stats",
        "operationId": "Core_GetNodeGPUStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetNodeGPUStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/gpus": {
      "get": {
        "summary": "listNodeGPU gets all the gpu info with cluster node",
        "operationId": "Core_ListNodeGPU",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListNodeGPUResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/labels": {
      "put": {
        "summary": "PutNodeLabels puts the specified node's labels",
        "operationId": "Core_PutNodeLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PutNodeLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "the labels of node."
                }
              },
              "description": "PutNodeLabels put node's labels."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/pods": {
      "get": {
        "summary": "ListPodsByNode lists pods info by given node in a specific\ncluster",
        "operationId": "Core_ListPodsByNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsByNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "description": "Node represents which node the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is to filter pods by pod name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the job list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the job list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status is filter with pod status ,the status is composite state",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FILTER_POD_STATUS_UNSPECIFIED",
              "FILTER_POD_STATUS_RUNNING",
              "FILTER_POD_STATUS_ERROR",
              "FILTER_POD_STATUS_COMPLETED",
              "FILTER_POD_STATUS_WAITING"
            ],
            "default": "FILTER_POD_STATUS_UNSPECIFIED"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/taints": {
      "put": {
        "summary": "PutNodeTaints puts a node's taints in a specific cluster",
        "operationId": "Core_PutNodeTaints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PutNodeTaintsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "// Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "taints": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1Taint"
                  },
                  "description": "If specified, the node's taints."
                }
              },
              "description": "PutNodeTaints put node's taints."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes/{node}/uncordon": {
      "post": {
        "summary": "UnCordonNode makes the specified node to schedulable.",
        "operationId": "Core_UnCordonNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Node"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified node belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "description": "Node name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodes:batchBindNamespace": {
      "post": {
        "summary": "BatchBindNodeToNamespace makes the specified node to exclusive.",
        "operationId": "Core_BatchBindNodeToNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BatchBindNodeToNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the cluster for namespace and node.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "Namespace is the namespace for node to be bound."
                },
                "nodeNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "NodeNames is the list of node name which\nneeds to be bound with namespace."
                }
              },
              "description": "BatchBindNamespaceRequest is the request for node bind namespaces."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/nodesummary": {
      "get": {
        "summary": "ListClusterNodeSummary lists the node summary in specified cluster",
        "operationId": "Core_ListClusterNodeSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterNodeSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/persistentvolumeclaims": {
      "get": {
        "summary": "ListPersistentVolumeClaims gets the pvcs from the system",
        "operationId": "Core_ListClusterPersistentVolumeClaims",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterPersistentVolumeClaimsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessMode",
            "description": "AccessMode is used searching PVC by accessMode.\n\n - PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ReadWriteOnce: ReadWriteOnce can be mounted in read/write mode to exactly 1 host.\n - ReadOnlyMany: ReadOnlyMany can be mounted in read-only mode to many hosts.\n - ReadWriteMany: ReadWriteMany can be mounted in read/write mode to many hosts.\n - ReadWriteOncePod: ReadWriteOncePod can be mounted in read/write mode to exactly 1 pod.\nReadWriteOncePod cannot be used in combination with other access modes.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED",
              "ReadWriteOnce",
              "ReadOnlyMany",
              "ReadWriteMany",
              "ReadWriteOncePod"
            ],
            "default": "PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/persistentvolumes": {
      "get": {
        "summary": "ListPersistentVolumes lists persistentvolumes in the specified cluster",
        "operationId": "Core_ListPersistentVolumes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPersistentVolumesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the PersistentVolumes belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name stands for PersistentVolume name, used for fuzzy search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the PersistentVolume list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the PersistentVolume list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by cluster name or cluster alias name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "post": {
        "summary": "CreatePersistentVolume creates a persistentvolume to the system by given persistentvolume data",
        "operationId": "Core_CreatePersistentVolume",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreatePersistentVolumeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified persistentVolume belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the persistentVolume YAML details."
                }
              },
              "description": "Create PersistentVolume in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/persistentvolumes/{name}": {
      "get": {
        "summary": "GetPersistentVolume gets a persistentvolume from the system by given persistentvolume name",
        "operationId": "Core_GetPersistentVolume",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1PersistentVolume"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified persistentVolume belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified persistentVolume.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "delete": {
        "summary": "DeletePersistentVolume deletes a persistentvolume from the system by given persistentvolume name",
        "operationId": "Core_DeletePersistentVolume",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the PersistentVolume belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the PersistentVolume name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      },
      "put": {
        "summary": "UpdatePersistentVolume updates a persistentvolume from the system by given persistentvolume name",
        "operationId": "Core_UpdatePersistentVolume",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdatePersistentVolumeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified persistentVolume belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the specified persistentVolume.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Data is the persistentVolume YAML details."
                }
              },
              "description": "Update PersistentVolume in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/persistentvolumes/{name}/json": {
      "get": {
        "summary": "GetPersistentVolumeJSON gets a persistentvolume json from the system by given persistentvolume name",
        "operationId": "Core_GetPersistentVolumeJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetPersistentVolumeJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified persistentVolume belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents for the persistentVolume name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/pods": {
      "get": {
        "summary": "ListClusterPods will list all pod by given cluster and regardless of\nnamespaces",
        "operationId": "Core_ListClusterPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the pod belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phases is used for filter.\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PHASE_UNSPECIFIED",
              "Unknown",
              "Pending",
              "Running",
              "Succeeded",
              "Failed"
            ],
            "default": "PHASE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "status is filter with pod status ,the status is composite state",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FILTER_POD_STATUS_UNSPECIFIED",
              "FILTER_POD_STATUS_RUNNING",
              "FILTER_POD_STATUS_ERROR",
              "FILTER_POD_STATUS_COMPLETED",
              "FILTER_POD_STATUS_WAITING"
            ],
            "default": "FILTER_POD_STATUS_UNSPECIFIED"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "gpuType",
            "description": "gpu_type is filter with pods resources, when value is * search all",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/preferredresources": {
      "get": {
        "operationId": "Cluster_ListClusterPreferredResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterPreferredResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaced",
            "description": "namespaced indicates whether this resource is cluster or namespace scoped.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/publicmetric": {
      "post": {
        "operationId": "insight_QueryPublicUsage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1MetricResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Name of the cluster where the workload is located",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "title": "Name of the namespace where the workload is located"
                },
                "param": {
                  "$ref": "#/definitions/v1alpha1BatchQueryRequestParam",
                  "title": "The parameters of query request"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "queryList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "insight"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/publicmetricrange": {
      "post": {
        "operationId": "insight_QueryPublicRangeUsage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1MetricRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Name of the cluster where the workload is located",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "title": "Name of the namespace where the workload is located"
                },
                "param": {
                  "$ref": "#/definitions/v1alpha1BatchQueryRangeRequestParam",
                  "title": "The parameters of query request"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "queryList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "insight"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/replicasets": {
      "get": {
        "summary": "ListClusterReplicaSets lists replicasets of a cluster",
        "operationId": "Apps_ListClusterReplicaSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterReplicaSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified replicaset belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the data number per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/secrets": {
      "get": {
        "summary": "ListClusterSecrets lists a secret in a specific cluster",
        "operationId": "Core_ListClusterSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the secret belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "The name use to search specific secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is used to filter secrets by type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyMetadata",
            "description": "OnlyMetadata lists only metadata of secrets, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/serviceaccounts": {
      "get": {
        "summary": "ListNamespaces gets all the namespaces across clusters",
        "operationId": "Core_ListServiceAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListServiceAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of sa to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namesapce",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/serviceaccounts/{name}": {
      "put": {
        "summary": "UpdateServiceAccount updates a sa from the system by given sa name",
        "operationId": "Core_UpdateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateServiceAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of ServiceAccount to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name  represents the name of ServiceAccount to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "Namespace is the metadata.namespace of the referenced pod.\nThis field is required in all cases."
                },
                "data": {
                  "type": "string",
                  "title": "The data is the ServiceAccount YAML details"
                }
              },
              "description": "UpdateServiceAccount represents the request of update ServiceAccount in the cluster."
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/services": {
      "get": {
        "summary": "ListClusterServices lists all services in the specified cluster, regardless\nof namespace",
        "operationId": "Core_ListClusterServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster the specified service belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the service list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the service list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "name",
            "description": "Name is used for query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is a array used for frontend filter.\nUse examples: type=CLUSTER_IP&type=NODE_PORT\n\n - SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ClusterIP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NodePort: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LoadBalancer: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - ExternalName: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SERVICE_TYPE_UNSPECIFIED",
                "ClusterIP",
                "NodePort",
                "LoadBalancer",
                "ExternalName"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ports",
            "description": "Ports is used to filter by port.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/settings": {
      "get": {
        "summary": "Gets the setting under a given cluster.",
        "operationId": "ClusterSetting_GetClusterSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterSetting"
        ]
      },
      "put": {
        "summary": "UpdateClusterSetting will update the cluster setting and returns the settings\nafter updating.",
        "operationId": "ClusterSetting_UpdateClusterSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "one of cluster or kubeSystemID has value",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "settings": {
                  "$ref": "#/definitions/v1alpha1ClusterSetting"
                }
              }
            }
          }
        ],
        "tags": [
          "ClusterSetting"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/settings/gpu": {
      "get": {
        "operationId": "ClusterSetting_ListGPUSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGPUSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "availableEnable",
            "description": "if available_enable is true will return available gpu number\nif available_enable is false AvailableResource return nil",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterSetting"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/settings/plugins": {
      "get": {
        "summary": "Lists plugins under a given cluster.",
        "operationId": "ClusterSetting_ListPlugins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListPluginsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterSetting"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/settings/plugins/{name}:disable": {
      "post": {
        "summary": "Disable a plugin so that it can be shown by the frontend.",
        "operationId": "ClusterSetting_DisablePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Plugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the plugin which needs to disable.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "PLUGIN_NAME_UNSPECIFIED",
              "HPA",
              "Insight",
              "GPU",
              "METALLB",
              "Spiderpool",
              "CustomMetrics",
              "CronHPA",
              "VPA",
              "Hwameistor",
              "Flannel",
              "KubeOvn",
              "OLM",
              "EgressGateway",
              "Snapshot",
              "DRA"
            ]
          }
        ],
        "tags": [
          "ClusterSetting"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/settings/plugins/{name}:enable": {
      "post": {
        "summary": "Enable a plugin so that it can be shown by the frontend.",
        "operationId": "ClusterSetting_EnablePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Plugin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "The cluster name of the clustersetting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the plugin which needs to enable.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "PLUGIN_NAME_UNSPECIFIED",
              "HPA",
              "Insight",
              "GPU",
              "METALLB",
              "Spiderpool",
              "CustomMetrics",
              "CronHPA",
              "VPA",
              "Hwameistor",
              "Flannel",
              "KubeOvn",
              "OLM",
              "EgressGateway",
              "Snapshot",
              "DRA"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ClusterSetting"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/sriovnodesresources": {
      "get": {
        "operationId": "Core_ListClusterSriovAllocatedResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterSriovAllocatedResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/statefulsets": {
      "get": {
        "summary": "ListClusterStatefulSets lists one cluster all namespace's statefulsets",
        "operationId": "Apps_ListClusterStatefulSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListStatefulSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of Workload to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page is current page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size is the data number shown per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name represents the name of workloads to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Phase represents the phase of workloads to search\n\n - WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "WORKLOAD_STATE_UNSPECIFIED",
              "Running",
              "Deleting",
              "Not_Ready",
              "Stopped",
              "Waiting"
            ],
            "default": "WORKLOAD_STATE_UNSPECIFIED"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/storageclasses": {
      "get": {
        "summary": "ListStorageClass list StorageClass in single cluster",
        "operationId": "Storage_ListStorageClasses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListStorageClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provisioner",
            "description": "Provisioner is used for fuzzy search by provisioner.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reclaimPolicy",
            "description": "ReclaimPolicy is used for fuzzy search by reclaimPolicy.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      },
      "post": {
        "summary": "CreateStorageClass",
        "operationId": "Storage_CreateStorageClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateStorageClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents the cluster of StorageClass to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data is the StorageClass YAML details"
                }
              },
              "description": "CreateStorageClassRequest represents the request of create StorageClass in the cluster."
            }
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/storageclasses/{name}": {
      "get": {
        "summary": "GetStorageClass get StorageClass  in single cluster",
        "operationId": "Storage_GetStorageClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1StorageClass"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name  represents the name of StorageClass to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      },
      "delete": {
        "summary": "DeleteStorageClass",
        "operationId": "Storage_DeleteStorageClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the StorageClass belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name represents the name of StorageClass",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      },
      "put": {
        "summary": "UpdateStorageClass update storage class",
        "operationId": "Storage_UpdateStorageClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateStorageClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the cluster of StorageClass to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name  represents the name of StorageClass to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "title": "The data is the StorageClass YAML details"
                }
              },
              "description": "UpdateStorageClassRequest represents the request of update StorageClass in the cluster."
            }
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/storageclasses/{name}/json": {
      "get": {
        "summary": "GetStorageClassJSON get StorageClass json in single cluster",
        "operationId": "Storage_GetStorageClassJSON",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetStorageClassJSONResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of PVC to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "name  represents the name of StorageClass to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}/volumesnapshots": {
      "get": {
        "summary": "ListClusterVolumeSnapshots will list all VolumeSnapshot by given cluster and regardless of\nnamespaces",
        "operationId": "Storage_ListClusterVolumeSnapshots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterVolumeSnapshotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents the name of VolumeSnapshot to belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Name is used for filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "labelSelector",
            "description": "LabelSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldSelector",
            "description": "FieldSelector is the format after labels.FormatLabels used to filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Storage"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}:bind": {
      "post": {
        "operationId": "Workspace_BindClusterToWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1BindClusterToWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32"
                },
                "workspaceAlias": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{cluster}:unbind": {
      "delete": {
        "operationId": "Workspace_UnBindClusterFromWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnBindClusterFromWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "workspaceId": {
                  "type": "integer",
                  "format": "int32"
                },
                "workspaceAlias": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{name}": {
      "get": {
        "summary": "GetCluster gets the details of the specified kpanda cr",
        "operationId": "Cluster_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the user-specified identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "description": "Status represents the current state of cluster.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          {
            "name": "excludeMetrics",
            "description": "exclude_metrics\nIf false, contains metrics-related information\nIf true, metrics-related information is not included",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "delete": {
        "summary": "DeleteCluster deletes the specified cluster",
        "operationId": "Cluster_DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deleteKpandaNamespace": {
                  "type": "boolean",
                  "description": "DeleteKpandaNamespace represents whether to delete namespace of kpanda."
                },
                "deleteInsightAgent": {
                  "type": "boolean",
                  "title": "DeleteInsightAgent represents whether to delete insight agent server.``"
                }
              },
              "description": "DeleteClusterRequest returns clusters information."
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "UpdateClusters updates a cluster by cluster name",
        "operationId": "Cluster_UpdateClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateOrUpdateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "aliasName": {
                  "type": "string",
                  "description": "It is an alias given by the user and can be changed at will. It cannot be\nempty."
                },
                "provider": {
                  "$ref": "#/definitions/v1alpha1ClusterProvider",
                  "description": "Provider represents the cloud provider name of the member cluster."
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are key/value pairs that are attached to objects."
                },
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations to attach arbitrary metadata to objects."
                },
                "describe": {
                  "type": "string",
                  "description": "Describe represents the details of the member cluster."
                },
                "region": {
                  "type": "string",
                  "description": "Region represents the region of the member cluster locate in."
                },
                "zone": {
                  "type": "string",
                  "description": "Zone represents the zone of the member cluster locate in."
                },
                "kubeConfigString": {
                  "type": "string",
                  "description": "KubeConfig of the cluster."
                }
              },
              "description": "UpdateClusterRequest requests to update a cluster."
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{name}/labels": {
      "put": {
        "summary": "EditClusterLabels edits the specified cluster's labels",
        "operationId": "Cluster_EditClusterLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1EditClusterLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are key/value pairs that are attached to objects."
                }
              },
              "description": "EditClusterLabelsRequest returns true when pod termination has been\nrequested."
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clusters/{name}/validate": {
      "post": {
        "summary": "ValidateCluster checks if residuals which affect integrating exist in a cluster",
        "operationId": "Cluster_ValidateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ValidateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "unjoinCluster": {
                  "type": "boolean",
                  "description": "JoinCluster represents whther the request is to join cluster.\nif true, the kube_config_string is required param, otherwise, the name is required."
                },
                "kubeConfigString": {
                  "type": "string",
                  "description": "KubeConfig of the cluster."
                }
              },
              "description": "ValidateClusterRequest requests to check if residuals which affect integrating exist in a cluster."
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/clustersummary": {
      "get": {
        "summary": "listClusterSummary lists cluster summary",
        "operationId": "Cluster_ListClusterSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListClusterSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "showVirtualCluster",
            "description": "ShowVirtualCluster is used to control whether returned data contains\nvirtualCluster. Default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterByStrategy",
            "description": "FilterByStrategy is to list all the clusters without strategies if true, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterBySnapshot",
            "description": "FilterBySnapshot is to list all the clusters which has snapshot if true, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/etcdbackuprestore/strategies": {
      "get": {
        "summary": "ListEtcdBackupStrategies list etcd backup strategies.",
        "operationId": "EtcdBackupRestore_ListEtcdBackupStrategies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEtcdBackupStrategiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "cluster represents which cluster the repository belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the user-specified identifier.\nThis field may not be updated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "description": "SortBy determines the repository list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_BY_UNSPECIFIED",
              "field_name",
              "state",
              "workspace",
              "cluster",
              "namespace",
              "created_at"
            ],
            "default": "SORT_BY_UNSPECIFIED"
          },
          {
            "name": "sortDir",
            "description": "OrderBy determines the repository list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          }
        ],
        "tags": [
          "EtcdBackupRestore"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/featuregates": {
      "get": {
        "operationId": "FeatureGate_ListFeatureGates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListFeatureGatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "FeatureGate"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/globalroles": {
      "get": {
        "operationId": "Workspace_ListGlobalRolesForCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListGlobalRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/gpus": {
      "get": {
        "summary": "ListClusters lists kpanda cr resources",
        "operationId": "Cluster_ListAllClusterGPU",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAllClusterGPUInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/kubesystemid/{kubeSystemID}/clustercert": {
      "post": {
        "summary": "CreateOpenAPIClusterCertByKubeSystemID creates openAPI cluster cert by\nkubeSystemID",
        "operationId": "Cluster_CreateOpenAPIClusterCertByKubeSystemID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateOpenAPIClusterCertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "kubeSystemID",
            "description": "kubeSystemID is the cluster system ID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "title": "one of cluster or kubeSystemID has value"
                },
                "expirationSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ExpirationSeconds is the requested duration of validity of the request."
                }
              }
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registries": {
      "get": {
        "summary": "ListRegistries returns a list of registries",
        "operationId": "Image_ListRegistries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRegistriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global",
            "description": "Global is to list all global registries.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by registry name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registries/kangaroo": {
      "get": {
        "summary": "DetectKangaroo returns whether the kangaroo is installed.",
        "operationId": "Image_DetectKangaroo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DetectKangarooResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registries/{registry}/projects": {
      "get": {
        "summary": "ListProjects returns a list of projects of specified registry",
        "operationId": "Image_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "Public is distinguish public projects and private projects.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by project name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registries/{registry}/repositories": {
      "get": {
        "summary": "ListRepositories returns a list of image names of specified project",
        "operationId": "Image_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRepositoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request, \"/\" is a possible value.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fuzzyName",
            "description": "FuzzyName is used to fuzzy search by multiple parameters including name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showArtifacts",
            "description": "ShowArtifacts is to list artifacts of per image, default false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registries/{registry}/repositories/{repository}/artifacts": {
      "get": {
        "summary": "ListArtifacts returns a list of tags of specified image",
        "operationId": "Image_ListArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registry",
            "description": "Registry is registry name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository",
            "description": "Repository is image name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Cluster is the current cluster.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace is the current namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project is the project to request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page requested.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Size per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "public",
            "description": "Public is distinguish public images and private images.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fuzzyTagName",
            "description": "FuzzyTagName is used to fuzzy search by tag name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Image"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registry/tags": {
      "get": {
        "operationId": "Registry_ListImageTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListImageTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster presents the cluster of dockeconfig belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace presents the namespace of dockeconfig belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secret",
            "description": "Secret is the name of dockeconfig.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "image",
            "description": "Image is the name of repository which needs verify.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "registryHost",
            "description": "The registry host which the repository belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registry/verify": {
      "post": {
        "operationId": "Registry_VerifyRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyRegistryRequest"
            }
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/registry/verifyImage": {
      "get": {
        "operationId": "Registry_VerifyImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1VerifyImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster presents the cluster of dockeconfig belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace presents the namespace of dockeconfig belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secret",
            "description": "Secret is the name of dockeconfig.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "image",
            "description": "Image is the name of repository which needs to list tags.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "registryHost",
            "description": "The registry host which the repository belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/rolesummary": {
      "get": {
        "summary": "ListAllUserRoleSummary lists user role summary",
        "operationId": "RBAC_ListAllUserRoleSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListAllUserRoleSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster represents which cluster the roleBinding belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace represents which namespace the roleBinding belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RBAC"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/settings/gpu": {
      "get": {
        "operationId": "SettingService_GPUSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GPUSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SettingService"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/workspaces": {
      "get": {
        "operationId": "Workspace_ListWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListWorkspacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    },
    "/apis/kpanda.io/v1alpha1/workspaces/{workspaceId}/workspacesharedresourcequota": {
      "get": {
        "operationId": "Workspace_GetWorkspaceResourceQuotaAllocatable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetWorkspaceSharedResourceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workspaceAlias",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Workspace"
        ]
      }
    }
  },
  "definitions": {
    "CalicoConfigCalicoIptablesBackendType": {
      "type": "string",
      "enum": [
        "CALICO_IPTABLES_BACKEND_TYPE_UNSPECIFIED",
        "NFT",
        "Auto",
        "Legacy"
      ],
      "default": "CALICO_IPTABLES_BACKEND_TYPE_UNSPECIFIED"
    },
    "CalicoConfigCalicoTunnel": {
      "type": "string",
      "enum": [
        "CALICO_TUNNEL_UNSPECIFIED",
        "IPIP",
        "IPIPCrossSubnet",
        "VXLAN",
        "VXLANCrossSubnet"
      ],
      "default": "CALICO_TUNNEL_UNSPECIFIED"
    },
    "CommonNetworkConfigKubeProxyMode": {
      "type": "string",
      "enum": [
        "KUBE_PROXY_MODE_UNSPECIFIED",
        "iptables",
        "ipvs"
      ],
      "default": "KUBE_PROXY_MODE_UNSPECIFIED"
    },
    "ContainerResourcePolicyContainerScalingMode": {
      "type": "string",
      "enum": [
        "CONTAINER_SCALING_MODE_UNSPECIFIED",
        "Auto",
        "Off"
      ],
      "default": "CONTAINER_SCALING_MODE_UNSPECIFIED",
      "description": "ContainerScalingMode controls whether autoscaler is enabled for a specific\ncontainer.\n\n - CONTAINER_SCALING_MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Auto: ContainerScalingModeAuto means autoscaling is enabled for a container.\n - Off: ContainerScalingModeOff means autoscaling is disabled for a container."
    },
    "CronJobStatusCronJobCondition": {
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string",
          "description": "The name of job."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current condition of job."
        }
      },
      "description": "Current condition of cronjob."
    },
    "CronJobStatusCronJobState": {
      "type": "string",
      "enum": [
        "CRONJOB_STATE_UNSPECIFIED",
        "Waiting",
        "Activated",
        "Stopped",
        "Deleting"
      ],
      "default": "CRONJOB_STATE_UNSPECIFIED",
      "description": "Current state of a cron job.\n\n - CRONJOB_STATE_UNSPECIFIED: CronJob is unspecified.\n - Waiting: Waiting for cronjob ready.\n - Activated: The number of pending and running pods.\n - Stopped: CronJob has stopped.\n - Deleting: CronJob is being deleted."
    },
    "CustomMetricValueDescribedObject": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        }
      },
      "title": "a reference to the described object"
    },
    "CustomResourceDefinitionSpecResourceScope": {
      "type": "string",
      "enum": [
        "RESOURCE_SCOPE_UNSPECIFIED",
        "NAMESPACED",
        "CLUSTER"
      ],
      "default": "RESOURCE_SCOPE_UNSPECIFIED",
      "description": "- RESOURCE_SCOPE_UNSPECIFIED: ResourceScope is unspecified\n - NAMESPACED: Represents which namespace the belongs to.\n - CLUSTER: Cluster the specified belongs to.",
      "title": "ResourceScope is an enum defining the different scopes available to a\ncustom resource"
    },
    "EtcdBackupStrategySpecEtcdBackupType": {
      "type": "string",
      "enum": [
        "BACKUP_TYPE_UNSPECIFIED",
        "Manual",
        "Timing"
      ],
      "default": "BACKUP_TYPE_UNSPECIFIED",
      "description": " - BACKUP_TYPE_UNSPECIFIED: Backup strategy type is unspecified."
    },
    "FlannelConfigBackendType": {
      "type": "string",
      "enum": [
        "BACKEND_TYPE_UNSPECIFIED",
        "VXLAN",
        "HostGateway",
        "WireGuard"
      ],
      "default": "BACKEND_TYPE_UNSPECIFIED"
    },
    "GetHelmChartResourcesResponseResources": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "GetPodContainerLogResponseData": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string",
          "title": "the log of the pod container's log"
        },
        "timeStamp": {
          "type": "string",
          "title": "the time stamp the pod container's log"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "the labels of log"
        }
      },
      "title": "the data of log"
    },
    "KubeOvnConfigNetworkType": {
      "type": "string",
      "enum": [
        "NETWORK_TYPE_UNSPECIFIED",
        "GENEVE",
        "VLAN"
      ],
      "default": "NETWORK_TYPE_UNSPECIFIED",
      "title": "- GENEVE: geneve means that the network mode is overlay\n - VLAN: vlan means that the network mode is underlay"
    },
    "KubesprayArgsRuntime": {
      "type": "string",
      "enum": [
        "RUNTIME_UNSPECIFIED",
        "containerd",
        "docker"
      ],
      "default": "RUNTIME_UNSPECIFIED",
      "description": "Container runtime\ndocker for docker, crio for cri-o and containerd for containerd.\nAdditionally you can set this to kubeadm if you want to install etcd using kubeadm\nKubeadm etcd deployment is experimental and only available for new deployments\nIf this is not set, container manager will be inherited from the Kubespray defaults\nand not from k8s_cluster/k8s-cluster.yml, which might not be what you want.\nAlso this makes possible to use different container manager for etcd nodes."
    },
    "ListClusterNamespaceSummaryResponseScope": {
      "type": "string",
      "enum": [
        "SCOPE_UNSPECIFIED",
        "Cluster",
        "Namespaced"
      ],
      "default": "SCOPE_UNSPECIFIED",
      "description": "Scope is an enum defining the different scopes available to the namespaces.\nAllowed values are `Cluster` and `Namespaced`."
    },
    "ListClusterlcmOpsRequestAction": {
      "type": "string",
      "enum": [
        "ACTION_UNSPECIFIED",
        "CREATE_CLUSTER",
        "UPGRADE_CLUSTER",
        "RESET_CLUSTER",
        "ADD_NODE",
        "REMOVE_NODE"
      ],
      "default": "ACTION_UNSPECIFIED"
    },
    "ListHelmChartsResponseCategoryItem": {
      "type": "object",
      "properties": {
        "othersNums": {
          "type": "integer",
          "format": "int32"
        },
        "storageNums": {
          "type": "integer",
          "format": "int32"
        },
        "networkNums": {
          "type": "integer",
          "format": "int32"
        },
        "monitorNums": {
          "type": "integer",
          "format": "int32"
        },
        "databaseNums": {
          "type": "integer",
          "format": "int32"
        },
        "dataServiceNums": {
          "type": "integer",
          "format": "int32"
        },
        "infraNums": {
          "type": "integer",
          "format": "int32"
        },
        "securityNums": {
          "type": "integer",
          "format": "int32"
        },
        "ecoappNums": {
          "type": "integer",
          "format": "int32"
        },
        "bigdataNums": {
          "type": "integer",
          "format": "int32"
        },
        "iotedgeNums": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListRuntimeVersionsResponsePreferredVersion": {
      "type": "object",
      "properties": {
        "containerdVersion": {
          "type": "string",
          "title": "The recommended containerd_version"
        },
        "dockerVersion": {
          "type": "string",
          "title": "The recommended docker_version"
        }
      }
    },
    "NetworkConfigCNI": {
      "type": "string",
      "enum": [
        "CNI_UNSPECIFIED",
        "calico",
        "cilium",
        "flannel",
        "kube_ovn",
        "none"
      ],
      "default": "CNI_UNSPECIFIED"
    },
    "NetworkPolicySpecPolicyType": {
      "type": "string",
      "enum": [
        "POLICY_TYPE_UNSPECIFIED",
        "Ingress",
        "Egress"
      ],
      "default": "POLICY_TYPE_UNSPECIFIED",
      "description": "- POLICY_TYPE_UNSPECIFIED: Placeholder to avoid zero not return.\n - Ingress: PolicyTypeIngress is a NetworkPolicy that affects ingress traffic on selected pods.\n - Egress: PolicyTypeEgress is a NetworkPolicy that affects egress traffic on selected pods.",
      "title": "PolicyType string describes the NetworkPolicy type\nThis type is beta-level in 1.8"
    },
    "PatchCustomResourceRequestPatchType": {
      "type": "string",
      "enum": [
        "PATCH_TYPE_UNSPECIFIED",
        "PATCH_TYPE_JSON",
        "PATCH_TYPE_MERGE",
        "PATCH_TYPE_STRATEGIC_MERGE",
        "PATCH_TYPE_APPLY"
      ],
      "default": "PATCH_TYPE_UNSPECIFIED"
    },
    "PersistentVolumeClaimSpecVolumeMode": {
      "type": "string",
      "enum": [
        "VOLUME_MODE_UNSPECIFIED",
        "Block",
        "Filesystem"
      ],
      "default": "VOLUME_MODE_UNSPECIFIED",
      "description": " - Block: PersistentVolumeBlock means the volume will not be formatted with a filesystem and will remain a raw block device.\n - Filesystem: PersistentVolumeFilesystem means the volume will be or is formatted with a filesystem."
    },
    "PodStatusOwnedBy": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PodStatusOwnedByKind",
          "description": "The kind of pod."
        },
        "name": {
          "type": "string",
          "title": "Name is the related workload name"
        }
      },
      "title": "OwnedBy states which workload the pod belongs to"
    },
    "PodStatusOwnedByKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "DEPLOYMENT",
        "STATEFULSET",
        "DAEMONSET",
        "REPLICASET",
        "JOB",
        "CRONJOB"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": "- KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - DEPLOYMENT: A Deployment provides declarative updates for Pods and ReplicaSets.\n - STATEFULSET: StatefulSet is the workload API object used to manage stateful\napplications.\n - DAEMONSET: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - REPLICASET: A pod's owner replicaSet\n - JOB: A pod's owner job\n - CRONJOB: A pod's owner cronjob",
      "title": "Kind includes deployment, statefulset, daemonset"
    },
    "RepoSpecSecretReference": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "namespace is the namespace for the resource being referenced."
        },
        "name": {
          "type": "string",
          "description": "name is the name of resource being referenced."
        }
      }
    },
    "SnapStoreConfigSnapStoreProvider": {
      "type": "string",
      "enum": [
        "SNAP_STORE_PROVIDER_UNSPECIFIED",
        "Local",
        "S3"
      ],
      "default": "SNAP_STORE_PROVIDER_UNSPECIFIED",
      "description": " - SNAP_STORE_PROVIDER_UNSPECIFIED: Snap Store Provider is unspecified.\n - Local: Local is constant for local disk storage provider.\n - S3: S3 is constant for aws S3 storage provider."
    },
    "SnapshotterConfigGarbageCollectingPolicy": {
      "type": "string",
      "enum": [
        "ETCD_BACKUP_TYPE_UNSPECIFIED",
        "Exponential",
        "LimitBased"
      ],
      "default": "ETCD_BACKUP_TYPE_UNSPECIFIED",
      "description": "- ETCD_BACKUP_TYPE_UNSPECIFIED: etcd backup type is unspecified.\n - Exponential: Exponential policy stores the snapshots in a condensed manner as mentioned below:\nAll full backups and delta backups for the previous hour.\nLatest full snapshot of each previous hour for the day.\nLatest full snapshot of each previous day for 7 days.\nLatest full snapshot of the previous 4 weeks\n - LimitBased: If using LimitBased policy, the max-backups flag should be provided to indicate the\nnumber of recent-most backups to persist at each garbage collection cycle.",
      "title": "garbage_collection_policy Policy for garbage collecting old backups"
    },
    "StorageClassReclaimPolicy": {
      "type": "string",
      "enum": [
        "RECLAIM_AOLICY_UNSPECIFIED",
        "Delete",
        "Retain"
      ],
      "default": "RECLAIM_AOLICY_UNSPECIFIED",
      "description": " - Delete: PersistentVolumeReclaimDelete means the volume will be deleted from Kubernetes on release from its claim.\nThe volume plugin must support Deletion.\n - Retain: PersistentVolumeReclaimRetain means the volume will be left in its current phase (Released) for manual reclamation by the administrator.\nThe default policy is Retain."
    },
    "StorageClassVolumeBindingMode": {
      "type": "string",
      "enum": [
        "VOLUME_BINDING_MODE_UNSPECIFIED",
        "Immediate",
        "WaitForFirstConsumer"
      ],
      "default": "VOLUME_BINDING_MODE_UNSPECIFIED",
      "description": " - Immediate: VolumeBindingImmediate indicates that PersistentVolumeClaims should be\nimmediately provisioned and bound.  This is the default mode.\n - WaitForFirstConsumer: VolumeBindingWaitForFirstConsumer indicates that PersistentVolumeClaims\nshould not be provisioned and bound until the first Pod is created that\nreferences the PeristentVolumeClaim.  The volume provisioning and\nbinding will occur during Pod scheduing."
    },
    "apicloudshellv1alpha1LocalSecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        }
      },
      "description": "LocalSecretReference is a reference to a secret within the enclosing\nnamespace."
    },
    "apiclustersv1alpha1ClusterRole": {
      "type": "string",
      "enum": [
        "CLUSTER_ROLE_UNSPECIFIED",
        "CLUSTER_ROLE_MANAGER",
        "CLUSTER_ROLE_GLOBAL_SERVICE",
        "CLUSTER_ROLE_WORKER",
        "CLUSTER_ROLE_THIRD_PARTY"
      ],
      "default": "CLUSTER_ROLE_UNSPECIFIED"
    },
    "apiclustersv1alpha1LocalSecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace for the resource being referenced."
        },
        "resourceVersion": {
          "type": "string",
          "description": "ResourceVersion is the version of resource being referenced."
        }
      },
      "title": "SecretRef represents the secret contains mandatory credentials to access the member cluster.\nThe secret should hold credentials as follows:\n- secret.data.token\n- secret.data.caBundle\n+optional"
    },
    "apicorev1alpha1LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "title": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1PortStatus"
          },
          "title": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it"
        }
      }
    },
    "apicorev1alpha1LoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apicorev1alpha1LoadBalancerIngress"
          },
          "description": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points."
        }
      },
      "description": "LoadBalancerStatus represents the status of a load-balancer."
    },
    "apicorev1alpha1PortStatus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Port is the port number of the service port of which status is recorded here"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
        },
        "error": {
          "type": "string",
          "description": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n  - built-in error values shall be specified in this file and those shall use\n    CamelCase names\n  - cloud provider specific error values must have names that comply with the\n    format foo.example.com/CamelCase."
        }
      },
      "title": "PortStatus represents the error condition of a service port"
    },
    "apicorev1alpha1TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced."
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        }
      },
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace."
    },
    "apinetworkingv1alpha1LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP is set for load-balancer ingress points that are IP based."
        },
        "hostname": {
          "type": "string",
          "description": "Hostname is set for load-balancer ingress points that are DNS based."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apinetworkingv1alpha1PortStatus"
          },
          "description": "Ports is a list of records of service ports.\nIf used, every port defined in the service should have an entry in it."
        }
      },
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point."
    },
    "apinetworkingv1alpha1LoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apinetworkingv1alpha1LoadBalancerIngress"
          },
          "description": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points."
        }
      },
      "title": "LoadBalancerStatus represents the status of a load-balancer"
    },
    "apinetworkingv1alpha1PortStatus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port is the port number of the service port of which status is recorded."
        },
        "error": {
          "type": "string",
          "description": "Error is to record the problem with the service port."
        },
        "protocol": {
          "$ref": "#/definitions/v1alpha1Protocol",
          "description": "Protocol is the protocol of the service port of which status is recorded."
        }
      },
      "title": "PortStatus represents the error condition of a service port"
    },
    "apinetworkingv1alpha1TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced."
        },
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API\ngroup. For any other third-party types, APIGroup is required."
        }
      },
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace."
    },
    "apirbacv1alpha1ClusterRole": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PolicyRule"
          },
          "title": "Rules holds all the PolicyRules for this ClusterRole"
        },
        "aggregationRule": {
          "$ref": "#/definitions/v1alpha1AggregationRule",
          "title": "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole.\nIf AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be\nstomped by the controller.\n+optional"
        }
      },
      "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
    },
    "clusterlcmv1alpha1Phase": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "Running",
        "Succeeded",
        "Failed",
        "Blocked"
      ],
      "default": "STATUS_UNSPECIFIED"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rbacv1alpha1Role": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PolicyRule"
          },
          "title": "Rules holds all the PolicyRules for this Role"
        }
      },
      "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
    },
    "typesCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string",
          "title": "Last time the condition transitioned from one status to another.\n+optional"
        },
        "lastUpdateTime": {
          "type": "string",
          "title": "Last time we got an update on a given condition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "type": {
          "type": "string",
          "description": "Type of condition."
        }
      },
      "description": "Condition describes the state of a referent at a certain point."
    },
    "typesConditionStatus": {
      "type": "string",
      "enum": [
        "CONDITION_STATUS_UNSPECIFIED",
        "True",
        "False",
        "Unknown"
      ],
      "default": "CONDITION_STATUS_UNSPECIFIED",
      "description": "These are valid condition statuses.\n\n - CONDITION_STATUS_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - True: True means a resource is in the condition.\n - False: False means a resource is not in the condition.\n - Unknown: Unknown means kubernetes can't decide if a resource is in the condition or\nnot."
    },
    "typesLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the\nmatchLabels map is equivalent to an element of matchExpressions, whose key\nfield is \"key\", the operator is \"In\", and the values array contains only\n\"value\". The requirements are ANDed. +optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesLabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements\nare ANDed. +optional"
        }
      },
      "description": "A label selector is a label query over a set of resources. The result of\nmatchLabels and matchExpressions are ANDed. An empty label selector matches\nall objects. A null label selector matches no objects."
    },
    "typesLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. This array is replaced during\na strategic merge patch. +optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and\nan operator that relates the key and values."
    },
    "typesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid\n+patchStrategy=merge"
        },
        "cluster": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request."
        },
        "workspaceAlias": {
          "type": "string",
          "description": "The name of the workspace which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent workspaces. This field is not set anywhere right now and\napiserver is going to ignore it if set in create or update request."
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "typesOwnerReference": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent."
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\n+optional"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "typesPagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total is the total number of referents."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page is current page."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "PageSize is the data number shown per page."
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "description": "Pages is the number of pages."
        }
      },
      "description": "Pagination is for data paging."
    },
    "typesRollingUpdate": {
      "type": "object",
      "properties": {
        "maxSurge": {
          "type": "string",
          "title": "The maximum number of pods that can be scheduled above the desired number\nof pods. Value can be an absolute number (ex: 5) or a percentage of desired\npods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number\nis calculated from percentage by rounding up. Defaults to 25%. Example:\nwhen this is set to 30%, the new ReplicaSet can be scaled up immediately\nwhen the rolling update starts, such that the total number of old and new\npods do not exceed 130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods\nrunning at any time during the update is at most 130% of desired pods.\n+optional"
        },
        "maxUnavailable": {
          "type": "string",
          "title": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods\n(ex: 10%). Absolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to\n70% of desired pods immediately when the rolling update starts. Once new\npods are ready, old ReplicaSet can be scaled down further, followed by\nscaling up the new ReplicaSet, ensuring that the total number of pods\navailable at all times during the update is at least 70% of desired pods.\n+optional"
        }
      },
      "description": "Spec to control the desired behavior of rolling update."
    },
    "typesSortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_UNSPECIFIED",
        "field_name",
        "state",
        "workspace",
        "cluster",
        "namespace",
        "created_at"
      ],
      "default": "SORT_BY_UNSPECIFIED",
      "description": "SortBy determines the data list order reference.\n\n - SORT_BY_UNSPECIFIED: Unspecified is default, no sorting.\n - field_name: Sort result by name.\n - state: TODO: Sort result by state not supported yet.\n - workspace: TODO: Sort result by workspace not supported yet.\n - cluster: Sort result by cluster name.\n - namespace: Sort result by namespace.\n - created_at: Sort result by creationTimestamp."
    },
    "typesSortDir": {
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "default": "desc",
      "description": "SortDir determines the data list order.\n\n - desc: Desc stands for descending order.\n - asc: Asc stands for ascending order."
    },
    "typesUpdateStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/typesRollingUpdate",
          "title": "RollingUpdate is used to communicate parameters when Type is\nRollingUpdateType. +optional"
        },
        "type": {
          "type": "string",
          "title": "Type indicates the type of the UpdateStrategy.\n+optional"
        }
      },
      "description": "UpdateStrategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
    },
    "typesWorkloadState": {
      "type": "string",
      "enum": [
        "WORKLOAD_STATE_UNSPECIFIED",
        "Running",
        "Deleting",
        "Not_Ready",
        "Stopped",
        "Waiting"
      ],
      "default": "WORKLOAD_STATE_UNSPECIFIED",
      "description": "- WORKLOAD_STATE_UNSPECIFIED: Unspecified is only a meaningless placeholder, to avoid zero not return.\n - Running: Running shows the referent is available.\n - Deleting: Deleting is when the referent will be deleted.\n - Not_Ready: NotReady shows the referent is unavailable.\n - Stopped: Stopped indicates that the referent has 0 ready pods.\n - Waiting: Waiting indicates that the referent is paused.",
      "title": "WorkloadState describes the state of\nworkload(deployments/daemonsets/statefulsets)"
    },
    "v1alpha1APIResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the plural name of the resource."
        },
        "namespaced": {
          "type": "boolean",
          "description": "namespaced indicates if a resource is namespaced or not."
        },
        "group": {
          "type": "string",
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list.\nFor subresources, this may have a different value, for example: Scale\"."
        },
        "version": {
          "type": "string",
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list\nFor subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\"."
        },
        "kind": {
          "type": "string",
          "title": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"
        }
      },
      "description": "Resource specifies the name of a resource and whether it is namespaced."
    },
    "v1alpha1APIResourceList": {
      "type": "object",
      "properties": {
        "groupVersion": {
          "type": "string",
          "description": "groupVersion is the group and version this APIResourceList is for."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1APIResource"
          },
          "description": "resources contains the name of the resources and if they are namespaced."
        }
      },
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the\nresources supported in a specific group and version, and if the resource\nis namespaced."
    },
    "v1alpha1ActionType": {
      "type": "string",
      "enum": [
        "ACTION_TYPE_UNSPECIFIED",
        "playbook",
        "shell"
      ],
      "default": "ACTION_TYPE_UNSPECIFIED"
    },
    "v1alpha1AddonInfo": {
      "type": "object",
      "properties": {
        "repoUrl": {
          "type": "string",
          "title": "Repository url"
        },
        "addons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CreateHelmReleaseRequest"
          },
          "title": "Chart info"
        }
      }
    },
    "v1alpha1AddonSetting": {
      "type": "object",
      "properties": {
        "helmOperationHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The OperationHistoryLimit info in the cluster."
        },
        "helmRepoRefreshInterval": {
          "type": "integer",
          "format": "int32",
          "title": "The frequency of helm repos' auto refresh.(Unit: time.Second)"
        },
        "helmOperationBaseImage": {
          "type": "string",
          "title": "The frequency of helm repos'"
        },
        "enableHelmRepoRefresh": {
          "type": "boolean",
          "description": "EnableHelmRepoRefresh is to control whether to auto refresh all the helm repos in the cluster."
        },
        "helmOperationJobTemplateResources": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements"
        },
        "helmOperationTimeoutSecond": {
          "type": "string",
          "format": "int64",
          "description": "HelmOperationTimeoutSecond is the time limit of installing/uninstalling a helmrelease, unit: second."
        }
      }
    },
    "v1alpha1Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/v1alpha1NodeAffinity",
          "title": "Describes node affinity scheduling rules for the pod.\n+optional"
        },
        "podAffinity": {
          "$ref": "#/definitions/v1alpha1PodAffinity",
          "title": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the\nsame node, zone, etc. as some other pod(s)). +optional"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/v1alpha1PodAffinity",
          "title": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod\nin the same node, zone, etc. as some other pod(s)). +optional"
        }
      },
      "description": "Affinity is a group of affinity scheduling rules."
    },
    "v1alpha1AggregationRule": {
      "type": "object",
      "properties": {
        "clusterRoleSelectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesLabelSelector"
          },
          "title": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.\nIf any of the selectors match, then the ClusterRole's permissions will be added"
        }
      },
      "title": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
    },
    "v1alpha1AllocatedResource": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "title": "the name of the node sriov resource"
        },
        "value": {
          "type": "string",
          "title": "the maximum allocation for this resource"
        }
      }
    },
    "v1alpha1Artifact": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "description": "Digest is artifact digest."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Tag"
          },
          "description": "Tags is a list of tags."
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "description": "Size of artifact. Unit: byte. 1024 GenericBinary."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "First push time."
        }
      },
      "title": "Artifact is the concept of harbor artifact"
    },
    "v1alpha1AvailableResource": {
      "type": "object",
      "properties": {
        "available": {
          "type": "string",
          "format": "int64",
          "title": "if error_message is not null, available is -1"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1alpha1BatchBindNodeToNamespaceResponse": {
      "type": "object",
      "properties": {
        "successfulResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1BindNodeToNamespaceResult"
          },
          "description": "SuccessfulResults is the node list which\nsuccessfully bound with the namespace."
        },
        "failedResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1BindNodeToNamespaceResult"
          },
          "description": "FailedResults is the node list which\nbound with the namespace failed."
        },
        "nsError": {
          "type": "string",
          "description": "NsError is the error message for the namespace update at the end."
        }
      },
      "description": "BatchBindNodeToNamespaceResponse is the response for node batch bind namespaces."
    },
    "v1alpha1BatchQueryRangeRequestParam": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64",
          "title": "Time of start of query"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "title": "Time of end of query"
        },
        "step": {
          "type": "number",
          "format": "double",
          "title": "Interval of query"
        }
      },
      "title": "The parameters of batch queryRangeRequest"
    },
    "v1alpha1BatchQueryRangeResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1PrometheusQueryRangeResult",
          "title": "The dat of prometheus query range result"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1requestStatus",
          "title": "The request status"
        },
        "errorMessage": {
          "type": "string",
          "title": "The error message returned"
        }
      },
      "title": "The result of batch query range"
    },
    "v1alpha1BatchQueryRequestParam": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "int64",
          "title": "Time of query"
        }
      },
      "title": "The parameters of batch query request"
    },
    "v1alpha1BatchQueryResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1alpha1PrometheusQueryResult",
          "title": "The data of prometheus query result"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1requestStatus",
          "title": "The status of request"
        },
        "errorMessage": {
          "type": "string",
          "title": "The error message returned"
        }
      },
      "title": "The result of batch query"
    },
    "v1alpha1BindClusterToWorkspaceResponse": {
      "type": "object"
    },
    "v1alpha1BindNodeToNamespaceResult": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "NodeName is the name of the node."
        },
        "error": {
          "type": "string",
          "description": "Error is the error detail for binding,\nIf there are no mistakes, the error message will be empty."
        }
      },
      "description": "BindNodeToNamespaceResult is the result for node batch bind namespaces."
    },
    "v1alpha1BindResourceToWorkspaceResponse": {
      "type": "object"
    },
    "v1alpha1CalicoAutoDetectionMethod": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1CalicoAutoDetectionMethodType"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1CalicoAutoDetectionMethodType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "FIRST_FOUND",
        "KUBERNETES_INTERNAL_IP",
        "CAN_REACH",
        "INTERFACE_REGEX",
        "SKIP_INTERFACE"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1alpha1CalicoConfig": {
      "type": "object",
      "properties": {
        "autoDetectionMethod": {
          "$ref": "#/definitions/v1alpha1CalicoAutoDetectionMethod"
        },
        "ipv4Tunnel": {
          "$ref": "#/definitions/CalicoConfigCalicoTunnel"
        },
        "ipv6Tunnel": {
          "$ref": "#/definitions/CalicoConfigCalicoTunnel"
        },
        "iptablesBackend": {
          "$ref": "#/definitions/CalicoConfigCalicoIptablesBackendType"
        }
      }
    },
    "v1alpha1Category": {
      "type": "string",
      "enum": [
        "CATEGORY_UNSPECIFIED",
        "CATEGORY_OTHERS",
        "CATEGORY_STORAGE",
        "CATEGORY_NETWORKING",
        "CATEGORY_MONITORING",
        "CATEGORY_DATABASE",
        "CATEGORY_DATASERVICE",
        "CATEGORY_ECOAPP",
        "CATEGORY_BIGDATA",
        "CATEGORY_SECURITY",
        "CATEGORY_IOTEDGE",
        "CATEGORY_INFRA"
      ],
      "default": "CATEGORY_UNSPECIFIED",
      "description": " - CATEGORY_UNSPECIFIED: The Category is unspecified."
    },
    "v1alpha1CheckClusterResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "errMsg": {
          "type": "string"
        }
      }
    },
    "v1alpha1CiliumConfig": {
      "type": "object",
      "properties": {
        "extraVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "var1: \"value1\"\n     var2: \"value2\"",
          "title": "A dictionary of extra config variables to add to cilium-config, formatted like:\ncilium_config_extra_vars:"
        }
      }
    },
    "v1alpha1CloudShell": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1CloudShellSpec",
          "description": "CloudShellSpec defines the desired state of CloudShell."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1CloudShellStatus",
          "description": "CloudShellStatus defines the observed state of CloudShell."
        }
      },
      "description": "CloudShell is the Schema for the cloudshells API."
    },
    "v1alpha1CloudShellSpec": {
      "type": "object",
      "properties": {
        "secretRef": {
          "$ref": "#/definitions/apicloudshellv1alpha1LocalSecretReference",
          "title": "SecretRef represents the secret contains mandatory credentials to access the target cluster.\nThe secret should hold credentials as follows:\n- secret.data.token\n- secret.data.caBundle\nThe field is alpha phase, please open the featuregate AllowSecretStoreKubeconfig to use it.\n+optional"
        },
        "once": {
          "type": "boolean",
          "title": "accept only one client and exit on disconnection"
        },
        "commandAction": {
          "type": "string",
          "description": "command action specified a initialized command to cloudshell server."
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "description": "ttl specified a period time that the cloudshell server pod is\nstop. if not to set, default 500s."
        },
        "cleanup": {
          "type": "boolean",
          "description": "cleanup specified whether to delete cloudshell resources when\ncorresponding job status is completed."
        }
      },
      "description": "CloudShellSpec defines the desired state of CloudShell."
    },
    "v1alpha1CloudShellStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "type": "string",
          "description": "phase specified status of cloudshell server."
        },
        "accessUrl": {
          "type": "string",
          "description": "access url is be set to expose cloudshell server."
        }
      },
      "title": "CloudShellStatus defines the observed state of CloudShell.enum"
    },
    "v1alpha1CloudShellType": {
      "type": "string",
      "enum": [
        "CLOUD_SHELL_TYPE_UNSPECIFIED",
        "bash",
        "exec",
        "logs",
        "upload",
        "download"
      ],
      "default": "CLOUD_SHELL_TYPE_UNSPECIFIED",
      "description": "CloudShellType defines the cloudshell command type (exec, logs, bash)."
    },
    "v1alpha1Cluster": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ClusterSpec",
          "description": "ClusterSpec describes how the cluster execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ClusterStatus",
          "description": "ClusterStatus contains the cluster status. The ClusterStatus will be stored\nin the kubeadm-config ConfigMap in the cluster, and then updated by kubeadm\nwhen additional control plane instance joins or leaves the cluster."
        }
      }
    },
    "v1alpha1ClusterKubeConfigSetting": {
      "type": "object",
      "properties": {
        "expireWarningThreshold": {
          "type": "string",
          "format": "int64",
          "title": "Set the expire warning threshold for cluster kubeConfig.(Unit: day)"
        }
      }
    },
    "v1alpha1ClusterPhase": {
      "type": "string",
      "enum": [
        "CLUSTER_PHASE_UNSPECIFIED",
        "Unknown",
        "Creating",
        "Running",
        "Updating",
        "Deleting",
        "Failed",
        "DeleteFailed"
      ],
      "default": "CLUSTER_PHASE_UNSPECIFIED",
      "description": " - CLUSTER_PHASE_UNSPECIFIED: The cluster state is unspecified.\n - Unknown: The cluster state is unknown.\n - Creating: The cluster is being created.\n - Running: The cluster is running.\n - Updating: The cluster is updating.\n - Deleting: The cluster is being deleted.\n - Failed: The cluster create failed.\n - DeleteFailed: The cluster delete failed."
    },
    "v1alpha1ClusterProvider": {
      "type": "string",
      "enum": [
        "GENERIC",
        "DAOCLOUD_KUBESPRAY",
        "DAOCLOUD_CLUSTER_API",
        "DAOCLOUD_DCE4",
        "REDHAT_OPENSHIFT4",
        "SUSE_RANCHER",
        "VMWARE_TANZU",
        "AWS_EKS",
        "ALIYUN_ACK",
        "TENCENT_TKE",
        "HUAWEI_CCE",
        "MICROSOFT_AZURE",
        "K3S",
        "Oracle_OKE"
      ],
      "default": "GENERIC",
      "description": " - GENERIC: Generic\nGENERIC indicates other providers\n - DAOCLOUD_KUBESPRAY: DaoCloud\nDAOCLOUD_KUBESPRAY indicates a provider of DaoCloud's KubeSpray Engine\n - DAOCLOUD_CLUSTER_API: DAOCLOUD_CLUSTER_API indicates a provider of DaoCloud's Cluster API Engine\n - DAOCLOUD_DCE4: DAOCLOUD_DCE4 indicates a provider of DaoCloud's DCE4 Engine\n - REDHAT_OPENSHIFT4: OverSea Distribtion\nREDHAT_OPENSHIFT4 indicates a provider of RedHat Openshift4\n - SUSE_RANCHER: SUSE_RANCHER indicates a provider of SUSE Rancher\n - VMWARE_TANZU: VMWARE_TANZU indicates a provider of VMware Tanzu\n - AWS_EKS: Public Cloud\nAWS_EKS indicates a provider of AWS EKS\n - ALIYUN_ACK: ALIYUN_ACK indicates a provider of Aliyun ACK\n - TENCENT_TKE: TENCENT_TKE indicates a provider of Tencent TKE.\n - HUAWEI_CCE: TENCENT_TKE indicates a provider of Huawei CCE.\n - MICROSOFT_AZURE: MICROSOFT_AZURE=11; indicates a provider of Microsoft Azure.\n - K3S: RANCHER_K3S=12; indicates a provider of k3s.\n - Oracle_OKE: Oracle_OKE=13; indicates a provider of Oracle OKE."
    },
    "v1alpha1ClusterResourceOverride": {
      "type": "object",
      "properties": {
        "memoryRequestToLimitPercent": {
          "type": "integer",
          "format": "int32",
          "description": "MemoryRequestToLimitPercent (if > 0) overrides memory request to a percentage of memory limit."
        },
        "cpuRequestToLimitPercent": {
          "type": "integer",
          "format": "int32",
          "description": "CPURequestToLimitPercent (if > 0) overrides CPU request to a percentage of CPU limit."
        }
      },
      "description": "ClusterResourceOverride is the Schema for the ClusterResourceOverride API."
    },
    "v1alpha1ClusterResourceSummary": {
      "type": "object",
      "properties": {
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Allocatable represents the resources of a cluster that are available for scheduling.\nTotal amount of allocatable resources on all nodes.\n+optional"
        },
        "allocated": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Allocated represents the resources of a cluster that have been scheduled.\nTotal amount of required resources of all Pods that have been scheduled to nodes.\n+optional"
        }
      }
    },
    "v1alpha1ClusterRoleBinding": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Subject"
          },
          "description": "Subjects holds references to the objects the role applies to."
        },
        "roleRef": {
          "$ref": "#/definitions/v1alpha1RoleRef",
          "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in\nthe global namespace."
        }
      }
    },
    "v1alpha1ClusterSetting": {
      "type": "object",
      "properties": {
        "plugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Plugin"
          },
          "description": "The plugins info in the cluster."
        },
        "network": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Plugin"
          },
          "description": "The network plugins info in the cluster."
        },
        "addonSetting": {
          "$ref": "#/definitions/v1alpha1AddonSetting",
          "description": "The settings of addon."
        },
        "clusterlcmSetting": {
          "$ref": "#/definitions/v1alpha1ClusterlcmSetting",
          "description": "The settings of cl."
        },
        "etcdBackupRestoreSetting": {
          "$ref": "#/definitions/v1alpha1EtcdBackupRestoreSetting",
          "description": "The setting for etcdbackuprestore."
        },
        "kubeanSetting": {
          "$ref": "#/definitions/v1alpha1KubeanSetting",
          "description": "The setting for kubean."
        },
        "clusterKubeconfigSetting": {
          "$ref": "#/definitions/v1alpha1ClusterKubeConfigSetting",
          "title": "The setting for ClusterKubeConfig"
        }
      },
      "title": "setting of the cluster"
    },
    "v1alpha1ClusterSettings": {
      "type": "object",
      "properties": {
        "dkgClusterName": {
          "type": "string",
          "description": "The name of the manger cluster."
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which needs to be create."
        },
        "aliasName": {
          "type": "string",
          "description": "It is an alias given by the user and can be changed at will."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are key/value pairs that are attached to objects."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to attach arbitrary metadata to objects."
        },
        "describe": {
          "type": "string",
          "description": "describe represents the details of the cluster."
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "kubesprayArgs": {
          "$ref": "#/definitions/v1alpha1KubesprayArgs",
          "description": "The Parameters for creating a cluster by kubespray."
        },
        "preinstallAddons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AddonInfo"
          },
          "title": "addon info  selected by the user"
        }
      }
    },
    "v1alpha1ClusterSpec": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "apiEndpoint": {
          "type": "string",
          "description": "The API endpoint of the member cluster. This can be a hostname,\nhostname:port, IP or IP:port."
        },
        "region": {
          "type": "string",
          "description": "Region represents the region of the member cluster locate in."
        },
        "zone": {
          "type": "string",
          "description": "Zone represents the zone of the member cluster locate in."
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiclustersv1alpha1ClusterRole"
          },
          "description": "Roles represents the roles of cluster."
        },
        "managedBy": {
          "type": "string",
          "description": "ManagedBy is used for worker cluster to show\ncluster is controlled by."
        },
        "aliasName": {
          "type": "string",
          "description": "AliasName represents the alias of the cluster."
        },
        "secretRef": {
          "$ref": "#/definitions/apiclustersv1alpha1LocalSecretReference",
          "description": "SecretRef represents the secret contains mandatory credentials to access the member cluster."
        },
        "proxyUrl": {
          "type": "string",
          "description": "ProxyURL is the proxy URL for the cluster.\nIf not empty, the kpanda control plane will use this proxy to talk to the cluster."
        }
      }
    },
    "v1alpha1ClusterStatus": {
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "KubernetesVersion represents version of the member cluster."
        },
        "kubeSystemID": {
          "type": "string",
          "description": "KubeSystemId represents the uuid of sub cluster kube-system namespace."
        },
        "clusterVersion": {
          "type": "string",
          "description": "ClusterVersion represents the version of the member cluster."
        },
        "serviceCIDR": {
          "type": "string",
          "description": "ServiceCIDR represents the service network CIDR."
        },
        "clusterCIDR": {
          "type": "string",
          "description": "ClusterCIDR represents the Cluster CIDR."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase",
          "description": "Condition represents the status of the member cluster."
        },
        "proxyMode": {
          "type": "string",
          "description": "ProxyMode represents the kube-proxy mode of the member cluster."
        },
        "deploymentSummary": {
          "$ref": "#/definitions/v1alpha1ResourceSummary",
          "description": "ResourceSummary represents the deployment of the member cluster."
        },
        "daemonsetSummary": {
          "$ref": "#/definitions/v1alpha1ResourceSummary",
          "description": "ResourceSummary represents the daemonset of the member cluster."
        },
        "statefulsetSummary": {
          "$ref": "#/definitions/v1alpha1ResourceSummary",
          "description": "ResourceSummary represents the statefulset of the member cluster."
        },
        "nodeSummary": {
          "$ref": "#/definitions/v1alpha1ResourceSummary",
          "description": "ResourceSummary represents the node of the member cluster."
        },
        "podSummary": {
          "$ref": "#/definitions/v1alpha1ResourceSummary",
          "description": "ResourceSummary represents the pod of the member cluster."
        },
        "resourceSummary": {
          "$ref": "#/definitions/v1alpha1ClusterResourceSummary",
          "description": "ResourceSummary represents the resource of the member cluster."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "The cpu usage of the member cluster."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "The memory usage of the member cluster."
        },
        "gpuTotal": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current condition of cluster."
        },
        "settings": {
          "$ref": "#/definitions/v1alpha1ClusterSetting"
        },
        "networkMode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NetworkMode represents the cluster's network mode"
        },
        "maxSigningDuration": {
          "type": "number",
          "format": "double"
        },
        "kubeconfigExpireWarnning": {
          "type": "boolean"
        },
        "kubeconfigExpireTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1ClusterStreamResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/v1alpha1Message"
        },
        "cluster": {
          "$ref": "#/definitions/v1alpha1Cluster"
        }
      }
    },
    "v1alpha1ClusterSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of cluster."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ClusterPhase"
        },
        "kubeSystemID": {
          "type": "string",
          "description": "kubeSystemID is the cluster system ID."
        }
      }
    },
    "v1alpha1ClusterlcmOps": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ClusterlcmOpsSpec",
          "description": "ClusterSpec defines the desired state of a member cluster."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ClusterlcmOpsStatus"
        }
      }
    },
    "v1alpha1ClusterlcmOpsSpec": {
      "type": "object",
      "properties": {
        "kuBeanCluster": {
          "type": "string",
          "title": "KuBeanCluster the name of KuBeanCluster.\n+required"
        },
        "actionType": {
          "$ref": "#/definitions/v1alpha1ActionType"
        },
        "action": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "description": "ClusterSpec defines the desired state of a member cluster."
    },
    "v1alpha1ClusterlcmOpsStatus": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "jobRef": {
          "$ref": "#/definitions/v1alpha1JobRef"
        },
        "phase": {
          "$ref": "#/definitions/clusterlcmv1alpha1Phase"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1ClusterlcmResponse": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "dkgClusterName": {
          "type": "string"
        },
        "opsRef": {
          "$ref": "#/definitions/v1alpha1ClusterlcmOps"
        }
      },
      "description": "KuBeanClusterOps is the result of the operation after the cluster changes."
    },
    "v1alpha1ClusterlcmSetting": {
      "type": "object",
      "properties": {
        "enableLocalService": {
          "type": "boolean",
          "description": "enable_local_service controlled whether to use the\nlocal repo source when creating the cluster."
        },
        "enableDeletionProtection": {
          "type": "boolean",
          "description": "enable_deletion_protection controlled whether the cluster\ncan use the reset function."
        }
      }
    },
    "v1alpha1CommonNetworkConfig": {
      "type": "object",
      "properties": {
        "podIPv4CIDR": {
          "type": "string",
          "title": "podIPv4CIDR is the pod ipv4 CIDR.s"
        },
        "serviceIPv4CIDR": {
          "type": "string"
        },
        "kubeProxyMode": {
          "$ref": "#/definitions/CommonNetworkConfigKubeProxyMode"
        },
        "enableVip": {
          "type": "boolean"
        },
        "kubeVipAddr": {
          "type": "string"
        },
        "kubeVipLbEnable": {
          "type": "boolean"
        },
        "podIPv6CIDR": {
          "type": "string"
        },
        "serviceIPv6CIDR": {
          "type": "string"
        },
        "enableDualStack": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1ConfigMap": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the configuration data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nValues with non-UTF-8 byte sequences must use the BinaryData field.\nThe keys stored in Data must not overlap with the keys in\nthe BinaryData field, this is enforced during validation process.\n+optional"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "BinaryData contains the binary data.\nEach key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range.\nThe keys stored in BinaryData must not overlap with the ones in\nthe Data field, this is enforced during validation process.\nUsing this field will require 1.10+ apiserver and\nkubelet.\n+optional"
        }
      },
      "description": "ConfigMap holds configuration data for pods to consume."
    },
    "v1alpha1ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "v1alpha1ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ConfigMap to select from."
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
        }
      },
      "description": "ConfigMapKeySelector selects a key from a ConfigMap."
    },
    "v1alpha1ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the ConfigMap or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Container."
        },
        "image": {
          "type": "string",
          "description": "The used image of Container."
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The container command."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workingDir": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Ports"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1EnvFromSource"
          },
          "title": "EnvFromSource represents the source of a set of ConfigMaps"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1EnvVar"
          },
          "description": "EnvVar represents an environment variable present in a Container."
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements",
          "description": "Source represents a source for the value of an EnvVar."
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1VolumeMount"
          },
          "description": "VolumeMount describes a mounting of a Volume within a container."
        },
        "livenessProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "description": "Liveness probe is aimed to help in situarions where fluentd\nsilently hangs for no apparent reasons until manual restart.\nThe idea of this probe is that if fluentd is not queueing or\nflushing chunks for 5 minutes, something is not right. If\nyou want to change the fluentd configuration, reducing amount of\nlogs fluentd collects, consider changing the threshold or turning\nliveness probe off completely."
        },
        "readinessProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "description": "Readiness updates the cached pod status with the given readiness, and\ntriggers a status update."
        },
        "startupProbe": {
          "$ref": "#/definitions/v1alpha1Probe",
          "description": "Startup updates the cached container status with the given startup, and\ntriggers a status update."
        },
        "lifecycle": {
          "$ref": "#/definitions/v1alpha1Lifecycle",
          "description": "The life cycle of a Container."
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Pull image policy."
        },
        "securityContext": {
          "$ref": "#/definitions/v1alpha1SecurityContext",
          "description": "SecurityContext holds security attributes."
        }
      }
    },
    "v1alpha1ContainerControlledValues": {
      "type": "string",
      "enum": [
        "CONTAINER_CONTROLLED_VALUES_UNSPECIFIED",
        "RequestsAndLimits",
        "RequestsOnly"
      ],
      "default": "CONTAINER_CONTROLLED_VALUES_UNSPECIFIED",
      "description": "ContainerControlledValues controls which resource value should be autoscaled.\n\n - CONTAINER_CONTROLLED_VALUES_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - RequestsAndLimits: ContainerControlledValuesRequestsAndLimits means resource request and limits\nare scaled automatically. The limit is scaled proportionally to the request.\n - RequestsOnly: ContainerControlledValuesRequestsOnly means only requested resource is autoscaled."
    },
    "v1alpha1ContainerResourcePolicy": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Name of the container or DefaultContainerResourcePolicy, in which\ncase the policy is used by the containers that don't have their own\npolicy specified."
        },
        "mode": {
          "$ref": "#/definitions/ContainerResourcePolicyContainerScalingMode",
          "description": "Whether autoscaler is enabled for the container. The default is \"Auto\"."
        },
        "minAllowed": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "description": "Specifies the minimal amount of resources that will be recommended\nfor the container. The default is no minimum."
        },
        "maxAllowed": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "description": "Specifies the maximum amount of resources that will be recommended\nfor the container. The default is no maximum."
        },
        "controlledResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceName"
          },
          "description": "Specifies the type of recommendations that will be computed\n(and possibly applied) by VPA.\nIf not specified, the default of [ResourceCPU, ResourceMemory] will be used."
        },
        "controlleValues": {
          "$ref": "#/definitions/v1alpha1ContainerControlledValues",
          "description": "Specifies which resource values should be controlled.\nThe default is \"RequestsAndLimits\"."
        }
      },
      "description": "ContainerResourcePolicy controls how autoscaler computes the recommended\nresources for a specific container."
    },
    "v1alpha1ContainerState": {
      "type": "object",
      "properties": {
        "waiting": {
          "$ref": "#/definitions/v1alpha1ContainerStateWaiting",
          "description": "ContainerStateWaiting is a waiting state of a container."
        },
        "running": {
          "$ref": "#/definitions/v1alpha1ContainerStateRunning",
          "description": "ContainerStateRunning indicates a currently running container."
        },
        "terminated": {
          "$ref": "#/definitions/v1alpha1ContainerStateTerminated",
          "description": "ContainerStateTerminated indicates a container that ran and completed\n(\"stopped\" in other contexts, although a created container is technically\nalso \"stopped\")."
        }
      }
    },
    "v1alpha1ContainerStateRunning": {
      "type": "object",
      "properties": {
        "startedAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "ContainerStateRunning indicates a currently running container."
    },
    "v1alpha1ContainerStateTerminated": {
      "type": "object",
      "properties": {
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "Container exit code."
        },
        "signal": {
          "type": "integer",
          "format": "int32",
          "description": "Signal defines a signal that can trigger eviction of pods on a node."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "The container terminated information."
        },
        "startedAt": {
          "type": "string",
          "format": "int64",
          "description": "The container created time."
        },
        "finishedAt": {
          "type": "string",
          "format": "int64",
          "description": "The container terminated time."
        }
      },
      "description": "ContainerStateExited indicates a container that ran\nand completed (\"stopped\" in other contexts, although a created container is\ntechnically also \"stopped\")."
    },
    "v1alpha1ContainerStateWaiting": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "(brief) reason the container is not yet running.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "Message regarding why the container is not yet running.\n+optional"
        }
      },
      "description": "ContainerStateWaiting represents 'Waiting' container state."
    },
    "v1alpha1ContainerStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name.\nCannot be updated."
        },
        "state": {
          "$ref": "#/definitions/v1alpha1ContainerState",
          "title": "Details about the container's current condition.\n+optional"
        },
        "ready": {
          "type": "boolean",
          "description": "Specifies whether the container has passed its readiness probe."
        },
        "restartCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the container has been restarted, currently based on\nthe number of dead containers that have not yet been removed.\nNote that this is calculated from dead containers. But those containers are\nsubject to garbage collection. This value will get capped at 5 by GC."
        },
        "image": {
          "type": "string",
          "title": "The image the container is running.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "started": {
          "type": "boolean",
          "title": "Specifies whether the container has passed its startup probe.\nInitialized as false, becomes true after startupProbe is considered\nsuccessful. Resets to false when the container is restarted, or if kubelet\nloses state temporarily. Is always true when no startupProbe is defined.\n+optional"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ContainerStatusPhase",
          "description": "Phase represents the phase to search."
        }
      },
      "description": "ContainerStatus represents the container status."
    },
    "v1alpha1ContainerStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Waiting",
        "Running",
        "Terminated"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": "Phase represents the phase of the container.\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Waiting: Waiting is a waiting state of a pod.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Terminated: Terminated indicates a pod that ran and completed\n(\"stopped\" in other contexts, although a created container is technically\nalso \"stopped\")."
    },
    "v1alpha1ControlleRrevision": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "data": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "Data is the serialized representation of the state."
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "description": "Revision indicates the revision of the state represented by Data."
        }
      }
    },
    "v1alpha1CreateCloudShellRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1CloudShellType",
          "description": "type specified the cloudshell command type (exec, logs, bash)."
        },
        "cluster": {
          "type": "string",
          "description": "cluster specified the cluster name for cloudshell."
        },
        "namespace": {
          "type": "string",
          "description": "namespace defines the namespace of the specified pod."
        },
        "podName": {
          "type": "string",
          "description": "pod_name defines the name of the specified pod."
        },
        "filePath": {
          "type": "string",
          "description": "file_path defines the file path."
        },
        "container": {
          "type": "string",
          "description": "container defines which container or init container to create cloud shell."
        },
        "logCount": {
          "type": "integer",
          "format": "int32",
          "description": "log_count defines the count of display logs."
        },
        "data": {
          "$ref": "#/definitions/v1alpha1CloudShell",
          "description": "cloud_shell defines the data of cloud shell."
        }
      },
      "title": "CreateIngressResponse the response of create cluster ingresses"
    },
    "v1alpha1CreateClusterCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateClusterCustomResourceResponse represents response of creating one\nCustomResource of cluster scope"
    },
    "v1alpha1CreateClusterRequest": {
      "type": "object",
      "properties": {
        "dkgClusterName": {
          "type": "string",
          "description": "The name of the manger cluster."
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which needs to be create."
        },
        "aliasName": {
          "type": "string",
          "description": "It is an alias given by the user and can be changed at will."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are key/value pairs that are attached to objects."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to attach arbitrary metadata to objects."
        },
        "describe": {
          "type": "string",
          "description": "describe represents the details of the cluster."
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "kubesprayArgs": {
          "$ref": "#/definitions/v1alpha1KubesprayArgs",
          "description": "The Parameters for creating a cluster by kubespray."
        },
        "preinstallAddons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AddonInfo"
          },
          "title": "addon info  selected by the user"
        },
        "retry": {
          "type": "boolean",
          "title": "retry defines the flag to retry"
        }
      }
    },
    "v1alpha1CreateConfigMapResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ConfigMap YAML details"
        }
      }
    },
    "v1alpha1CreateCronHorizontalPodAutoscalerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the cron hpa json details"
        }
      }
    },
    "v1alpha1CreateCustomResourceDefinitionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the customResourceDefinition YAML details."
        }
      },
      "title": "CreateCustomResourceDefinitionResponse represents response of creating\na createCustomResourceDefinition"
    },
    "v1alpha1CreateCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "CreateCustomResourceResponse represents response of creating one\nCustomResource of namespaced scope"
    },
    "v1alpha1CreateHelmReleaseRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "cluster represents which cluster the chart belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the helm release belongs to."
        },
        "repo": {
          "type": "string",
          "description": "The repo represents for the charts belongs to."
        },
        "timeout": {
          "type": "string",
          "description": "Time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)."
        },
        "wait": {
          "type": "boolean",
          "description": "If set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout."
        },
        "atomic": {
          "type": "boolean",
          "description": "If set, the installation process deletes the installation on failure. The --wait flag will be set automatically if --atomic is used."
        },
        "debug": {
          "type": "boolean",
          "description": "Enable verbose output."
        },
        "disableHooks": {
          "type": "boolean",
          "description": "Prevent hooks from running during install."
        },
        "disableOpenApiValidation": {
          "type": "boolean",
          "description": "If set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema."
        },
        "createNamespace": {
          "type": "boolean",
          "description": "Create the release namespace if not present."
        },
        "checkReleaseName": {
          "type": "boolean",
          "description": "Check whether the release name entered during installation matches the release name in charts annotations."
        },
        "chart": {
          "$ref": "#/definitions/v1alpha1HelmChartInstall"
        }
      }
    },
    "v1alpha1CreateHelmReleaseResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "cluster represents which cluster the helmrelease belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the helmrelease belongs to."
        },
        "releaseName": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateHorizontalPodAutoscalerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the hpa YAML details"
        }
      }
    },
    "v1alpha1CreateIngressResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the ingress YAML details."
        }
      },
      "title": "CreateIngressResponse the response of create cluster ingresses"
    },
    "v1alpha1CreateLimitRangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the LimitRange YAML details."
        }
      },
      "description": "CreateLimitRangeResponse returns the created LimitRange data information."
    },
    "v1alpha1CreateNamespaceResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      },
      "description": "Create Namespace  information."
    },
    "v1alpha1CreateNetworkPolicyResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the networkpolicy YAML details."
        }
      },
      "title": "CreateNetworkPolicyResponse the response of create cluster networkpolicies"
    },
    "v1alpha1CreateOpenAPIClusterCertResponse": {
      "type": "object",
      "properties": {
        "kubeConfigString": {
          "type": "string",
          "description": "one of cluster or kubeSystemID has value."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster belongs to."
        }
      },
      "description": "CreateOpenAPIClusterCertResponse returns a openapi cert information."
    },
    "v1alpha1CreateOrUpdateClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v1alpha1Cluster",
          "description": "Cluster the specified job belongs to."
        }
      },
      "description": "CreateOrUpdateCluster creates a Cluster if the target resource doesn't exist.\nIf the resource exists already, this function will update the resource\ninstead."
    },
    "v1alpha1CreatePersistentVolumeClaimResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the pvc YAML details"
        }
      },
      "title": "CreatePersistentVolumeClaimResponse represents the response of create Pvc"
    },
    "v1alpha1CreatePersistentVolumeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the PersistentVolume YAML details."
        }
      },
      "description": "CreatePersistentVolumeResponse returns the created PersistentVolume data information."
    },
    "v1alpha1CreateResourceQuotaResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the ResourceQuota YAML details."
        }
      },
      "description": "CreateResourceQuotaResponse returns the created ResourceQuota data information."
    },
    "v1alpha1CreateResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The data field is the resources YAML details."
        }
      },
      "title": "CreateResourceResponse represents response of creating resources from yaml"
    },
    "v1alpha1CreateSecretResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the Secret YAML details"
        }
      },
      "description": "It returns the created Secret data information."
    },
    "v1alpha1CreateServiceAccountResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the StorageClass YAML details"
        }
      },
      "title": "CreateServiceAccount represents the response of create sa"
    },
    "v1alpha1CreateServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "Data is the Service YAML details"
        }
      },
      "description": "It returns the created Service data information."
    },
    "v1alpha1CreateStorageClassResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the StorageClass YAML details"
        }
      },
      "title": "CreateStorageClassResponse represents the response of create Pvc"
    },
    "v1alpha1CreateVerticalPodAutoscalerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the cron vpa json details"
        }
      },
      "description": "CreateVerticalPodAutoscalerResponse returns the yaml of the created vpa."
    },
    "v1alpha1CreateVolumeSnapshotResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the VolumeSnapshot YAML details"
        }
      },
      "title": "CreateVolumeSnapshotResponse represents the response of create VolumeSnapshot snapshot"
    },
    "v1alpha1CronHPACondition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Type of job condition, Complete or Failed."
        },
        "jobId": {
          "type": "string",
          "description": "The execution job id."
        },
        "schedule": {
          "type": "string",
          "description": "The schedule of cron hpa job."
        },
        "targetSize": {
          "type": "integer",
          "format": "int32",
          "description": "The target replicas size of target workload."
        },
        "runOnce": {
          "type": "boolean",
          "description": "RunOnce indicates whether to scale workload once."
        },
        "jobState": {
          "$ref": "#/definitions/v1alpha1CronHPAConditionJobState",
          "description": "The state of corn hpa job."
        },
        "lastProbeTime": {
          "type": "string",
          "format": "int64",
          "description": "Last probe time for cron hpa job."
        },
        "message": {
          "type": "string",
          "title": "Human readable message indicating details about last transition.\n+optional"
        }
      }
    },
    "v1alpha1CronHPAConditionJobState": {
      "type": "string",
      "enum": [
        "JOB_STATE_UNSPECIFIED",
        "Succeed",
        "Failed",
        "Submitted"
      ],
      "default": "JOB_STATE_UNSPECIFIED",
      "description": "The enum for cron hpa job."
    },
    "v1alpha1CronHPAJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name for cron hoa job."
        },
        "schedule": {
          "type": "string",
          "description": "The rule for cron hoa job."
        },
        "runOnce": {
          "type": "boolean",
          "description": "RunOnce indicates whether to scale workload once."
        },
        "targetSize": {
          "type": "integer",
          "format": "int32",
          "description": "The target replicas size of target workload."
        }
      },
      "description": "CronHPAJob is the rule for cron hpa."
    },
    "v1alpha1CronHorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1CronHorizontalPodAutoscalerSpec",
          "description": "CronHorizontalPodAutoscalerSpec defines the desired state of CronHorizontalPodAutoscaler."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1CronHorizontalPodAutoscalerStatus",
          "description": "current information about the autoscaler."
        }
      },
      "description": "configuration of a horizontal pod autoscaler."
    },
    "v1alpha1CronHorizontalPodAutoscalerSpec": {
      "type": "object",
      "properties": {
        "excludeDates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExcludeDates is the special period to exclude cronHPA execution."
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/v1alpha1CrossVersionObjectReference",
          "description": "reference to scaled resource; cron horizontal pod autoscaler will\nset the desired number of pods by given jobs."
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CronHPAJob"
          },
          "description": "The execution job details."
        }
      },
      "title": "CronHorizontalPodAutoscalerSpec defines the desired state of CronHorizontalPodAutoscaler"
    },
    "v1alpha1CronHorizontalPodAutoscalerStatus": {
      "type": "object",
      "properties": {
        "excludeDates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExcludeDates is the special period to exclude cronHPA execution."
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/v1alpha1CrossVersionObjectReference",
          "title": "Reference to scaled resource;"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CronHPACondition"
          },
          "description": "Current service state of cron hpa."
        }
      }
    },
    "v1alpha1CronJob": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optiona"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1CronJobSpec",
          "description": "CronJobSpec describes how the job execution will look like and when it will actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1CronJobStatus",
          "description": "CronJobStatus represents the current state of a cron job."
        },
        "availed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of available cronjob."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "The number of totally cronjob."
        },
        "executionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "Information when was the time the cronjob was successfully executed."
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Images the cronjob use."
        }
      },
      "description": "CronJob represents the configuration of a single cron job."
    },
    "v1alpha1CronJobSpec": {
      "type": "object",
      "properties": {
        "schedule": {
          "type": "string",
          "description": "The schedule in Cron format."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the cronjob is paused."
        }
      },
      "description": "Specification of the desired behavior of a cron job, including the schedule."
    },
    "v1alpha1CronJobStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/CronJobStatusCronJobState",
          "description": "State of a cron job."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CronJobStatusCronJobCondition"
          },
          "description": "Current condition of cronjob."
        }
      },
      "description": "Current status of a cron job."
    },
    "v1alpha1CrossVersionObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent; More info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\""
        },
        "name": {
          "type": "string",
          "title": "Name of the referent; More info:\nhttp://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent"
        }
      },
      "description": "CrossVersionObjectReference contains enough information to let you identify\nthe referred resource."
    },
    "v1alpha1CustomMetricValue": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string",
          "title": "the name of the metric"
        },
        "value": {
          "type": "string",
          "title": "the value of the metric for this"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "indicates the time at which the metrics were produced"
        },
        "describedObject": {
          "$ref": "#/definitions/CustomMetricValueDescribedObject",
          "title": "a reference to the described object"
        }
      }
    },
    "v1alpha1CustomResource": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the kind of CustomResource."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion represents the apiVersion of CustomResource."
        },
        "name": {
          "type": "string",
          "description": "Name represents the name of CustomResource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the CustomResource belongs to."
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp represents the creationTime of the CustomResource."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "data": {
          "type": "string",
          "description": "The Data field is the CustomResource YAML details."
        }
      },
      "title": "CustomResource represents the CustomResource message"
    },
    "v1alpha1CustomResourceDefinition": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "title": "Metadata is that all persisted resources must have, which includes all\nobjects"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1CustomResourceDefinitionSpec",
          "description": "Spec is the desired behavior of the CustomResource."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1CustomResourceDefinitionStatus",
          "description": "status is the status information of the CustomResource."
        }
      },
      "title": "CustomResourceDefinition message of CustomResource definition"
    },
    "v1alpha1CustomResourceDefinitionNames": {
      "type": "object",
      "properties": {
        "plural": {
          "type": "string",
          "description": "Plural is the plural name of the resource to serve.  It must match the name\nof the CustomResourceDefinition-registration too: plural.group and it must\nbe all lowercase."
        },
        "singular": {
          "type": "string",
          "title": "Singular is the singular name of the resource.  It must be all lowercase\nDefaults to lowercased <kind>"
        },
        "shortNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ShortNames are short names for the resource.  It must be all lowercase."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and\nsingular."
        },
        "listKind": {
          "type": "string",
          "description": "ListKind is the serialized kind of the list for this resource.  Defaults to\n<kind>List."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Categories is a list of grouped resources custom resources belong to (e.g.\n'all') +optional"
        }
      },
      "title": "CustomResourceDefinitionNames message of CustomResource definition names"
    },
    "v1alpha1CustomResourceDefinitionSpec": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "Group is the group this resource belongs in"
        },
        "names": {
          "$ref": "#/definitions/v1alpha1CustomResourceDefinitionNames",
          "title": "Names are the names used to describe this custom resource"
        },
        "scope": {
          "$ref": "#/definitions/CustomResourceDefinitionSpecResourceScope",
          "title": "Scope indicates whether this resource is cluster or namespace scoped.\nDefault is namespaced"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CustomResourceDefinitionVersion"
          },
          "description": "Versions is the list of all supported versions for this resource.\nIf Version field is provided, this field is optional.\nValidation: All versions must use the same validation schema for now. i.e.,\ntop level Validation field is applied to all of these versions. Order: The\nversion name will be used to compute the order. If the version string is\n\"kube-like\", it will sort above non \"kube-like\" version strings, which are\nordered lexicographically. \"Kube-like\" versions start with a \"v\", then are\nfollowed by a number (the major version), then optionally the string\n\"alpha\" or \"beta\" and another number (the minor version). These are sorted\nfirst by GA > beta > alpha (where GA is a version with no suffix such as\nbeta or alpha), and then by comparing major version, then minor version. An\nexample sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1,\nv12alpha1, v11alpha2, foo1, foo10."
        }
      },
      "title": "CustomResourceDefinitionSpec message of CustomResource definition spec"
    },
    "v1alpha1CustomResourceDefinitionStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current condition of cluster."
        }
      },
      "title": "CustomResourceDefinitionStatus represents custom resource definition status"
    },
    "v1alpha1CustomResourceDefinitionVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the version name, e.g. “v1”, “v2beta1”, etc."
        },
        "served": {
          "type": "boolean",
          "title": "Served is a flag enabling/disabling this version from being served via REST\nAPIs"
        },
        "storage": {
          "type": "boolean",
          "description": "Storage flags the version as storage version. There must be exactly one\nflagged as storage version."
        },
        "deprecated": {
          "type": "boolean",
          "description": "deprecated indicates this version of the custom resource API is deprecated.\nWhen set to true, API requests to this version receive a warning header in\nthe server response. Defaults to false."
        }
      },
      "title": "CustomResourceDefinitionVersion message of CustomResource definition version"
    },
    "v1alpha1DNSConfig": {
      "type": "object",
      "properties": {
        "enableNodeLocalDns": {
          "type": "boolean"
        },
        "upstreamDnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1DaemonSet": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1DaemonSetSpec",
          "title": "The desired behavior of this daemon set.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1DaemonSetStatus",
          "title": "The current status of this daemon set. This data may be\nout of date by some window of time.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      },
      "description": "DaemonSet represents the configuration of a daemonSet."
    },
    "v1alpha1DaemonSetSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1alpha1PodTemplateSpec",
          "title": "An object that describes the pod that will be created.\nThe DaemonSet will create exactly one copy of this pod on every node\nthat matches the template's node selector (or on every node if no node\nselector is specified).\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
        },
        "updateStrategy": {
          "$ref": "#/definitions/typesUpdateStrategy",
          "title": "An update strategy to replace existing DaemonSet pods with new pods.\n+optional"
        }
      },
      "description": "DaemonSetSpec is the specification of a daemonSet."
    },
    "v1alpha1DaemonSetStatus": {
      "type": "object",
      "properties": {
        "desiredNumberScheduled": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of nodes that should be running the daemon\npod (including nodes correctly running the daemon pod)."
        },
        "numberAvailable": {
          "type": "integer",
          "format": "int32",
          "title": "The number of nodes that should be running the\ndaemon pod and have one or more of the daemon pod running and\navailable (ready for at least spec.minReadySeconds)\n+optional"
        },
        "state": {
          "$ref": "#/definitions/typesWorkloadState",
          "title": "WorkloadState describes the state of daemonsets"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of daemonSet."
        }
      },
      "description": "DaemonSetStatus represents the current status of a daemon set."
    },
    "v1alpha1DeleteHelmReleaseResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "cluster represents which cluster the helmrelease belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the helmrelease belongs to."
        },
        "releaseName": {
          "type": "string"
        }
      }
    },
    "v1alpha1DeletionPropagation": {
      "type": "string",
      "enum": [
        "DELETION_PROPAGATION_UNSPECIFIED",
        "DELETION_PROPAGATION_ORPHAN",
        "DELETION_PROPAGATION_BACKGROUND",
        "DELETION_PROPAGATION_FOREGROUND"
      ],
      "default": "DELETION_PROPAGATION_UNSPECIFIED",
      "description": " - DELETION_PROPAGATION_ORPHAN: Orphans the dependents.\n - DELETION_PROPAGATION_BACKGROUND: Deletes the object from the key-value store, the garbage collector will\ndelete the dependents in the background.\n - DELETION_PROPAGATION_FOREGROUND: The object exists in the key-value store until the garbage collector\ndeletes all the dependents whose ownerReference.blockOwnerDeletion=true\nfrom the key-value store.  API sever will put the \"foregroundDeletion\"\nfinalizer on the object, and sets its deletionTimestamp.  This policy is\ncascading, i.e., the dependents will be deleted with Foreground."
    },
    "v1alpha1Dependency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the name of the dependency.\nThis must mach the name in the dependency's Chart.yaml."
        },
        "version": {
          "type": "string",
          "description": "version is the version (range) of this chart.\nA lock file will always produce a single version, while a dependency\nmay contain a semantic version range."
        },
        "repository": {
          "type": "string",
          "description": "The URL to the repository.\nAppending `index.yaml` to this string should result in a URL that can be\nused to fetch the repository index."
        },
        "condition": {
          "type": "string",
          "title": "A yaml path that resolves to a boolean, used for enabling/disabling charts (e.g. subchart1.enabled )"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "tags can be used to group charts for enabling/disabling together"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled bool determines if chart should be loaded"
        },
        "importValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "import_values holds the mapping of source values to parent key to be imported. Each item can be a\nstring or pair of child/parent sublist items."
        },
        "alias": {
          "type": "string",
          "title": "alias usable alias to be used for the chart"
        }
      },
      "description": "Dependencies can be used to express developer intent, or to capture the state\nof a chart."
    },
    "v1alpha1Deployment": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Metadata is that all persisted resources must have, which includes all objects\nusers must create."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1DeploymentSpec",
          "title": "Specification of the desired behavior of the Deployment.\n+optional"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1DeploymentStatus",
          "title": "Most recently observed status of the Deployment.\n+optional"
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "title": "The revision to rollback to. If set to 0, rollback to the last revision.\n+optional"
        }
      },
      "description": "Deployment provides declarative updates for Pods and ReplicaSets."
    },
    "v1alpha1DeploymentSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1alpha1PodTemplateSpec",
          "title": "Template describes the data a pod should have when created from a template"
        },
        "strategy": {
          "$ref": "#/definitions/typesUpdateStrategy",
          "description": "Strategy indicates the strategy that the controller\nwill use to perform updates. It includes any additional parameters necessary\nto perform the update for the indicated strategy."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the deployment is paused."
        }
      },
      "description": "DeploymentSpec specifies the state of a Deployment."
    },
    "v1alpha1DeploymentStatus": {
      "type": "object",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of ready pods targeted by this deployment.\n+optional"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional"
        },
        "state": {
          "$ref": "#/definitions/typesWorkloadState",
          "title": "state describes the state of deployments"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of deployments."
        }
      },
      "description": "DeploymentStatus holds information about the observed status of a deployment."
    },
    "v1alpha1DetectKangarooResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "The kangaroo_enable indicates whether the kangaroo is installed"
        }
      }
    },
    "v1alpha1DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Required: Path is  the relative path name of the file to be created. Must\nnot be absolute or contain the '..' path. Must be utf-8 encoded. The first\nitem of the relative path must not start with '..'"
        },
        "fieldRef": {
          "$ref": "#/definitions/v1alpha1ObjectFieldSelector",
          "title": "Required: Selects a field of the pod: only annotations, labels, name and\nnamespace are supported. +optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently\nsupported. +optional"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on this file, must be an octal\nvalue between 0000 and 0777 or a decimal value between 0 and 511. YAML\naccepts both octal and decimal values, JSON requires decimal values for\nmode bits. If not specified, the volume defaultMode will be used. This\nmight be in conflict with other options that affect the file mode, like\nfsGroup, and the result can be other mode bits set. +optional"
        }
      },
      "description": "DownwardAPIVolumeFile represents information to create the file containing\nthe pod field."
    },
    "v1alpha1DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1DownwardAPIVolumeFile"
          },
          "title": "Items is a list of downward API volume file\n+optional"
        },
        "DefaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        }
      },
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1EditClusterLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "EditClusterLabelsRequest returns true when pod termination has been\nrequested."
    },
    "v1alpha1EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "title": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value\nbetween the SizeLimit specified here and the sum of memory limits of all\ncontainers in a pod. The default is nil which means that the limit is\nundefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional"
        }
      },
      "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1EnvFromSource": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "title": "An optional identifier to prepend to each key in the ConfigMap.\n+optional"
        },
        "configMapRef": {
          "$ref": "#/definitions/v1alpha1ConfigMapEnvSource",
          "title": "The ConfigMap to select from.\n+optional"
        },
        "secretRef": {
          "$ref": "#/definitions/v1alpha1SecretEnvSource",
          "title": "The Secret to select from.\n+optional"
        }
      },
      "title": "EnvFromSource represents the source of a set of ConfigMaps"
    },
    "v1alpha1EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of EnvVar."
        },
        "value": {
          "type": "string",
          "description": "The value of EnvVar."
        },
        "valueFrom": {
          "$ref": "#/definitions/v1alpha1EnvVarSource",
          "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key\nexists in multiple sources, the value associated with the last source will\ntake precedence. Values defined by an Env with a duplicate key will take\nprecedence. Cannot be updated.\","
        }
      },
      "description": "Environment variable information."
    },
    "v1alpha1EnvVarSource": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/v1alpha1ObjectFieldSelector",
          "title": "Selects a field of the pod: supports metadata.name, metadata.namespace,\n`metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName,\nspec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n+optional"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v1alpha1ResourceFieldSelector",
          "title": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,\nrequests.memory and requests.ephemeral-storage) are currently supported.\n+optional"
        },
        "ConfigMapKeyRef": {
          "$ref": "#/definitions/v1alpha1ConfigMapKeySelector",
          "title": "Selects a key of a ConfigMap.\n+optional"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/v1alpha1SecretKeySelector",
          "title": "Selects a key of a secret in the pod's namespace\n+optional"
        }
      },
      "description": "EnvVarSource represents a source for the value of an EnvVar.\nOnly one of its fields may be set."
    },
    "v1alpha1EphemeralContainer": {
      "type": "object",
      "properties": {
        "ephemeralContainerCommon": {
          "$ref": "#/definitions/v1alpha1Container",
          "description": "Ephemeral containers have all of the fields of Container, plus additional fields\nspecific to ephemeral containers. Fields in common with Container are in the\nfollowing inlined struct so than an EphemeralContainer may easily be converted\nto a Container."
        },
        "targetContainerName": {
          "type": "string",
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined."
        }
      },
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation."
    },
    "v1alpha1EtcdBackupRestoreSetting": {
      "type": "object",
      "properties": {
        "baseImage": {
          "type": "string",
          "description": "The base image for the etcdbackuprestore deployment."
        }
      },
      "description": "setting of the etcdbackuprestore for every cluster."
    },
    "v1alpha1EtcdBackupStrategy": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1EtcdBackupStrategySpec",
          "description": "EtcdBackupStrategySpec describes how the etcd backup strategy will look like."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1EtcdBackupStrategyStatus",
          "description": "EtcdBackupStrategyStatus represents the current state of a etcd backup strategy."
        }
      }
    },
    "v1alpha1EtcdBackupStrategyConfig": {
      "type": "object",
      "properties": {
        "etcdConnectionConfig": {
          "$ref": "#/definitions/v1alpha1EtcdConnectionConfig",
          "description": "config for etcd connection."
        },
        "snapshotterConfig": {
          "$ref": "#/definitions/v1alpha1SnapshotterConfig",
          "description": "config for Snapshotter.\nSnapshotter should parse from the deploy."
        },
        "snapStoreConfig": {
          "$ref": "#/definitions/v1alpha1SnapStoreConfig",
          "description": "config for SnapStore."
        }
      },
      "description": "all configs for EtcdBackupStrategy."
    },
    "v1alpha1EtcdBackupStrategySpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/EtcdBackupStrategySpecEtcdBackupType"
        },
        "maxBackups": {
          "type": "integer",
          "format": "int64",
          "description": "max_backups maximum number of previous backups to keep."
        },
        "storeLocation": {
          "type": "string",
          "description": "console address for etcd backup strategy."
        },
        "config": {
          "$ref": "#/definitions/v1alpha1EtcdBackupStrategyConfig"
        }
      },
      "description": "EtcdBackupStrategySpec describes etcd backup strategy."
    },
    "v1alpha1EtcdBackupStrategyStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/typesWorkloadState",
          "description": "Current state of a etcd backup strategy."
        }
      },
      "description": "EtcdBackupStrategyStatus represents the current state of a etcd backup strategy."
    },
    "v1alpha1EtcdConnectionConfig": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Endpoints are the endpoints from which the backup will be take or defragmentation will be called.\nThis need not be necessary match the entire etcd cluster.\nendpoints comma separated list of etcd endpoints."
        },
        "serviceEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "service_endpoints comma separated list of etcd endpoints that are used for etcd-backup-restore to connect to etcd through a (Kubernetes) service."
        },
        "connectionTimeout": {
          "type": "string",
          "format": "int64",
          "description": "connection_timeout etcd client connection timeout."
        },
        "snapshotTimeout": {
          "type": "string",
          "format": "int64",
          "description": "snapshot_timeout timeout duration for taking etcd snapshots."
        },
        "insecureTransport": {
          "type": "boolean",
          "description": "insecure_transport disable transport security for client connections."
        },
        "insecureSkipVerify": {
          "type": "boolean",
          "description": "insecure_skip_verify skip server certificate verification."
        },
        "certData": {
          "type": "string",
          "description": "cert_data identify secure client using this TLS certificate file."
        },
        "keyData": {
          "type": "string",
          "description": "key_data identify secure client using this TLS key file."
        },
        "caData": {
          "type": "string",
          "description": "ca_date verify certificates of TLS-enabled secure servers using this CA bundle."
        }
      }
    },
    "v1alpha1Event": {
      "type": "object",
      "properties": {
        "involvedObject": {
          "$ref": "#/definitions/v1alpha1ObjectReference",
          "description": "The object that this event is about."
        },
        "reason": {
          "type": "string",
          "description": "reason is why the action was taken. It is human-readable.\nThis field cannot be empty for new Events and it can have at most 128\ncharacters."
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation."
        },
        "source": {
          "$ref": "#/definitions/v1alpha1EventSource",
          "description": "The component reporting this event. Should be a short machine\nunderstandable string."
        },
        "lastTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the most recent occurrence of this event was recorded."
        },
        "type": {
          "$ref": "#/definitions/v1alpha1EventType",
          "description": "Type of this event (Normal, Warning), new types could be added in the\nfuture."
        },
        "firstTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Event is a report of an event somewhere in the cluster.  Events\nhave a limited retention time and triggers and messages may evolve\nwith time.  Event consumers should not rely on the timing of an event\nwith a given Reason reflecting a consistent underlying trigger, or the\ncontinued existence of events with that Reason.  Events should be\ntreated as informative, best-effort, supplemental data."
    },
    "v1alpha1EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "title": "Component from which the event is generated.\n+optional"
        },
        "host": {
          "type": "string",
          "title": "Node name on which the event is generated.\n+optional"
        }
      },
      "description": "EventSource contains information for an event."
    },
    "v1alpha1EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "Normal",
        "Warning"
      ],
      "default": "EVENT_TYPE_UNSPECIFIED",
      "description": "Type of event (Normal, Warning), new types could be added in the\nfuture.\n\n - EVENT_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Normal: Normal is a normal event type.\n - Warning: Warning is a warning event type."
    },
    "v1alpha1ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "v1alpha1ExecuteEtcdBackupStrategyResponse": {
      "type": "object",
      "properties": {
        "strategy": {
          "$ref": "#/definitions/v1alpha1EtcdBackupStrategy",
          "description": "The new state of the etcd backup strategy after resuming."
        }
      },
      "description": "Response message for the `ExecuteEtcdBackupStrategyResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1ExternalMetricSource": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1alpha1MetricIdentifier",
          "title": "metric identifies the target metric by name and selector"
        },
        "target": {
          "$ref": "#/definitions/v1alpha1MetricTarget",
          "title": "target specifies the target value for the given metric"
        }
      },
      "description": "ExternalMetricSource indicates how to scale on a metric not associated with\nany Kubernetes object (for example length of queue in cloud\nmessaging service, or QPS from loadbalancer running outside of cluster)."
    },
    "v1alpha1ExternalMetricStatus": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1alpha1MetricIdentifier",
          "title": "metric identifies the target metric by name and selector"
        },
        "current": {
          "$ref": "#/definitions/v1alpha1MetricValueStatus",
          "title": "current contains the current value for the given metric"
        }
      },
      "description": "ExternalMetricStatus indicates the current value of a global metric\nnot associated with any Kubernetes object."
    },
    "v1alpha1FeatureGate": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/v1alpha1FeatureGateName",
          "title": "name is the name of the feature gate"
        },
        "enabled": {
          "type": "boolean",
          "title": "default is the default enablement state for the feature"
        },
        "lockToDefault": {
          "type": "boolean",
          "title": "LockToDefault indicates that the feature is locked to its default and cannot be changed"
        },
        "preRelease": {
          "$ref": "#/definitions/v1alpha1PreRelease",
          "title": "PreRelease indicates the maturity level of the feature"
        }
      }
    },
    "v1alpha1FeatureGateName": {
      "type": "string",
      "enum": [
        "FEATURE_GATE_NAME_TYPE_UNSPECIFIED",
        "DownloadClusterKubeConfig"
      ],
      "default": "FEATURE_GATE_NAME_TYPE_UNSPECIFIED",
      "title": "- FEATURE_GATE_NAME_TYPE_UNSPECIFIED: feature gate name type is unspecified.\n - DownloadClusterKubeConfig: DownloadClusterKubeConfig indicates whether the cluster can download kubeconfig"
    },
    "v1alpha1FilterPodStatus": {
      "type": "string",
      "enum": [
        "FILTER_POD_STATUS_UNSPECIFIED",
        "FILTER_POD_STATUS_RUNNING",
        "FILTER_POD_STATUS_ERROR",
        "FILTER_POD_STATUS_COMPLETED",
        "FILTER_POD_STATUS_WAITING"
      ],
      "default": "FILTER_POD_STATUS_UNSPECIFIED"
    },
    "v1alpha1FlannelConfig": {
      "type": "object",
      "properties": {
        "backendType": {
          "$ref": "#/definitions/FlannelConfigBackendType"
        }
      }
    },
    "v1alpha1FullGPUNodeStats": {
      "type": "object",
      "properties": {
        "totalGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of physical Gpus"
        },
        "allocatedGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of allocated Gpus"
        }
      }
    },
    "v1alpha1GPU": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "title": "uid is gpu unique id"
        },
        "name": {
          "type": "string",
          "title": "name is gpu name"
        },
        "gpuMode": {
          "$ref": "#/definitions/v1alpha1GPUModel",
          "title": "gpu_mode is gpu model"
        },
        "gpuInfo": {
          "$ref": "#/definitions/v1alpha1GPUInfo",
          "title": "gpu_info is some gpu metadata"
        },
        "migSpecList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1MigSpec"
          },
          "title": "if GPU model is mig mig_spec_list will have values"
        }
      }
    },
    "v1alpha1GPUInfo": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "title": "gpu model\ne.g. NVIDIA A800 80GB PCIe"
        },
        "device": {
          "type": "string",
          "title": "e.g. nvidia0"
        },
        "gpuMemory": {
          "type": "string",
          "format": "int64",
          "title": "gpu memory unit: Mi"
        }
      }
    },
    "v1alpha1GPUModel": {
      "type": "string",
      "enum": [
        "GPU_MODEL_UNSPECIFIED",
        "GPU_MODEL_MIG",
        "GPU_MODEL_GPU",
        "GPU_MODEL_VGPU"
      ],
      "default": "GPU_MODEL_UNSPECIFIED",
      "title": "- GPU_MODEL_MIG: gpu_model_mig gpu model is mig\n - GPU_MODEL_GPU: gpu_model_gpu gpu model is whole\n - GPU_MODEL_VGPU: gpu_model_gpu gpu model is vgpu"
    },
    "v1alpha1GPUResourceSetting": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "gpu workload type resources key"
        },
        "alias": {
          "type": "string",
          "title": "gpu workload type resources alias"
        },
        "isAllocatable": {
          "type": "boolean",
          "title": "Resource quota can be allocated"
        },
        "description": {
          "type": "string",
          "title": "gpu workload type resources description"
        },
        "aliasZh": {
          "type": "string",
          "title": "gpu workload type resources zh alias"
        },
        "range": {
          "$ref": "#/definitions/v1alpha1ResourceRange",
          "title": "gpu resource range"
        },
        "available": {
          "$ref": "#/definitions/v1alpha1AvailableResource",
          "title": "available gpu resource number\nif we don't need it\nwill return nil"
        }
      }
    },
    "v1alpha1GPUSetting": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type is gpu card type"
        },
        "alias": {
          "type": "string",
          "title": "alias is gpu card alias"
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUResourceSetting"
          },
          "title": "gpu card resource setting"
        },
        "resourceTemplate": {
          "$ref": "#/definitions/v1alpha1GPUResourceSetting",
          "title": "when is_dynamic is true, user setting resource template"
        },
        "isDynamic": {
          "type": "boolean",
          "title": "is_dynamic is check gpu resource whether dynamic, eg: nvidia.com/mig-1c.10gb"
        }
      }
    },
    "v1alpha1GPUSettingResponse": {
      "type": "object",
      "properties": {
        "gpuSetting": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUSetting"
          }
        }
      },
      "title": "GPUSettingResponse is the response message for GPUSetting"
    },
    "v1alpha1GPUSpec": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "title": "ref gpu metrics modelName"
        },
        "memory": {
          "type": "string",
          "format": "int64",
          "title": "gpu memory"
        },
        "uuid": {
          "type": "string",
          "title": "gpu uuid"
        }
      }
    },
    "v1alpha1GPUSummary": {
      "type": "object",
      "properties": {
        "node": {
          "type": "string",
          "description": "node defines the cluster node name."
        },
        "vgpuTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "vgpu_types defines a array restore vGPU types of the node."
        }
      }
    },
    "v1alpha1GetClusterAdminKubeConfigResponse": {
      "type": "object",
      "properties": {
        "kubeConfigString": {
          "type": "string",
          "description": "The kubeconfig of the cluster."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster belongs to."
        },
        "expireTime": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "GetClusterAdminKubeConfigResponse returns a openapi cert information."
    },
    "v1alpha1GetClusterCustomResourceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the CustomResource YAML details"
        }
      },
      "title": "GetClusterCustomResourceJSONResponse represents response of get one\nCustomResource'json of cluster scope"
    },
    "v1alpha1GetClusterKubeConfigResponse": {
      "type": "object",
      "properties": {
        "kubeConfigString": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetClusterlcmOpsJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data The data field is the tKuBeanClusterOps YAML details"
        }
      }
    },
    "v1alpha1GetConfigMapJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ConfigMap YAML details"
        }
      },
      "description": "ConfigMap data information in json format."
    },
    "v1alpha1GetCronHorizontalPodAutoscalerJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the hpa YAML details."
        }
      },
      "description": "HorizontalPodAutoscalerJSON responses the messages of hap YAML details."
    },
    "v1alpha1GetCustomResourceDefinitionJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the CustomResourceDefinition YAML details"
        }
      },
      "title": "GetCustomResourceDefinitionJSONResponse represents response of get one\nCustomResourceDefinition'json"
    },
    "v1alpha1GetCustomResourceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the CustomResource YAML details"
        }
      },
      "title": "GetCustomResourceJSONResponse represents response of get one\nCustomResource'json of namespaced scope"
    },
    "v1alpha1GetEtcdBackupStrategyJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the etcd backup strategy YAML details."
        }
      },
      "description": "GetEtcdBackupStrategyJSONResponse returns etcd backup strategy data information in json format."
    },
    "v1alpha1GetHelmChartDisplayResponse": {
      "type": "object",
      "properties": {
        "readme": {
          "type": "string",
          "title": "The readme represents for the helm charts readme file contents"
        },
        "appReadme": {
          "type": "string",
          "title": "The app_readme represents for the helm charts app_readme file contents"
        },
        "values": {
          "type": "string",
          "title": "The values represents for the helm charts values file contents"
        },
        "questions": {
          "type": "string",
          "title": "The questions represents for the helm charts questions file contents"
        },
        "chart": {
          "type": "string",
          "title": "The chart represents for the helm charts chart file contents"
        },
        "schemaJson": {
          "type": "string",
          "title": "The schema_json represents for the helm charts schema_json file contents"
        }
      }
    },
    "v1alpha1GetHelmChartFilesResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1GetHelmChartManifestResponse": {
      "type": "object",
      "properties": {
        "manifest": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetHelmChartResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetHelmChartResourcesResponseResources"
          }
        }
      }
    },
    "v1alpha1GetHelmChartResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "$ref": "#/definitions/v1alpha1HelmChartVersions"
        }
      }
    },
    "v1alpha1GetHelmOperationJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the repository YAML details"
        }
      }
    },
    "v1alpha1GetHelmReleaseJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the release YAML details"
        }
      }
    },
    "v1alpha1GetHelmRepoJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the repository YAML details"
        }
      }
    },
    "v1alpha1GetHorizontalPodAutoscalerJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the hpa YAML details."
        }
      },
      "description": "HorizontalPodAutoscalerJSON responses the messages of hap YAML details."
    },
    "v1alpha1GetIngressJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the ingress YAML details."
        }
      },
      "title": "GetIngressJSONResponse the response of get cluster ingresses json"
    },
    "v1alpha1GetLimitRangeJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the limitRange YAML details."
        }
      },
      "description": "GetLimitRangeJSONResponse returns limitRange data information in json format."
    },
    "v1alpha1GetNamespaceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the Namespace YAML details"
        }
      }
    },
    "v1alpha1GetNetworkPolicyJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the networkpolicy YAML details."
        }
      },
      "title": "GetNetworkPolicyJSONResponse the response of get cluster networkpolicies json"
    },
    "v1alpha1GetNodeGPUStatsResponse": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/v1alpha1GPUModel",
          "title": "cluster node gpu mode"
        },
        "fullGpuStats": {
          "$ref": "#/definitions/v1alpha1FullGPUNodeStats",
          "title": "full gpu stats"
        },
        "vgpuStats": {
          "$ref": "#/definitions/v1alpha1VGPUNodeStats",
          "title": "vgpu stats"
        },
        "migStats": {
          "$ref": "#/definitions/v1alpha1MIGNodeStats",
          "title": "mig stats"
        }
      }
    },
    "v1alpha1GetNodeJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the node YAML details."
        }
      },
      "description": "GetNodeJSONResponse returns a node's json."
    },
    "v1alpha1GetPersistentVolumeClaimJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data represents the data of PVC  JSON"
        }
      },
      "title": "GetPersistentVolumeClaimSnapshotJSONResponse represents the response of get PVC  JSON"
    },
    "v1alpha1GetPersistentVolumeJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the persistentVolume YAML details."
        }
      },
      "description": "GetPersistentVolumeJSONResponse returns persistentVolume data information in json format."
    },
    "v1alpha1GetPodContainerLogResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "title": "the total of log"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPodContainerLogResponseData"
          },
          "title": "the data of los"
        }
      },
      "title": "GetPodContainerLogResponse represents the response of get pod container log"
    },
    "v1alpha1GetPreCheckClusterInfoResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1PreCheckNodeInfo"
          },
          "description": "nodes defines all nodes of cluster."
        },
        "yumRepoInfo": {
          "$ref": "#/definitions/v1alpha1PreCheckYumRepoInfo"
        }
      }
    },
    "v1alpha1GetReplicaSetJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the replicaSet YAML details."
        }
      },
      "description": "GetReplicaSetJSONResponse returns replicaSet data information in json format."
    },
    "v1alpha1GetResourceQuotaJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the resourceQuota YAML details."
        }
      },
      "description": "GetResourceQuotaJSONResponse returns resourceQuota data information in json format."
    },
    "v1alpha1GetSecretJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the Secret YAML details"
        }
      },
      "description": "It returns Secret data information in json format."
    },
    "v1alpha1GetServiceJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the Service YAML details."
        }
      },
      "description": "It returns Service data information in json format."
    },
    "v1alpha1GetStorageClassJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the StorageClass YAML details"
        }
      },
      "title": "GetStorageClassJSONResponse represents the response of get storage class"
    },
    "v1alpha1GetVerticalPodAutoscalerJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the vpa YAML details."
        }
      },
      "description": "GetVerticalPodAutoscalerJSONResponse returns the YAML details of a vpa."
    },
    "v1alpha1GetVolumeSnapshotJSONResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data represents the data of VolumeSnapshots JSON"
        }
      },
      "title": "GetVolumeSnapshotJSONResponse represents the response of get VolumeSnapshots  JSON"
    },
    "v1alpha1GetWorkspaceSharedResourceQuotaResponse": {
      "type": "object",
      "properties": {
        "setting": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the unique identification of the group."
        },
        "name": {
          "type": "string",
          "description": "the name of the group."
        }
      }
    },
    "v1alpha1HPAScalingRules": {
      "type": "object",
      "properties": {
        "stabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "StabilizationWindowSeconds is the number of seconds for which past recommendations should be\nconsidered while scaling up or scaling down.\nStabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).\nIf not set, use the default values:\n- For scale up: 0 (i.e. no stabilization is done).\n- For scale down: 300 (i.e. the stabilization window is 300 seconds long).\n+optional"
        }
      }
    },
    "v1alpha1HTTPGetAction": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": "string",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": "string",
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "v1alpha1HTTPIngressPath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path is matched against the path of an incoming request."
        },
        "pathType": {
          "type": "string",
          "description": "PathType determines the interpretation of the Path matching."
        },
        "backend": {
          "$ref": "#/definitions/v1alpha1IngressBackend",
          "description": "Backend defines the referenced service endpoint to which the traffic will\nbe forwarded to."
        }
      },
      "description": "HTTPIngressPath associates a path with a backend. Incoming urls matching the\npath are forwarded to the backend."
    },
    "v1alpha1HTTPIngressRuleValue": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HTTPIngressPath"
          },
          "description": "A collection of paths that map requests to backends."
        }
      },
      "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends.\nIn the example: http://<host>/<path>?<searchpart> -> backend where\nwhere parts of the url correspond to RFC 3986, this resource will be used\nto match against everything after the last '/' and before the first '?'\nor '#'."
    },
    "v1alpha1Handler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/v1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/v1alpha1HTTPGetAction",
          "title": "HTTPGet specifies the http request to perform.\n+optional"
        },
        "TCPSocket": {
          "$ref": "#/definitions/v1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      }
    },
    "v1alpha1HelmChart": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1Metadata"
        },
        "values": {
          "type": "string"
        }
      }
    },
    "v1alpha1HelmChartInstall": {
      "type": "object",
      "properties": {
        "chartName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "values": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1HelmChartUpgrade": {
      "type": "object",
      "properties": {
        "chartName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "force": {
          "type": "boolean"
        },
        "resetValues": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "values": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1HelmChartVersion": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1alpha1Metadata"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "removed": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1HelmChartVersions": {
      "type": "object",
      "properties": {
        "chartVersion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChartVersion"
          }
        }
      }
    },
    "v1alpha1HelmInstallConfig": {
      "type": "object",
      "properties": {
        "values": {
          "type": "string"
        }
      }
    },
    "v1alpha1HelmOperation": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1HelmOperationStatus",
          "description": "OperationStatus contains the operation  status."
        }
      }
    },
    "v1alpha1HelmOperationStatus": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "chart": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "release": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jobName": {
          "type": "string",
          "description": "Related job's name."
        },
        "jobNamespace": {
          "type": "string",
          "description": "Related job's namespace."
        },
        "jobCreated": {
          "type": "boolean",
          "description": "Job created or not."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1HelmOperationStatusPhase",
          "description": "Current state of the helm operation (job)."
        },
        "podCreated": {
          "type": "boolean",
          "description": "Pod created or not."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of helmOperation."
        }
      }
    },
    "v1alpha1HelmOperationStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Running",
        "Succeeded",
        "Failed",
        "Blocked"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": "Current phase of the helm operation (job).\n\n - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Running: Job running, consistent with kubean ClusterOpsStatus \"Running\".\n - Succeeded: Job succeeded, consistent with kubean ClusterOpsStatus \"Succeeded\".\n - Failed: Job failed or deleted, consistent with kubean ClusterOpsStatus \"Failed\".\n - Blocked: Job waiting, consistent with kubean ClusterOpsStatus \"Blocked\"."
    },
    "v1alpha1HelmRelease": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ReleaseSpec",
          "description": "ReleaseSpec describes how the release execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleaseStatus",
          "description": "ReleaseStatus contains the release status."
        }
      }
    },
    "v1alpha1HelmRepo": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1RepoSpec",
          "description": "RepoSpec describes how the repository execution will look like and when it\nwill actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1RepoStatus",
          "description": "RepoStatus contains the repository status."
        }
      }
    },
    "v1alpha1HorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1HorizontalPodAutoscalerSpec",
          "description": "behaviour of autoscaler. More info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1HorizontalPodAutoscalerStatus",
          "description": "current information about the autoscaler."
        }
      },
      "description": "configuration of a horizontal pod autoscaler."
    },
    "v1alpha1HorizontalPodAutoscalerBehavior": {
      "type": "object",
      "properties": {
        "scaleUp": {
          "$ref": "#/definitions/v1alpha1HPAScalingRules",
          "description": "No stabilization is used.\n+optional",
          "title": "scaleUp is scaling policy for scaling Up.\nIf not set, the default value is the higher of:\n  - increase no more than 4 pods per 60 seconds\n  - double the number of pods per 60 seconds"
        },
        "scaleDown": {
          "$ref": "#/definitions/v1alpha1HPAScalingRules",
          "title": "scaleDown is scaling policy for scaling Down.\nIf not set, the default value is to allow to scale down to minReplicas pods, with a\n300 second stabilization window (i.e., the highest recommendation for\nthe last 300sec is used).\n+optional"
        }
      }
    },
    "v1alpha1HorizontalPodAutoscalerSpec": {
      "type": "object",
      "properties": {
        "scaleTargetRef": {
          "$ref": "#/definitions/v1alpha1CrossVersionObjectReference",
          "description": "reference to scaled resource; horizontal pod autoscaler will learn the\ncurrent resource consumption and will set the desired number of pods by\nusing its Scale subresource."
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "minReplicas is the lower limit for the number of replicas to which the\nautoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed\nto be 0 if the alpha feature gate HPAScaleToZero is enabled and at least\none Object or External metric is configured.  Scaling is active as long as\nat least one metric value is available. +optional"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "upper limit for the number of pods that can be set by the autoscaler;\ncannot be smaller than MinReplicas."
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1MetricSpec"
          },
          "title": "metrics contains the specifications for which to use to calculate the\ndesired replica count (the maximum replica count across all metrics will\nbe used).  The desired replica count is calculated multiplying the\nratio between the target value and the current value by the current\nnumber of pods.  Ergo, metrics used must decrease as the pod count is\nincreased, and vice-versa.  See the individual metric source types for\nmore information about how each type of metric must respond.\nIf not set, the default metric will be set to 80% average CPU utilization.\n+listType=atomic\n+optional"
        },
        "behavior": {
          "$ref": "#/definitions/v1alpha1HorizontalPodAutoscalerBehavior",
          "title": "behavior configures the scaling behavior of the target\nin both Up and Down directions (scaleUp and scaleDown fields respectively).\nIf not set, the default HPAScalingRules for scale up and scale down are used.\n+optional\ntodo: add HorizontalPodAutoscalerBehavior"
        }
      },
      "description": "specification of a horizontal pod autoscaler."
    },
    "v1alpha1HorizontalPodAutoscalerStatus": {
      "type": "object",
      "properties": {
        "lastScaleTime": {
          "type": "string",
          "format": "int64",
          "title": "last time the HorizontalPodAutoscaler scaled the number of pods;\nused by the autoscaler to control how often the number of pods is changed.\n+optional"
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "current number of replicas of pods managed by this autoscaler."
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "desired number of replicas of pods managed by this autoscaler."
        },
        "currentMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1MetricStatus"
          },
          "title": "currentMetrics is the last read state of the metrics used by this autoscaler.\n+listType=atomic\n+optional"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1HorizontalPodAutoscalerStatusPhase",
          "description": "The phase of hpa."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of HPA."
        }
      }
    },
    "v1alpha1HorizontalPodAutoscalerStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Ready",
        "NotReady"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": "- Ready: The Ready phase which means the hpa is normal.\n - NotReady: The NotReady phase which means some error occur.",
      "title": "The list of HPA phase;"
    },
    "v1alpha1HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path."
        },
        "type": {
          "type": "string",
          "title": "Type for HostPath Volume\nDefaults to \"\"\n+optional"
        }
      },
      "description": "HostPathVolumeSource Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
    },
    "v1alpha1IPBlock": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string",
          "title": "CIDR is a string representing the IP Block\nValid examples are \"192.168.1.1/24\" or \"2001:db9::/64\""
        },
        "except": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Except is a slice of CIDRs that should not be included within an IP Block\nValid examples are \"192.168.1.1/24\" or \"2001:db9::/64\"\nExcept values will be rejected if they are outside the CIDR range\n+optional"
        }
      },
      "description": "IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\",\"2001:db9::/64\") that is allowed\nto the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs\nthat should not be included within this rule."
    },
    "v1alpha1Ingress": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1IngressSpec",
          "description": "Spec is the desired state of the Ingress."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1IngressStatus",
          "description": "Status is the current state of the Ingress."
        }
      },
      "description": "Ingress is a collection of rules that allow inbound connections to reach the\nendpoints defined by a backend. An Ingress can be configured to give services\nexternally-reachable urls, load balance traffic, terminate SSL, offer name\nbased virtual hosting etc."
    },
    "v1alpha1IngressBackend": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1alpha1IngressServiceBackend",
          "description": "Service references a Service as a Backend.\nThis is a mutually exclusive setting with \"Resource\"."
        },
        "resource": {
          "$ref": "#/definitions/apinetworkingv1alpha1TypedLocalObjectReference",
          "description": "Resource is an ObjectRef to another Kubernetes resource in the namespace\nof the Ingress object. If resource is specified, a service.Name and\nservice.Port must not be specified.\nThis is a mutually exclusive setting with \"Service\"."
        }
      },
      "description": "IngressBackend describes all endpoints for a given service and port."
    },
    "v1alpha1IngressClassSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of ingress class"
        },
        "isDefaultClass": {
          "type": "boolean",
          "description": "IsDefaultClass is used to indicate that an IngressClass should be considered default."
        },
        "kind": {
          "type": "string",
          "description": "Kind field is an implementation identifier of ingress, e.g. k8s.io/ingress-nginx."
        }
      }
    },
    "v1alpha1IngressRule": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host is the fully qualified domain name of a network host, as defined by\nRFC 3986."
        },
        "http": {
          "$ref": "#/definitions/v1alpha1HTTPIngressRuleValue",
          "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends."
        }
      },
      "description": "IngressRule represents the rules mapping the paths under a specified host to\nthe related backend services. Incoming requests are first evaluated for a host\nmatch, then routed to the backend associated with the matching IngressRuleValue."
    },
    "v1alpha1IngressServiceBackend": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the referenced service. The service must exist in"
        },
        "port": {
          "$ref": "#/definitions/v1alpha1IngressServiceBackendPort",
          "title": "Port of the referenced service. A port name or port number"
        }
      },
      "description": "IngressServiceBackend references a Kubernetes Service as a Backend."
    },
    "v1alpha1IngressServiceBackendPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the name of the port on the Service.\nThis is a mutually exclusive setting with \"Number\"."
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "Number is the numerical port number (e.g. 80) on the Service.\nThis is a mutually exclusive setting with \"Name\"."
        }
      },
      "description": "ServiceBackendPort is the service port being referenced."
    },
    "v1alpha1IngressSpec": {
      "type": "object",
      "properties": {
        "ingressClassName": {
          "type": "string",
          "title": "IngressClassName is the name of the IngressClass cluster resource.\nThe associated IngressClass defines which controller will implement the\nresource. This replaces the deprecated `kubernetes.io/ingress.class`\nannotation. For backwards compatibility, when that annotation is set, it\nmust be given precedence over this field. The controller may emit a\nwarning if the field and annotation have different values.\nImplementations of this API should ignore Ingresses without a class\nspecified. An IngressClass resource may be marked as default, which can\nbe used to set a default value for this field"
        },
        "tls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1IngressTLS"
          },
          "description": "TLS configuration.\nCurrently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1IngressRule"
          },
          "description": "A list of host rules used to configure the Ingress. If unspecified, or\nno rule matches, all traffic is sent to the default backend."
        }
      },
      "description": "IngressSpec is the desired state of the Ingress."
    },
    "v1alpha1IngressStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/apinetworkingv1alpha1LoadBalancerStatus",
          "description": "LoadBalancer contains the current status of the load-balancer."
        }
      },
      "description": "IngressStatus is the current state of the Ingress."
    },
    "v1alpha1IngressTLS": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hosts are a list of hosts included in the TLS certificate.\nThe values in this list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
        },
        "secretName": {
          "type": "string",
          "description": "SecretName is the name of the secret used to terminate TLS traffic on  port\n443.\nField is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the Host header is used for routing."
        }
      },
      "description": "IngressTLS describes the transport layer security associated with an Ingress."
    },
    "v1alpha1IntegrateClusterRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the user-specified identifier.\nThis field may not be updated."
        },
        "aliasName": {
          "type": "string",
          "description": "It is an alias given by the user and can be changed at will. It cannot be\nempty."
        },
        "provider": {
          "$ref": "#/definitions/v1alpha1ClusterProvider",
          "description": "Provider represents the cloud provider name of the member cluster."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are key/value pairs that are attached to objects."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to attach arbitrary metadata to objects."
        },
        "describe": {
          "type": "string",
          "description": "describe represents the details of the member cluster."
        },
        "region": {
          "type": "string",
          "description": "Region represents the region of the member cluster locate in."
        },
        "zone": {
          "type": "string",
          "description": "Zone represents the zone of the member cluster locate in."
        },
        "kubeConfigString": {
          "type": "string",
          "description": "kubeConfig of the cluster."
        },
        "direct": {
          "type": "boolean",
          "description": "direct Indicates whether the egress agent is created for the sub cluster, if true the egress agent is not created for the sub cluster."
        }
      },
      "description": "IntegrateClusterRequest requests to integrates a cluster."
    },
    "v1alpha1Job": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1JobSpec",
          "description": "JobSpec describes how the job execution will look like."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1JobStatus",
          "description": "JobStatus represents the current state of a Job."
        },
        "executionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "Information when was the time the job was successfully executed."
        }
      },
      "description": "Job represents the details information."
    },
    "v1alpha1JobRef": {
      "type": "object",
      "properties": {
        "namesapce": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1JobSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1alpha1PodTemplateSpec",
          "description": "Describes the pod that will be created when executing a job."
        }
      },
      "description": "JobSpec describes how the job execution will look like and when it will\nactually run."
    },
    "v1alpha1JobStatus": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32",
          "title": "The number of pending and running pods.\n+optional"
        },
        "succeed": {
          "type": "integer",
          "format": "int32",
          "title": "The number of pods which reached phase Succeeded.\n+optional"
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "title": "The number of pods which reached phase Failed.\n+optional"
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1JobStatusJobState",
          "description": "State of a job."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of job."
        }
      },
      "description": "JobStatus represents the current state of a cron job."
    },
    "v1alpha1JobStatusJobState": {
      "type": "string",
      "enum": [
        "JOB_STATE_UNSPECIFIED",
        "Waiting",
        "Running",
        "Completed",
        "Deleting",
        "Failed"
      ],
      "default": "JOB_STATE_UNSPECIFIED",
      "description": "Current state of a job.\n\n - JOB_STATE_UNSPECIFIED: Job is unspecified.\n - Waiting: Waiting for job ready.\n - Running: Job is working.\n - Completed: Jobs has completed.\n - Deleting: Jobs is being deleted.\n - Failed: Jobs is not ready to work ."
    },
    "v1alpha1KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits to use on this file, should be a value between 0\nand 0777. If not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
        }
      },
      "description": "KeyToPath maps a string key to a path within a volume."
    },
    "v1alpha1KubeOvnConfig": {
      "type": "object",
      "properties": {
        "networkType": {
          "$ref": "#/definitions/KubeOvnConfigNetworkType"
        },
        "defaultInterfaceName": {
          "type": "string",
          "title": "The following configuration takes effect only when the network mode is vlan"
        },
        "defaultVlanId": {
          "type": "string"
        },
        "defaultGatewayIpv4": {
          "type": "string"
        },
        "defaultGatewayIpv6": {
          "type": "string"
        }
      }
    },
    "v1alpha1KubeanSetting": {
      "type": "object",
      "properties": {
        "clusterOperationsBackEndLimit": {
          "type": "string",
          "description": "Set the maximum number of cluster ops reserved for each kubean cluster."
        }
      }
    },
    "v1alpha1KubesprayArgs": {
      "type": "object",
      "properties": {
        "runtime": {
          "$ref": "#/definitions/KubesprayArgsRuntime",
          "title": "Container runtime"
        },
        "runtimeVersion": {
          "type": "string",
          "title": "Change this to use another runtime version, e.g. a current beta release"
        },
        "kubernetesVersion": {
          "type": "string",
          "title": "Change this to use another Kubernetes version, e.g. a current beta release"
        },
        "ntpConfig": {
          "$ref": "#/definitions/v1alpha1NTPConfig"
        },
        "nodeConfig": {
          "$ref": "#/definitions/v1alpha1NodeConfig"
        },
        "networkConfig": {
          "$ref": "#/definitions/v1alpha1NetworkConfig"
        },
        "dnsConfig": {
          "$ref": "#/definitions/v1alpha1DNSConfig"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "containerdInsecureRegistries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An obvious use case is allowing insecure-registry access to self hosted registries.\nCan be ipaddress and domain_name.\nexample define mirror.registry.io or 172.19.16.11:5000\nset \"name\": \"url\". insecure url must be started http://\nPort number is also needed if the default HTTPS port is not used.\n# containerd_insecure_registries:\n#   \"localhost\": \"http://127.0.0.1\"\n#   \"172.19.16.11:5000\": \"http://172.19.16.11:5000\""
        },
        "dockerInsecureRegistries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An obvious use case is allowing insecure-registry access to self hosted registries.\nCan be ipaddress and domain_name.\nexample define 172.19.16.11 or mirror.registry.io\n# docker_insecure_registries:\n#   - mirror.registry.io\n#   - 172.19.16.11"
        },
        "yumRepos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "YumRepos is the yum repository for echo node to be added."
        },
        "enableNodeSysctlTuning": {
          "type": "boolean",
          "description": "EnableNodeSysctlTuning enable systcl tunning variables."
        },
        "sysctlParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "SysctlParams is work when enabel NodeSysctlTunning."
        },
        "enableVerboseLogging": {
          "type": "boolean",
          "description": "EnableVerboseLogging represents if print more detail logging when installing cluster.\nIt's true by default."
        },
        "highLevelParams": {
          "type": "string",
          "description": "params filled in by the user."
        },
        "skipDocker": {
          "type": "boolean",
          "description": "True means using the docker already exists on the node."
        }
      }
    },
    "v1alpha1Level": {
      "type": "string",
      "enum": [
        "LEVEL_UNSPECIFIED",
        "privileged",
        "baseline",
        "restricted"
      ],
      "default": "LEVEL_UNSPECIFIED",
      "description": "The Level of Pod Security Standards to broadly cover the security spectrum.\n\n - LEVEL_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - privileged: Privileged is the unrestricted policy, providing the widest possible level of permissions. This policy allows for known privilege escalations.\n - baseline: Baseline is the minimally restrictive policy which prevents known privilege escalations. Allows the default (minimally specified) Pod configuration.\n - restricted: Restricted is the heavily restricted policy, following current Pod hardening best practices."
    },
    "v1alpha1Lifecycle": {
      "type": "object",
      "properties": {
        "PostStart": {
          "$ref": "#/definitions/v1alpha1Handler",
          "title": "PostStart is called immediately after a container is created. If the\nhandler fails, the container is terminated and restarted according to its\nrestart policy. Other management of the container blocks until the hook\ncompletes. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "$ref": "#/definitions/v1alpha1Handler",
          "title": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown\nbegins before the PreStop hook is executed. Regardless of the outcome of\nthe handler, the container will eventually terminate within the Pod's\ntermination grace period (unless delayed by finalizers). Other management\nof the container blocks until the hook completes or until the termination\ngrace period is reached. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        }
      },
      "description": "Lifecycle describes actions that the management system should take in\nresponse to container lifecycle events. For the PostStart and PreStop\nlifecycle handlers, management of the container blocks until the action is\ncomplete, unless the container process fails, in which case the handler is\naborted."
    },
    "v1alpha1LimitRange": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1LimitRangeSpec",
          "description": "Spec defines the limits enforced."
        }
      },
      "description": "LimitRange sets resource usage limits for each kind of resource in a Namespace."
    },
    "v1alpha1LimitRangeItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type is a type of object that is limited. It can be Pod, Container, PersistentVolumeClaim or a fully qualified resource name."
        },
        "max": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Max usage constraints on this kind by resource name. Format: a map of (resource name, quantity) pairs."
        },
        "min": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Min usage constraints on this kind by resource name. Format: a map of (resource name, quantity) pairs."
        },
        "default": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Default resource requirement limit value by resource name if resource limit is omitted. Format: a map of (resource name, quantity) pairs."
        },
        "defaultRequest": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted. Format: a map of (resource name, quantity) pairs."
        },
        "maxLimitRequestRatio": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource. Format: a map of (resource name, quantity) pairs."
        }
      },
      "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind."
    },
    "v1alpha1LimitRangeSpec": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LimitRangeItem"
          },
          "description": "Limits is the list of LimitRangeItem objects that are enforced."
        }
      },
      "description": "LimitRangeSpec defines a min/max usage limit for resources that match on kind."
    },
    "v1alpha1ListAdminClusterSummaryResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "clusters is the cluster summary"
        }
      }
    },
    "v1alpha1ListAllClusterGPUInfoResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUSpec"
          }
        }
      }
    },
    "v1alpha1ListAllStorageClassesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StorageClass"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListPersistentVolumeClaimsRequest represents the response of list storage class"
    },
    "v1alpha1ListAllUserRoleSummaryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1RoleSummary"
          }
        }
      }
    },
    "v1alpha1ListArtifactsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Items is a list of tag names."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListArtifactsResponse returns a list of tags of specified image"
    },
    "v1alpha1ListClusterConfigMapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ConfigMap"
          },
          "title": "The data is the ConfigMap YAML details"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "the list of Cluster ConfigMaps."
    },
    "v1alpha1ListClusterCronJobsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CronJob"
          },
          "description": "The data field is the cronjob YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Cluster CronJob information List."
    },
    "v1alpha1ListClusterCustomResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CustomResource"
          },
          "title": "Data represents the response of CustomResource"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListClusterCustomResourcesResponse represents list all CustomResources of\ncluster scope in cluster"
    },
    "v1alpha1ListClusterEventKindsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Data is the list of involvedObject'kinds of events."
        }
      },
      "description": "ListClusterEventKindsResponse returns the list of involvedObject's kinds of\nevents."
    },
    "v1alpha1ListClusterEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Event"
          },
          "description": "Data represents the returned event list."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination is for data paging."
        }
      },
      "description": "ListClusterEventsResponse returns the list and pagination of events."
    },
    "v1alpha1ListClusterGPUSummaryResponese": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUSummary"
          },
          "description": "summary defines a array restore GUP type summary of all nodes."
        }
      }
    },
    "v1alpha1ListClusterHelmOperationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmOperation"
          },
          "description": "A list of operation sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListClusterHelmReleasesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRelease"
          },
          "description": "A list of release sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListClusterIngressesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Ingress"
          },
          "description": "Data is the ingress details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Page defines the pagination detail be return."
        }
      },
      "title": "ListClusterIngressesResponse the response of list all cluster ingresses"
    },
    "v1alpha1ListClusterInstalledHelmChartResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1HelmChartVersions"
          },
          "title": "The built in helm repo which helm chart install"
        }
      }
    },
    "v1alpha1ListClusterJobsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Job"
          },
          "description": "The data is the job YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Cluster Jobs information List."
    },
    "v1alpha1ListClusterLimitRangesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LimitRange"
          },
          "description": "Items of LimitRange."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of cluster LimitRanges."
    },
    "v1alpha1ListClusterNamespaceSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NamespaceSummary"
          },
          "title": "Data is the returned namespace summary list"
        },
        "accessScope": {
          "$ref": "#/definitions/ListClusterNamespaceSummaryResponseScope",
          "description": "AccessScope indicates whether the user has the cluster right."
        }
      }
    },
    "v1alpha1ListClusterNamespacesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Namespace"
          },
          "title": "Data is the returned namespace list"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListClusterNetworkPoliciesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicy"
          },
          "description": "Items is the networkpolicy list."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination defines the pagination detail to return."
        }
      },
      "description": "ListClusterNetworkPoliciesResponse returns a list of all networkpolicies in the cluster."
    },
    "v1alpha1ListClusterNodeSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeSummary"
          }
        }
      },
      "description": "It returns node list in the cluster."
    },
    "v1alpha1ListClusterPersistentVolumeClaimsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeClaim"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListClusterPersistentVolumeClaimRequest represents the response of list all namespace PVC"
    },
    "v1alpha1ListClusterPreferredResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1APIResourceList"
          },
          "description": "resources contains the name of the resources and if they are namespaced."
        }
      },
      "description": "ListClusterPreferredResourcesResponse returns a list of cluster."
    },
    "v1alpha1ListClusterReplicaSetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReplicaSet"
          },
          "description": "Items is the list of replicasets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "description": "ListClusterReplicaSetsResponse returns a list of replicasets in specified cluster."
    },
    "v1alpha1ListClusterRoleBindingsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterRoleBinding"
          },
          "description": "Data represents the data of roleBindings."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      }
    },
    "v1alpha1ListClusterRolesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apirbacv1alpha1ClusterRole"
          },
          "description": "Data represents the data of roles."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListClusterRolesResponse the response of list clusterrole"
    },
    "v1alpha1ListClusterSecretsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Secret"
          },
          "description": "Secret name."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Cluster Secrets information."
    },
    "v1alpha1ListClusterServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Service"
          },
          "description": "Items is the list of services."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "description": "List of cluster services."
    },
    "v1alpha1ListClusterSriovAllocatedResourcesResponse": {
      "type": "object",
      "properties": {
        "allocatedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AllocatedResource"
          }
        }
      },
      "title": "ListClusterSriovAllocatedResourcesResponse is a response for node sriov-related resources"
    },
    "v1alpha1ListClusterSummaryResponse": {
      "type": "object",
      "properties": {
        "clusterSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterSummary"
          }
        }
      },
      "description": "ClusterSummaryResponse returns a list of cluster."
    },
    "v1alpha1ListClusterVolumeSnapshotsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1VolumeSnapshot"
          },
          "title": "Data describes the common attributes of volumeSnapshot"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListClusterVolumeSnapshotRequest represents the response of list all namespace VolumeSnapshot"
    },
    "v1alpha1ListClusterlcmOpsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ClusterlcmOps"
          },
          "description": "The data of clusterclmOps."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      }
    },
    "v1alpha1ListClustersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Cluster"
          },
          "title": "data The data field is the YAML details"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Clusters information List."
    },
    "v1alpha1ListConfigMapRelatedWorkloadsResponse": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Pod"
          }
        },
        "daemonsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1DaemonSet"
          }
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Deployment"
          }
        },
        "statefulsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StatefulSet"
          }
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Job"
          }
        }
      }
    },
    "v1alpha1ListConfigMapsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ConfigMap"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListControllerRevisionsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "StatefulSet",
        "DaemonSet"
      ],
      "default": "KIND_UNSPECIFIED"
    },
    "v1alpha1ListControllerRevisionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ControlleRrevision"
          },
          "description": "Data is the revision list related to the specified statefulset."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListCronHorizontalPodAutoscalersRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "ReplicaSet"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": "The list of hpa kind enums.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A hpa which targetRef kind is Deployment.\n - StatefulSet: A hpa which targetRef kind is StatefulSet.\n - ReplicaSet: A hpa which targetRef kind is ReplicaSet."
    },
    "v1alpha1ListCronHorizontalPodAutoscalersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CronHorizontalPodAutoscaler"
          },
          "description": "The data is the job YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "HorizontalPodAutoscalers information list."
    },
    "v1alpha1ListCronJobsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CronJob"
          },
          "description": "The data field is the cronjob YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "CronJob information List."
    },
    "v1alpha1ListCustomMetricSummaryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The data is the array of metric."
        }
      },
      "description": "The response of listing ListCustomMetricsSummary."
    },
    "v1alpha1ListCustomResourceDefinitionGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items represents groups of customResourceDefinitions."
        }
      },
      "title": "ListCustomResourceDefinitionGroupsResponse represents a list of all groups of customResourceDefinitions"
    },
    "v1alpha1ListCustomResourceDefinitionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CustomResourceDefinition"
          },
          "description": "CustomResourceDefinition represents all custom resource definitions."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListCustomResourceDefinitionsResponse represents response of list all\nCustomResourceDefinitions"
    },
    "v1alpha1ListCustomResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CustomResource"
          },
          "title": "Data represents the response of CustomResource"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListCustomResourcesResponse represents list all of the CustomResources of\nnamespaced scope in cluster"
    },
    "v1alpha1ListDaemonSetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1DaemonSet"
          },
          "title": "Data represents the kpanda's workload types of inclusion"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "description": "Response message for the `ListDaemonSets` method."
    },
    "v1alpha1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Deployment"
          },
          "title": "Data represents the kpanda's workload types of inclusion"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "description": "Response message for the `ListDeployments` method."
    },
    "v1alpha1ListEtcdBackupStrategiesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1EtcdBackupStrategy"
          },
          "description": "EtcdBackupStrategy A list of etcd backup strategy sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListEtcdSnapshotsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Snapshot"
          }
        }
      }
    },
    "v1alpha1ListEventsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet",
        "Pod",
        "Service",
        "Ingress",
        "Job",
        "CronJob",
        "HorizontalPodAutoscaler",
        "ReplicaSet",
        "CronHPA",
        "PersistentVolumeClaim",
        "GroupVersionResource"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - KIND_UNSPECIFIED: KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not\nreturn.\n - Deployment: ListEvents by deployment.\n - StatefulSet: ListEvents by statefulSet.\n - DaemonSet: ListEvents by daemonSet.\n - Pod: ListEvents by pod.\n - Service: ListEvents by service.\n - Ingress: ListEvents by ingress.\n - Job: ListEvents by job.\n - CronJob: ListEvents by cronJob.\n - HorizontalPodAutoscaler: ListEvents by HorizontalPodAutoscaler.\n - ReplicaSet: ListEvents by replicaset.\n - CronHPA: ListEvents by CronHPA.\n - PersistentVolumeClaim: ListEvents by PersistentVolumeClaim.\n - GroupVersionResource: ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,\nyou must specify the value of group version resource."
    },
    "v1alpha1ListEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Event"
          },
          "title": "Data response of the workload's event"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListEventsByWorkloadNameResponse the response of listEvents by workload name"
    },
    "v1alpha1ListFeatureGatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1FeatureGate"
          }
        }
      }
    },
    "v1alpha1ListGPUSettingResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPUSetting"
          },
          "description": "The plugins in the specific cluster."
        }
      }
    },
    "v1alpha1ListGlobalRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Group"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination is for data paging."
        }
      }
    },
    "v1alpha1ListHelmChartsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmChartVersion"
          }
        },
        "categories": {
          "$ref": "#/definitions/ListHelmChartsResponseCategoryItem"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmOperationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmOperation"
          },
          "description": "A list of operation sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmReleaseResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Resource"
          },
          "description": "A list of resources sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "ListHelmReleaseResourcesResponse returns resources of a helmrelease."
    },
    "v1alpha1ListHelmReleaseRevisionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Revision"
          },
          "description": "A list of revisions sets."
        }
      },
      "description": "ListHelmReleaseRevisionsResponse returns revisions of a helmrelease."
    },
    "v1alpha1ListHelmReleasesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRelease"
          },
          "description": "A list of release sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHelmReposResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmRepo"
          },
          "description": "HelmRepo A list of repo sets."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      }
    },
    "v1alpha1ListHorizontalPodAutoscalersRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "ReplicaSet"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": "The list of hpa kind enums.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A hpa which targetRef kind is Deployment.\n - StatefulSet: A hpa which targetRef kind is StatefulSet.\n - ReplicaSet: A hpa which targetRef kind is ReplicaSet."
    },
    "v1alpha1ListHorizontalPodAutoscalersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HorizontalPodAutoscaler"
          },
          "description": "The data is the job YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "HorizontalPodAutoscalers information list."
    },
    "v1alpha1ListImageTagsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The response of list image tags."
    },
    "v1alpha1ListIngressClassSummaryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1IngressClassSummary"
          }
        }
      }
    },
    "v1alpha1ListIngressesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Ingress"
          },
          "description": "Data is the ingress details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Page defines the pagination detail be return."
        }
      },
      "title": "ListIngressesResponse the response of list one cluster ingresses"
    },
    "v1alpha1ListJobsByCronJobNameResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Job"
          },
          "description": "The data field is the cronjob YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "CronJob Name information List"
    },
    "v1alpha1ListJobsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Job"
          },
          "description": "The data is the job YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Jobs information List."
    },
    "v1alpha1ListKubeVersionsResponse": {
      "type": "object",
      "properties": {
        "kubernetesVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The available k8s version list."
        },
        "preferredVersion": {
          "type": "string"
        },
        "useLocalService": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1ListLimitRangesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1LimitRange"
          },
          "description": "Items of LimitRanges."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "ListLimitRangesResponse returns LimitRange list."
    },
    "v1alpha1ListMetallbIPPoolResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1MetallbIPPool"
          },
          "description": "List of  MetallbIPPool."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Page defines the pagination detail be return."
        }
      }
    },
    "v1alpha1ListMetricValuesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1CustomMetricValue"
          }
        }
      }
    },
    "v1alpha1ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Namespace"
          },
          "title": "Data is the returned namespace list"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination"
        }
      },
      "description": "ListNamespaceResponse is a list of Namespaces."
    },
    "v1alpha1ListNetworkPoliciesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicy"
          },
          "description": "Items is the networkpolicy list."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination defines the pagination detail to return."
        }
      },
      "description": "ListNetworkPoliciesResponse returns a list of networkpolicies in a namespace."
    },
    "v1alpha1ListNodeGPUResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GPU"
          }
        }
      }
    },
    "v1alpha1ListNodesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Node"
          },
          "description": "Node name."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Nodes information."
    },
    "v1alpha1ListPersistentVolumeClaimsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeClaim"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListPersistentVolumeClaimRequest represents the response of list PVC"
    },
    "v1alpha1ListPersistentVolumesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolume"
          },
          "description": "Items of PersistentVolumes."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "ListPersistentVolumesResponse returns PersistentVolume list."
    },
    "v1alpha1ListPluginsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Plugin"
          },
          "description": "The plugins in the specific cluster."
        }
      }
    },
    "v1alpha1ListPodContainerResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ContainerStatus"
          },
          "title": "Data represents the container status"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListPodContainerResponse represents the response of list pod container"
    },
    "v1alpha1ListPodsByNodeResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Pod"
          },
          "description": "The data field is the YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "Pod list belong to the node."
    },
    "v1alpha1ListPodsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet",
        "Service",
        "Job",
        "CronJob",
        "ReplicaSet",
        "NetworkPolicy"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - Service: Service to expose an application running on a set of Pods.\n - Job: Job is used to express a one-time task.\n - CronJob: CronJob runs repeatedly according to its time schedule.\n - ReplicaSet: ReplicaSet is the workload API object used to manage pods\n - NetworkPolicy: NetworkPolicy uses podSelector to select pods."
    },
    "v1alpha1ListPodsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Pod"
          },
          "description": "Standard object's data."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of pod information."
    },
    "v1alpha1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items is a list of project names."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListProjectsResponse returns a list of projects of a registry"
    },
    "v1alpha1ListRegistriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Registry"
          },
          "title": "items is registry host"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListRegistriesResponse returns a list of registries"
    },
    "v1alpha1ListReplicaSetsRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment"
      ],
      "default": "KIND_UNSPECIFIED"
    },
    "v1alpha1ListReplicaSetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReplicaSet"
          },
          "description": "data replicaSet ensures that a specified number of pod replicas are running\nat any given time."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListReplicaSetsByDeploymentResponse the response of list replicaSets by\ndeployment name"
    },
    "v1alpha1ListRepositoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Repository"
          },
          "description": "Items is a list of repositories."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, page size, and total."
        }
      },
      "title": "ListRepositoriesResponse returns a list of projects of a registry"
    },
    "v1alpha1ListResourceQuotasResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceQuota"
          },
          "description": "Items of ResourceQuotas."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "ListResourceQuotasResponse returns ResourceQuota list."
    },
    "v1alpha1ListRoleBindingsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RoleBinding"
          },
          "description": "Data represents the data of roleBindings."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListRoleBindingsResponse the response of list role bindings"
    },
    "v1alpha1ListRolesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rbacv1alpha1Role"
          },
          "description": "Data represents the data of roles."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "title": "ListRolesResponse the response of list role"
    },
    "v1alpha1ListRuntimeVersionsResponse": {
      "type": "object",
      "properties": {
        "containerdVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The available containerd version list"
        },
        "dockerVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The available docker version list"
        },
        "preferredVersion": {
          "$ref": "#/definitions/ListRuntimeVersionsResponsePreferredVersion",
          "description": "The preferred version recommend by system."
        }
      }
    },
    "v1alpha1ListSecretRelatedWorkloadsResponse": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Pod"
          }
        },
        "daemonsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1DaemonSet"
          }
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Deployment"
          }
        },
        "statefulsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StatefulSet"
          }
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Job"
          }
        }
      }
    },
    "v1alpha1ListSecretsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Secret"
          },
          "description": "Secret name."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "List of Secrets data details."
    },
    "v1alpha1ListServiceAccountsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ServiceAccount"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListPersistentVolumeClaimsRequest represents the response of list storage class"
    },
    "v1alpha1ListServicesRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - Deployment: A Deployment provides declarative updates for Pods and ReplicaSets.\n - StatefulSet: StatefulSet is the workload API object used to manage stateful\napplications.\n - DaemonSet: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod."
    },
    "v1alpha1ListServicesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Service"
          },
          "description": "The data field is the service YAML details."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "The Service list for the given namespace and name if it exists in the\ncluster."
    },
    "v1alpha1ListStatefulSetsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StatefulSet"
          },
          "title": "Data represents the kpanda's workload types of inclusion"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination is for data paging"
        }
      },
      "description": "Response message for the `ListStatefulSets` method."
    },
    "v1alpha1ListStorageClassesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1StorageClass"
          },
          "title": "Data describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListPersistentVolumeClaimsRequest represents the response of list storage class"
    },
    "v1alpha1ListUsersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1User"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination is for data paging."
        }
      }
    },
    "v1alpha1ListVerticalPodAutoscalersRequestKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Deployment",
        "StatefulSet",
        "DaemonSet",
        "ReplicaSet",
        "Job",
        "CronJob",
        "ReplicationController"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": "The list of vpa kind enums.\n\n - KIND_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Deployment: A vpa which targetRef kind is Deployment.\n - StatefulSet: A vpa which targetRef kind is StatefulSet.\n - DaemonSet: A vpa which targetRef kind is DaemonSet.\n - ReplicaSet: A vpa which targetRef kind is ReplicaSet.\n - Job: A vpa which targetRef kind is Job.\n - CronJob: A vpa which targetRef kind is CronJob.\n - ReplicationController: A vpa which targetRef kind is ReplicationController."
    },
    "v1alpha1ListVerticalPodAutoscalersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1VerticalPodAutoscaler"
          },
          "description": "Items is the vpa list."
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "description": "ListVerticalPodAutoscalersResponse returns a list of vpas."
    },
    "v1alpha1ListVolumeSnapshotsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1VolumeSnapshot"
          },
          "title": "Data describes the common attributes of volumeSnapshot"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "description": "Pagination returned contains current page, size, and total."
        }
      },
      "title": "ListVolumeSnapshotRequest represents the response of list VolumeSnapshot"
    },
    "v1alpha1ListWorkspacesResponse": {
      "type": "object",
      "properties": {
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WorkspaceInfo"
          }
        }
      }
    },
    "v1alpha1MIGModeSpec": {
      "type": "object",
      "properties": {
        "config": {
          "type": "string"
        },
        "strategy": {
          "$ref": "#/definitions/v1alpha1MIGStrategy",
          "title": "single or mixed"
        }
      }
    },
    "v1alpha1MIGNodeStats": {
      "type": "object",
      "properties": {
        "totalGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of physical Gpus"
        },
        "allocatedGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of allocated Gpus"
        },
        "totalMigNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of mig"
        }
      }
    },
    "v1alpha1MIGStrategy": {
      "type": "string",
      "enum": [
        "MIG_STRATEGY_UNSPECIFIED",
        "MIG_STRATEGY_SINGLE",
        "MIG_STRATEGY_MIXED"
      ],
      "default": "MIG_STRATEGY_UNSPECIFIED",
      "title": "- MIG_STRATEGY_UNSPECIFIED: mig_strategy_unspecified unspecified mig strategy\n - MIG_STRATEGY_SINGLE: mig_strategy_single single mig strategy\n - MIG_STRATEGY_MIXED: mig_strategy_mixed mixed mig strategy"
    },
    "v1alpha1Maintainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is a user name or organization name"
        },
        "email": {
          "type": "string",
          "title": "email is an optional email address to contact the named maintainer"
        },
        "url": {
          "type": "string",
          "title": "url is an optional URL to an address for the named maintainer"
        }
      },
      "description": "Maintainer describes a Chart maintainer."
    },
    "v1alpha1Message": {
      "type": "string",
      "enum": [
        "MESSAGE_UNSPECIFIED",
        "MESSAGE_CREATE",
        "MESSAGE_UPDATE",
        "MESSAGE_DELETE"
      ],
      "default": "MESSAGE_UNSPECIFIED"
    },
    "v1alpha1Metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the chart. Required."
        },
        "home": {
          "type": "string",
          "title": "The URL to a relevant project page, git repo, or contact person"
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Source is the URL to the source code of this chart"
        },
        "version": {
          "type": "string",
          "description": "A SemVer 2 conformant version string of the chart. Required."
        },
        "description": {
          "type": "string",
          "title": "A one-sentence description of the chart"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of string keywords"
        },
        "maintainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Maintainer"
          },
          "title": "A list of name and URL/email address combinations for the maintainer(s)"
        },
        "icon": {
          "type": "string",
          "description": "The URL to an icon file."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API Version of this chart. Required."
        },
        "condition": {
          "type": "string",
          "title": "The condition to check to enable chart"
        },
        "tags": {
          "type": "string",
          "title": "The tags to check to enable chart"
        },
        "appVersion": {
          "type": "string",
          "description": "The version of the application enclosed inside of this chart."
        },
        "deprecated": {
          "type": "boolean",
          "title": "Whether or not this chart is deprecated"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations are additional mappings uninterpreted by Helm,\nmade available for inspection by other applications."
        },
        "kubeVersion": {
          "type": "string",
          "description": "KubeVersion is a SemVer constraint specifying the version of Kubernetes required."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Dependency"
          },
          "description": "Dependencies are a list of dependencies for a chart."
        },
        "type": {
          "type": "string",
          "title": "Specifies the chart type: application or library"
        },
        "repo": {
          "type": "string",
          "description": "The repo name which the charts belongs to."
        }
      },
      "description": "Metadata for a Chart file. This models the structure of a Chart.yaml file."
    },
    "v1alpha1MetallbIPPool": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1MetallbIPPoolSpec",
          "description": "Spec is the desired state of the SpiderIPPool."
        }
      },
      "description": "Ingress is a collection of rules that allow inbound connections to reach the\nendpoints defined by a backend. An Ingress can be configured to give services\nexternally-reachable urls, load balance traffic, terminate SSL, offer name\nbased virtual hosting etc."
    },
    "v1alpha1MetallbIPPoolSpec": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IP address ranges over which MetalLB has authority.\nYou can list multiple ranges in a single pool, they will all share the\nsame settings. Each range can be either a CIDR prefix, or an explicit\nstart-end range of IPs."
        },
        "autoAssign": {
          "type": "boolean",
          "title": "AutoAssign flag used to prevent MetallB from automatic allocation\nfor a pool.\n+optional\n+kubebuilder:default:=true"
        },
        "avoidBuggyIPs": {
          "type": "boolean",
          "title": "AvoidBuggyIPs prevents addresses ending with .0 and .255\nto be used by a pool.\n+optional\n+kubebuilder:default:=false"
        }
      }
    },
    "v1alpha1MetricIdentifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the name of the given metric"
        }
      }
    },
    "v1alpha1MetricRangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1BatchQueryRangeResult"
          },
          "title": "The metric range data"
        }
      },
      "title": "MetricRangeResponse represents the response of metric range"
    },
    "v1alpha1MetricResourceKind": {
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "Pod",
        "Service"
      ],
      "default": "KIND_UNSPECIFIED",
      "description": " - Pod: The custom metrics for service.\n - Service: The custom metrics for service."
    },
    "v1alpha1MetricResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1BatchQueryResult"
          },
          "title": "the metric data"
        }
      },
      "title": "MetricResponse represents the response of metric"
    },
    "v1alpha1MetricSourceType": {
      "type": "string",
      "enum": [
        "METRICS_SOURCE_TYPE_UNSPECIFIED",
        "Object",
        "Pods",
        "Resource",
        "External"
      ],
      "default": "METRICS_SOURCE_TYPE_UNSPECIFIED",
      "title": "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\",\n\"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.\nNote: \"ContainerResource\" type is available on when the feature-gate\nHPAContainerMetrics is enabled"
    },
    "v1alpha1MetricSpec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1MetricSourceType",
          "title": "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\",\n\"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.\nNote: \"ContainerResource\" type is available on when the feature-gate\nHPAContainerMetrics is enabled"
        },
        "object": {
          "$ref": "#/definitions/v1alpha1ObjectMetricSource",
          "title": "object refers to a metric describing a single kubernetes object\n(for example, hits-per-second on an Ingress object).\n+optional"
        },
        "pods": {
          "$ref": "#/definitions/v1alpha1PodsMetricSource",
          "title": "pods refers to a metric describing each pod in the current scale target\n(for example, transactions-processed-per-second).  The values will be\naveraged together before being compared to the target value.\n+optional"
        },
        "resource": {
          "$ref": "#/definitions/v1alpha1ResourceMetricSource",
          "title": "resource refers to a resource metric (such as those specified in\nrequests and limits) known to Kubernetes describing each pod in the\ncurrent scale target (e.g. CPU or memory). Such metrics are built in to\nKubernetes, and have special scaling options on top of those available\nto normal per-pod metrics using the \"pods\" source.\n+optional"
        },
        "external": {
          "$ref": "#/definitions/v1alpha1ExternalMetricSource",
          "title": "external refers to a global metric that is not associated\nwith any Kubernetes object. It allows autoscaling based on information\ncoming from components running outside of cluster\n(for example length of queue in cloud messaging service, or\nQPS from loadbalancer running outside of cluster).\n+optional"
        }
      }
    },
    "v1alpha1MetricStatus": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1MetricSourceType",
          "title": "type is the type of metric source.  It will be one of \"ContainerResource\", \"External\",\n\"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object.\nNote: \"ContainerResource\" type is available on when the feature-gate\nHPAContainerMetrics is enabled"
        },
        "object": {
          "$ref": "#/definitions/v1alpha1ObjectMetricStatus",
          "title": "object refers to a metric describing a single kubernetes object\n(for example, hits-per-second on an Ingress object).\n+optional"
        },
        "pods": {
          "$ref": "#/definitions/v1alpha1PodsMetricStatus",
          "title": "pods refers to a metric describing each pod in the current scale target\n(for example, transactions-processed-per-second).  The values will be\naveraged together before being compared to the target value.\n+optional"
        },
        "resource": {
          "$ref": "#/definitions/v1alpha1ResourceMetricStatus",
          "title": "resource refers to a resource metric (such as those specified in\nrequests and limits) known to Kubernetes describing each pod in the\ncurrent scale target (e.g. CPU or memory). Such metrics are built in to\nKubernetes, and have special scaling options on top of those available\nto normal per-pod metrics using the \"pods\" source.\n+optional"
        },
        "external": {
          "$ref": "#/definitions/v1alpha1ExternalMetricStatus",
          "title": "external refers to a global metric that is not associated\nwith any Kubernetes object. It allows autoscaling based on information\ncoming from components running outside of cluster\n(for example length of queue in cloud messaging service, or\nQPS from loadbalancer running outside of cluster).\n+optional"
        }
      },
      "description": "MetricStatus describes the last-read state of a single metric."
    },
    "v1alpha1MetricTarget": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1MetricTargetType",
          "title": "type represents whether the metric type is Utilization, Value, or AverageValue"
        },
        "value": {
          "type": "string",
          "title": "value is the target value of the metric (as a quantity).\n+optional"
        },
        "averageValue": {
          "type": "string",
          "title": "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)\n+optional"
        },
        "averageUtilization": {
          "type": "integer",
          "format": "int32",
          "title": "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type\n+optional"
        }
      }
    },
    "v1alpha1MetricTargetType": {
      "type": "string",
      "enum": [
        "MetricTargetType_UNSPECIFIED",
        "Utilization",
        "Value",
        "AverageValue"
      ],
      "default": "MetricTargetType_UNSPECIFIED",
      "title": "type represents whether the metric type is Utilization, Value, or AverageValue"
    },
    "v1alpha1MetricValueStatus": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "value is the current value of the metric (as a quantity).\n+optional"
        },
        "averageValue": {
          "type": "string",
          "title": "averageValue is the current value of the average of the\nmetric across all relevant pods (as a quantity)\n+optional"
        },
        "averageUtilization": {
          "type": "integer",
          "format": "int32",
          "title": "currentAverageUtilization is the current value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\n+optional"
        }
      },
      "title": "MetricValueStatus holds the current value for a metric"
    },
    "v1alpha1MigSpec": {
      "type": "object",
      "properties": {
        "gpuIId": {
          "type": "string",
          "title": "gpu_i_id is the id of each mig instance after the gpu is in mig mode"
        },
        "gpuIProfile": {
          "type": "string",
          "title": "gpu_i_profile is the specification of each mig instance after the gpu is in mig mode"
        }
      }
    },
    "v1alpha1Mode": {
      "type": "string",
      "enum": [
        "MODE_UNSPECIFIED",
        "enforce",
        "audit",
        "warn"
      ],
      "default": "MODE_UNSPECIFIED",
      "description": "The mode of Pod Security Standards. A namespace can configure any or all modes, or even set a different level for different modes.\n\n - MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - enforce: Enforce policy violations will cause the pod to be rejected.\n - audit: Audit Policy violations will trigger the addition of an audit annotation to the event recorded in the audit log, but are otherwise allowed.\n - warn: Warn policy violations will trigger a user-facing warning, but are otherwise allowed."
    },
    "v1alpha1NTPConfig": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Start the ntpd or chrony service and enable it at system boot."
        },
        "servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "NTP Settings"
    },
    "v1alpha1Namespace": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NamespaceSpec",
          "description": "NamespaceSpec describes how the namespace execution will look like and when\nit will actually run."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1NamespaceStatus",
          "title": "Status describes the current status of a Namespace.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional"
        }
      },
      "description": "Namespace provides a scope for Names."
    },
    "v1alpha1NamespacePhase": {
      "type": "string",
      "enum": [
        "NAMESPACE_PHASE_UNSPECIFIED",
        "Active",
        "Terminating"
      ],
      "default": "NAMESPACE_PHASE_UNSPECIFIED",
      "title": "- NAMESPACE_PHASE_UNSPECIFIED: The namespace state is unspecified.\n - Active: NamespaceActive means the namespace is available for use in the system\n - Terminating: NamespaceTerminating means the namespace is undergoing graceful termination"
    },
    "v1alpha1NamespaceSpec": {
      "type": "object",
      "properties": {
        "Finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "NamespaceSpec describes the attributes on a Namespace."
    },
    "v1alpha1NamespaceStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1NamespacePhase",
          "description": "Phase represents the phase of namespace."
        },
        "readyPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "ReadyPodNumber is the ready pod number on the namespace."
        },
        "totalPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "TotalPodNumber is the total pod number on the namespace."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Represents the latest available observations of a namespace's current state."
        },
        "podSecurityEnabled": {
          "type": "boolean",
          "description": "PodSecurityEnabled shows if the namespace has enabled pod security policy."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "The cpu usage of the member namespace."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "The memory usage of the member namespace."
        },
        "quotaStatus": {
          "$ref": "#/definitions/v1alpha1ResourceQuotaStatus"
        }
      },
      "description": "NamespaceStatus is information about the current status of a Namespace."
    },
    "v1alpha1NamespaceSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name must be unique within a cluster."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster the namespace belongs to."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1NamespacePhase",
          "description": "Phases is used for filter."
        }
      }
    },
    "v1alpha1NetworkConfig": {
      "type": "object",
      "properties": {
        "cni": {
          "$ref": "#/definitions/NetworkConfigCNI"
        },
        "ciliumConfig": {
          "$ref": "#/definitions/v1alpha1CiliumConfig"
        },
        "calicoConfig": {
          "$ref": "#/definitions/v1alpha1CalicoConfig"
        },
        "flannelConfig": {
          "$ref": "#/definitions/v1alpha1FlannelConfig"
        },
        "kubeOvnConfig": {
          "$ref": "#/definitions/v1alpha1KubeOvnConfig"
        },
        "commonNetworkConfig": {
          "$ref": "#/definitions/v1alpha1CommonNetworkConfig"
        }
      }
    },
    "v1alpha1NetworkPolicy": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NetworkPolicySpec",
          "description": "Specification of the desired behavior for this NetworkPolicy."
        }
      },
      "description": "NetworkPolicy describes what network traffic is allowed for a set of Pods."
    },
    "v1alpha1NetworkPolicyEgressRule": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicyPort"
          },
          "title": "List of destination ports for outgoing traffic.\nEach item in this list is combined using a logical OR. If this field is\nempty or missing, this rule matches all ports (traffic not restricted by port).\nIf this field is present and contains at least one item, then this rule allows\ntraffic only if the traffic matches at least one port in the list.\n+optional"
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicyPeer"
          },
          "title": "List of destinations for outgoing traffic of pods selected for this rule.\nItems in this list are combined using a logical OR operation. If this field is\nempty or missing, this rule matches all destinations (traffic not restricted by\ndestination). If this field is present and contains at least one item, this rule\nallows traffic only if the traffic matches at least one item in the to list.\n+optional"
        }
      },
      "title": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods\nmatched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to.\nThis type is beta-level in 1.8"
    },
    "v1alpha1NetworkPolicyIngressRule": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicyPort"
          },
          "title": "List of ports which should be made accessible on the pods selected for this\nrule. Each item in this list is combined using a logical OR. If this field is\nempty or missing, this rule matches all ports (traffic not restricted by port).\nIf this field is present and contains at least one item, then this rule allows\ntraffic only if the traffic matches at least one port in the list.\n+optional"
        },
        "from": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicyPeer"
          },
          "title": "List of sources which should be able to access the pods selected for this rule.\nItems in this list are combined using a logical OR operation. If this field is\nempty or missing, this rule matches all sources (traffic not restricted by\nsource). If this field is present and contains at least one item, this rule\nallows traffic only if the traffic matches at least one item in the from list.\n+optional"
        }
      },
      "description": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods\nmatched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from."
    },
    "v1alpha1NetworkPolicyPeer": {
      "type": "object",
      "properties": {
        "podSelector": {
          "$ref": "#/definitions/typesLabelSelector",
          "description": "This is a label selector which selects Pods. This field follows standard label\nselector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe Pods matching PodSelector in the Namespaces selected by NamespaceSelector.\nOtherwise it selects the Pods matching PodSelector in the policy's own Namespace.\n+optional"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/typesLabelSelector",
          "description": "Selects Namespaces using cluster-scoped labels. This field follows standard label\nselector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe Pods matching PodSelector in the Namespaces selected by NamespaceSelector.\nOtherwise it selects all Pods in the Namespaces selected by NamespaceSelector.\n+optional"
        },
        "ipBlock": {
          "$ref": "#/definitions/v1alpha1IPBlock",
          "title": "IPBlock defines policy on a particular IPBlock. If this field is set then\nneither of the other fields can be.\n+optional"
        }
      },
      "title": "NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of\nfields are allowed"
    },
    "v1alpha1NetworkPolicyPort": {
      "type": "object",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/v1alpha1Protocol",
          "title": "The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this\nfield defaults to TCP.\n+optional"
        },
        "port": {
          "type": "string",
          "title": "The port on the given protocol. This can either be a numerical or named\nport on a pod. If this field is not provided, this matches all port names and\nnumbers.\nIf present, only traffic on the specified protocol AND port will be matched.\n+optional"
        },
        "endPort": {
          "type": "integer",
          "format": "int32",
          "title": "If set, indicates that the range of ports from port to endPort, inclusive,\nshould be allowed by the policy. This field cannot be defined if the port field\nis not defined or if the port field is defined as a named (string) port.\nThe endPort must be equal or greater than port.\nThis feature is in Beta state and is enabled by default.\nIt can be disabled using the Feature Gate \"NetworkPolicyEndPort\".\n+optional"
        }
      },
      "title": "NetworkPolicyPort describes a port to allow traffic on"
    },
    "v1alpha1NetworkPolicySpec": {
      "type": "object",
      "properties": {
        "podSelector": {
          "$ref": "#/definitions/typesLabelSelector",
          "description": "Selects the pods to which this NetworkPolicy object applies. The array of\ningress rules is applied to any pods selected by this field. Multiple network\npolicies can select the same set of pods. In this case, the ingress rules for\neach are combined additively. This field is NOT optional and follows standard\nlabel selector semantics. An empty podSelector matches all pods in this\nnamespace."
        },
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicyIngressRule"
          },
          "title": "List of ingress rules to be applied to the selected pods. Traffic is allowed to\na pod if there are no NetworkPolicies selecting the pod\n(and cluster policy otherwise allows the traffic), OR if the traffic source is\nthe pod's local node, OR if the traffic matches at least one ingress rule\nacross all of the NetworkPolicy objects whose podSelector matches the pod. If\nthis field is empty then this NetworkPolicy does not allow any traffic (and serves\nsolely to ensure that the pods it selects are isolated by default)\n+optional"
        },
        "egress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NetworkPolicyEgressRule"
          },
          "title": "List of egress rules to be applied to the selected pods. Outgoing traffic is\nallowed if there are no NetworkPolicies selecting the pod (and cluster policy\notherwise allows the traffic), OR if the traffic matches at least one egress rule\nacross all of the NetworkPolicy objects whose podSelector matches the pod. If\nthis field is empty then this NetworkPolicy limits all outgoing traffic (and serves\nsolely to ensure that the pods it selects are isolated by default).\nThis field is beta-level in 1.8\n+optional"
        },
        "policyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkPolicySpecPolicyType"
          },
          "title": "List of rule types that the NetworkPolicy relates to.\nValid options are [\"Ingress\"], [\"Egress\"], or [\"Ingress\", \"Egress\"].\nIf this field is not specified, it will default based on the existence of Ingress or Egress rules;\npolicies that contain an Egress section are assumed to affect Egress, and all policies\n(whether or not they contain an Ingress section) are assumed to affect Ingress.\nIf you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ].\nLikewise, if you want to write a policy that specifies that no egress is allowed,\nyou must specify a policyTypes value that include \"Egress\" (since such a policy would not include\nan Egress section and would otherwise default to just [ \"Ingress\" ]).\nThis field is beta-level in 1.8\n+optional"
        }
      },
      "description": "NetworkPolicySpec provides the specification of a NetworkPolicy."
    },
    "v1alpha1Node": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1NodeSpec",
          "description": "NodeSpec defines the behavior of a node."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1NodeStatus",
          "description": "Most recently observed status of the node.\nPopulated by the system."
        }
      }
    },
    "v1alpha1NodeAddress": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type is a array used for frontend filter."
        },
        "address": {
          "type": "string",
          "description": "IP Address reachable to the node."
        }
      },
      "description": "NodeAddress contains information for the instance's address.\nThe node addresses returned here will be set on the node's status.addresses\nfield."
    },
    "v1alpha1NodeAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/v1alpha1NodeSelector",
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PreferredSchedulingTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions;\nthe node(s) with the highest sum are the most preferred. +optional"
        }
      },
      "description": "Node affinity is a group of node affinity scheduling rules."
    },
    "v1alpha1NodeCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of node condition. The built-in set of conditions are: Ready,\nMemoryPressure, DiskPressure, PIDPressure,\nNetworkUnavailable, and SchedulingDisabled."
        },
        "status": {
          "$ref": "#/definitions/typesConditionStatus",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        }
      },
      "description": "NodeCondition contains condition information for a node."
    },
    "v1alpha1NodeConfig": {
      "type": "object",
      "properties": {
        "nodeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeInfo"
          }
        },
        "sshInfo": {
          "$ref": "#/definitions/v1alpha1SSHInfo"
        },
        "ansibleExtraArgs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1NodeInfo": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1alpha1NodeInfoRole"
        },
        "user": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        }
      }
    },
    "v1alpha1NodeInfoRole": {
      "type": "string",
      "enum": [
        "ROlE_UNSPECIFIED",
        "Worker",
        "Controller"
      ],
      "default": "ROlE_UNSPECIFIED"
    },
    "v1alpha1NodeKubesprayArgs": {
      "type": "object",
      "properties": {
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "containerdInsecureRegistries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An obvious use case is allowing insecure-registry access to self hosted registries.\nCan be ipaddress and domain_name.\nexample define mirror.registry.io or 172.19.16.11:5000\nset \"name\": \"url\". insecure url must be started http://\nPort number is also needed if the default HTTPS port is not used.\n# containerd_insecure_registries:\n#   \"localhost\": \"http://127.0.0.1\"\n#   \"172.19.16.11:5000\": \"http://172.19.16.11:5000\""
        },
        "dockerInsecureRegistries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An obvious use case is allowing insecure-registry access to self hosted registries.\nCan be ipaddress and domain_name.\nexample define 172.19.16.11 or mirror.registry.io\n# docker_insecure_registries:\n#   - mirror.registry.io\n#   - 172.19.16.11"
        },
        "yumRepos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "YumRepos is the yum repository for echo node to be added."
        },
        "enableNodeSysctlTuning": {
          "type": "boolean",
          "description": "EnableNodeSysctlTuning enable systcl tunning variables."
        },
        "sysctlParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "SysctlParams is work when enabel NodeSysctlTunning."
        },
        "sshSecretName": {
          "type": "string",
          "title": "SSHSecretName means secret name for ssh private key"
        }
      }
    },
    "v1alpha1NodePhase": {
      "type": "string",
      "enum": [
        "NODE_PHASE_UNSPECIFIED",
        "Ready",
        "Not_Ready",
        "Unknown"
      ],
      "default": "NODE_PHASE_UNSPECIFIED",
      "description": "Phase includes Ready, NotReady, and Unknown.\n\n - NODE_PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Ready: The node is ready to work.\n - Not_Ready: The node is not ready.\n - Unknown: The node state is unknown."
    },
    "v1alpha1NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeSelectorTerm"
          }
        }
      },
      "title": "A node selector represents the union of the results of one or more label\nqueries over a set of nodes; that is, it represents the OR of the selectors\nrepresented by the node selector terms. +structType=atomic"
    },
    "v1alpha1NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or\nDoesNotExist, the values array must be empty. If the operator is Gt or Lt,\nthe values array must have a single element, which will be interpreted as\nan integer. This array is replaced during a strategic merge patch.\n+optional"
        }
      },
      "description": "A node selector requirement is a selector that contains values, a key, and an\noperator that relates the key and values."
    },
    "v1alpha1NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's labels.\n+optional"
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeSelectorRequirement"
          },
          "title": "A list of node selector requirements by node's fields.\n+optional"
        }
      },
      "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
    },
    "v1alpha1NodeSpec": {
      "type": "object",
      "properties": {
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod IP range assigned to the node."
        },
        "unschedulable": {
          "type": "boolean",
          "description": "Unschedulable controls node schedulability of new pods. By default, node is\nschedulable."
        },
        "taints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Taint"
          },
          "description": "If specified, the node's taints."
        }
      }
    },
    "v1alpha1NodeStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1alpha1NodeStatusStatus",
          "description": "Status represents the current information/status of node."
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeAddress"
          },
          "description": "IP Address reachable to the node."
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeStatusRole"
          },
          "description": "The roles of current node."
        },
        "cpuCapacity": {
          "type": "string",
          "format": "int64",
          "description": "CpuCapacity is the total cpu of the node. Unit: m."
        },
        "cpuAllocated": {
          "type": "number",
          "format": "double",
          "description": "CpuAllocated is the total pod cpu request on the node. Unit: %."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "CpuUsage is the cpu usage on the node. Unit: %."
        },
        "memoryCapacity": {
          "type": "string",
          "format": "int64",
          "description": "MemoryCapacity is the total memory of the node. Unit: byte."
        },
        "memoryAllocated": {
          "type": "number",
          "format": "double",
          "description": "MemoryAllocated is the total pod memory request on the node. Unit: %."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "MemoryUsage is the memory usage on the node. Unit: %."
        },
        "systemInfo": {
          "$ref": "#/definitions/v1alpha1NodeSystemInfo",
          "description": "Set of ids/uuids to uniquely identify the node."
        },
        "allowedPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "AllowedPodNumber is the max pod number allowed on the node."
        },
        "podAllocated": {
          "type": "integer",
          "format": "int32",
          "description": "PodAllocated is the pod number already allocated on the node."
        },
        "readyPodNumber": {
          "type": "integer",
          "format": "int32",
          "description": "ReadyPodNumber is the ready pod number on the node."
        },
        "storageCapacity": {
          "type": "string",
          "format": "int64",
          "description": "StorageCapacity is the total storage of the node. Unit: byte."
        },
        "storageAllocated": {
          "type": "string",
          "format": "int64",
          "description": "StorageAllocated is the total pod storage request on the node. Unit: byte."
        },
        "storageUsage": {
          "type": "number",
          "format": "double",
          "description": "StorageUsage is the usage of storage space on the node. Unit: %."
        },
        "storageDriver": {
          "type": "string",
          "description": "StorageDriver is the docker storage driver (e.g. overlay2)."
        },
        "gpuTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_total is gpu total number."
        },
        "gpuAllocated": {
          "type": "string",
          "format": "int64",
          "description": "gpu_allocated is gpu allocated number."
        },
        "gpuMemoryTotal": {
          "type": "string",
          "format": "int64",
          "description": "gpu_memory_total is all gpu memory number with node. Unit: byte."
        },
        "gpuMemoryAllocated": {
          "type": "string",
          "format": "int64",
          "title": "gpu_memory_allocated is allocated gpu memory number with node. Unit: byte"
        },
        "gpuCoreUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_core_usage is the usage rate of gpu"
        },
        "gpuMemoryUsage": {
          "type": "number",
          "format": "double",
          "title": "gpu_memory_usage is the usage rate of gpu video memory"
        }
      },
      "description": "NodeStatus is information about the current status of a node."
    },
    "v1alpha1NodeStatusRole": {
      "type": "string",
      "enum": [
        "NODE_ROLE_UNSPECIFIED",
        "CONTROL_PLANE",
        "WORKER"
      ],
      "default": "NODE_ROLE_UNSPECIFIED",
      "description": "Role includes control-plane and worker.\n\n - NODE_ROLE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - CONTROL_PLANE: The control plane manages the worker nodes and the Pods in the cluster.\n - WORKER: The worker node(s) host the Pods that are the components of the\napplication workload."
    },
    "v1alpha1NodeStatusStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1NodePhase"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1NodeCondition"
          },
          "description": "NodeCondition contains condition information for a node."
        }
      },
      "description": "Status is the current observed node condition."
    },
    "v1alpha1NodeSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of node."
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object."
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp represents the creationTime of the node."
        },
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod IP range assigned to the node."
        },
        "unschedulable": {
          "type": "boolean",
          "description": "Unschedulable controls node schedulability of new pods. By default, node is\nschedulable."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1NodePhase",
          "description": "Phase represents the phase of nodes to search."
        }
      },
      "description": "Node information Details Summary."
    },
    "v1alpha1NodeSystemInfo": {
      "type": "object",
      "properties": {
        "kernelVersion": {
          "type": "string",
          "description": "Kernel Version reported by the node from 'uname -r'\n(e.g. 3.16.0-0.bpo.4-amd64)."
        },
        "osImage": {
          "type": "string",
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7\n(wheezy))."
        },
        "containerRuntimeVersion": {
          "type": "string",
          "description": "ContainerRuntime Version reported by the node through runtime remote API\n(e.g. docker://1.5.0)."
        },
        "kubeletVersion": {
          "type": "string",
          "description": "Kubelet Version reported by the node."
        },
        "kubeProxyVersion": {
          "type": "string",
          "description": "KubeProxy Version reported by the node."
        },
        "operatingSystem": {
          "type": "string",
          "description": "The Operating System reported by the node."
        },
        "architecture": {
          "type": "string",
          "description": "The Architecture reported by the node."
        }
      }
    },
    "v1alpha1ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "title": "Version of the schema the FieldPath is written in terms of, defaults to\n\"v1\". +optional"
        },
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        }
      },
      "description": "ObjectFieldSelector selects an APIVersioned field of an object."
    },
    "v1alpha1ObjectMetricSource": {
      "type": "object",
      "properties": {
        "describedObject": {
          "$ref": "#/definitions/v1alpha1CrossVersionObjectReference",
          "title": "describedObject specifies the descriptions of a object,such as kind,name apiVersion"
        },
        "target": {
          "$ref": "#/definitions/v1alpha1MetricTarget",
          "title": "target specifies the target value for the given metric"
        },
        "metric": {
          "$ref": "#/definitions/v1alpha1MetricIdentifier",
          "title": "metric identifies the target metric by name and selector"
        }
      }
    },
    "v1alpha1ObjectMetricStatus": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1alpha1MetricIdentifier",
          "title": "metric identifies the target metric by name and selector"
        },
        "current": {
          "$ref": "#/definitions/v1alpha1MetricValueStatus",
          "title": "current contains the current value for the given metric"
        },
        "describedObject": {
          "$ref": "#/definitions/v1alpha1CrossVersionObjectReference",
          "title": "DescribedObject specifies the descriptions of a object,such as kind,name apiVersion"
        }
      },
      "description": "ObjectMetricStatus indicates the current value of a metric describing a\nkubernetes object (for example, hits-per-second on an Ingress object)."
    },
    "v1alpha1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        }
      },
      "description": "ObjectReference contains enough information to let you inspect or modify the\nreferred object."
    },
    "v1alpha1OsRepoType": {
      "type": "string",
      "enum": [
        "OsRepoNone",
        "BuiltIn",
        "External"
      ],
      "default": "OsRepoNone"
    },
    "v1alpha1PatchConfigMapResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ConfigMap YAML details"
        }
      }
    },
    "v1alpha1PatchCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "PatchClusterCustomResourceResponse represents response of updating one\nCustomResource of cluster scope"
    },
    "v1alpha1PatchDaemonSetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the json data of deployment after patching."
        }
      }
    },
    "v1alpha1PatchDeploymentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the json data of deployment after patching."
        }
      }
    },
    "v1alpha1PatchIngressResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ingress YAML details,"
        }
      },
      "title": "UpdateIngressRequest the response of patch cluster ingresses"
    },
    "v1alpha1PatchNamespaceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the service YAML details."
        }
      }
    },
    "v1alpha1PatchSecretResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the secret YAML details"
        }
      },
      "description": "It returns patches the current secret details."
    },
    "v1alpha1PatchServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the service YAML details."
        }
      }
    },
    "v1alpha1PatchStatefulSetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the json data of deployment after patching."
        }
      }
    },
    "v1alpha1PauseCronJobResponse": {
      "type": "object",
      "properties": {
        "cronjob": {
          "$ref": "#/definitions/v1alpha1CronJob",
          "description": "The new state of the cronjob after pausing."
        }
      },
      "description": "Response message for the `PauseCronJobResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1PauseDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "The new state of the deployment after pausing."
        }
      },
      "description": "Response message for the `PauseDeploymentRequest` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1PauseEtcdBackupStrategyResponse": {
      "type": "object",
      "properties": {
        "strategy": {
          "$ref": "#/definitions/v1alpha1EtcdBackupStrategy",
          "description": "The new state of the etcd backup strategy after pausing."
        }
      },
      "description": "Response message for the `PauseEtcdBackupStrategyResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1PersistentVolume": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeSpec",
          "description": "Spec defines a specification of a persistent volume owned by the cluster."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeStatus",
          "title": "PersistentVolumeClaimStatus represents the status of PV claim"
        }
      },
      "title": "PersistentVolume (PV) is a storage resource provisioned by an administrator.\nIt is analogous to a node.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
    },
    "v1alpha1PersistentVolumeAccessMode": {
      "type": "string",
      "enum": [
        "PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED",
        "ReadWriteOnce",
        "ReadOnlyMany",
        "ReadWriteMany",
        "ReadWriteOncePod"
      ],
      "default": "PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED",
      "description": "PersistentVolumeAccessMode are the ways the volume can be mounted.\n\n - PERSISTENT_VOLUME_ACCESS_MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ReadWriteOnce: ReadWriteOnce can be mounted in read/write mode to exactly 1 host.\n - ReadOnlyMany: ReadOnlyMany can be mounted in read-only mode to many hosts.\n - ReadWriteMany: ReadWriteMany can be mounted in read/write mode to many hosts.\n - ReadWriteOncePod: ReadWriteOncePod can be mounted in read/write mode to exactly 1 pod.\nReadWriteOncePod cannot be used in combination with other access modes."
    },
    "v1alpha1PersistentVolumeClaim": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimSpec",
          "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimStatus",
          "title": "PersistentVolumeClaimStatus represents the status of PV claim"
        }
      },
      "description": "PersistentVolumeClaim represents a reference to a PersistentVolume in the same namespace."
    },
    "v1alpha1PersistentVolumeClaimCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of this PersistentVolumeClaimCondition."
        },
        "status": {
          "type": "string",
          "description": "Status is the current status of PersistentVolumeClaim."
        },
        "lastProbeTime": {
          "type": "string",
          "format": "int64",
          "description": "Last time we probed the condition."
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "description": "Last time the condition transitioned from one status to another."
        },
        "reason": {
          "type": "string",
          "description": "The reason of PersistentVolumeClaimCondition."
        },
        "message": {
          "type": "string",
          "description": "The message of PersistentVolumeClaimCondition."
        }
      },
      "description": "PersistentVolumeClaimConditionType defines the condition of PV claim."
    },
    "v1alpha1PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeAccessMode"
          },
          "title": "Contains the types of access modes required\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/typesLabelSelector",
          "title": "A label query over volumes to consider for binding. This selector is\nignored when VolumeName is set\n+optional"
        },
        "resources": {
          "$ref": "#/definitions/v1alpha1ResourceRequirements",
          "title": "Resources represents the minimum resources required\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\n+optional"
        },
        "volumeName": {
          "type": "string",
          "title": "VolumeName is the binding reference to the PersistentVolume backing this\nclaim. When set to non-empty value Selector is not evaluated\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1\n+optional"
        },
        "volumeMode": {
          "$ref": "#/definitions/PersistentVolumeClaimSpecVolumeMode",
          "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
        },
        "dataSource": {
          "$ref": "#/definitions/apicorev1alpha1TypedLocalObjectReference",
          "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace."
        },
        "dataSourceRef": {
          "$ref": "#/definitions/v1alpha1TypedObjectReference",
          "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n  - While dataSource only allows two specific types of objects, dataSourceRef\n    allows any non-core object, as well as PersistentVolumeClaim objects.\n  - While dataSource ignores disallowed values (dropping them), dataSourceRef\n    preserves all values, and generates an error if a disallowed value is\n    specified.\n  - While dataSource only allows local objects, dataSourceRef allows objects\n    in any namespaces.\n\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.\n+optional"
        },
        "supportExpansion": {
          "type": "boolean",
          "title": "The support expansion  represents this pvc weather support  expansion"
        },
        "supportSnapshot": {
          "type": "boolean",
          "title": "The support snapshot represents this pvc weather support snapshot"
        }
      },
      "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
    },
    "v1alpha1PersistentVolumeClaimStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimStatusPhase",
          "title": "Phase represents the current phase of PersistentVolumeClaim\n+optional"
        },
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeAccessMode"
          },
          "title": "AccessModes contains all ways the volume backing the PVC can be mounted\n+optional"
        },
        "capacity": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Represents the actual resources of the underlying volume\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeClaimCondition"
          },
          "title": "+optional"
        },
        "podName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "PodName represents the pod to which the PVC belongs"
        },
        "snapshotCount": {
          "type": "integer",
          "format": "int32",
          "title": "snapshotCount represents how many snapshot the PVC has"
        }
      },
      "title": "PersistentVolumeClaimStatus represents the status of PV claim"
    },
    "v1alpha1PersistentVolumeClaimStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Pending",
        "Bound",
        "Lost"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": " - Pending: used for PersistentVolumeClaims that are not yet bound\n - Bound: used for PersistentVolumeClaims that are bound\n - Lost: used for PersistentVolumeClaims that lost their underlying\nPersistentVolume. The claim was bound to a PersistentVolume and this\nvolume does not exist any longer and all data on it was lost."
    },
    "v1alpha1PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string",
          "title": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as\nthe pod using this volume. More info:\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
        }
      },
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same\nnamespace. This volume finds the bound PV and mounts that volume for the pod.\nA PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
    },
    "v1alpha1PersistentVolumeMode": {
      "type": "string",
      "enum": [
        "PERSISTENT_VOLUME_MODE_UNSPECIFIED",
        "Block",
        "Filesystem"
      ],
      "default": "PERSISTENT_VOLUME_MODE_UNSPECIFIED",
      "description": "PersistentVolumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state.\n\n - PERSISTENT_VOLUME_MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Block: Block means the volume will not be formatted with a filesystem and will remain a raw block device.\n - Filesystem: Filesystem means the volume will be or is formatted with a filesystem."
    },
    "v1alpha1PersistentVolumeReclaimPolicy": {
      "type": "string",
      "enum": [
        "PERSISTENT_VOLUME_RECLAIM_POLICY_UNSPECIFIED",
        "Recycle",
        "Delete",
        "Retain"
      ],
      "default": "PERSISTENT_VOLUME_RECLAIM_POLICY_UNSPECIFIED",
      "description": "PersistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim.\n\n - PERSISTENT_VOLUME_RECLAIM_POLICY_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Recycle: Recycle means the volume will be recycled back into the pool of unbound persistent volumes on release from its claim.\nThe volume plugin must support Recycling.\n - Delete: Delete means the volume will be deleted from Kubernetes on release from its claim.\nThe volume plugin must support Deletion.\n - Retain: Retain means the volume will be left in its current phase (Released) for manual reclamation by the administrator.\nThe default policy is Retain."
    },
    "v1alpha1PersistentVolumeSpec": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Capacity is the description of the persistent volume's resources and capacity."
        },
        "accessModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeAccessMode"
          },
          "description": "AccessModes contains all ways the volume can be mounted."
        },
        "claimRef": {
          "$ref": "#/definitions/v1alpha1ObjectReference",
          "description": "ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim.\nExpected to be non-nil when bound.\nclaim.VolumeName is the authoritative bind between PV and PVC."
        },
        "persistentVolumeReclaimPolicy": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeReclaimPolicy",
          "description": "PersistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim.\nValid options are Retain (default for manually created PersistentVolumes), Delete (default\nfor dynamically provisioned PersistentVolumes), and Recycle (deprecated).\nRecycle must be supported by the volume plugin underlying this PersistentVolume."
        },
        "storageClassName": {
          "type": "string",
          "description": "StorageClassName is the name of StorageClass to which this persistent volume belongs. Empty value\nmeans that this volume does not belong to any StorageClass."
        },
        "mountOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "MountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will\nsimply fail if one is invalid."
        },
        "volumeMode": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeMode",
          "description": "VolumeMode defines if a volume is intended to be used with a formatted filesystem\nor to remain in raw block state. Value of Filesystem is implied when not included in spec."
        },
        "nodeAffinity": {
          "$ref": "#/definitions/v1alpha1VolumeNodeAffinity",
          "description": "NodeAffinity defines constraints that limit what nodes this volume can be accessed from.\nThis field influences the scheduling of pods that use this volume."
        }
      },
      "description": "PersistentVolumeSpec is the specification of a persistent volume."
    },
    "v1alpha1PersistentVolumeStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeStatusPhase",
          "title": "Phase indicates if a volume is available, bound to a claim, or released by a claim\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human-readable message indicating details about why the volume is in this state.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI\n+optional"
        }
      }
    },
    "v1alpha1PersistentVolumeStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Pending",
        "Available",
        "Bound",
        "Released",
        "Failed"
      ],
      "default": "PHASE_UNSPECIFIED",
      "title": "- Pending: used for PersistentVolumes that are not available\n - Available: used for PersistentVolumes that are not yet bound\nAvailable volumes are held by the binder and matched to PersistentVolumeClaims\n - Bound: used for PersistentVolumes that are bound\n - Released: used for PersistentVolumes where the bound PersistentVolumeClaim was deleted\nreleased volumes must be recycled before becoming available again\nthis phase is used by the persistent volume claim binder to signal to another process to reclaim the resource\n - Failed: used for PersistentVolumes that failed to be correctly recycled or deleted after being released from a claim"
    },
    "v1alpha1Plugin": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/v1alpha1PluginName",
          "description": "The name of the plugin."
        },
        "enabled": {
          "type": "boolean",
          "description": "The user has activated the application for this plugin."
        },
        "intelligentDetection": {
          "type": "boolean",
          "description": "IntelligentDetection indicate the plugin is whether intelligent."
        },
        "externalAddress": {
          "type": "string",
          "description": "ExternalAddress is a address which access the plugin from outside the cluster."
        },
        "setting": {
          "type": "string",
          "description": "The setting of the plugin. every plugin encode the setting to json string."
        },
        "healthy": {
          "type": "boolean",
          "description": "Healthy is to show a plugin state when installed."
        }
      }
    },
    "v1alpha1PluginName": {
      "type": "string",
      "enum": [
        "PLUGIN_NAME_UNSPECIFIED",
        "HPA",
        "Insight",
        "GPU",
        "METALLB",
        "Spiderpool",
        "CustomMetrics",
        "CronHPA",
        "VPA",
        "Hwameistor",
        "Flannel",
        "KubeOvn",
        "OLM",
        "EgressGateway",
        "Snapshot",
        "DRA"
      ],
      "default": "PLUGIN_NAME_UNSPECIFIED",
      "description": "PluginName for enum describing possible enum name.\n\n - PLUGIN_NAME_UNSPECIFIED: Enum unspecified.\n - HPA: The plugin name is HPA.\n - Insight: The plugin name is Insight.\n - GPU: The plugin name is GPU.\n - METALLB: The plugin name is METALLAB.\n - Spiderpool: The plugin name is Spiderpool.\n - CustomMetrics: The plugin name is CustomMetrics.\n - CronHPA: The plugin name is CronHPA.\n - VPA: The plugin name is VPA.\n - Hwameistor: The plugin name is Hwameistor\n - Flannel: The plugin name is Flannel\n - KubeOvn: The plugin name is Kube-ovn\n - OLM: The plugin name is olm\n - EgressGateway: The plugin name is egressgateway\n - Snapshot: The plugin name is snapshot controller\n - DRA: The plugin name is DRA(dynamic resources allcated)"
    },
    "v1alpha1Pod": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PodSpec",
          "description": "Spec describes the attributes that a pod is created with."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1PodStatus",
          "description": "Status represents the current information/status of node."
        }
      }
    },
    "v1alpha1PodAffinity": {
      "type": "object",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PodAffinityTerm"
          },
          "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1WeightedPodAffinityTerm"
          },
          "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding\npodAffinityTerm; the node(s) with the highest sum are the most preferred.\n+optional"
        }
      },
      "description": "Pod affinity is a group of inter pod affinity scheduling rules."
    },
    "v1alpha1PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/typesLabelSelector",
          "title": "A label query over a set of resources, in this case pods.\n+optional"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "namespaces specifies a static list of namespace names that the term applies\nto. The term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's\nnamespace\" +optional"
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity)\nwith the pods matching the labelSelector in the specified namespaces, where\nco-located is defined as running on a node whose value of the label with\nkey topologyKey matches that of any node on which any of the selected pods\nis running. Empty topologyKey is not allowed."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/typesLabelSelector",
          "title": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's\nnamespace\". An empty selector ({}) matches all namespaces. This field is\nbeta-level and is only honored when PodAffinityNamespaceSelector feature is\nenabled. +optional"
        }
      },
      "title": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
    },
    "v1alpha1PodIp": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        }
      },
      "description": "IP: An IP address allocated to the pod. Routable at least within\n       the cluster.",
      "title": "PodIP represents the IP address of a pod.\nIP address information. Each entry includes:"
    },
    "v1alpha1PodResourcePolicy": {
      "type": "object",
      "properties": {
        "containerPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ContainerResourcePolicy"
          },
          "description": "Per-container resource policies."
        }
      },
      "description": "PodResourcePolicy controls how autoscaler computes the recommended resources\nfor containers belonging to the pod. There can be at most one entry for every\nnamed container and optionally a single wildcard entry with `containerName` = '*',\nwhich handles all containers that don't have individual policies."
    },
    "v1alpha1PodSecurity": {
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/v1alpha1Level",
          "description": "Level of Pod Security Standards to broadly cover the security spectrum."
        },
        "mode": {
          "$ref": "#/definitions/v1alpha1Mode",
          "description": "Mode of Pod Security Standards."
        }
      },
      "description": "PodSecurity is the label combination of mode plus level."
    },
    "v1alpha1PodSpec": {
      "type": "object",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Volume"
          }
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Container"
          },
          "title": "init containers"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Container"
          },
          "description": "Containers name."
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1EphemeralContainer"
          },
          "description": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource."
        },
        "restartPolicy": {
          "type": "string"
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node.\nIf it is non-empty, the scheduler simply schedules this pod onto that node,\nassuming that it fits resource requirements."
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "affinity": {
          "$ref": "#/definitions/v1alpha1Affinity",
          "title": "bool hostPID = 15;\nbool hostIPC = 16;\nbool shareProcessNamespace = 17;\nPodSecurityContext SecurityContext = 18;\nrepeated LocalObjectReference imagePullSecrets = 19;\nstring hostname = 20;\nstring subdomain = 21;"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Toleration"
          },
          "title": "string schedulerName = 23;"
        }
      },
      "description": "PodSpec describes the attributes that a pod is created with."
    },
    "v1alpha1PodStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1PodStatusPhase",
          "description": "Phase represents the phase to search."
        },
        "hostIP": {
          "type": "string",
          "title": "repeated types.Condition conditions = 2;\nstring message = 3;\nstring reason = 4;\nstring nominatedNodeName = 5;"
        },
        "podIP": {
          "type": "string",
          "description": "IP: An IP address allocated to the pod. Routable at least within\n         the cluster.",
          "title": "PodIP represents the IP address of a pod.\nIP address information. Each entry includes:"
        },
        "podIPs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PodIp"
          },
          "title": "PodIPs is same as PodIP"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "description": "Required. Start time of the operation."
        },
        "cpuRequest": {
          "type": "string",
          "format": "int64",
          "description": "Pod cpu request."
        },
        "cpuLimit": {
          "type": "string",
          "format": "int64",
          "description": "Pod cpu limit."
        },
        "memoryRequest": {
          "type": "string",
          "format": "int64",
          "description": "Pod memory request."
        },
        "memoryLimit": {
          "type": "string",
          "format": "int64",
          "description": "Pod memory limit."
        },
        "cpuUsageRate": {
          "type": "number",
          "format": "double",
          "description": "cpuUsage_rate  is the actual total pod cpu usage. Unit: m."
        },
        "memoryUsageRate": {
          "type": "number",
          "format": "double",
          "description": "memoryUsage_rate the total pod memory usage. Unit: byte."
        },
        "restartCount": {
          "type": "integer",
          "format": "int32",
          "description": "restart_count the total pod restart count."
        },
        "ownedBy": {
          "$ref": "#/definitions/PodStatusOwnedBy"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "title": "Current service state of pod.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
        },
        "containerTotalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Container_total_count represents pod's container total count."
        },
        "containerReadyCount": {
          "type": "integer",
          "format": "int32",
          "description": "Container_ready_count represents pod's container ready count."
        },
        "initContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ContainerStatus"
          },
          "title": "The list has one entry per init container in the manifest. The most recent successful\ninit container will have ready = true, the most recently started container will have\nstartTime set.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
        },
        "containerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ContainerStatus"
          },
          "title": "The list has one entry per container in the manifest.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status\n+optional"
        },
        "ephemeralContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ContainerStatus"
          },
          "title": "Status for any ephemeral containers that have run in this pod.\n+optional"
        },
        "podStatus": {
          "type": "string",
          "description": "pod_status refer to `kubectl get po` result."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "cpu_usage  is the actual total pod cpu usage. Unit: m."
        },
        "memoryUsage": {
          "type": "number",
          "format": "double",
          "description": "memory_usage the total pod memory usage. Unit: byte."
        },
        "podFilterStatus": {
          "$ref": "#/definitions/v1alpha1FilterPodStatus"
        }
      },
      "description": "PodStatus constructs an declarative configuration of the Pod type for use\nwith apply."
    },
    "v1alpha1PodStatusPhase": {
      "type": "string",
      "enum": [
        "PHASE_UNSPECIFIED",
        "Unknown",
        "Pending",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "default": "PHASE_UNSPECIFIED",
      "description": " - PHASE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Unknown: PodUnknown means that for some reason the state of the pod could not be\nobtained, typically due to an error in communicating with the host of the\npod.\n - Pending: PodPending means the pod has been accepted by the system, but one or more\nof the containers has not been started. This includes time before being\nbound to a node, as well as time spent pulling images onto the host.\n - Running: PodRunning means the pod has been bound to a node and all of the\ncontainers have been started. At least one container is still running or\nis in the process of being restarted. PodSucceeded means that all\ncontainers in the pod have voluntarily terminated with a container exit\ncode of 0, and the system is not going to restart any of these\ncontainers.\n - Succeeded: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system).\n - Failed: PodFailed means that all containers in the pod have terminated, and at\nleast one container has terminated in a failure (exited with a non-zero\nexit code or was stopped by the system)."
    },
    "v1alpha1PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1PodSpec",
          "description": "Spec describes the attributes that a pod is created with."
        }
      },
      "description": "template is the object that describes the pod that will be created if\ninsufficient replicas are detected. Each pod stamped out by the StatefulSet\nwill fulfill this Template, but have a unique identity from the rest\nof the StatefulSet."
    },
    "v1alpha1PodUpdatePolicy": {
      "type": "object",
      "properties": {
        "updateMode": {
          "$ref": "#/definitions/v1alpha1UpdateMode",
          "description": "Controls when autoscaler applies changes to the pod resources.\nThe default is 'Auto'."
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Minimal number of replicas which need to be alive for Updater to attempt\npod eviction (pending other checks like PDB). Only positive values are\nallowed. Overrides global '--min-replicas' flag."
        }
      },
      "description": "PodUpdatePolicy describes the rules on how changes are applied to the pods."
    },
    "v1alpha1PodsMetricSource": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1alpha1MetricIdentifier",
          "title": "metric identifies the target metric by name and selector"
        },
        "target": {
          "$ref": "#/definitions/v1alpha1MetricTarget",
          "title": "target specifies the target value for the given metric"
        }
      },
      "title": "MetricValueStatus holds the current value for a metric"
    },
    "v1alpha1PodsMetricStatus": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1alpha1MetricIdentifier",
          "title": "metric identifies the target metric by name and selector"
        },
        "current": {
          "$ref": "#/definitions/v1alpha1MetricValueStatus",
          "title": "current contains the current value for the given metric"
        }
      },
      "description": "PodsMetricStatus indicates the current value of a metric describing each pod in\nthe current scale target (for example, transactions-processed-per-second)."
    },
    "v1alpha1PolicyRule": {
      "type": "object",
      "properties": {
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs."
        },
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of\nthe enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Resources is a list of resources this rule applies to. '*' represents all resources."
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
        },
        "nonResourceUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path\nSince non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.\nRules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
        }
      },
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information\nabout who the rule applies to or which namespace the rule applies to."
    },
    "v1alpha1Ports": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "ContainerPort connects to a certain container port in a pod."
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
        },
        "name": {
          "type": "string",
          "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
        }
      },
      "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
    },
    "v1alpha1PreCheckNodeInfo": {
      "type": "object",
      "properties": {
        "pingConnection": {
          "type": "string",
          "description": "ping_connection represents whether the node is connective."
        },
        "existingKubernetesService": {
          "type": "string",
          "description": "existing_kubernetes_service represents whether exist k8s service."
        },
        "dualStackNetwork": {
          "type": "string",
          "description": "dual_stack_network represents whether enable dual-stack network."
        },
        "osKernelVersionOutput": {
          "type": "string",
          "description": "os_kernel_version_output defines os kernel detail informations."
        },
        "osKernelVersion": {
          "type": "string",
          "description": "os_kernel_version defines os kernel version."
        },
        "osFamily": {
          "type": "string",
          "description": "os_family represents the what the os family of host is."
        },
        "osType": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "os_type includes all of os informations."
        },
        "timeZone": {
          "type": "string",
          "description": "time_zone represents the time zone of host."
        },
        "nodeTimestamp": {
          "type": "string",
          "description": "node_timestamp represents the node timestamp when running precheck."
        }
      }
    },
    "v1alpha1PreCheckYumRepoInfo": {
      "type": "object",
      "properties": {
        "osRepoType": {
          "$ref": "#/definitions/v1alpha1OsRepoType",
          "title": "os_repo_type represents what the os repo type is, none, builtin or external"
        },
        "yumRepos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "yum_repos is yum repo list."
        },
        "dockerRhRepoBaseUrl": {
          "type": "string",
          "description": "docker_rh_repo_base_url is docker repo base url."
        }
      }
    },
    "v1alpha1PreRelease": {
      "type": "string",
      "enum": [
        "PRE_RELEASE_TYPE_UNSPECIFIED",
        "ALPHA",
        "BETA",
        "GA",
        "DEPRECATED"
      ],
      "default": "PRE_RELEASE_TYPE_UNSPECIFIED",
      "description": " - PRE_RELEASE_TYPE_UNSPECIFIED: pre release type is unspecified."
    },
    "v1alpha1PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the\nrange 1-100."
        },
        "preference": {
          "$ref": "#/definitions/v1alpha1NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        }
      },
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects\n(i.e. is also a no-op)."
    },
    "v1alpha1Probe": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive failures for the probe to be considered failed after\nhaving succeeded. Defaults to 3. Minimum value is 1. +optional"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum consecutive successes for the probe to be considered successful\nafter having failed. Defaults to 1. Must be 1 for liveness and startup.\nMinimum value is 1. +optional"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "title": "Number of seconds after the container has started before liveness probes\nare initiated. More info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "terminationGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Optional duration in seconds the pod needs to terminate gracefully upon\nprobe failure. The grace period is the duration in seconds after the\nprocesses running in the pod are sent a termination signal and the time\nwhen the processes are forcibly halted with a kill signal. Set this value\nlonger than the expected cleanup time for your process. If this value is\nnil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop\nimmediately via the kill signal (no opportunity to shut down). This is a\nbeta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
        },
        "httpGet": {
          "$ref": "#/definitions/v1alpha1HTTPGetAction",
          "title": "handler\nHTTPGet specifies the http request to perform.\n+optional"
        },
        "exec": {
          "$ref": "#/definitions/v1alpha1ExecAction",
          "title": "Exec specifies the action to take.\n+optional"
        },
        "tcpSocket": {
          "$ref": "#/definitions/v1alpha1TCPSocketAction",
          "title": "TCPSocket specifies an action involving a TCP port.\n+optional"
        }
      },
      "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic."
    },
    "v1alpha1PrometheusQueryRangeResult": {
      "type": "object",
      "properties": {
        "matrix": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SampleStream"
          },
          "title": "the matrix of sample stream"
        }
      },
      "title": "The result of prometheus query range"
    },
    "v1alpha1PrometheusQueryResult": {
      "type": "object",
      "properties": {
        "vector": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Sample"
          },
          "title": "the vector of sample"
        }
      },
      "title": "The result of prometheus query result"
    },
    "v1alpha1Protocol": {
      "type": "string",
      "enum": [
        "PROTOCOL_UNSPECIFIED",
        "TCP",
        "UDP",
        "SCTP"
      ],
      "default": "PROTOCOL_UNSPECIFIED",
      "description": "Protocol defines network protocols supported for things like container ports.\n\n - PROTOCOL_UNSPECIFIED: Placeholder to avoid zero not return.\n - TCP: ProtocolTCP is the TCP protocol.\n - UDP: ProtocolUDP is the UDP protocol.\n - SCTP: ProtocolSCTP is the SCTP protocol."
    },
    "v1alpha1PutNodeLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1PutNodeTaintsResponse": {
      "type": "object",
      "properties": {
        "taints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Taint"
          }
        }
      },
      "description": "PutNodeTaintsResponse returns node's taints."
    },
    "v1alpha1RecommendedContainerResources": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Name of the container."
        },
        "target": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "description": "Recommended amount of resources. Observes ContainerResourcePolicy."
        },
        "lowerBound": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "description": "Minimum recommended amount of resources. Observes ContainerResourcePolicy.\nThis amount is not guaranteed to be sufficient for the application to operate in a stable way, however\nrunning with less resources is likely to have significant impact on performance/availability."
        },
        "upperBound": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "description": "Maximum recommended amount of resources. Observes ContainerResourcePolicy.\nAny resources allocated beyond this value are likely wasted. This value may be larger than the maximum\namount of application is actually capable of consuming."
        },
        "uncappedTarget": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "description": "The most recent recommended resources target computed by the autoscaler\nfor the controlled pods, based only on actual resource usage, not taking\ninto account the ContainerResourcePolicy.\nMay differ from the Recommendation if the actual resource usage causes\nthe target to violate the ContainerResourcePolicy (lower than MinAllowed\nor higher that MaxAllowed).\nUsed only as status indication, will not affect actual resource assignment."
        }
      },
      "description": "RecommendedContainerResources is the recommendation of resources computed by\nautoscaler for a specific container. Respects the container resource policy\nif present in the spec. In particular the recommendation is not produced for\ncontainers with `ContainerScalingMode` set to 'Off'."
    },
    "v1alpha1RecommendedPodResources": {
      "type": "object",
      "properties": {
        "containerRecommendations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RecommendedContainerResources"
          },
          "description": "Resources recommended by the autoscaler for each container."
        }
      },
      "description": "RecommendedPodResources is the recommendation of resources computed by\nautoscaler. It contains a recommendation for each container in the pod\n(except for those with `ContainerScalingMode` set to 'Off')."
    },
    "v1alpha1Registry": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Alias is an alias for the registry, showed in list."
        },
        "host": {
          "type": "string",
          "description": "Host is registry host."
        },
        "name": {
          "type": "string",
          "description": "Name is registry name, use to query project lists."
        }
      },
      "title": "Registry contains necessary info"
    },
    "v1alpha1ReleaseInfo": {
      "type": "object",
      "properties": {
        "firstDeployed": {
          "type": "string",
          "format": "int64",
          "description": "FirstDeployed is when the release was first deployed."
        },
        "lastDeployed": {
          "type": "string",
          "format": "int64",
          "description": "LastDeployed is when the release was last deployed."
        },
        "deleted": {
          "type": "string",
          "format": "int64",
          "description": "Deleted tracks when this object was deleted."
        },
        "description": {
          "type": "string",
          "description": "Description is human-friendly \"log entry\" about this release."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleasePhase",
          "description": "Status is the current state of the release."
        },
        "notes": {
          "type": "string",
          "description": "Contains the rendered templates/NOTES.txt if available."
        },
        "readme": {
          "type": "string"
        }
      }
    },
    "v1alpha1ReleasePhase": {
      "type": "string",
      "enum": [
        "RELEASE_PHASE_UNSPECIFIED",
        "unknown",
        "deployed",
        "uninstalled",
        "superseded",
        "failed",
        "uninstalling",
        "pending_install",
        "pending_upgrade",
        "pending_rollback"
      ],
      "default": "RELEASE_PHASE_UNSPECIFIED",
      "description": " - RELEASE_PHASE_UNSPECIFIED: The release state is unspecified.\n - unknown: unknown indicates that a release is in an uncertain state.\n - deployed: deployed indicates that the release has been pushed to Kubernetes.\n - uninstalled: uninstalled indicates that a release has been uninstalled from Kubernetes.\n - superseded: superseded indicates that this release object is outdated and a newer one exists.\n - failed: failed indicates that the release was not successfully deployed.\n - uninstalling: uninstalling indicates that a uninstall operation is underway.\n - pending_install: pending_install indicates that an install operation is underway.\n - pending_upgrade: pending_upgrade indicates that an upgrade operation is underway.\n - pending_rollback: pending_rollback indicates that an rollback operation is underway."
    },
    "v1alpha1ReleaseResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion of the resource."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the resource."
        }
      },
      "title": "ReleaseResource belongs to ReleaseSpec"
    },
    "v1alpha1ReleaseSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the release"
        },
        "info": {
          "$ref": "#/definitions/v1alpha1ReleaseInfo",
          "title": "Info provides information about a release"
        },
        "chart": {
          "$ref": "#/definitions/v1alpha1HelmChart",
          "description": "HelmChart is the chart that was released."
        },
        "values": {
          "type": "string",
          "description": "Config is the set of extra Values added to the chart.\nThese values override the default values inside of the chart."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReleaseResource"
          },
          "description": "Manifest is the string representation of the rendered template."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version is an int which represents the version of the release."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the kubernetes namespace of the release."
        },
        "helmMajorVersion": {
          "type": "integer",
          "format": "int32",
          "title": "HelmMajorVersion is the helm major version"
        },
        "operationName": {
          "type": "string",
          "description": "OperationName is to find related job and pods to check the helm operation log."
        }
      }
    },
    "v1alpha1ReleaseStatus": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/v1alpha1Summary"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current condition of the helmrelease."
        }
      }
    },
    "v1alpha1ReplicaSet": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Metadata is that all persisted resources must have, which includes all objects\nusers must create."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ReplicaSetSpec",
          "description": "ReplicaSetSpec is the specification of a ReplicaSet."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReplicaSetStatus",
          "description": "ReplicaSetStatus represents the current status of a ReplicaSet."
        }
      },
      "description": "ReplicaSet ensures that a specified number of pod replicas are running at any given time."
    },
    "v1alpha1ReplicaSetCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of replica set condition."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "title": "The last time the condition transitioned from one status to another.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human readable message indicating details about the transition.\n+optional"
        }
      },
      "title": "kubernetes.io/change-cause\ndeployment.kubernetes.io/revision"
    },
    "v1alpha1ReplicaSetSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the replicas of the deployment."
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "description": "Represents the version of the deployment."
        },
        "selector": {
          "$ref": "#/definitions/typesLabelSelector",
          "description": "Selector a label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects."
        },
        "template": {
          "$ref": "#/definitions/v1alpha1PodTemplateSpec",
          "title": "Template an object that describes the pod that will be created.\nThe ReplicaSet will create exactly one copy of this pod on every node\nthat matches the template's node selector (or on every node if no node\nselector is specified).\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
        }
      },
      "description": "ReplicaSetSpec is the specification of a ReplicaSet."
    },
    "v1alpha1ReplicaSetStatus": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Replicas is the most recently oberved number of replicas.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
        },
        "fullyLabeledReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "The number of pods that have labels matching the labels of the pod template of the replicaset.\n+optional"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "readyReplicas is the number of pods targeted by this ReplicaSet with a Ready Condition.\n+optional"
        },
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "title": "The number of available replicas (ready for at least minReadySeconds) for this replica set.\n+optional"
        },
        "observedGeneration": {
          "type": "string",
          "format": "int64",
          "title": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.\n+optional"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ReplicaSetCondition"
          },
          "title": "Represents the latest available observations of a replica set's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge"
        }
      },
      "description": "ReplicaSetStatus represents the current status of a ReplicaSet."
    },
    "v1alpha1RepoPhase": {
      "type": "string",
      "enum": [
        "REPOSITORY_PHASE_UNSPECIFIED",
        "UNKNOWN",
        "ACTIVE"
      ],
      "default": "REPOSITORY_PHASE_UNSPECIFIED",
      "description": " - REPOSITORY_PHASE_UNSPECIFIED: The repository state is unspecified.\n - UNKNOWN: The repository state is unknown.\n - ACTIVE: The repository is active."
    },
    "v1alpha1RepoSpec": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL A http URL of the repo to connect to"
        },
        "clientSecret": {
          "$ref": "#/definitions/RepoSpecSecretReference",
          "description": "client_secret a reference to a secret object."
        },
        "insecureSkipTLSVerify": {
          "type": "boolean",
          "description": "InsecureSkipTLSVerify will use insecure HTTPS to download the helmrepo's index."
        }
      }
    },
    "v1alpha1RepoStatus": {
      "type": "object",
      "properties": {
        "phase": {
          "$ref": "#/definitions/v1alpha1RepoPhase",
          "description": "phase represents the status of the repository."
        },
        "indexConfigMapName": {
          "type": "string",
          "title": "index_config_map_name is the configmap with the store index in it"
        },
        "indexConfigMapNamespace": {
          "type": "string",
          "title": "index_config_map_namespace is the configmap with the store index in it"
        },
        "downloadTime": {
          "type": "string",
          "format": "int64",
          "title": "download_time the time when the index was last downloaded"
        },
        "url": {
          "type": "string",
          "title": "The url used for the last successful index"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current service state of helmrepo."
        }
      }
    },
    "v1alpha1Repository": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of repository."
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Artifact"
          },
          "description": "Artifacts of repository."
        }
      },
      "title": "Repository concept from Harbor"
    },
    "v1alpha1Resource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "ApiVersion of the resource."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the resource."
        },
        "phase": {
          "$ref": "#/definitions/v1alpha1ResourcePhase",
          "description": "Phase stands for the resource phase."
        }
      },
      "title": "Resource belongs to ReleaseStatus"
    },
    "v1alpha1ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "title": "Container name: required for volumes,\nfor env vars\n+optional"
        },
        "resource": {
          "type": "string",
          "title": "Required: resource to select"
        }
      },
      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their\noutput format"
    },
    "v1alpha1ResourceList": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu is the total pod cpu resource. Unit: m."
        },
        "memory": {
          "type": "string",
          "description": "Memory is the total memory resource. Unit: byte."
        },
        "storage": {
          "type": "string",
          "description": "Storage is the total storage resource. Unit: byte."
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resources contains all resources include cpu, memory, storage."
        }
      },
      "description": "ResourceList returns a string representation of a resource list in a human\nreadable format."
    },
    "v1alpha1ResourceMetricSource": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/v1alpha1ResourceName",
          "description": "name is the name of the resource in question."
        },
        "target": {
          "$ref": "#/definitions/v1alpha1MetricTarget",
          "title": "target specifies the target value for the given metric"
        }
      },
      "description": "ResourceMetricSource indicates how to scale on a resource metric known to\nKubernetes, as specified in requests and limits, describing each pod in the\ncurrent scale target (e.g. CPU or memory).  The values will be averaged\ntogether before being compared to the target.  Such metrics are built in to\nKubernetes, and have special scaling options on top of those available to\nnormal per-pod metrics using the \"pods\" source.  Only one \"target\" type\nshould be set."
    },
    "v1alpha1ResourceMetricStatus": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/v1alpha1ResourceName",
          "description": "Name is the name of the resource in question."
        },
        "current": {
          "$ref": "#/definitions/v1alpha1MetricValueStatus",
          "title": "current contains the current value for the given metric"
        }
      },
      "description": "ResourceMetricStatus indicates the current value of a resource metric known to\nKubernetes, as specified in requests and limits, describing each pod in the\ncurrent scale target (e.g. CPU or memory).  Such metrics are built in to\nKubernetes, and have special scaling options on top of those available to\nnormal per-pod metrics using the \"pods\" source."
    },
    "v1alpha1ResourceName": {
      "type": "string",
      "enum": [
        "RESOURCE_NAME_UNSPECIFIED",
        "cpu",
        "memory"
      ],
      "default": "RESOURCE_NAME_UNSPECIFIED",
      "description": "ResourceName is the name identifying various resources in a ResourceList."
    },
    "v1alpha1ResourcePhase": {
      "type": "string",
      "enum": [
        "RESOURCE_PHASE_UNSPECIFIED",
        "InProgress",
        "Failed",
        "Current",
        "Terminating",
        "Unknown"
      ],
      "default": "RESOURCE_PHASE_UNSPECIFIED",
      "description": "The set of status conditions which can be assigned to resources.\n\n - RESOURCE_PHASE_UNSPECIFIED: ResourcePhase unspecified.\n - InProgress: Resource in progress.\n - Failed: Resource failed.\n - Current: Resource current.\n - Terminating: Resource terminating.\n - Unknown: Resource unknown."
    },
    "v1alpha1ResourceQuota": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ResourceQuotaSpec",
          "description": "Spec defines the desired quota."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ResourceQuotaStatus",
          "description": "Status defines the actual enforced quota and its current usage."
        }
      },
      "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace."
    },
    "v1alpha1ResourceQuotaSpec": {
      "type": "object",
      "properties": {
        "hard": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Hard is the set of desired hard limits for each named resource."
        }
      },
      "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
    },
    "v1alpha1ResourceQuotaStatus": {
      "type": "object",
      "properties": {
        "hard": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Hard is the set of enforced hard limits for each named resource."
        },
        "used": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Used is used for each named resource."
        }
      },
      "description": "ResourceQuotaStatus defines the enforced hard limits and observed use."
    },
    "v1alpha1ResourceRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "title": "resource min value"
        },
        "minDesc": {
          "type": "string",
          "title": "min resource description"
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "title": "resource max value"
        },
        "maxDesc": {
          "type": "string",
          "title": "max resource description"
        }
      }
    },
    "v1alpha1ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        },
        "requests": {
          "$ref": "#/definitions/v1alpha1ResourceList",
          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value. More\ninfo:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "v1alpha1ResourceSummary": {
      "type": "object",
      "properties": {
        "totalNum": {
          "type": "integer",
          "format": "int32",
          "description": "Refers to a resource totally."
        },
        "readyNum": {
          "type": "integer",
          "format": "int32",
          "description": "Refers to a resource has been ready."
        }
      },
      "description": "ResourceSummary refers to a resource totally."
    },
    "v1alpha1RestartDaemonSetResponse": {
      "type": "object",
      "properties": {
        "daemonSet": {
          "$ref": "#/definitions/v1alpha1DaemonSet",
          "description": "The new state of the daemonSet after restarting."
        }
      },
      "description": "Response message for the `RestartDaemonSetResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RestartDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "The new state of the deployment after restarting."
        }
      },
      "description": "Response message for the `RestartDeploymentResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RestartJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/v1alpha1Job",
          "description": "The new state of the job after restarting."
        }
      },
      "description": "Response message for the `RestartJobResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RestartStatefulSetResponse": {
      "type": "object",
      "properties": {
        "statefulSet": {
          "$ref": "#/definitions/v1alpha1StatefulSet",
          "description": "The new state of the statefulSet after restarting."
        }
      },
      "description": "Response message for the `RestartStatefulSetResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1ResumeCronJobResponse": {
      "type": "object",
      "properties": {
        "cronjob": {
          "$ref": "#/definitions/v1alpha1CronJob",
          "description": "The new state of the cronjob after resuming."
        }
      },
      "description": "Response message for the `ResumeCronJobResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1ResumeDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "The new state of the deployment after resuming."
        }
      },
      "description": "Response message for the `ResumeDeploymentResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1ResumeEtcdBackupStrategyResponse": {
      "type": "object",
      "properties": {
        "strategy": {
          "$ref": "#/definitions/v1alpha1EtcdBackupStrategy",
          "description": "The new state of the etcd backup strategy after resuming."
        }
      },
      "description": "Response message for the `ResumeEtcdBackupStrategyResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1Revision": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version is an int which represents the revision of the release."
        },
        "updated": {
          "type": "string",
          "format": "int64",
          "description": "Revision update time."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ReleasePhase",
          "description": "Status is the status of the helm release."
        },
        "chart": {
          "type": "string",
          "description": "Chart is the chart name of the helm release."
        },
        "appVersion": {
          "type": "string",
          "description": "AppVersion is the app version of the helm release."
        },
        "manifest": {
          "type": "string",
          "description": "Manifest is the chart yaml of the helm release revision."
        }
      }
    },
    "v1alpha1RoleBinding": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Subject"
          },
          "description": "Subjects holds references to the objects the role applies to."
        },
        "roleRef": {
          "$ref": "#/definitions/v1alpha1RoleRef",
          "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in\nthe global namespace."
        }
      },
      "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace.\nIt adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given\nnamespace only have effect in that namespace."
    },
    "v1alpha1RoleNames": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1RoleRef": {
      "type": "object",
      "properties": {
        "APIGroup": {
          "type": "string",
          "title": "APIGroup is the group for the resource being referenced"
        },
        "kind": {
          "type": "string",
          "title": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of resource being referenced"
        }
      }
    },
    "v1alpha1RoleSummary": {
      "type": "object",
      "properties": {
        "clusterRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1RoleNames"
          }
        }
      }
    },
    "v1alpha1RollbackDaemonSetResponse": {
      "type": "object",
      "properties": {
        "daemonSet": {
          "$ref": "#/definitions/v1alpha1DaemonSet",
          "description": "The new state of the daemonSet after rollBacking."
        }
      },
      "description": "Response message for the `RollbackDaemonSetResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RollbackDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "The new state of the deployment after restarting."
        }
      },
      "description": "Response message for the `RestartDeploymentResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1RollbackHelmReleaseResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the helmrelease belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the helmrelease belongs to."
        },
        "releaseName": {
          "type": "string",
          "description": "ReleaseName represents the helmrelease name."
        }
      }
    },
    "v1alpha1RollbackStatefulSetResponse": {
      "type": "object",
      "properties": {
        "statefulSet": {
          "$ref": "#/definitions/v1alpha1StatefulSet",
          "description": "The new state of the statefulSet after rollBacking."
        }
      },
      "description": "Response message for the `RollbackStatefulSetResponse` method.\nThis response message is assigned to the `response` field of the returned\nOperation when that operation is done."
    },
    "v1alpha1S3Config": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string",
          "description": "username or access key id for minio."
        },
        "region": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string",
          "description": "password or secret key for minio."
        },
        "bucket": {
          "type": "string",
          "description": "the bucket name for minio."
        },
        "endpoint": {
          "type": "string",
          "description": "endpoint for minio."
        },
        "storePrefix": {
          "type": "string",
          "description": "equal to SnapStoreConfig.prefix."
        },
        "consoleAddress": {
          "type": "string",
          "description": "the  front-end address for minio."
        }
      }
    },
    "v1alpha1SSHInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1SSHInfoType"
        },
        "pass": {
          "type": "string"
        },
        "secretName": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "v1alpha1SSHInfoType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "Password",
        "PrivateKey"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": " - PrivateKey: If you choose this mode, the type of secret should be filled in. The key of data should be \"kubernetes.io/ssh-auth\".\nThe key of data should be \"ssh-privatekey\"."
    },
    "v1alpha1Sample": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The labels of match"
        },
        "values": {
          "$ref": "#/definitions/v1alpha1samplePair",
          "title": "The time stamp"
        }
      },
      "title": "The metric of sample"
    },
    "v1alpha1SampleStream": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The labels of match"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1samplePair"
          },
          "title": "The time stamp"
        }
      },
      "title": "The time stamp stream"
    },
    "v1alpha1ScalePersistentVolumeClaimResponse": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "string",
          "title": "capacity represents the capacity of PVC"
        }
      },
      "title": "UpdateScalePersistentVolumeClaimResponse represents the request of scale Pvc"
    },
    "v1alpha1Secret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "immutable": {
          "type": "boolean",
          "title": "Immutable, if set to true, ensures that data stored in the Secret cannot\nbe updated (only object metadata can be modified).\nIf not set to true, the field can be modified at any time.\nDefaulted to nil.\n+optional"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data contains the secret data. Each key must consist of alphanumeric\ncharacters, '-', '_' or '.'. The serialized form of the secret data is a\nbase64 encoded string, representing the arbitrary (possibly non-string)\ndata value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n+optional"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only input field for convenience.\nAll keys and values are merged into the data field on write, overwriting any existing values.\nThe stringData field is never output when reading from the API.\n+k8s:conversion-gen=false\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Used to facilitate programmatic handling of secret data.\n+optional"
        }
      }
    },
    "v1alpha1SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of SecretEnvSource."
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
    },
    "v1alpha1SecretKeySelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of Secret."
        },
        "key": {
          "type": "string",
          "description": "Required. The secret key to be applied to a pod."
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its key must be defined\n+optional"
        }
      },
      "description": "SecretKeySelector selects a key of a Secret."
    },
    "v1alpha1SecretVolumeSource": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string",
          "title": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KeyToPath"
          },
          "title": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "title": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0\nand 511. YAML accepts both octal and decimal values, JSON requires decimal\nvalues for mode bits. Defaults to 0644. Directories within the path are not\naffected by this setting. This might be in conflict with other options that\naffect the file mode, like fsGroup, and the result can be other mode bits\nset. +optional"
        },
        "optional": {
          "type": "boolean",
          "title": "Specify whether the Secret or its keys must be defined\n+optional"
        }
      },
      "description": "Adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
    },
    "v1alpha1SecurityContext": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "title": "Capabilities capabilities = 1;"
        },
        "runAsUser": {
          "type": "string",
          "format": "int64",
          "title": "SELinuxOptions seLinuxOptions = 3;\nWindowsSecurityContextOptions WindowsOptions = 4;"
        }
      },
      "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
    },
    "v1alpha1Service": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ServiceSpec",
          "description": "It describes the attributes that a user creates on a service."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ServiceStatus"
        }
      }
    },
    "v1alpha1ServiceAccount": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        }
      }
    },
    "v1alpha1ServicePort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this port within the service. This must be a DNS_LABEL."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol is IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\"."
        },
        "appProtocol": {
          "type": "string",
          "description": "AppProtocol is the application protocol for this port."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port will be exposed by this service."
        },
        "targetPort": {
          "type": "string",
          "description": "TargetPort is the number or name of the port to access on the pods targeted\nby the service."
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "description": "NodePort is the port on each node on which this service is exposed when\ntype is NodePort or LoadBalancer."
        }
      }
    },
    "v1alpha1ServiceSpec": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ServicePort"
          },
          "description": "Ports is the list of ports that are exposed by this service."
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Selector is to route service traffic to pods with label keys and values\nmatching this selector."
        },
        "clusterIP": {
          "type": "string",
          "description": "ClusterIP is the IP address of the service and is usually assigned\nrandomly."
        },
        "clusterIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.\nThis field came out since kubernetes version 1.20.\nTODO: Make it compatible\nMore info:\nhttps://v1-20.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/\nhttps://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ServiceType",
          "title": "ServiceType string describes ingress methods for a service"
        },
        "externalIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExternalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service."
        },
        "sessionAffinity": {
          "type": "string",
          "description": "SessionAffinity supports \"ClientIP\" and \"None\". Used to maintain session\naffinity."
        },
        "loadBalancerIP": {
          "type": "string",
          "description": "LoadBalancerIP only applies to Service Type: LoadBalancer."
        },
        "IPFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice, and is gated by the \"IPv6DualStack\" feature gate.\nThis field has changed from ipFamily (string) to ipFamilies (array) since\nkubernetes version 1.20.\nTODO: Make it compatible\nMore info:\nhttps://v1-20.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/\nhttps://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/"
        }
      },
      "description": "ServiceSpec describes the attributes that a user creates on a service."
    },
    "v1alpha1ServiceStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/apicorev1alpha1LoadBalancerStatus",
          "description": "LoadBalancer contains the current status of the load-balancer,\nif one is present."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "title": "Current service state"
        }
      },
      "description": "ServiceStatus represents the current status of a service."
    },
    "v1alpha1ServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_UNSPECIFIED",
        "ClusterIP",
        "NodePort",
        "LoadBalancer",
        "ExternalName"
      ],
      "default": "SERVICE_TYPE_UNSPECIFIED",
      "description": "- SERVICE_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - ClusterIP: ClusterIP means a service will only be accessible inside the cluster, via\nthe cluster IP.\n - NodePort: NodePort means a service will be exposed on one port of every node, in\naddition to 'ClusterIP' type.\n - LoadBalancer: LoadBalancer means a service will be exposed via an external load balancer\n(if the cloud provider supports it), in addition to 'NodePort' type.\n - ExternalName: ExternalName means a service consists of only a reference to an external\nname that kubedns or equivalent will return as a CNAME record, with no\nexposing or proxying of any pods involved.",
      "title": "ServiceType string describes ingress methods for a service"
    },
    "v1alpha1SnapStoreConfig": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/SnapStoreConfigSnapStoreProvider",
          "description": "provider indicated the cloud provider."
        },
        "container": {
          "type": "string",
          "description": "container holds the name of bucket or container to which snapshot will be stored."
        },
        "prefix": {
          "type": "string",
          "description": "prefix holds the prefix or directory under StorageContainer under which snapshot will be stored."
        },
        "s3Config": {
          "$ref": "#/definitions/v1alpha1S3Config"
        },
        "tempDir": {
          "type": "string",
          "title": "temp_dir Directory"
        }
      }
    },
    "v1alpha1Snapshot": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lastModified": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "externalUrl": {
          "type": "string"
        }
      }
    },
    "v1alpha1SnapshotterConfig": {
      "type": "object",
      "properties": {
        "fullSnapshotSchedule": {
          "type": "string",
          "title": "full_snapshot_schedule schedule for snapshots"
        },
        "deltaSnapshotPeriod": {
          "type": "string",
          "format": "int64",
          "description": "delta_snapshot_period Period after which delta snapshot will be persisted. If this value is set to be lesser\nthan 1, delta snapshotting will be disabled."
        },
        "deltaSnapshotMemoryLimit": {
          "type": "integer",
          "format": "int64",
          "title": "delta_snapshot_memory_limit memory limit after which delta snapshots will be taken"
        },
        "garbageCollectionPeriod": {
          "type": "string",
          "format": "int64",
          "title": "garbage_collection_period Period for garbage collecting old backups"
        },
        "garbageCollectionPolicy": {
          "$ref": "#/definitions/SnapshotterConfigGarbageCollectingPolicy"
        },
        "maxBackups": {
          "type": "integer",
          "format": "int64",
          "title": "max_backups maximum number of previous backups to keep"
        }
      }
    },
    "v1alpha1StartDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "The new state of the deployment after starting."
        }
      },
      "description": "StartDeploymentResponse returns the deployment after being started."
    },
    "v1alpha1StartStatefulSetResponse": {
      "type": "object",
      "properties": {
        "statefulSet": {
          "$ref": "#/definitions/v1alpha1StatefulSet",
          "description": "The new state of the statefulset after starting."
        }
      },
      "description": "StartStatefulSetResponse returns the statefulset after being started."
    },
    "v1alpha1StatefulSet": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1StatefulSetSpec",
          "description": "Spec defines the desired identities of pods in this set."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1StatefulSetStatus",
          "description": "Status is the current status of Pods in this StatefulSet. This data\nmay be out of date by some window of time."
        },
        "revision": {
          "type": "string",
          "format": "int64",
          "description": "Revision indicates the revision of the state represented by Data."
        }
      },
      "description": "StatefulSet represents a set of pods with consistent identities.\nIdentities are defined as:\n  - Network: A single stable DNS and hostname.\n  - Storage: As many VolumeClaims as requested.\n\nThe StatefulSet guarantees that a given network identity will always\nmap to the same storage identity."
    },
    "v1alpha1StatefulSetSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "replicas is the desired number of replicas of the given Template.\nThese are replicas in the sense that they are instantiations of the\nsame Template, but individual replicas also have a consistent identity.\nIf unspecified, defaults to 1."
        },
        "podManagementPolicy": {
          "type": "string",
          "description": "podManagementPolicy controls how pods are created during initial scale up,\nwhen replacing pods on nodes, or when scaling down. The default policy is\n`OrderedReady`, where pods are created in increasing order (pod-0, then\npod-1, etc) and the controller will wait until each pod is ready before\ncontinuing. When scaling down, the pods are removed in the opposite order.\nThe alternative policy is `Parallel` which will create pods in parallel\nto match the desired scale without waiting, and on scale down will delete\nall pods at once."
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32",
          "description": "revisionHistoryLimit is the maximum number of revisions that will\nbe maintained in the StatefulSet's revision history. The revision history\nconsists of all revisions not represented by a currently applied\nStatefulSetSpec version. The default value is 10."
        },
        "selector": {
          "$ref": "#/definitions/typesLabelSelector",
          "description": "selector is a label query over pods that should match the replica count.\nIt must match the pod template's labels."
        },
        "serviceName": {
          "type": "string",
          "description": "serviceName is the name of the service that governs this StatefulSet.\nThis service must exist before the StatefulSet, and is responsible for\nthe network identity of the set. Pods get DNS/hostnames that follow the\npattern: pod-specific-string.serviceName.default.svc.cluster.local\nwhere \"pod-specific-string\" is managed by the StatefulSet controller."
        },
        "template": {
          "$ref": "#/definitions/v1alpha1PodTemplateSpec",
          "description": "template is the object that describes the pod that will be created if\ninsufficient replicas are detected. Each pod stamped out by the StatefulSet\nwill fulfill this Template, but have a unique identity from the rest\nof the StatefulSet."
        },
        "updateStrategy": {
          "$ref": "#/definitions/v1alpha1StatefulSetUpdateStrategy",
          "description": "updateStrategy indicates the StatefulSetUpdateStrategy that will be\nemployed to update Pods in the StatefulSet when a revision is made to\nTemplate."
        },
        "volumeClaimTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1PersistentVolumeClaim"
          },
          "description": "volumeClaimTemplates is a list of claims that pods are allowed to\nreference. The StatefulSet controller is responsible for mapping network\nidentities to claims in a way that maintains the identity of a pod. Every\nclaim in this list must have at least one matching (by name) volumeMount in\none container in the template. A claim in this list takes precedence over\nany volumes in the template, with the same name."
        }
      },
      "description": "A StatefulSetSpec is the specification of a StatefulSet."
    },
    "v1alpha1StatefulSetStatus": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "replicas is the number of Pods created by the StatefulSet controller."
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "readyReplicas is the number of Pods created by the StatefulSet controller\nthat have a Ready Condition."
        },
        "state": {
          "$ref": "#/definitions/typesWorkloadState",
          "title": "WorkloadState describes the state of statefulsets"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesCondition"
          },
          "description": "Current condition of StatefulSet."
        }
      },
      "description": "StatefulSetStatus represents the current state of a StatefulSet."
    },
    "v1alpha1StatefulSetUpdateStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type indicates the type of the StatefulSetUpdateStrategy."
        }
      },
      "title": "add StatefulSet to make be not defined in common.proto"
    },
    "v1alpha1StopDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1alpha1Deployment",
          "description": "The new state of the deployment after stopping."
        }
      },
      "description": "StopDeploymentResponse returns the deployment after being stopped."
    },
    "v1alpha1StopStatefulSetResponse": {
      "type": "object",
      "properties": {
        "statefulSet": {
          "$ref": "#/definitions/v1alpha1StatefulSet",
          "description": "The new state of the statefulset after stopping."
        }
      },
      "description": "StopStatefulSetResponse returns the statefulset after being stopped."
    },
    "v1alpha1StorageClass": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner indicates the type of the provisioner."
        },
        "reclaimPolicy": {
          "$ref": "#/definitions/StorageClassReclaimPolicy",
          "title": "persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim.\nValid options are Retain (default for manually created PersistentVolumes), Delete (default\nfor dynamically provisioned PersistentVolumes), and Recycle (deprecated).\nRecycle must be supported by the volume plugin underlying this PersistentVolume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming\n+optional"
        },
        "storageClassName": {
          "type": "string",
          "title": "storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value\nmeans that this volume does not belong to any StorageClass.\n+optional"
        },
        "volumeBindingMode": {
          "$ref": "#/definitions/StorageClassVolumeBindingMode",
          "title": "VolumeBindingMode indicates how PersistentVolumeClaims should be\nprovisioned and bound.  When unset, VolumeBindingImmediate is used.\nThis field is only honored by servers that enable the VolumeScheduling feature.\n+optional"
        },
        "mountOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Dynamically provisioned PersistentVolumes of this storage class are\ncreated with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated -\nmount of the PVs will simply fail if one is invalid.\n+optional"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Parameters holds the parameters for the provisioner that should\ncreate volumes of this storage class.\n+optional"
        },
        "allowVolumeExpansion": {
          "type": "boolean",
          "title": "AllowVolumeExpansion shows whether the storage class allow volume expand\n+optional"
        }
      },
      "description": "StorageClass describes the parameters for a class of storage for\nwhich PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class\naccording to etcd is in ObjectMeta.Name."
    },
    "v1alpha1Subject": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of object being referenced. Values defined by this API group are\n\"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not\nrecognized the kind value, the Authorizer should report an error."
        },
        "APIGroup": {
          "type": "string",
          "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
        },
        "name": {
          "type": "string",
          "description": "Name of the object being referenced."
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referenced object.  If the object kind is non-namespace,\nsuch as \"User\" or \"Group\", and this value is not empty the Authorizer\nshould report an error. +optional"
        }
      }
    },
    "v1alpha1Summary": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/v1alpha1ReleasePhase"
        },
        "transitioning": {
          "type": "boolean"
        },
        "error": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1TCPSocketAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "description": "TCPSocketAction describes an action based on opening a socket."
    },
    "v1alpha1Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag."
        },
        "pushTime": {
          "type": "string",
          "format": "int64",
          "description": "Tag push time."
        }
      },
      "description": "Tag of an image."
    },
    "v1alpha1Taint": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The taint key to be applied to a node."
        },
        "value": {
          "type": "string",
          "description": "The taint value corresponding to the taint key."
        },
        "effect": {
          "$ref": "#/definitions/v1alpha1TaintEffect",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        }
      }
    },
    "v1alpha1TaintEffect": {
      "type": "string",
      "enum": [
        "TAINT_EFFECT_UNSPECIFIED",
        "NoSchedule",
        "PreferNoSchedule",
        "NoExecute"
      ],
      "default": "TAINT_EFFECT_UNSPECIFIED",
      "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute.\n\n - TAINT_EFFECT_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - NoSchedule: NoSchedule tries to avoid scheduling pods to nodes where they can't\ntolerate taints.\n - PreferNoSchedule: This is not mandatory tries to avoid scheduling pods to nodes.\n - NoExecute: NoExecute is not assign pod  to or evicted pod from the node."
    },
    "v1alpha1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values."
        },
        "value": {
          "type": "string",
          "description": "An array of string values."
        },
        "effect": {
          "type": "string",
          "description": "Valid effects are NoSchedule, PreferNoSchedule, and NoExecute."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Taint tolerations to static pods,\nso they are not evicted when there are node problems."
    },
    "v1alpha1TypedObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string",
          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
        },
        "kind": {
          "type": "string",
          "title": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of resource being referenced"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.\n+featureGate=CrossNamespaceVolumeDataSource\n+optional"
        }
      }
    },
    "v1alpha1UnBindClusterFromWorkspaceResponse": {
      "type": "object"
    },
    "v1alpha1UnbindNodeToNamespaceResponse": {
      "type": "object",
      "title": "UnbindNodeToNamespaceResponse is unbind result"
    },
    "v1alpha1UnbindResourceFromWorkspaceResponse": {
      "type": "object"
    },
    "v1alpha1UpdateClusterCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateClusterCustomResourceResponse represents response of updating one\nCustomResource of cluster scope"
    },
    "v1alpha1UpdateClusterCustomResourceStatusResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateClusterCustomResourceStatusResponse represents response of updating the status of a CustomResource of cluster scope"
    },
    "v1alpha1UpdateClusterRoleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "title": "UpdateClusterRoleRequest the response of update clusterrole"
    },
    "v1alpha1UpdateConfigMapResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the ConfigMap YAML details"
        }
      }
    },
    "v1alpha1UpdateCronHorizontalPodAutoscalerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the hpa YAML details"
        }
      }
    },
    "v1alpha1UpdateCustomResourceDefinitionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the customResourceDefinition YAML details"
        }
      },
      "title": "UpdateCustomResourceDefinitionResponse represents response of updating\na createCustomResourceDefinition"
    },
    "v1alpha1UpdateCustomResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateCustomResourceResponse represents response of updating one\nCustomResource of namespaced scope"
    },
    "v1alpha1UpdateCustomResourceStatusResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data field is the CustomResource YAML details."
        }
      },
      "title": "UpdateCustomResourceStatusResponse returns the response of updating the status of a\nCustomResource of namespaced scope"
    },
    "v1alpha1UpdateHelmReleaseResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "Cluster represents which cluster the helmrelease belongs to."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace represents which namespace the helmrelease belongs to."
        },
        "releaseName": {
          "type": "string"
        }
      }
    },
    "v1alpha1UpdateHorizontalPodAutoscalerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the hpa YAML details"
        }
      }
    },
    "v1alpha1UpdateIngressResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the ingress YAML details."
        }
      },
      "title": "UpdateIngressRequest the response of update cluster ingresses"
    },
    "v1alpha1UpdateLimitRangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the LimitRange YAML details."
        }
      },
      "description": "UpdateLimitRangeResponse returns the created LimitRange data information."
    },
    "v1alpha1UpdateMode": {
      "type": "string",
      "enum": [
        "UPDATE_MODE_UNSPECIFIED",
        "Off",
        "Initial",
        "Recreate",
        "Auto"
      ],
      "default": "UPDATE_MODE_UNSPECIFIED",
      "description": "UpdateMode controls when autoscaler applies changes to the pod resoures.\n\n - UPDATE_MODE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - Off: UpdateModeOff means that autoscaler never changes Pod resources.\nThe recommender still sets the recommended resources in the\nVerticalPodAutoscaler object. This can be used for a \"dry run\".\n - Initial: UpdateModeInitial means that autoscaler only assigns resources on pod\ncreation and does not change them during the lifetime of the pod.\n - Recreate: UpdateModeRecreate means that autoscaler assigns resources on pod\ncreation and additionally can update them during the lifetime of the\npod by deleting and recreating the pod.\n - Auto: UpdateModeAuto means that autoscaler assigns resources on pod creation\nand additionally can update them during the lifetime of the pod,\nusing any available update method. Currently this is equivalent to\nRecreate, which is the only available update method."
    },
    "v1alpha1UpdateNamespaceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "description": "Update Namespace data."
    },
    "v1alpha1UpdateNetworkPolicyResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the networkpolicy YAML details."
        }
      },
      "title": "UpdateNetworkPolicyResponse the response of update cluster networkpolicies"
    },
    "v1alpha1UpdateNodeAnnotationsResponse": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations returned."
        }
      }
    },
    "v1alpha1UpdateNodeGPUModeResponse": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/v1alpha1GPUModel"
        }
      }
    },
    "v1alpha1UpdateNodeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "description": "UpdateNodeResponse return's a node's json."
    },
    "v1alpha1UpdatePersistentVolumeClaimAnnotationsResponse": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "labels represents the Annotations  of pvc"
        }
      },
      "title": "UpdatePersistentVolumeClaimLabelsResponse represents the response of put PVC annotations Response"
    },
    "v1alpha1UpdatePersistentVolumeClaimLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "labels represents the labels  of pvc"
        }
      },
      "title": "UpdateNodeLabelsResponse represents the response of put pvc's labels"
    },
    "v1alpha1UpdatePersistentVolumeClaimResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data represents the data of PVC  JSON"
        }
      }
    },
    "v1alpha1UpdatePersistentVolumeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the PersistentVolume YAML details."
        }
      },
      "description": "UpdatePersistentVolumeResponse returns the created PersistentVolume data information."
    },
    "v1alpha1UpdateReplicaSetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the ReplicaSet YAML details."
        }
      },
      "description": "UpdateReplicaSetResponse returns the created ReplicaSet data information."
    },
    "v1alpha1UpdateResourceQuotaResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data is the ResourceQuota YAML details."
        }
      },
      "description": "UpdateResourceQuotaResponse returns the created ResourceQuota data information."
    },
    "v1alpha1UpdateRoleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "title": "UpdateRoleResponse the response of update role"
    },
    "v1alpha1UpdateSecretResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data field is the Secret YAML details"
        }
      },
      "description": "It returns updated secret information."
    },
    "v1alpha1UpdateServiceAccountResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the StorageClass YAML details"
        }
      },
      "description": "UpdateServiceAccount represents the response of delete sa."
    },
    "v1alpha1UpdateServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "Data is the Service YAML details"
        }
      },
      "description": "It returns the Updated Service data information."
    },
    "v1alpha1UpdateStorageClassResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "The data is the StorageClass YAML details"
        }
      },
      "title": "UpdateStorageClassResponse represents the response of delete storage class"
    },
    "v1alpha1UpdateVerticalPodAutoscalerResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The data is the vpa YAML details."
        }
      },
      "description": "UpdateVerticalPodAutoscalerResponse returns the updated json data."
    },
    "v1alpha1UpdateVolumeSnapshotResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data represents the data of volume snapshot JSON"
        }
      },
      "description": "UpdateVolumeSnapshotResponse represents the response of update volume snapshot."
    },
    "v1alpha1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the unique identification of the user."
        },
        "name": {
          "type": "string",
          "description": "the name of the user."
        }
      }
    },
    "v1alpha1VGPUNodeStats": {
      "type": "object",
      "properties": {
        "physicalGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of physical Gpus"
        },
        "totalVirtualGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of virtual Gpus"
        },
        "allocatedVirtualGpuNumber": {
          "type": "integer",
          "format": "int32",
          "title": "Number of allocated virtual Gpus"
        },
        "allocatedComputePower": {
          "type": "string",
          "format": "int64"
        },
        "totalComputePower": {
          "type": "string",
          "format": "int64",
          "title": "total compute power"
        },
        "totalGpuMemory": {
          "type": "string",
          "format": "int64",
          "title": "Number of gpu memory"
        },
        "allocatedGpuMemory": {
          "type": "string",
          "format": "int64",
          "title": "Number of allocated gpu memory"
        }
      }
    },
    "v1alpha1ValidateClusterResponse": {
      "type": "object",
      "properties": {
        "dceComponents": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          },
          "description": "DCEComponents is to show if DCE components exist in target cluster, e.g. kpanda-system namespace, insight-system namespace, and mspider mesh."
        }
      },
      "description": "ValidateClusterResponse returns the result of residuals existence."
    },
    "v1alpha1ValidateHelmRepoResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Successfully connected to the repo."
        },
        "error": {
          "type": "string",
          "description": "If connecting to the repo failed, return the reason."
        }
      },
      "title": "ValidateHelmRepoResponse returns the result of connecting to a helm repo"
    },
    "v1alpha1ValidateKubeConfigRequest": {
      "type": "object",
      "properties": {
        "kubeConfigString": {
          "type": "string",
          "description": "KubeConfig of the cluster."
        }
      }
    },
    "v1alpha1ValidateKubeConfigResponse": {
      "type": "object",
      "properties": {
        "validateResult": {
          "type": "boolean"
        },
        "errMsg": {
          "type": "string",
          "description": "err_msg if validate_result is false , err_msg will has no-empty value."
        },
        "kubeconfigExpireTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1VerificationMethod": {
      "type": "string",
      "enum": [
        "VERIFICATION_METHOD_UNSPECIFIED",
        "None",
        "BasicAuth"
      ],
      "default": "VERIFICATION_METHOD_UNSPECIFIED",
      "description": "- VERIFICATION_METHOD_UNSPECIFIED: The repository verification method is unspecified.\n - None: The repository is public and does not require authentication.\n - BasicAuth: BasicAuth contains data needed for basic authentication.",
      "title": "Repository verification method"
    },
    "v1alpha1VerifyEtcdConnectionResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "This field indicates whether or not the verification operation for\nverifying etcd connection successful."
        },
        "errMsg": {
          "type": "string",
          "description": "err_msg if validate_result is false , err_msg will has no-empty value."
        }
      }
    },
    "v1alpha1VerifyImageResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "This field indicates whether or not the verification operation for\nverifying image successful."
        }
      }
    },
    "v1alpha1VerifyRegistryRequest": {
      "type": "object",
      "properties": {
        "registryHost": {
          "type": "string",
          "description": "The registry host which needs to verify."
        },
        "username": {
          "type": "string",
          "description": "The username of the registry."
        },
        "password": {
          "type": "string",
          "description": "The password of the registry."
        }
      }
    },
    "v1alpha1VerifyRegistryResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "This field indicates whether or not the verification operation for\nverifying registery successful."
        }
      }
    },
    "v1alpha1VerifySnapStoreConfigResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "This field indicates whether or not the verification operation for\nverifying SnapStore successful."
        },
        "errMsg": {
          "type": "string",
          "description": "err_msg if validate_result is false , err_msg will has no-empty value."
        }
      }
    },
    "v1alpha1VerticalPodAutoscaler": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1VerticalPodAutoscalerSpec",
          "description": "Specification of the behavior of the autoscaler."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1VerticalPodAutoscalerStatus",
          "description": "Current information about the autoscaler."
        }
      },
      "description": "VerticalPodAutoscaler is the configuration for a vertical pod autoscaler, which automatically manages pod resources based on historical and real time resource utilization."
    },
    "v1alpha1VerticalPodAutoscalerCondition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1VerticalPodAutoscalerConditionType",
          "description": "Type describes the current condition."
        },
        "status": {
          "$ref": "#/definitions/typesConditionStatus",
          "description": "status is the status of the condition (True, False, Unknown)."
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "int64",
          "description": "LastTransitionTime is the last time the condition transitioned from one status to another."
        },
        "reason": {
          "type": "string",
          "description": "Reason is the reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "message is a human-readable explanation containing details about the transition."
        }
      },
      "description": "VerticalPodAutoscalerCondition describes the state of a VerticalPodAutoscaler at a certain point."
    },
    "v1alpha1VerticalPodAutoscalerConditionType": {
      "type": "string",
      "enum": [
        "VERTICAL_POD_AUTOSCALER_CONDITION_TYPE_UNSPECIFIED",
        "RecommendationProvided",
        "LowConfidence",
        "NoPodsMatched",
        "FetchingHistory",
        "ConfigDeprecated",
        "ConfigUnsupported"
      ],
      "default": "VERTICAL_POD_AUTOSCALER_CONDITION_TYPE_UNSPECIFIED",
      "description": "VerticalPodAutoscalerConditionType is the valid conditions of a VerticalPodAutoscaler.\n\n - VERTICAL_POD_AUTOSCALER_CONDITION_TYPE_UNSPECIFIED: This is only a meaningless placeholder, to avoid zero not return.\n - RecommendationProvided: RecommendationProvided indicates whether the VPA recommender was able to calculate a recommendation.\n - LowConfidence: LowConfidence indicates whether the VPA recommender has low confidence in the recommendation for some of containers.\n - NoPodsMatched: NoPodsMatched indicates that label selector used with VPA object didn't match any pods.\n - FetchingHistory: FetchingHistory indicates that VPA recommender is in the process of loading additional history samples.\n - ConfigDeprecated: ConfigDeprecated indicates that this VPA configuration is deprecated and will stop being supported soon.\n - ConfigUnsupported: ConfigUnsupported indicates that this VPA configuration is unsupported and recommendations will not be provided for it."
    },
    "v1alpha1VerticalPodAutoscalerRecommenderSelector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the recommender responsible for generating recommendation for this object."
        }
      },
      "description": "VerticalPodAutoscalerRecommenderSelector points to a specific Vertical Pod Autoscaler recommender.\nIn the future it might pass parameters to the recommender."
    },
    "v1alpha1VerticalPodAutoscalerSpec": {
      "type": "object",
      "properties": {
        "targetRef": {
          "$ref": "#/definitions/v1alpha1CrossVersionObjectReference",
          "description": "TargetRef points to the controller managing the set of pods for the autoscaler to control - e.g. Deployment, StatefulSet."
        },
        "updatePolicy": {
          "$ref": "#/definitions/v1alpha1PodUpdatePolicy",
          "description": "Describes the rules on how changes are applied to the pods.\nIf not specified, all fields in the `PodUpdatePolicy` are set to their\ndefault values."
        },
        "resourcePolicy": {
          "$ref": "#/definitions/v1alpha1PodResourcePolicy",
          "description": "Controls how the autoscaler computes recommended resources.\nThe resource policy may be used to set constraints on the recommendations\nfor individual containers. If not specified, the autoscaler computes recommended\nresources for all containers in the pod, without additional constraints."
        },
        "recommenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1VerticalPodAutoscalerRecommenderSelector"
          },
          "description": "Recommender responsible for generating recommendation for this object.\nList should be empty (then the default recommender will generate the recommendation) or contain exactly one recommender."
        }
      },
      "description": "VerticalPodAutoscalerSpec is the specification of the behavior of the autoscaler."
    },
    "v1alpha1VerticalPodAutoscalerStatus": {
      "type": "object",
      "properties": {
        "recommendation": {
          "$ref": "#/definitions/v1alpha1RecommendedPodResources",
          "description": "The most recently computed amount of resources recommended by the\nautoscaler for the controlled pods."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1VerticalPodAutoscalerCondition"
          },
          "description": "Conditions is the set of conditions required for this autoscaler to scale its target,\nand indicates whether or not those conditions are met."
        }
      },
      "description": "VerticalPodAutoscalerStatus describes the runtime state of the autoscaler."
    },
    "v1alpha1Volume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hostPath": {
          "$ref": "#/definitions/v1alpha1HostPathVolumeSource",
          "description": "HostPathVolumeSource represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux\nrelabeling."
        },
        "emptyDir": {
          "$ref": "#/definitions/v1alpha1EmptyDirVolumeSource",
          "description": "EmptyDirVolumeSource represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux\nrelabeling."
        },
        "secret": {
          "$ref": "#/definitions/v1alpha1SecretVolumeSource",
          "description": "SecretVolumeSource adapts a Secret into a volume.\nThe contents of the target Secret's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names. Secret\nvolumes support ownership management and SELinux relabeling."
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/v1alpha1PersistentVolumeClaimVolumeSource",
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v1alpha1DownwardAPIVolumeSource",
          "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
        },
        "configMap": {
          "$ref": "#/definitions/v1alpha1ConfigMapVolumeSource",
          "description": "ConfigMapVolumeSource adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
        }
      },
      "description": "Volume represents a named volume in a pod that may be accessed by any\ncontainer in the pod."
    },
    "v1alpha1VolumeMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "readOnly": {
          "type": "boolean",
          "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
        },
        "mountPath": {
          "type": "string",
          "description": "Full path to the mount volume path."
        },
        "subPath": {
          "type": "string",
          "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        },
        "mountPropagation": {
          "type": "string",
          "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional"
        },
        "subPathExpr": {
          "type": "string",
          "title": "Expanded path within the volume from which the container's volume should be\nmounted. Behaves similarly to SubPath but environment variable references\n$(VAR_NAME) are expanded using the container's environment. Defaults to \"\"\n(volume's root). SubPathExpr and SubPath are mutually exclusive. +optional"
        }
      },
      "description": "VolumeMount for this container."
    },
    "v1alpha1VolumeNodeAffinity": {
      "type": "object",
      "properties": {
        "required": {
          "$ref": "#/definitions/v1alpha1NodeSelector",
          "description": "Required specifies hard node constraints that must be met."
        }
      },
      "description": "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from."
    },
    "v1alpha1VolumeSnapshot": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1VolumeSnapshotSpec",
          "description": "spec defines the desired characteristics of a snapshot requested by a user.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots\nRequired."
        },
        "status": {
          "$ref": "#/definitions/v1alpha1VolumeSnapshotStatus",
          "title": "status represents the current information of a snapshot.\nConsumers must verify binding between VolumeSnapshot and\nVolumeSnapshotContent objects is successful (by validating that both\nVolumeSnapshot and VolumeSnapshotContent point at each other) before\nusing this object.\n+optional"
        }
      }
    },
    "v1alpha1VolumeSnapshotSource": {
      "type": "object",
      "properties": {
        "persistentVolumeClaimName": {
          "type": "string",
          "title": "persistentVolumeClaimName specifies the name of the PersistentVolumeClaim\nobject representing the volume from which a snapshot should be created.\nThis PVC is assumed to be in the same namespace as the VolumeSnapshot\nobject.\nThis field should be set if the snapshot does not exists, and needs to be\ncreated.\nThis field is immutable.\n+optional"
        },
        "volumeSnapshotContentName": {
          "type": "string",
          "title": "volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent\nobject representing an existing volume snapshot.\nThis field should be set if the snapshot already exists and only needs a representation in Kubernetes.\nThis field is immutable.\n+optional"
        }
      }
    },
    "v1alpha1VolumeSnapshotSpec": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1VolumeSnapshotSource",
          "description": "source specifies where a snapshot will be created from.\nThis field is immutable after creation.\nRequired."
        },
        "volumeSnapshotClassName": {
          "type": "string",
          "title": "VolumeSnapshotClassName is the name of the VolumeSnapshotClass\nrequested by the VolumeSnapshot.\nVolumeSnapshotClassName may be left nil to indicate that the default\nSnapshotClass should be used.\nA given cluster may have multiple default Volume SnapshotClasses: one\ndefault per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass,\nVolumeSnapshotSource will be checked to figure out what the associated\nCSI Driver is, and the default VolumeSnapshotClass associated with that\nCSI Driver will be used. If more than one VolumeSnapshotClass exist for\na given CSI Driver and more than one have been marked as default,\nCreateSnapshot will fail and generate an event.\nEmpty string is not allowed for this field.\n+optional"
        }
      }
    },
    "v1alpha1VolumeSnapshotStatus": {
      "type": "object",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "int64",
          "title": "creationTime is the timestamp when the point-in-time snapshot is taken\nby the underlying storage system.\nIn dynamic snapshot creation case, this field will be filled in by the\nsnapshot controller with the \"creation_time\" value returned from CSI\n\"CreateSnapshot\" gRPC call.\nFor a pre-existing snapshot, this field will be filled with the \"creation_time\"\nvalue returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it.\nIf not specified, it may indicate that the creation time of the snapshot is unknown.\n+optional"
        },
        "readyToUse": {
          "type": "boolean",
          "title": "readyToUse indicates if the snapshot is ready to be used to restore a volume.\nIn dynamic snapshot creation case, this field will be filled in by the\nsnapshot controller with the \"ready_to_use\" value returned from CSI\n\"CreateSnapshot\" gRPC call.\nFor a pre-existing snapshot, this field will be filled with the \"ready_to_use\"\nvalue returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it,\notherwise, this field will be set to \"True\".\nIf not specified, it means the readiness of a snapshot is unknown.\n+optional"
        },
        "restoreSize": {
          "type": "string",
          "title": "restoreSize represents the minimum size of volume required to create a volume\nfrom this snapshot.\nIn dynamic snapshot creation case, this field will be filled in by the\nsnapshot controller with the \"size_bytes\" value returned from CSI\n\"CreateSnapshot\" gRPC call.\nFor a pre-existing snapshot, this field will be filled with the \"size_bytes\"\nvalue returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it.\nWhen restoring a volume from this snapshot, the size of the volume MUST NOT\nbe smaller than the restoreSize if it is specified, otherwise the restoration will fail.\nIf not specified, it indicates that the size is unknown.\n+optional"
        }
      },
      "description": "VolumeSnapshotStatus is the status of the VolumeSnapshot\nNote that CreationTime, RestoreSize, ReadyToUse, and Error are in both\nVolumeSnapshotStatus and VolumeSnapshotContentStatus. Fields in VolumeSnapshotStatus\nare updated based on fields in VolumeSnapshotContentStatus. They are eventual\nconsistency. These fields are duplicate in both objects due to the following reasons:\n  - Fields in VolumeSnapshotContentStatus can be used for filtering when importing a\n    volumesnapshot.\n  - VolumsnapshotStatus is used by end users because they cannot see VolumeSnapshotContent.\n  - CSI snapshotter sidecar is light weight as it only watches VolumeSnapshotContent\n    object, not VolumeSnapshot object."
    },
    "v1alpha1WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
        },
        "podAffinityTerm": {
          "$ref": "#/definitions/v1alpha1PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        }
      },
      "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added\nper-node to find the most preferred node(s)"
    },
    "v1alpha1WorkloadJSON": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "data The data field is the Workload YAML details"
        }
      },
      "title": "WorkloadJSON messages of workload YAML details"
    },
    "v1alpha1WorkloadKind": {
      "type": "string",
      "enum": [
        "deployments",
        "statefulsets",
        "daemonsets",
        "jobs",
        "cronjobs",
        "pods",
        "replicasets"
      ],
      "default": "deployments",
      "description": "- deployments: A Deployment provides declarative updates for Pods and ReplicaSets.\n - statefulsets: StatefulSet is the workload API object used to manage stateful\napplications.\n - daemonsets: A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.\n - jobs: Jobs based on a common template. You can use this approach to process\nbatches of work in parallel.\n - cronjobs: CronJob object is like one line of a crontab (cron table) file. It runs a\njob periodically on a given schedule, written in Cron format.",
      "title": "workloadKind represents the kpanda's workload types of inclusion"
    },
    "v1alpha1WorkspaceInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "v1alpha1requestStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "SUCCESS",
        "FAIL"
      ],
      "default": "STATUS_UNSPECIFIED",
      "title": "The request of status"
    },
    "v1alpha1samplePair": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of the query"
        },
        "value": {
          "type": "string",
          "title": "Value of the query"
        }
      },
      "title": "The sample pair"
    }
  }
}
